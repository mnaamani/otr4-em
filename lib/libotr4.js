;(function () {
    
    var root = this;
    var moduleScope = {
        "BigInt": this["BigInt"] || require("./bigint.js"),
    };

(function(){
// -- code generated by emscripten will follow ---
var Module;
this["Module"] = Module = {
 'preRun': function(){
    Module["FS"]=FS;
    Module["FS_findObject"]=FS.findObject;
    Module["FS_readDataFile"]=function(path){
        var object = FS.findObject(path);
        if(object){
            return new Buffer(object.contents);
        }
    };
    Module["libgcrypt"] = {};
    Module["libgcrypt"]["mpi_new"] = cwrap('_gcry_mpi_new','number',['number']);
    Module["libgcrypt"]["mpi_set"] = cwrap('_gcry_mpi_set','number',['number','number']);
    Module["libgcrypt"]["mpi_release"] = cwrap('_gcry_mpi_release','',['number']);
    Module["libgcrypt"]["mpi_scan"] = cwrap('_gcry_mpi_scan','number',['number','number','string','number','number']);
    Module["libgcrypt"]["mpi_print"] = cwrap('_gcry_mpi_print','number',['number','number','number','number','number']);
    Module["libgcrypt"]["strerror"] = cwrap('gcry_strerror','string',['number']);
    Module["libotrl"] = {};
    Module["libotrl"]["version"] = cwrap('otrl_version','string');    
    Module["libotrl"]["userstate_create"]=cwrap('otrl_userstate_create','',['number']);
    Module["libotrl"]["userstate_free"]=cwrap('otrl_userstate_free','',['number']);
    Module["libotrl"]["privkey_read"]=cwrap('otrl_privkey_read','number',['number','string']);
    Module["libotrl"]["privkey_fingerprint"]=cwrap('otrl_privkey_fingerprint','number',['number','number','string','string']);
    Module["libotrl"]["privkey_read_fingerprints"]=cwrap('otrl_privkey_read_fingerprints','number',['number','string','number','number']);
    Module["libotrl"]["privkey_write_fingerprints"]=cwrap('otrl_privkey_write_fingerprints','number',['number','string']);
    Module["libotrl"]["privkey_generate"]=cwrap('otrl_privkey_generate','number',['number','string','string','string']);
    Module["libotrl"]["privkey_forget"]=cwrap('otrl_privkey_forget','',['number']);
    Module["libotrl"]["privkey_forget_all"]=cwrap('otrl_privkey_forget_all','',['number']);
    Module["libotrl"]["privkey_find"]=cwrap('otrl_privkey_find','number',['number','string','string']);
    Module["libotrl"]["privkey_hash_to_human"]=cwrap('otrl_privkey_hash_to_human','',['number','number']);
    Module["libotrl"]["context_find"]=cwrap('otrl_context_find','number',['number','string','string','string','number','number','number','number','number']);
    Module["libotrl"]["message_sending"]=cwrap('otrl_message_sending','number',['number','number','number','string','string','string',
                                                                                                    'number','string','number','number','number','number','number','number']);
    Module["libotrl"]["message_free"]=cwrap('otrl_message_free','',['number']);
    Module["libotrl"]["message_disconnect"]=cwrap('otrl_message_disconnect','',['number','number','number','string','string','string','number']);
    Module["libotrl"]["message_initiate_smp_q"]=cwrap('otrl_message_initiate_smp_q','',['number','number','number','number','string','string','number']);
    Module["libotrl"]["message_initiate_smp"]=cwrap('otrl_message_initiate_smp','',['number','number','number','number','string','number']);
    Module["libotrl"]["message_respond_smp"]=cwrap('otrl_message_respond_smp','',['number','number','number','number','string','number']);
    Module["libotrl"]["message_abort_smp"]=cwrap('otrl_message_abort_smp','',['number','number','number','number']);
    Module["libotrl"]["message_receiving"]=cwrap('otrl_message_receiving','number',['number','number','number','string','string','string','string','number','number','number','number','number']);
    Module["libotrl"]["message_poll_get_default_interval"]=cwrap('otrl_message_poll_get_default_interval','number',['number']);
    Module["libotrl"]["message_poll"]=cwrap('otrl_message_poll','',['number','number','number']);
    Module["libotrl"]["instag_generate"]=cwrap('otrl_instag_generate','number',['number','string','string','string']);
    Module["libotrl"]["instag_read"]=cwrap('otrl_instag_read','number',['number','string']);
    Module["libotrl"]["instag_write"]=cwrap('otrl_instag_write','number',['number','string']);
    Module["libotrl"]["instag_find"]=cwrap('otrl_instag_find','number',['number','string','string']);
    Module["libotrl"]["message_symkey"]=cwrap('otrl_message_symkey','number',['number','number','number','number','number','number','number','number']);
    Module["libotrl"]["tlv_free"]=cwrap('otrl_tlv_free','',['number']);
    Module["libotrl"]["tlv_find"]=cwrap('otrl_tlv_find','number',['number','number']);
    Module["jsapi"]={};    
    Module["jsapi"]["can_start_smp"]=cwrap('jsapi_can_start_smp','number',['number']);
    Module["jsapi"]["privkey_get_next"]=cwrap("jsapi_privkey_get_next",'number',['number']);
    Module["jsapi"]["privkey_get_accountname"]=cwrap("jsapi_privkey_get_accountname",'string',['number']);
    Module["jsapi"]["privkey_get_protocol"]=cwrap("jsapi_privkey_get_protocol",'string',['number']);
    Module["jsapi"]["privkey_delete"]=cwrap('jsapi_privkey_delete','',['number','string','string','string']);
    Module["jsapi"]["privkey_get_dsa_token"]=cwrap('jsapi_privkey_get_dsa_token','number',['number','string','number','number']);
    Module["jsapi"]["privkey_write_trusted_fingerprints"]=cwrap("jsapi_privkey_write_trusted_fingerprints",'number',['number','string']);
    Module["jsapi"]["userstate_import_privkey"]=cwrap('jsapi_userstate_import_privkey','number',['number','string','string','number','number','number','number','number']);
    Module["jsapi"]["userstate_write_to_file"]=cwrap('jsapi_userstate_write_to_file','number',['number','string']);
    Module["jsapi"]["userstate_get_privkey_root"]=cwrap("jsapi_userstate_get_privkey_root","number",["number"]);
    Module["jsapi"]["conncontext_get_protocol"]=cwrap('jsapi_conncontext_get_protocol','string',['number']);
    Module["jsapi"]["conncontext_get_username"]=cwrap('jsapi_conncontext_get_username','string',['number']);
    Module["jsapi"]["conncontext_get_accountname"]=cwrap('jsapi_conncontext_get_accountname','string',['number']);
    Module["jsapi"]["conncontext_get_msgstate"]=cwrap('jsapi_conncontext_get_msgstate','number',['number']);
    Module["jsapi"]["conncontext_get_protocol_version"]=cwrap('jsapi_conncontext_get_protocol_version','number',['number']);
    Module["jsapi"]["conncontext_get_smstate"]=cwrap('jsapi_conncontext_get_smstate','number',['number']);
    Module["jsapi"]["conncontext_get_active_fingerprint"]=cwrap('jsapi_conncontext_get_active_fingerprint','',['number','number']);
    Module["jsapi"]["conncontext_get_trust"]=cwrap('jsapi_conncontext_get_trust','string',['number']);
    Module["jsapi"]["conncontext_get_their_instance"]=cwrap('jsapi_conncontext_get_their_instance','number',['number']);
    Module["jsapi"]["conncontext_get_our_instance"]=cwrap('jsapi_conncontext_get_our_instance','number',['number']);
    Module["jsapi"]["conncontext_get_master"]=cwrap('jsapi_conncontext_get_master','number',['number']);
    Module["jsapi"]["instag_get_tag"]=cwrap('jsapi_instag_get_tag','number',['number']);
    Module["jsapi"]["initialise"]=cwrap('jsapi_initialise');
    Module["jsapi"]["messageappops_new"]=cwrap('jsapi_messageappops_new','number',[]);
  }
};
// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function(filename) { return Module['read'](filename, true) };
  Module['load'] = function(f) {
    globalEval(read(f));
  };
  Module['arguments'] = process['argv'].slice(2);
  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function() { throw 'no read() available (jsc?)' };
  }
  Module['readBinary'] = function(f) {
    return read(f, 'binary');
  };
  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  if (typeof console !== 'undefined') {
    Module['print'] = function(x) {
      console.log(x);
    };
    Module['printErr'] = function(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];
// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (type == 'i64' || type == 'double' || vararg) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;
      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }
      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0
}
Module['stringToUTF16'] = stringToUTF16;
// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0
}
Module['stringToUTF32'] = stringToUTF32;
function demangle(func) {
  try {
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    var i = 3;
    // params, etc.
    var basicTypes = {
      'v': 'void',
      'b': 'bool',
      'c': 'char',
      's': 'short',
      'i': 'int',
      'l': 'long',
      'f': 'float',
      'd': 'double',
      'w': 'wchar_t',
      'a': 'signed char',
      'h': 'unsigned char',
      't': 'unsigned short',
      'j': 'unsigned int',
      'm': 'unsigned long',
      'x': 'long long',
      'y': 'unsigned long long',
      'z': '...'
    };
    function dump(x) {
      //return;
      if (x) Module.print(x);
      Module.print(func);
      var pre = '';
      for (var a = 0; a < i; a++) pre += ' ';
      Module.print (pre + '^');
    }
    var subs = [];
    function parseNested() {
      i++;
      if (func[i] === 'K') i++;
      var parts = [];
      while (func[i] !== 'E') {
        if (func[i] === 'S') { // substitution
          i++;
          var next = func.indexOf('_', i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || '?');
          i = next+1;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) { i--; break; } // counter i++ below us
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++; // skip E
      return parts;
    }
    function parse(rawList, limit, allowVoid) { // main parser
      limit = limit || Infinity;
      var ret = '', list = [];
      function flushList() {
        return '(' + list.join(', ') + ')';
      }
      var name;
      if (func[i] !== 'N') {
        // not namespaced
        if (func[i] === 'K') i++;
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      } else {
        // namespaced N-E
        name = parseNested().join('::');
        limit--;
        if (limit === 0) return rawList ? [name] : name;
      }
      if (func[i] === 'I') {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        //dump('paramLoop');
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
            case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
            case 'L': { // literal
              i++; // skip basic type
              var end = func.indexOf('E', i);
              var size = end - i;
              list.push(func.substr(i, size));
              i += size + 2; // size + 'EE'
              break;
            }
            case 'A': { // array
              var size = parseInt(func.substr(i));
              i += size.toString().length;
              if (func[i] !== '_') throw '?';
              i++; // skip _
              list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
            case 'E': break paramLoop;
            default: ret += '?' + c; break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
      return rawList ? list : ret + flushList();
    }
    return parse();
  } catch(e) {
    return func;
  }
}
function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}
function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 409600;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 1048576;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited
var runtimeInitialized = false;
function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;
function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;
function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;
function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;
function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i)
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_toFloat32 = Math.toFloat32;
var Math_min = Math.min;
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
var memoryInitializer = null;
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 123920;
var _stderr;
var _stderr=_stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { _gpg_err_init() } });
var ___progname;
var __ZTVN10__cxxabiv120__si_class_type_infoE;
var __ZTVN10__cxxabiv117__class_type_infoE;
var __ZNSt9bad_allocC1Ev;
var __ZNSt9bad_allocD1Ev;
var __ZNSt20bad_array_new_lengthC1Ev;
var __ZNSt20bad_array_new_lengthD1Ev;
var __ZNSt20bad_array_new_lengthD2Ev;
var _err;
var _errx;
var _warn;
var _warnx;
var _verr;
var _verrx;
var _vwarn;
var _vwarnx;
/* memory initializer */ allocate([0,2,0,0,119,0,0,0,0,3,0,0,145,0,0,0,0,4,0,0,165,0,0,0,0,5,0,0,183,0,0,0,0,6,0,0,198,0,0,0,0,7,0,0,212,0,0,0,0,8,0,0,225,0,0,0,0,9,0,0,237,0,0,0,0,10,0,0,249,0,0,0,0,11,0,0,3,1,0,0,0,12,0,0,13,1,0,0,0,13,0,0,23,1,0,0,0,14,0,0,32,1,0,0,0,15,0,0,40,1,0,0,0,16,0,0,49,1,0,0,0,17,0,0,57,1,0,0,0,18,0,0,64,1,0,0,0,19,0,0,72,1,0,0,0,20,0,0,79,1,0,0,0,0,0,0,0,0,0,0,208,207,7,56,147,112,138,131,125,215,138,54,101,41,108,31,124,63,211,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,0,14,14,0,0,224,224,0,0,240,240,0,0,254,254,0,0,254,254,0,30,0,30,0,14,0,14,0,30,30,0,0,14,14,0,0,30,224,254,0,14,240,254,0,30,254,224,0,14,254,240,0,224,0,224,0,240,0,240,0,224,30,254,0,240,14,254,0,224,224,0,0,240,240,0,0,224,254,30,0,240,254,14,0,254,0,254,0,254,0,254,0,254,30,224,0,254,14,240,0,254,224,30,0,254,240,14,0,254,254,0,0,254,254,0,30,0,0,30,14,0,0,14,30,0,30,0,14,0,14,0,30,0,224,254,14,0,240,254,30,0,254,224,14,0,254,240,30,30,0,0,14,14,0,0,30,30,30,30,14,14,14,14,30,30,224,224,14,14,240,240,30,30,254,254,14,14,254,254,30,224,0,254,14,240,0,254,30,224,30,224,14,240,14,240,30,224,224,30,14,240,240,14,30,224,254,0,14,240,254,0,30,254,0,224,14,254,0,240,30,254,30,254,14,254,14,254,30,254,224,0,14,254,240,0,30,254,254,30,14,254,254,14,224,0,0,224,240,0,0,240,224,0,30,254,240,0,14,254,224,0,224,0,240,0,240,0,224,0,254,30,240,0,254,14,224,30,0,254,240,14,0,254,224,30,30,224,240,14,14,240,224,30,224,30,240,14,240,14,224,30,254,0,240,14,254,0,224,224,0,0,240,240,0,0,224,224,30,30,240,240,14,14,224,224,224,224,240,240,240,240,224,224,254,254,240,240,254,254,224,254,0,30,240,254,0,14,224,254,30,0,240,254,14,0,224,254,224,254,240,254,240,254,224,254,254,224,240,254,254,240,254,0,0,254,254,0,0,254,254,0,30,224,254,0,14,240,254,0,224,30,254,0,240,14,254,0,254,0,254,0,254,0,254,30,0,224,254,14,0,240,254,30,30,254,254,14,14,254,254,30,224,0,254,14,240,0,254,30,254,30,254,14,254,14,254,224,0,30,254,240,0,14,254,224,30,0,254,240,14,0,254,224,224,254,254,240,240,254,254,224,254,224,254,240,254,240,254,254,0,0,254,254,0,0,254,254,30,30,254,254,14,14,254,254,224,224,254,254,240,240,254,254,254,254,254,254,254,254,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,48,49,50,51,52,53,54,55,56,57,45,46,47,95,58,42,43,61,0,0,34,174,40,215,152,47,138,66,205,101,239,35,145,68,55,113,47,59,77,236,207,251,192,181,188,219,137,129,165,219,181,233,56,181,72,243,91,194,86,57,25,208,5,182,241,17,241,89,155,79,25,175,164,130,63,146,24,129,109,218,213,94,28,171,66,2,3,163,152,170,7,216,190,111,112,69,1,91,131,18,140,178,228,78,190,133,49,36,226,180,255,213,195,125,12,85,111,137,123,242,116,93,190,114,177,150,22,59,254,177,222,128,53,18,199,37,167,6,220,155,148,38,105,207,116,241,155,193,210,74,241,158,193,105,155,228,227,37,79,56,134,71,190,239,181,213,140,139,198,157,193,15,101,156,172,119,204,161,12,36,117,2,43,89,111,44,233,45,131,228,166,110,170,132,116,74,212,251,65,189,220,169,176,92,181,83,17,131,218,136,249,118,171,223,102,238,82,81,62,152,16,50,180,45,109,198,49,168,63,33,251,152,200,39,3,176,228,14,239,190,199,127,89,191,194,143,168,61,243,11,224,198,37,167,10,147,71,145,167,213,111,130,3,224,81,99,202,6,112,110,14,10,103,41,41,20,252,47,210,70,133,10,183,39,38,201,38,92,56,33,27,46,237,42,196,90,252,109,44,77,223,179,149,157,19,13,56,83,222,99,175,139,84,115,10,101,168,178,119,60,187,10,106,118,230,174,237,71,46,201,194,129,59,53,130,20,133,44,114,146,100,3,241,76,161,232,191,162,1,48,66,188,75,102,26,168,145,151,248,208,112,139,75,194,48,190,84,6,163,81,108,199,24,82,239,214,25,232,146,209,16,169,101,85,36,6,153,214,42,32,113,87,133,53,14,244,184,209,187,50,112,160,106,16,200,208,210,184,22,193,164,25,83,171,65,81,8,108,55,30,153,235,142,223,76,119,72,39,168,72,155,225,181,188,176,52,99,90,201,197,179,12,28,57,203,138,65,227,74,170,216,78,115,227,99,119,79,202,156,91,163,184,178,214,243,111,46,104,252,178,239,93,238,130,143,116,96,47,23,67,111,99,165,120,114,171,240,161,20,120,200,132,236,57,100,26,8,2,199,140,40,30,99,35,250,255,190,144,233,189,130,222,235,108,80,164,21,121,198,178,247,163,249,190,43,83,114,227,242,120,113,198,156,97,38,234,206,62,39,202,7,194,192,33,199,184,134,209,30,235,224,205,214,125,218,234,120,209,110,238,127,79,125,245,186,111,23,114,170,103,240,6,166,152,200,162,197,125,99,10,174,13,249,190,4,152,63,17,27,71,28,19,53,11,113,27,132,125,4,35,245,119,219,40,147,36,199,64,123,171,202,50,188,190,201,21,10,190,158,60,76,13,16,156,196,103,29,67,182,66,62,203,190,212,197,76,42,126,101,252,156,41,127,89,236,250,214,58,171,111,203,95,23,88,71,74,140,25,68,108,152,47,138,66,145,68,55,113,207,251,192,181,165,219,181,233,91,194,86,57,241,17,241,89,164,130,63,146,213,94,28,171,152,170,7,216,1,91,131,18,190,133,49,36,195,125,12,85,116,93,190,114,254,177,222,128,167,6,220,155,116,241,155,193,193,105,155,228,134,71,190,239,198,157,193,15,204,161,12,36,111,44,233,45,170,132,116,74,220,169,176,92,218,136,249,118,82,81,62,152,109,198,49,168,200,39,3,176,199,127,89,191,243,11,224,198,71,145,167,213,81,99,202,6,103,41,41,20,133,10,183,39,56,33,27,46,252,109,44,77,19,13,56,83,84,115,10,101,187,10,106,118,46,201,194,129,133,44,114,146,161,232,191,162,75,102,26,168,112,139,75,194,163,81,108,199,25,232,146,209,36,6,153,214,133,53,14,244,112,160,106,16,22,193,164,25,8,108,55,30,76,119,72,39,181,188,176,52,179,12,28,57,74,170,216,78,79,202,156,91,243,111,46,104,238,130,143,116,111,99,165,120,20,120,200,132,8,2,199,140,250,255,190,144,235,108,80,164,247,163,249,190,242,120,113,198,152,47,138,66,145,68,55,113,207,251,192,181,165,219,181,233,91,194,86,57,241,17,241,89,164,130,63,146,213,94,28,171,152,170,7,216,1,91,131,18,190,133,49,36,195,125,12,85,116,93,190,114,254,177,222,128,167,6,220,155,116,241,155,193,193,105,155,228,134,71,190,239,198,157,193,15,204,161,12,36,111,44,233,45,170,132,116,74,220,169,176,92,218,136,249,118,82,81,62,152,109,198,49,168,200,39,3,176,199,127,89,191,243,11,224,198,71,145,167,213,81,99,202,6,103,41,41,20,133,10,183,39,56,33,27,46,252,109,44,77,19,13,56,83,84,115,10,101,187,10,106,118,46,201,194,129,133,44,114,146,161,232,191,162,75,102,26,168,112,139,75,194,163,81,108,199,25,232,146,209,36,6,153,214,133,53,14,244,112,160,106,16,22,193,164,25,8,108,55,30,76,119,72,39,181,188,176,52,179,12,28,57,74,170,216,78,79,202,156,91,243,111,46,104,238,130,143,116,111,99,165,120,20,120,200,132,8,2,199,140,250,255,190,144,235,108,80,164,247,163,249,190,242,120,113,198,3,0,5,0,7,0,11,0,13,0,17,0,19,0,23,0,29,0,31,0,37,0,41,0,43,0,47,0,53,0,59,0,61,0,67,0,71,0,73,0,79,0,83,0,89,0,97,0,101,0,103,0,107,0,109,0,113,0,127,0,131,0,137,0,139,0,149,0,151,0,157,0,163,0,167,0,173,0,179,0,181,0,191,0,193,0,197,0,199,0,211,0,223,0,227,0,229,0,233,0,239,0,241,0,251,0,1,1,7,1,13,1,15,1,21,1,25,1,27,1,37,1,51,1,55,1,57,1,61,1,75,1,81,1,91,1,93,1,97,1,103,1,111,1,117,1,123,1,127,1,133,1,141,1,145,1,153,1,163,1,165,1,175,1,177,1,183,1,187,1,193,1,201,1,205,1,207,1,211,1,223,1,231,1,235,1,243,1,247,1,253,1,9,2,11,2,29,2,35,2,45,2,51,2,57,2,59,2,65,2,75,2,81,2,87,2,89,2,95,2,101,2,105,2,107,2,119,2,129,2,131,2,135,2,141,2,147,2,149,2,161,2,165,2,171,2,179,2,189,2,197,2,207,2,215,2,221,2,227,2,231,2,239,2,245,2,249,2,1,3,5,3,19,3,29,3,41,3,43,3,53,3,55,3,59,3,61,3,71,3,85,3,89,3,91,3,95,3,109,3,113,3,115,3,119,3,139,3,143,3,151,3,161,3,169,3,173,3,179,3,185,3,199,3,203,3,209,3,215,3,223,3,229,3,241,3,245,3,251,3,253,3,7,4,9,4,15,4,25,4,27,4,37,4,39,4,45,4,63,4,67,4,69,4,73,4,79,4,85,4,93,4,99,4,105,4,127,4,129,4,139,4,147,4,157,4,163,4,169,4,177,4,189,4,193,4,199,4,205,4,207,4,213,4,225,4,235,4,253,4,255,4,3,5,9,5,11,5,17,5,21,5,23,5,27,5,39,5,41,5,47,5,81,5,87,5,93,5,101,5,119,5,129,5,143,5,147,5,149,5,153,5,159,5,167,5,171,5,173,5,179,5,191,5,201,5,203,5,207,5,209,5,213,5,219,5,231,5,243,5,251,5,7,6,13,6,17,6,23,6,31,6,35,6,43,6,47,6,61,6,65,6,71,6,73,6,77,6,83,6,85,6,91,6,101,6,121,6,127,6,131,6,133,6,157,6,161,6,163,6,173,6,185,6,187,6,197,6,205,6,211,6,217,6,223,6,241,6,247,6,251,6,253,6,9,7,19,7,31,7,39,7,55,7,69,7,75,7,79,7,81,7,85,7,87,7,97,7,109,7,115,7,121,7,139,7,141,7,157,7,159,7,181,7,187,7,195,7,201,7,205,7,207,7,211,7,219,7,225,7,235,7,237,7,247,7,5,8,15,8,21,8,33,8,35,8,39,8,41,8,51,8,63,8,65,8,81,8,83,8,89,8,93,8,95,8,105,8,113,8,131,8,155,8,159,8,165,8,173,8,189,8,191,8,195,8,203,8,219,8,221,8,225,8,233,8,239,8,245,8,249,8,5,9,7,9,29,9,35,9,37,9,43,9,47,9,53,9,67,9,73,9,77,9,79,9,85,9,89,9,95,9,107,9,113,9,119,9,133,9,137,9,143,9,155,9,163,9,169,9,173,9,199,9,217,9,227,9,235,9,239,9,245,9,247,9,253,9,19,10,31,10,33,10,49,10,57,10,61,10,73,10,87,10,97,10,99,10,103,10,111,10,117,10,123,10,127,10,129,10,133,10,139,10,147,10,151,10,153,10,159,10,169,10,171,10,181,10,189,10,193,10,207,10,217,10,229,10,231,10,237,10,241,10,243,10,3,11,17,11,21,11,27,11,35,11,41,11,45,11,63,11,71,11,81,11,87,11,93,11,101,11,111,11,123,11,137,11,141,11,147,11,153,11,155,11,183,11,185,11,195,11,203,11,207,11,221,11,225,11,233,11,245,11,251,11,7,12,11,12,17,12,37,12,47,12,49,12,65,12,91,12,95,12,97,12,109,12,115,12,119,12,131,12,137,12,145,12,149,12,157,12,179,12,181,12,185,12,187,12,199,12,227,12,229,12,235,12,241,12,247,12,251,12,1,13,3,13,15,13,19,13,31,13,33,13,43,13,45,13,61,13,63,13,79,13,85,13,105,13,121,13,129,13,133,13,135,13,139,13,141,13,163,13,171,13,183,13,189,13,199,13,201,13,205,13,211,13,213,13,219,13,229,13,231,13,243,13,253,13,255,13,9,14,23,14,29,14,33,14,39,14,47,14,53,14,59,14,75,14,87,14,89,14,93,14,107,14,113,14,117,14,125,14,135,14,143,14,149,14,155,14,177,14,183,14,185,14,195,14,209,14,213,14,219,14,237,14,239,14,249,14,7,15,11,15,13,15,23,15,37,15,41,15,49,15,67,15,71,15,77,15,79,15,83,15,89,15,91,15,103,15,107,15,127,15,149,15,161,15,163,15,167,15,173,15,179,15,181,15,187,15,209,15,211,15,217,15,233,15,239,15,251,15,253,15,3,16,15,16,31,16,33,16,37,16,43,16,57,16,61,16,63,16,81,16,105,16,115,16,121,16,123,16,133,16,135,16,145,16,147,16,157,16,163,16,165,16,175,16,177,16,187,16,193,16,201,16,231,16,241,16,243,16,253,16,5,17,11,17,21,17,39,17,45,17,57,17,69,17,71,17,89,17,95,17,99,17,105,17,111,17,129,17,131,17,141,17,155,17,161,17,165,17,167,17,171,17,195,17,197,17,209,17,215,17,231,17,239,17,245,17,251,17,13,18,29,18,31,18,35,18,41,18,43,18,49,18,55,18,65,18,71,18,83,18,95,18,113,18,115,18,121,18,125,18,143,18,151,18,175,18,179,18,181,18,185,18,191,18,193,18,205,18,209,18,223,18,253,18,7,19,13,19,25,19,39,19,45,19,55,19,67,19,69,19,73,19,79,19,87,19,93,19,103,19,105,19,109,19,123,19,129,19,135,19,0,0,0,0,0,0,0,0,48,81,48,13,6,9,96,134,72,1,101,3,4,2,3,5,0,4,64,0,0,0,0,0,48,65,48,13,6,9,96,134,72,1,101,3,4,2,2,5,0,4,48,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,157,87,111,206,163,163,167,237,144,153,242,146,115,215,142,178,40,139,150,138,232,176,134,72,209,206,150,6,253,153,45,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,157,87,111,206,171,163,167,237,152,153,242,146,123,215,142,19,14,53,62,16,55,194,36,5,232,250,239,178,195,195,233,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,149,87,111,206,163,227,167,237,152,217,242,144,115,215,142,185,14,229,134,45,230,145,104,242,189,213,18,91,69,71,43,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,32,97,164,39,130,189,82,236,105,30,195,131,176,59,167,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,11,1,0,152,255,0,0,168,247,0,0,22,75,122,123,252,248,25,226,227,149,251,231,59,86,224,163,135,189,100,34,46,131,31,214,16,39,12,215,234,37,5,84,151,88,191,117,192,90,153,74,109,3,79,101,248,240,230,253,202,234,177,163,77,74,107,75,99,110,7,10,56,188,231,55,48,241,0,0,32,235,0,0,104,228,0,0,135,170,124,222,165,239,97,157,79,240,180,36,26,29,108,176,35,121,244,226,206,78,194,120,122,208,179,5,69,225,124,222,218,168,51,183,214,184,167,2,3,139,39,78,174,163,244,228,190,157,145,78,235,97,241,112,46,105,108,32,58,18,104,84,216,219,0,0,120,69,1,0,184,65,1,0,250,115,176,8,157,86,162,132,239,176,240,117,108,137,11,233,177,181,219,221,142,232,26,54,85,248,62,51,178,39,157,57,191,62,132,130,121,167,34,200,6,180,133,164,126,103,200,7,185,70,163,55,190,232,148,38,116,39,136,89,225,50,146,251,192,58,1,0,216,55,1,0,200,51,1,0,176,186,70,86,55,69,140,105,144,229,168,197,246,29,74,247,229,118,217,127,249,75,135,45,231,111,128,80,54,30,227,219,169,28,165,193,26,162,94,180,214,121,39,92,197,120,128,99,165,241,151,65,18,12,79,45,226,173,235,235,16,162,152,221,120,48,1,0,192,44,1,0,136,41,1,0,128,178,66,99,199,193,163,235,183,20,147,193,221,123,232,180,155,70,209,244,27,74,238,193,18,27,1,55,131,248,243,82,107,86,208,55,224,95,37,152,189,15,210,33,93,106,30,82,149,230,79,115,246,63,10,236,139,145,90,152,93,120,101,152,192,37,1,0,176,34,1,0,136,41,1,0,227,123,106,119,93,200,125,186,164,223,169,249,110,94,63,253,222,189,113,248,134,114,137,134,93,245,163,45,32,205,201,68,182,2,44,172,60,73,130,177,13,94,235,85,195,228,222,21,19,70,118,251,109,224,68,96,101,201,116,64,250,140,106,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,11,1,0,152,255,0,0,168,247,0,0,175,69,210,227,118,72,64,49,97,127,120,210,181,138,107,27,156,126,244,100,245,160,27,71,228,46,195,115,99,34,68,94,142,34,64,202,94,105,226,199,139,50,57,236,250,178,22,73,48,241,0,0,32,235,0,0,104,228,0,0,175,208,57,68,216,72,149,98,107,8,37,244,171,70,144,127,21,249,218,219,228,16,30,198,130,170,3,76,124,235,197,156,250,234,158,169,7,110,222,127,74,241,82,232,178,250,156,182,216,219,0,0,120,69,1,0,184,65,1,0,136,6,38,8,211,230,173,138,10,162,172,224,20,200,168,111,10,166,53,217,71,172,159,235,232,62,244,229,89,102,20,75,42,90,179,157,193,56,20,185,78,58,182,225,1,163,79,39,192,58,1,0,216,55,1,0,200,51,1,0,62,138,105,183,120,60,37,133,25,51,171,98,144,175,108,167,122,153,129,72,8,80,0,156,197,87,124,110,31,87,59,78,104,1,221,35,196,167,214,121,204,248,163,134,198,116,207,251,120,48,1,0,192,44,1,0,136,41,1,0,78,206,8,68,133,129,62,144,136,210,198,58,4,27,197,180,79,158,241,1,42,43,88,143,60,209,31,5,3,58,196,198,12,46,246,171,64,48,254,130,150,36,141,241,99,244,73,82,192,37,1,0,176,34,1,0,136,41,1,0,102,23,23,142,148,31,2,13,53,30,47,37,78,143,211,44,96,36,32,254,176,184,251,154,220,206,187,130,70,30,153,197,166,120,204,49,231,153,23,109,56,96,230,17,12,70,82,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,11,1,0,152,255,0,0,168,247,0,0,91,220,193,70,191,96,117,78,106,4,36,38,8,149,117,199,90,0,63,8,157,39,57,131,157,236,88,185,100,236,56,67,48,241,0,0,32,235,0,0,104,228,0,0,176,52,76,97,216,219,56,83,92,168,175,206,175,11,241,43,136,29,194,0,201,131,61,167,38,233,55,108,46,50,207,247,216,219,0,0,120,69,1,0,184,65,1,0,119,62,169,30,54,128,14,70,133,77,184,235,208,145,129,167,41,89,9,139,62,248,193,34,217,99,85,20,206,213,101,254,192,58,1,0,216,55,1,0,200,51,1,0,130,85,138,56,154,68,60,14,164,204,129,152,153,242,8,58,133,240,250,163,229,120,248,7,122,46,63,244,103,41,102,91,120,48,1,0,192,44,1,0,136,41,1,0,96,228,49,89,30,224,182,127,13,138,38,170,203,245,183,127,142,11,198,33,55,40,197,20,5,70,4,15,14,227,127,84,192,37,1,0,176,34,1,0,136,41,1,0,155,9,255,167,27,148,47,203,39,99,95,188,213,176,233,68,191,220,99,100,79,7,19,147,138,127,81,83,92,58,53,226,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,11,1,0,152,255,0,0,168,247,0,0,163,14,1,9,139,198,219,191,69,105,15,58,126,158,109,15,139,190,162,163,158,97,72,0,143,208,94,68,48,241,0,0,32,235,0,0,104,228,0,0,137,111,177,18,138,187,223,25,104,50,16,124,212,157,243,63,71,180,177,22,153,18,186,79,83,104,75,34,216,219,0,0,120,69,1,0,184,65,1,0,127,179,203,53,136,198,193,246,255,169,105,77,125,106,210,100,147,101,176,193,246,93,105,209,236,131,51,234,192,58,1,0,216,55,1,0,200,51,1,0,108,17,80,104,116,1,60,172,106,42,188,27,179,130,98,124,236,106,144,216,110,252,1,45,231,175,236,90,120,48,1,0,192,44,1,0,136,41,1,0,149,233,160,219,150,32,149,173,174,190,155,45,111,13,188,226,212,153,241,18,242,210,183,39,63,166,135,14,192,37,1,0,176,34,1,0,136,41,1,0,58,133,65,102,172,93,159,2,63,84,213,23,208,179,157,189,148,103,112,219,156,43,149,201,246,245,101,209,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,149,248,165,229,221,49,217,0,128,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,157,100,85,90,154,16,184,82,0,0,0,16,0,0,0,0,56,73,103,76,38,2,49,158,56,73,103,76,38,2,49,158,56,73,103,76,38,2,49,158,81,69,75,88,45,223,68,10,113,120,135,110,1,241,155,42,4,185,21,186,67,254,181,182,4,185,21,186,67,254,181,182,4,185,21,186,67,254,181,182,66,253,68,48,89,87,127,162,175,55,251,66,31,140,64,149,1,35,69,103,137,171,205,239,1,35,69,103,137,171,205,239,1,35,69,103,137,171,205,239,115,111,109,101,100,97,116,97,61,18,79,226,25,139,163,24,1,35,69,103,137,171,205,239,85,85,85,85,85,85,85,85,1,35,69,103,137,171,205,239,115,111,109,101,100,97,116,97,251,171,161,255,157,5,233,177,1,35,69,103,137,171,205,239,85,85,85,85,85,85,85,85,254,220,186,152,118,84,50,16,115,111,109,101,100,97,116,97,24,215,72,229,99,98,5,114,3,82,2,7,103,32,130,23,134,2,135,102,89,8,33,152,100,5,106,189,254,169,52,87,115,113,117,105,103,103,108,101,192,125,42,15,165,102,250,48,1,1,1,1,1,1,1,1,128,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,230,230,221,91,126,114,41,116,16,70,16,52,137,152,128,32,145,7,208,21,137,25,1,1,25,7,146,16,152,26,1,1,0,0,0,0,0,0,0,0,225,239,98,195,50,254,130,91,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,0,0,1,0,2,0,3,17,251,237,43,1,152,109,229,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,1,2,3,4,5,6,7,8,84,14,95,234,24,194,248,177,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,25,50,75,100,125,150,175,159,10,10,182,225,12,237,120,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,245,32,45,91,156,103,27,8,207,24,253,115,85,226,197,197,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,250,230,210,190,170,150,130,110,133,223,82,0,86,8,25,61,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,10,20,30,40,50,60,70,80,47,125,231,80,33,47,183,52,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,5,10,15,20,25,30,35,40,123,115,20,146,93,229,156,9,0,5,0,10,0,15,0,20,0,25,0,30,0,35,0,40,1,2,3,4,5,6,7,8,62,192,71,128,190,255,110,32,58,152,78,32,0,25,93,179,46,229,1,200,196,124,234,96,1,2,3,4,5,6,7,8,151,188,216,32,7,128,218,134,0,100,0,200,1,44,1,144,1,244,2,88,2,188,3,32,5,50,10,100,20,200,25,250,101,190,135,231,162,83,138,237,157,64,117,193,3,188,50,42,251,3,231,190,106,179,0,6,8,8,8,8,8,8,8,8,245,219,26,196,94,94,249,249,40,100,97,116,97,32,40,102,108,97,103,115,32,114,97,119,41,32,40,118,97,108,117,101,32,35,97,48,98,49,99,50,100,51,101,52,102,53,49,48,49,48,50,48,51,48,52,48,53,48,54,48,55,48,56,48,57,48,97,49,98,50,99,51,100,52,35,41,41,0,0,0,40,100,97,116,97,32,40,102,108,97,103,115,32,112,107,99,115,49,41,32,40,104,97,115,104,32,115,104,97,49,32,35,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,48,48,97,97,98,98,99,99,100,100,101,101,102,102,56,48,50,48,51,48,52,48,35,41,41,0,0,0,0,0,40,100,97,116,97,32,40,102,108,97,103,115,32,114,97,119,41,32,40,118,97,108,117,101,32,35,97,48,98,49,99,50,100,51,101,52,102,53,48,48,49,48,50,48,51,48,52,48,53,48,54,48,55,48,56,48,57,48,97,49,98,50,99,51,100,52,35,41,41,0,0,0,40,100,97,116,97,32,40,102,108,97,103,115,32,112,107,99,115,49,41,32,40,104,97,115,104,32,115,104,97,49,32,35,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,48,48,97,97,98,98,99,99,100,100,101,101,102,102,49,48,50,48,51,48,52,48,35,41,41,0,0,0,0,0,123,56,59,35,162,125,38,211,36,110,157,185,197,80,56,26,16,0,0,0,0,0,0,0,144,175,233,27,178,136,84,79,44,50,220,35,155,38,53,230,220,238,76,249,44,0,0,0,212,145,219,22,231,177,195,158,134,203,8,107,120,159,84,25,1,35,69,103,137,171,205,239,254,220,186,152,118,84,50,16,131,162,248,162,136,100,31,185,164,233,165,204,47,19,28,125,254,220,186,152,118,84,50,16,1,35,69,103,137,171,205,239,66,76,79,87,70,73,83,72,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,35,69,103,137,171,205,239,254,220,186,152,118,84,50,16,0,17,34,51,68,85,102,119,136,153,170,187,204,221,238,255,212,59,183,85,110,163,46,70,242,162,130,183,212,91,78,13,87,255,115,157,77,201,44,27,215,252,1,112,12,200,33,111,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,35,69,103,137,171,205,239,254,220,186,152,118,84,50,16,0,17,34,51,68,85,102,119,1,35,69,103,137,171,205,239,254,220,186,152,118,84,50,16,97,138,99,210,251,0,0,0,71,6,72,8,81,230,27,232,93,116,191,179,253,149,97,133,65,121,110,160,82,97,110,228,17,34,51,68,255,170,204,221,1,35,69,103,18,52,86,120,35,69,103,137,52,86,120,154,159,88,159,92,246,18,44,50,182,191,236,47,42,232,195,90,18,52,86,120,154,188,222,240,85,85,85,85,85,85,85,85,185,202,127,214,160,245,211,66,25,109,132,145,118,28,59,190,72,178,130,152,104,194,128,0,0,0,40,24,0,0,37,0,82,23,141,41,162,213,132,18,157,137,154,69,130,2,247,119,66,156,8,61,130,244,138,64,102,181,73,39,171,66,199,195,14,183,97,60,254,176,190,115,247,110,109,111,29,163,20,250,187,75,193,14,197,251,205,70,190,40,97,231,3,43,55,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247,149,189,74,82,226,158,215,19,211,19,250,32,233,141,188,200,209,229,17,89,82,247,250,55,56,180,197,206,178,176,154,13,156,197,13,22,225,188,237,207,96,98,9,157,32,131,126,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,128,0,129,1,130,2,131,3,160,32,161,33,162,34,163,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,150,237,204,195,221,4,127,117,99,25,55,111,21,34,87,86,122,20,118,119,149,23,126,200,146,232,221,21,203,31,188,177,37,62,46,162,65,27,221,245,33,72,65,113,179,141,47,76,254,220,186,152,118,84,50,16,255,255,255,255,255,255,255,255,2,0,0,0,43,126,21,22,40,174,210,166,171,247,21,136,9,207,79,60,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,107,193,190,226,46,64,159,150,233,61,126,17,115,147,23,42,59,63,217,46,183,45,173,32,51,52,73,248,232,60,251,74,174,45,138,87,30,3,172,156,158,183,111,172,69,175,142,81,200,166,69,55,160,179,169,63,205,227,205,173,159,28,229,139,48,200,28,70,163,92,228,17,229,251,193,25,26,10,82,239,38,117,31,103,163,203,177,64,177,128,140,241,135,164,244,223,246,159,36,69,223,79,155,23,173,43,65,123,230,108,55,16,192,75,5,53,124,93,28,14,234,196,198,111,159,247,242,230,5,0,0,0,43,126,21,22,40,174,210,166,171,247,21,136,9,207,79,60,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,107,193,190,226,46,64,159,150,233,61,126,17,115,147,23,42,59,63,217,46,183,45,173,32,51,52,73,248,232,60,251,74,174,45,138,87,30,3,172,156,158,183,111,172,69,175,142,81,119,137,80,141,22,145,143,3,245,60,82,218,197,78,216,37,48,200,28,70,163,92,228,17,229,251,193,25,26,10,82,239,151,64,5,30,156,95,236,246,67,68,247,168,34,96,237,204,246,159,36,69,223,79,155,23,173,43,65,123,230,108,55,16,48,76,101,40,246,89,199,120,102,165,16,217,193,214,174,94,143,209,3,137,51,107,249,94,154,204,35,125,255,22,215,108,32,239,124,145,158,58,117,9,108,180,86,28,64,191,10,151,5,147,28,182,212,8,231,250,80,220,1,98,189,117,127,49,180,153,52,1,179,233,150,248,78,229,206,231,215,155,9,185,103,103,49,56,84,150,105,115,8,87,6,86,72,234,190,67,241,56,41,201,222,0,0,0,28,25,138,131,141,240,40,183,1,159,152,9,222,23,17,133,143,170,195,163,186,32,251,195,238,84,209,62,188,174,112,109,34,107,195,20,44,212,13,74,225,19,244,16,44,252,206,67,35,139,79,229,132,126,68,178,6,154,0,127,199,106,69,159,152,186,249,23,254,223,149,33,8,9,10,11,13,14,15,16,18,19,20,21,23,24,25,26,28,29,30,31,33,34,35,36,38,39,40,41,43,44,45,46,8,14,149,23,235,22,119,113,154,207,114,128,134,4,10,227,118,119,116,117,241,242,243,244,248,249,230,231,119,112,113,114,4,5,6,7,9,10,11,12,14,15,16,17,19,20,21,22,24,25,26,27,29,30,31,32,93,30,242,13,206,214,188,188,18,19,26,199,197,71,136,170,1,75,175,34,120,166,157,51,29,81,128,16,54,67,233,154,232,233,234,235,237,238,239,240,242,243,244,245,247,248,249,250,103,67,195,209,81,154,180,242,205,154,120,171,9,165,17,189,208,249,0,0,1,0,0,0,168,243,0,0,3,0,0,0,16,238,0,0,2,0,0,0,240,230,0,0,5,0,0,0,0,0,0,0,0,0,0,0,64,16,0,16,0,16,0,0,0,0,4,0,64,16,4,16,0,0,0,16,64,16,0,16,64,0,0,0,0,0,0,16,64,0,4,0,0,0,4,16,64,16,4,16,0,16,4,0,0,16,4,16,64,16,4,0,0,16,0,0,64,0,0,0,0,0,4,16,64,0,0,16,0,16,0,16,64,16,0,0,0,16,4,0,64,0,4,0,64,0,4,16,0,16,4,16,64,16,0,0,0,0,0,0,0,0,0,0,64,0,4,16,64,0,0,16,0,16,0,16,64,16,4,0,0,0,4,0,64,16,4,0,0,0,4,0,0,16,4,16,0,16,0,0,64,0,0,0,64,0,4,16,0,16,0,0,64,16,4,0,0,16,0,16,64,0,0,0,64,0,0,16,0,0,4,16,64,0,4,16,0,0,0,16,0,0,4,0,64,16,0,16,0,0,0,0,64,16,4,16,64,0,4,0,64,0,0,16,0,0,4,16,0,16,0,16,64,16,0,16,0,0,0,0,64,16,4,16,0,16,4,0,0,16,4,0,64,16,0,0,64,16,0,0,64,0,4,0,0,0,0,16,0,16,4,16,0,0,32,0,2,0,32,4,2,8,0,4,0,0,0,0,0,8,0,0,2,8,0,4,2,8,32,0,0,8,32,4,2,8,32,4,0,0,32,0,0,0,0,0,2,0,0,4,2,0,0,0,0,0,0,4,2,0,32,4,2,8,0,0,0,8,0,4,2,8,32,0,2,0,32,0,0,8,0,4,2,0,0,4,0,0,32,4,0,8,32,4,2,0,32,0,0,0,32,4,0,8,0,0,2,8,0,0,2,8,32,4,0,8,32,0,2,0,0,0,0,0,0,4,0,8,32,0,0,0,0,4,0,8,32,0,0,0,32,0,2,8,0,4,2,8,0,4,2,0,32,4,2,0,32,4,2,0,0,0,2,0,32,0,0,0,0,4,0,8,0,4,0,0,32,0,0,8,32,4,2,8,0,0,2,8,32,0,0,8,32,4,2,8,0,0,2,0,0,4,2,8,32,4,0,0,32,4,0,8,32,0,0,0,0,0,2,0,0,0,2,8,32,4,0,0,0,0,2,8,32,0,0,0,32,4,0,8,0,0,2,0,0,4,0,8,0,4,0,8,0,0,2,0,32,0,16,0,0,32,0,0,64,32,0,64,0,0,16,64,64,32,0,0,64,32,16,0,0,0,16,64,64,32,0,0,64,0,0,64,0,32,16,64,64,0,0,0,64,0,16,0,0,32,16,0,64,0,0,64,0,32,0,0,0,32,16,64,0,0,0,0,0,0,16,0,64,0,16,64,0,32,0,64,0,0,0,64,64,0,16,64,0,32,16,0,0,0,16,0,64,32,16,0,64,32,0,0,0,0,16,64,64,0,0,64,64,32,16,64,0,0,0,64,64,0,0,64,64,32,0,0,0,32,0,64,0,32,16,0,0,0,16,0,64,32,0,64,64,0,16,64,64,32,0,0,64,0,16,64,0,0,16,0,0,32,0,0,64,0,0,64,0,32,0,0,0,32,16,64,0,0,16,0,0,32,16,64,64,32,0,64,64,0,0,0,64,32,16,64,64,0,0,64,64,32,0,0,0,0,16,0,64,32,16,0,0,0,0,64,0,0,0,0,64,32,16,64,64,0,0,64,0,0,16,0,64,0,16,64,0,32,0,0,0,0,0,64,64,32,0,0,0,32,16,0,64,0,16,64,0,32,0,1,0,0,0,1,8,2,0,0,8,2,0,1,0,66,0,0,8,0,0,1,0,0,0,0,0,64,0,0,8,2,0,1,8,64,0,0,8,0,0,1,0,2,0,1,8,64,0,1,0,66,0,0,8,66,0,1,8,0,0,0,0,64,0,0,0,2,0,0,8,64,0,0,8,64,0,0,0,0,0,1,0,64,0,1,8,66,0,1,8,66,0,1,0,2,0,0,8,66,0,1,0,64,0,0,0,0,0,0,0,66,0,1,8,2,0,0,0,2,0,0,0,66,0,1,8,0,0,0,8,0,0,1,0,66,0,1,0,0,0,0,0,2,0,0,0,64,0,0,8,2,0,1,0,66,0,1,8,64,0,1,0,2,0,0,0,64,0,0,8,66,0,1,8,2,0,1,8,64,0,1,0,0,0,0,0,2,0,0,8,66,0,1,8,66,0,1,8,0,0,0,0,66,0,1,8,66,0,0,8,2,0,0,0,0,0,0,8,64,0,0,0,66,0,1,8,0,0,1,0,2,0,1,0,64,0,0,8,0,0,0,0,0,0,0,8,64,0,1,8,2,0,1,0,64,85,60,50,38,133,96,14,91,245,89,27,250,169,193,70,26,250,143,76,124,161,69,226,169,215,85,41,219,89,81,202,101,194,175,53,206,118,10,219,5,69,61,17,169,126,199,234,129,13,10,172,182,138,248,142,82,255,227,123,89,83,162,158,160,86,205,72,172,179,223,13,67,111,228,92,244,122,166,179,196,94,208,226,251,216,207,206,78,240,53,153,179,16,111,245,62,198,25,214,156,130,214,34,11,105,32,223,116,10,70,253,23,64,237,16,133,142,204,248,108,167,202,110,58,191,36,200,214,73,112,129,26,88,61,36,97,162,99,193,187,182,172,139,4,50,204,68,125,194,138,163,217,171,16,244,170,91,255,221,127,75,130,4,168,90,73,109,173,148,159,140,45,79,167,166,225,227,232,222,53,18,133,247,212,147,216,64,101,136,127,75,253,218,191,164,42,4,32,124,36,124,50,209,23,197,161,110,9,133,102,26,54,180,102,105,213,125,5,33,18,195,165,125,39,247,207,58,164,147,152,213,148,129,34,192,205,28,197,240,100,219,137,97,255,196,188,51,61,241,106,230,76,24,203,5,224,234,155,185,29,29,205,92,255,15,152,66,254,167,84,184,176,159,75,141,113,106,106,212,123,140,253,165,34,204,168,15,209,49,189,228,43,149,132,20,211,71,56,36,203,95,151,250,199,7,196,70,88,30,237,134,72,4,11,183,30,121,219,205,40,127,65,115,245,226,11,176,194,119,248,128,33,69,144,149,92,0,235,112,243,255,221,107,122,164,214,217,214,56,158,80,206,2,167,127,100,0,15,235,235,6,111,96,118,207,6,204,29,10,255,134,162,139,242,217,228,98,194,24,201,93,48,90,216,84,95,34,50,135,29,91,71,254,181,204,104,22,181,79,45,32,186,43,215,217,185,121,166,165,67,45,145,13,28,132,83,232,164,18,191,72,170,126,59,223,29,47,242,71,14,30,120,115,9,181,10,230,12,242,239,66,183,255,157,209,97,210,32,57,46,42,6,3,43,161,22,149,4,101,57,34,235,96,25,184,184,14,213,254,22,28,37,110,1,38,248,48,195,192,154,113,118,62,149,101,38,21,237,112,149,54,166,148,49,214,2,135,201,177,148,131,240,116,80,225,92,178,144,140,89,186,112,246,66,151,11,129,21,74,121,108,140,175,252,233,37,89,13,78,116,104,216,108,113,103,48,27,115,215,232,119,176,10,145,97,47,196,90,219,187,97,106,103,21,133,240,251,62,81,147,213,233,131,158,75,114,148,244,141,100,9,92,152,225,135,232,253,12,55,117,198,211,177,52,93,37,13,188,51,228,53,220,224,27,19,52,66,184,170,208,175,126,139,180,80,42,4,8,53,171,163,68,238,196,151,153,208,153,23,32,73,123,154,130,65,68,197,183,7,131,59,38,166,108,106,253,244,149,47,117,229,198,8,44,64,23,114,146,238,217,149,167,84,183,138,42,61,148,114,47,85,247,66,164,8,18,120,25,78,51,49,44,145,98,238,234,124,141,169,79,9,179,93,102,47,134,195,85,243,177,83,93,23,16,6,189,39,63,65,64,184,108,254,70,89,250,12,223,146,55,224,63,143,94,184,46,55,0,231,207,24,225,188,173,231,41,190,167,221,49,132,222,92,238,68,229,62,135,241,65,27,27,120,138,231,240,210,160,120,76,201,165,40,7,182,119,40,46,65,57,44,166,201,175,243,94,38,161,197,6,37,106,12,119,194,188,18,206,225,220,213,109,182,58,55,91,103,74,208,153,84,230,22,210,191,129,52,82,143,125,137,243,21,236,252,100,111,15,200,19,91,139,97,190,239,116,29,62,39,20,183,130,220,172,23,157,25,3,224,191,64,221,248,97,224,231,87,146,233,55,170,90,119,4,105,98,82,250,249,86,61,70,58,246,187,139,100,110,162,67,21,63,1,240,152,200,158,135,159,126,48,168,204,119,1,21,164,39,76,204,72,51,29,202,44,47,67,27,19,160,111,159,143,31,29,222,214,221,167,71,160,2,102,96,199,178,28,204,100,171,55,210,211,209,252,37,114,142,147,155,118,244,15,142,112,3,78,236,45,193,3,61,218,251,178,254,154,136,67,238,210,206,11,174,67,79,251,235,35,137,203,34,109,57,247,60,1,13,54,105,34,224,212,210,2,54,94,133,76,120,31,208,186,5,56,7,70,245,82,56,19,122,225,51,56,182,199,138,5,116,72,223,74,161,138,103,156,178,146,186,205,173,250,108,199,159,232,12,52,158,51,8,9,78,157,95,185,35,89,31,41,233,175,241,95,38,74,15,246,128,52,110,28,132,155,178,42,58,191,238,173,180,145,143,168,56,25,226,195,211,198,69,248,239,223,87,242,170,44,246,11,107,0,47,120,238,117,111,239,121,244,98,169,22,137,28,212,90,165,17,83,212,254,132,144,210,41,242,230,0,176,22,123,194,241,66,116,192,35,152,116,118,31,43,96,83,116,194,163,236,118,75,189,145,22,185,99,244,152,140,106,230,173,241,60,201,188,20,151,131,69,109,62,33,133,136,17,71,77,39,240,125,23,142,81,41,63,80,181,115,155,180,107,107,249,195,104,129,22,16,174,176,202,99,59,150,61,14,20,219,161,85,86,75,252,141,92,222,20,110,53,241,137,247,193,218,81,78,175,104,62,104,217,15,75,141,157,79,168,201,209,249,160,82,63,224,145,54,128,142,135,225,70,110,216,94,80,113,208,153,14,26,113,60,16,147,78,12,178,101,8,90,46,104,240,228,31,252,251,86,155,223,94,16,227,93,141,234,122,24,121,35,177,253,171,113,156,123,231,190,225,157,185,46,35,69,207,51,234,192,236,33,161,199,5,24,82,215,164,89,114,124,174,86,235,245,150,56,220,117,143,177,61,143,99,170,142,128,233,171,141,53,57,159,172,114,11,192,145,250,222,183,146,45,73,98,253,65,85,107,91,77,46,249,232,222,198,109,126,234,190,196,171,87,63,53,206,144,86,218,214,105,87,115,132,20,57,66,166,74,35,10,157,13,248,40,128,80,249,246,21,242,179,122,162,25,227,184,77,26,52,81,17,156,173,49,5,88,239,123,165,34,60,119,51,134,150,7,26,86,199,69,54,190,157,36,158,218,19,249,104,76,166,120,155,45,101,218,239,52,195,59,127,169,39,76,244,23,107,230,32,18,98,118,11,125,205,154,137,67,119,150,130,103,237,224,202,91,238,243,252,121,200,0,54,117,159,64,182,109,146,181,57,154,208,6,136,197,122,49,176,174,131,111,33,31,56,134,74,202,230,1,37,48,159,209,98,52,255,102,251,59,253,221,36,124,32,114,235,226,236,226,211,182,246,74,222,8,234,199,190,77,153,156,196,139,154,176,151,229,172,73,186,151,7,207,102,71,140,179,117,42,124,197,115,147,27,19,88,30,147,97,206,44,130,177,12,28,186,9,185,85,117,157,210,17,125,147,221,175,127,18,228,146,109,198,173,59,218,41,188,236,194,84,113,213,193,162,36,254,246,130,77,19,197,88,79,39,98,91,81,227,58,28,38,129,203,1,46,200,7,233,203,127,227,19,25,9,237,248,201,70,0,200,249,216,73,50,99,251,136,227,237,155,207,128].concat([158,241,108,17,154,83,129,24,87,36,213,107,247,243,3,81,168,247,71,174,245,230,183,21,207,156,126,212,222,198,215,219,26,187,40,2,65,92,229,68,153,78,219,94,37,212,71,182,48,252,170,184,43,136,17,93,42,33,211,41,187,139,9,245,179,150,2,233,20,234,181,143,90,2,221,87,33,148,123,103,181,172,144,163,192,231,88,251,1,74,189,131,76,103,211,137,59,185,243,75,223,164,45,158,41,72,171,140,50,30,196,252,82,44,88,186,150,140,243,3,178,93,216,127,189,189,209,202,131,174,130,96,193,66,180,187,176,154,218,165,107,232,95,185,63,169,113,55,103,4,46,178,216,82,49,73,201,88,83,132,30,84,180,151,134,72,42,190,102,105,142,211,45,220,162,149,43,133,60,146,172,17,44,192,123,168,242,13,153,177,136,35,190,55,79,27,250,8,128,124,3,229,84,77,200,208,112,31,212,87,206,126,236,173,144,84,58,58,6,217,39,60,43,0,191,162,48,128,132,163,174,126,192,3,32,237,109,50,2,198,134,64,169,105,125,40,167,131,138,122,245,48,203,95,122,197,121,231,235,121,228,68,104,181,233,188,220,5,15,180,115,163,226,14,87,136,110,120,26,215,160,246,232,189,205,186,156,135,47,163,100,193,188,209,106,151,139,215,102,150,94,226,33,171,60,195,229,229,170,99,16,144,144,141,105,72,68,179,24,152,187,138,30,62,174,135,100,227,180,220,59,137,49,249,189,175,25,213,187,95,220,160,69,99,202,101,148,155,38,254,40,134,236,81,156,63,96,1,93,30,183,73,80,161,6,64,228,77,177,203,118,247,229,112,108,191,237,43,85,239,242,24,18,65,163,54,90,112,8,7,12,203,68,96,152,79,117,20,77,231,14,40,168,14,67,217,86,205,101,80,95,83,215,145,37,193,150,239,10,114,241,35,50,200,31,165,99,115,111,57,160,195,1,32,128,0,129,32,0,0,129,32,0,0,128,0,0,0,128,32,128,0,129,0,128,0,1,0,128,0,1,32,0,0,0,0,0,0,0,32,128,0,0,32,128,0,129,32,128,0,129,0,0,0,0,0,0,0,128,0,128,0,1,0,128,0,1,0,0,0,0,32,0,0,0,0,128,0,1,32,128,0,128,0,0,0,0,0,128,0,1,32,0,0,128,32,0,0,129,0,128,0,1,0,0,0,128,32,0,0,128,0,128,0,0,32,0,0,128,32,128,0,129,32,128,0,129,0,0,0,128,0,128,0,1,0,128,0,0,32,128,0,129,32,128,0,129,0,0,0,0,0,0,0,0,0,0,0,0,32,128,0,128,32,0,0,128,0,128,0,129,0,128,0,1,0,0,0,1,32,128,0,129,32,0,0,129,32,0,0,128,0,0,0,129,32,128,0,129,0,0,0,1,0,0,0,0,32,0,0,1,0,128,0,1,32,0,0,128,32,128,0,129,0,128,0,1,32,0,0,128,32,0,0,0,0,128,0,1,32,128,0,128,0,0,0,0,0,128,0,0,32,0,0,128,32,128,0,155,243,218,241,47,204,159,244,129,146,242,111,198,213,127,72,63,168,220,252,103,6,163,232,99,206,252,210,227,75,155,44,194,187,251,147,75,247,63,218,102,186,112,254,210,101,161,47,212,147,14,151,121,226,3,161,113,94,228,176,119,236,205,190,151,228,133,57,114,30,180,207,23,80,247,94,2,170,10,183,224,184,64,56,240,9,35,212,121,133,137,53,208,26,252,142,197,171,178,226,11,146,198,150,114,145,90,55,99,65,175,102,251,39,113,202,220,171,116,33,65,255,114,74,166,206,60,179,165,102,48,8,51,73,74,240,245,154,40,215,205,10,151,141,94,194,200,49,224,232,150,143,71,93,135,118,34,192,254,243,221,144,97,5,16,243,123,236,145,20,15,187,174,176,173,245,146,136,213,15,133,248,80,155,232,77,183,88,131,72,117,73,97,28,83,145,246,79,53,163,238,198,210,129,228,187,2,7,152,237,237,125,5,36,251,137,2,233,150,133,19,117,48,172,237,114,39,23,128,53,45,29,13,195,107,142,194,143,115,235,38,67,4,99,143,239,84,88,190,59,221,90,50,82,92,158,35,70,92,50,207,83,170,144,103,208,157,52,81,77,210,193,36,166,158,166,238,207,81,32,79,126,46,134,10,15,34,19,100,72,224,4,148,57,57,206,183,252,134,112,164,44,196,217,204,231,3,138,35,210,90,104,219,241,47,171,178,132,100,6,236,121,191,239,112,93,157,254,84,24,72,156,221,185,19,91,173,9,21,237,117,212,240,21,81,152,199,14,6,205,235,11,248,183,58,24,145,103,140,213,228,238,243,82,80,124,24,209,255,130,78,229,146,17,93,201,162,108,172,185,76,161,238,134,93,125,103,83,177,190,133,52,42,73,140,31,120,29,25,221,249,235,132,167,186,102,8,246,116,140,208,162,59,100,143,81,34,124,8,225,86,233,82,136,141,174,16,196,141,203,104,167,26,142,236,191,38,119,4,56,170,69,59,205,180,56,119,166,25,222,13,236,28,105,22,173,7,46,70,128,147,49,212,198,56,25,166,11,109,135,165,197,64,216,143,165,31,250,185,22,24,79,167,60,23,177,138,24,31,2,156,201,152,47,218,171,22,232,74,19,171,128,5,62,187,90,100,115,183,5,59,95,246,242,117,85,190,162,1,37,169,139,126,78,0,116,47,27,83,217,232,113,3,88,215,28,48,78,118,98,149,216,110,127,61,0,111,89,255,38,89,177,185,214,197,168,61,41,101,159,76,248,144,214,77,240,206,110,136,175,51,255,95,39,130,71,1,8,130,63,8,51,20,228,181,249,26,154,64,254,13,253,107,57,219,44,52,163,37,67,82,178,1,179,98,126,231,138,90,97,85,102,159,158,111,195,9,44,211,146,45,90,69,133,133,116,71,73,169,222,199,242,186,158,163,51,193,180,207,99,98,84,188,110,204,64,176,131,176,38,179,253,200,84,148,59,140,215,255,135,158,106,245,86,198,43,244,153,13,148,194,45,45,110,9,107,9,223,247,152,191,82,216,58,30,224,166,25,11,180,212,219,203,156,169,66,89,197,233,69,175,152,153,165,134,49,217,7,232,149,98,54,115,247,161,250,27,24,72,107,29,10,122,21,226,87,236,31,213,26,32,246,106,68,103,70,117,240,176,207,202,235,21,230,120,7,41,104,79,31,243,184,30,209,34,206,214,62,113,34,59,201,195,46,167,193,87,48,47,31,63,124,195,172,70,203,14,245,170,2,253,147,184,219,207,159,11,96,46,217,31,51,214,58,234,72,97,249,152,164,234,131,106,139,110,66,216,168,220,92,115,183,116,178,137,160,17,74,82,30,115,179,246,135,73,103,201,203,229,8,136,17,148,211,155,177,199,228,6,153,12,162,36,155,126,127,237,175,167,68,54,235,222,234,9,101,222,14,239,232,211,241,30,108,180,143,121,233,67,125,201,185,163,40,12,116,132,215,242,162,111,86,151,97,71,150,132,123,157,6,95,182,230,227,91,122,16,111,190,120,237,48,99,249,21,106,7,122,231,13,230,238,208,155,139,160,74,238,75,43,78,137,184,199,62,166,86,106,244,254,52,186,89,19,18,2,252,3,55,40,248,153,191,76,200,48,175,12,53,113,128,57,122,104,23,240,137,122,167,208,105,53,66,158,235,169,193,241,153,129,238,45,40,118,121,140,189,122,31,221,165,55,23,93,128,250,169,9,60,67,83,79,217,161,124,223,83,12,139,250,119,203,108,136,188,220,217,63,32,71,27,169,124,145,64,192,223,220,209,249,66,1,208,125,88,123,56,79,29,252,118,132,3,101,49,243,197,231,248,35,57,115,227,231,68,34,42,3,75,167,245,80,215,165,135,92,46,153,152,54,196,76,43,8,60,246,88,184,236,123,145,223,218,109,248,91,252,184,112,50,118,221,181,41,187,114,174,16,43,54,0,119,78,201,106,87,143,251,30,198,218,18,209,26,39,164,250,197,14,195,27,105,67,113,50,204,17,99,36,255,6,50,229,48,142,54,66,49,150,163,44,224,49,14,56,113,241,118,173,10,150,92,141,149,54,165,109,193,48,244,214,248,210,225,231,27,63,209,255,200,225,219,77,0,102,174,120,117,70,230,123,6,1,63,131,5,109,88,254,59,173,181,52,187,240,151,43,161,201,52,95,9,168,12,214,37,69,182,122,36,209,119,116,1,243,198,219,220,77,210,202,222,212,20,46,74,235,30,10,190,217,230,181,189,171,1,67,121,247,112,126,42,253,64,5,39,138,45,244,222,193,34,76,163,192,142,7,1,135,99,193,244,26,81,222,229,10,51,154,189,82,58,187,126,53,100,125,170,87,120,105,119,50,76,174,3,22,131,78,0,18,227,120,173,32,16,162,231,242,32,180,106,12,167,65,157,230,65,17,234,24,108,224,40,40,107,79,152,189,140,178,210,131,157,110,68,108,95,183,38,127,141,65,77,140,86,71,186,142,61,24,230,191,173,11,216,68,96,22,95,127,109,32,14,62,202,203,17,57,164,88,226,188,192,29,178,70,23,58,114,211,205,215,245,84,168,202,199,156,29,38,61,136,50,172,124,44,148,186,35,100,194,144,118,184,66,128,71,36,85,229,23,159,56,162,86,118,71,190,224,160,45,171,103,94,155,40,77,49,253,187,143,156,43,134,68,101,19,20,157,4,200,124,180,147,199,145,43,54,27,44,130,216,223,19,251,85,70,177,78,123,169,226,20,7,186,203,30,20,95,222,92,157,69,67,97,137,172,240,213,241,251,168,83,0,91,94,28,216,4,234,151,243,179,253,212,168,129,33,98,8,18,42,87,65,211,188,233,138,229,204,67,134,37,17,20,164,224,198,164,254,197,68,145,15,98,207,101,101,208,51,13,161,156,33,159,72,141,164,84,33,200,99,109,172,94,62,196,175,13,119,114,58,139,114,169,239,135,223,32,123,78,147,215,229,134,62,26,182,3,85,227,4,213,25,200,251,33,227,202,166,191,96,172,179,80,154,18,195,182,159,126,234,104,94,205,199,177,131,148,25,144,28,176,108,55,149,194,213,60,233,61,19,173,185,42,223,46,213,174,132,120,160,192,18,245,96,46,201,16,98,227,163,134,61,188,206,81,57,22,155,157,38,53,250,181,205,208,42,110,125,12,51,87,127,216,151,98,232,89,231,176,141,137,33,242,142,41,126,170,165,209,41,0,0,85,69,27,6,181,225,138,192,139,58,112,146,108,43,28,195,194,66,239,37,175,107,89,204,148,86,4,84,34,219,115,29,10,154,23,196,217,249,160,182,4,96,60,61,174,162,175,253,239,196,150,148,180,91,7,200,247,227,212,28,29,20,199,197,156,52,85,142,33,56,22,189,120,106,36,80,248,104,21,241,178,41,188,2,149,250,188,250,237,27,5,35,218,242,229,108,121,124,83,147,220,176,40,225,170,174,41,75,238,160,61,73,58,215,149,104,65,44,107,223,181,55,127,45,18,37,189,171,252,177,196,93,16,88,11,129,112,144,42,136,247,55,221,15,225,92,63,138,81,181,202,77,82,91,37,81,132,135,133,158,60,226,52,189,25,129,130,41,64,203,236,60,93,111,91,160,116,202,62,225,66,21,2,16,182,172,226,89,47,209,121,249,15,80,204,249,228,39,218,55,96,125,132,241,13,90,151,146,94,254,35,230,211,144,225,109,214,72,128,86,123,184,214,50,80,110,33,53,130,206,183,54,154,74,75,246,36,122,42,39,128,247,22,105,140,139,237,239,147,85,21,206,76,244,191,221,55,37,189,153,75,93,219,149,75,192,47,129,105,161,253,211,146,182,11,102,144,154,74,26,251,178,185,164,70,105,25,12,115,104,218,73,127,170,137,226,129,95,160,177,131,15,154,102,100,139,244,68,150,125,255,179,39,179,117,182,141,92,97,107,204,149,190,235,188,185,32,79,103,130,89,101,117,130,35,49,111,5,207,69,62,113,136,228,90,87,17,194,84,153,159,97,191,233,234,168,64,96,196,186,234,205,193,192,242,233,111,76,69,28,105,18,100,73,246,156,65,112,15,91,38,239,59,220,211,158,138,87,195,245,96,14,109,8,2,0,0,0,2,2,8,0,0,0,0,8,0,2,8,0,2,0,8,0,0,0,0,8,2,2,0,0,2,0,8,8,0,2,0,8,0,0,8,8,0,0,8,0,0,2,0,8,2,2,8,8,0,2,0,0,0,2,8,8,2,0,0,0,0,0,8,8,0,0,0,0,2,2,8,0,2,0,0,0,2,2,0,0,0,2,8,8,0,2,8,8,2,2,0,8,2,0,8,0,2,2,0,0,0,2,0,8,2,0,8,8,0,0,0,8,2,2,8,0,2,0,0,0,0,0,8,0,2,2,8,0,0,0,8,8,0,2,0,8,2,0,0,0,0,2,0,0,2,2,8,0,2,0,8,0,0,0,0,0,2,0,0,8,0,2,0,8,2,2,8,0,2,0,8,8,0,0,8,0,2,0,0,0,0,0,0,8,0,2,8,8,2,0,8,0,0,2,0,0,0,0,8,8,2,2,8,8,0,0,0,8,2,2,0,0,2,2,0,8,0,0,8,0,0,2,8,8,2,0,8,8,2,0,0,0,0,2,8,8,2,2,0,8,0,0,0,8,0,2,8,0,2,2,0,56,33,161,5,90,190,166,230,152,124,248,180,165,34,161,181,144,105,11,20,137,96,60,86,213,93,31,57,46,203,70,76,52,148,183,201,219,173,50,217,245,175,21,32,228,112,234,8,241,140,71,62,103,166,101,215,153,141,39,171,126,117,251,196,146,6,110,45,134,198,17,223,22,59,127,13,241,132,235,221,4,234,101,166,4,246,46,111,179,223,224,240,15,15,142,74,81,186,188,61,248,238,237,165,30,55,164,14,42,10,79,252,41,132,179,92,168,29,62,232,226,28,27,186,130,248,143,220,13,232,83,131,94,80,69,205,23,7,219,212,0,154,209,24,1,129,243,165,237,207,160,52,242,202,135,136,81,126,231,11,54,81,196,179,56,20,52,30,249,204,137,144,244,151,87,224,20,29,89,242,157,63,210,255,205,197,149,133,34,218,61,84,51,42,5,153,253,129,31,102,118,123,15,219,65,230,54,135,7,83,142,65,37,119,34,21,250,178,46,22,70,127,95,226,254,217,19,108,18,178,168,72,234,110,231,146,23,84,220,175,143,137,209,198,191,18,217,3,27,245,131,27,250,170,177,49,217,183,42,228,150,39,172,241,172,235,210,252,215,167,163,64,197,188,251,10,109,19,86,16,133,12,109,154,221,225,137,120,170,116,121,42,120,37,53,211,155,192,138,7,9,93,226,167,208,237,198,234,179,56,65,189,112,158,235,113,190,191,10,146,92,98,194,79,245,208,165,162,163,144,18,11,107,227,84,192,43,147,254,98,255,89,221,246,125,172,168,17,69,53,55,53,212,220,250,114,145,94,132,202,220,32,157,50,96,43,248,132,24,47,103,205,225,44,198,121,44,100,36,209,173,162,9,139,38,231,217,25,106,233,193,208,12,80,169,75,155,106,120,90,243,67,76,99,54,3,2,14,34,216,102,235,74,71,123,193,194,170,155,236,227,26,115,106,88,2,132,224,122,102,38,130,165,236,202,145,118,86,212,103,181,173,117,72,92,21,148,29,223,63,129,91,152,253,0,109,6,205,116,183,252,110,40,81,175,68,167,31,71,52,136,94,46,174,97,231,174,160,44,247,154,224,232,174,205,228,64,190,101,246,24,81,187,11,151,233,100,25,223,51,235,75,110,114,98,151,25,41,7,0,59,112,167,48,239,245,22,216,49,70,190,166,4,21,181,181,128,184,108,75,216,126,195,147,23,100,150,125,233,246,119,237,33,123,115,107,249,46,49,6,99,119,244,243,111,232,72,137,82,174,248,248,163,134,242,215,219,83,99,16,252,76,231,220,202,22,221,198,82,250,189,25,92,0,211,106,212,100,93,143,134,104,106,24,30,207,44,81,157,58,174,96,86,56,194,98,126,54,215,177,220,119,234,231,89,227,110,190,154,116,115,7,108,82,75,115,159,208,249,229,90,115,168,139,85,138,204,199,63,73,69,171,65,48,83,193,185,176,189,89,10,71,186,88,25,50,147,195,70,95,11,176,45,133,229,176,54,211,43,155,32,145,159,241,158,101,125,79,96,110,36,203,44,120,226,138,154,185,199,196,20,200,182,42,245,204,123,114,17,190,175,217,39,71,77,179,33,1,12,13,149,126,31,71,173,112,86,67,111,117,73,104,90,97,66,212,173,245,122,149,185,128,153,224,135,78,85,227,174,80,223,161,207,42,86,213,47,253,58,38,152,216,214,143,12,216,77,146,244,200,58,23,74,117,61,202,153,207,60,191,145,175,172,123,71,254,45,193,144,214,246,113,83,237,148,112,104,94,40,92,26,131,164,160,8,55,10,201,211,197,128,101,208,23,55,144,127,15,127,242,253,184,19,187,249,25,67,40,80,77,27,111,189,177,18,64,255,143,163,27,118,28,59,31,226,226,196,48,21,13,138,44,55,167,105,206,67,137,102,206,181,254,17,78,24,229,33,102,115,189,128,219,139,97,11,77,87,139,214,186,41,125,91,254,230,37,62,97,187,129,63,145,7,188,16,156,28,7,151,45,172,9,121,235,190,199,87,215,197,59,53,141,229,195,232,97,143,243,146,120,1,235,26,194,28,155,156,251,239,212,171,247,148,244,38,125,114,153,3,62,107,149,162,99,224,163,48,156,160,74,154,139,74,157,180,15,9,0,213,183,106,63,192,138,38,87,160,242,192,156,209,66,191,237,45,157,238,61,114,169,96,121,200,73,15,51,65,27,66,135,2,114,178,198,156,54,0,124,192,158,197,10,37,52,53,203,73,172,78,239,216,41,1,239,78,36,80,244,182,222,244,202,229,70,204,138,247,99,146,152,99,171,254,47,120,69,122,93,254,185,124,143,53,70,99,78,100,247,216,91,0,201,45,191,21,115,122,66,28,38,37,33,170,196,208,23,80,142,81,147,108,72,146,57,195,212,215,162,224,254,203,180,141,221,93,44,32,214,117,124,97,108,91,227,216,149,194,219,25,43,3,2,211,105,179,96,50,65,228,220,95,104,66,206,16,86,246,221,185,221,243,6,240,72,225,181,29,210,164,142,111,73,205,47,230,252,176,32,49,238,176,88,35,145,27,44,8,163,245,24,184,23,131,178,207,210,166,156,24,30,156,168,200,219,170,106,87,24,107,12,227,250,153,18,169,234,93,182,231,39,16,127,75,121,43,251,235,91,59,68,127,49,228,4,166,208,57,89,50,45,133,75,252,127,32,251,238,107,174,213,116,211,199,129,178,130,150,48,117,180,195,148,161,9,227,186,5,159,180,19,123,249,195,140,103,57,41,248,47,66,169,152,124,255,118,16,176,22,75,36,238,103,61,102,28,87,191,248,161,13,227,238,88,103,13,31,183,185,222,122,217,17,182,201,162,87,108,123,136,213,175,183,225,79,152,107,132,174,144,98,253,165,193,172,222,76,223,148,255,58,72,197,209,91,138,5,55,60,186,66,193,108,22,99,64,111,247,178,110,82,184,141,78,109,13,111,3,128,8,225,29,49,29,151,201,35,5,158,145,214,124,204,36,40,236,69,201,130,35,230,89,131,91,87,149,153,136,196,13,64,158,250,104,21,114,69,203,62,130,209,47,8,6,130,59,152,253,218,203,168,134,35,8,41,125,170,136,117,184,3,68,205,159,38,224,209,189,40,247,245,145,27,246,1,2,4,57,159,102,228,222,74,240,140,33,124,29,122,206,229,156,215,41,60,98,101,177,11,192,150,144,68,104,35,186,3,165,157,135,241,155,171,142,5,88,164,177,236,35,188,204,30,64,187,1,223,88,154,61,20,95,168,104,232,112,160,158,35,242,125,48,136,241,79,131,17,100,26,180,101,213,20,2,22,112,82,116,51,19,238,9,94,40,63,207,61,14,149,83,9,200,185,84,2,147,89,109,218,48,137,64,153,242,59,135,19,105,83,63,148,85,169,132,135,203,169,202,222,94,161,160,233,43,53,39,33,20,41,251,122,78,255,31,55,240,118,40,34,79,39,80,244,57,2,139,134,94,29,240,58,7,187,193,150,14,193,113,5,200,191,35,46,34,104,133,8,103,210,176,181,128,142,212,163,113,150,129,187,147,225,138,211,181,85,184,4,139,161,208,226,58,105,95,51,213,173,236,180,72,92,202,161,22,73,25,59,116,253,196,152,190,52,129,1,119,37,173,164,84,60,232,135,121,231,185,225,51,218,20,16,225,40,19,162,106,34,158,197,12,39,96,95,26,109,117,95,73,113,119,239,175,96,251,83,232,155,191,61,68,247,167,134,199,173,130,154,178,115,97,69,4,9,94,189,50,194,102,122,188,88,178,200,58,103,140,85,6,243,42,119,201,182,198,57,246,65,218,53,218,159,233,239,109,33,21,230,123,28,199,12,100,17,39,85,92,86,148,54,196,147,57,120,119,70,98,142,3,234,105,36,62,90,206,243,171,249,210,18,211,15,141,118,30,116,198,82,214,206,131,184,68,1,82,133,63,163,91,90,11,194,157,90,67,195,51,150,230,26,236,253,140,8,164,140,162,151,32,244,150,30,60,164,36,136,70,167,238,110,166,47,97,55,90,14,207,249,101,177,76,107,74,251,171,160,6,28,170,67,107,121,98,241,111,194,77,127,15,155,237,84,142,204,186,108,62,37,187,210,239,255,183,166,79,157,162,176,149,188,37,46,140,56,241,222,139,165,214,134,84,240,182,118,197,74,215,222,93,128,69,43,188,189,48,128,137,146,77,233,112,175,129,60,219,0,49,158,218,109,255,62,71,136,204,223,159,195,141,179,126,184,23,141,82,133,56,18,66,182,177,64,210,14,218,242,169,249,75,213,220,250,206,68,230,126,60,67,14,32,18,19,72,199,120,58,79,200,252,159,187,118,133,36,114,31,205,240,228,207,56,54,5,116,105,236,76,78,236,12,124,182,167,43,237,50,206,229,243,77,47,172,17,76,234,38,67,209,51,203,188,88,126,199,76,4,233,164,239,252,52,217,147,50,81,95,68,84,229,6,85,100,201,93,10,228,125,49,143,65,222,80,89,226,221,105,26,179,140,56,134,10,130,85,52,168,180,45,233,26,113,132,30,169,16,144,113,131,73,177,183,240,247,77,121,113,151,192,171,46,42,214,14,92,141,170,151,192,250,34,32,128,16,128,0,128,0,128,0,128,0,0,32,128,16,0,0,0,16,0,32,0,0,0,32,0,16,128,32,128,0,128,32,0,0,128,32,128,16,128,0,128,16,128,0,0,0,128,0,128,0,128,0,0,16,0,32,0,0,0,32,0,16,128,0,128,16,0,32,0,16,0,32,128,0,128,0,0,0,0,0,0,0,128,0,128,0,0,32,128,16,0,0,0,16,128,32,0,16,0,32,0,0,128,0,0,0,0,0,128,16,0,32,128,0,0,0,128,16,128,0,0,16,128,32,128,0,0,0,0,0,0,32,128,16,0,32,0,16,128,0,0,16,0,32,128,0,128,0,0,16,128,0,128,16,128,0,128,0,0,0,0,16,128,0,128,0,128,32,0,0,0,32,128,16,128,32,128,16,0,32,0,0,0,0,128,0,0,0,0,0,128,32,128,0,0,0,128,16,128,0,0,16,0,32,0,0,128,32,0,16,0,32,128,0,128,32,0,0,128,32,0,16,0,0,128,16,0,0,0,0,0,0,128,0,128,32,128,0,0,0,0,0,128,32,0,16,128,32,128,16,128,0,128,16,0,94,12,233,247,124,177,170,2,236,168,67,226,3,75,66,172,211,252,213,13,227,91,205,114,58,127,249,246,147,155,1,109,147,145,31,210,255,120,153,205,226,41,128,112,201,161,115,117,195,131,42,146,107,50,100,177,112,88,145,4,238,62,136,70,230,236,3,113,5,227,172,234,92,83,163,8,184,105,65,197,124,196,222,141,145,84,231,76,12,244,13,220,223,244,162,10,250,190,77,167,24,111,183,16,106,171,209,90,35,182,204,198,255,226,47,87,33,97,114,19,30,146,157,25,111,140,72,26,202,7,0,218,244,249,201,75,199,65,82,232,246,230,245,38,182,71,89,234,219,121,144,133,146,140,158,201,197,133,24,79,75,134,111,169,30,118,142,215,125,193,181,82,140,66,54,142,193,99,48,55,39,104,207,105,110,197,180,155,61,201,7,182,234,181,118,14,118,14,130,125,66,220,127,240,198,156,92,100,224,66,51,36,120,160,56,191,4,125,46,157,60,52,107,95,198,14,11,96,235,138,194,242,172,188,84,114,95,216,14,108,229,79,219,164,129,34,89,113,159,237,15,206,105,250,103,25,219,69,101,185,248,147,82,253,11,96,167,242,215,233,121,200,78,25,147,1,146,72,2,134,179,192,156,45,59,83,249,164,19,118,149,21,108,131,83,144,241,123,53,252,138,207,109,219,87,15,55,122,122,234,190,24,102,144,185,80,202,23,113,3,53,74,66,116,151,10,179,106,155,36,37,227,2,47,233,244,225,202,28,6,7,219,57,119,5,42,164,236,156,180,243,216,115,47,56,81,63,190,86,189,40,187,176,67,88,237,250,69,131,31,191,17,92,61,129,28,105,161,95,215,182,228,240,138,153,153,173,135,164,24,238,51,16,68,201,177,234,232,38,60,249,34,168,192,43,16,16,181,59,18,230,12,49,239,30,20,84,177,221,89,0,185,101,252,7,230,224,197,64,134,21,224,207,163,195,38,152,7,78,136,253,53,197,35,149,13,13,147,0,43,154,78,117,141,99,53,213,157,70,64,207,252,133,64,76,58,226,139,210,122,177,196,46,106,62,106,252,240,178,202,205,63,148,107,26,151,96,40,70,4,227,18,226,110,222,61,174,101,23,224,42,243,34,98,254,8,131,71,181,11,85,93,42,162,237,160,141,169,239,169,167,13,196,134,22,167,81,195,132,124,134,156,109,88,5,17,83,40,162,253,133,238,255,220,118,239,94,44,38,208,251,204,1,210,144,137,203,148,242,186,117,217,250,42,245,100,148,230,20,62,19,223,175,19,176,148,88,201,35,40,163,209,167,6,25,17,246,48,81,254,149,111,192,6,44,70,78,179,42,217,210,113,124,136,51,222,123,237,62,57,24,101,110,109,116,121,41,51,113,93,56,25,164,91,100,117,169,72,185,166,27,124,103,172,253,123,25,124,152,49,2,61,5,75,196,35,108,222,77,214,2,208,254,73,28,88,113,21,38,56,99,77,71,221,98,208,115,228,195,70,69,170,96,248,85,148,52,206,143,146,217,148,171,202,186,27,22,72,104,111,14,119,48,36,145,99,28,100,198,2,230,165,200,110,43,221,125,51,21,37,40,135,27,112,75,3,66,107,218,44,109,9,203,129,193,55,61,176,111,28,199,102,130,67,8,225,85,178,81,235,199,128,49,43,188,139,192,150,47,184,146,223,186,243,50,166,192,200,104,92,86,5,61,28,134,204,4,85,143,107,178,95,229,164,191,171,180,206,186,179,10,139,132,65,50,93,68,170,115,162,52,179,129,216,90,168,240,150,166,188,108,213,40,181,101,236,246,36,74,82,244,144,46,81,225,12,90,211,6,85,157,215,157,78,121,151,206,198,250,5,137,37,51,155,16,62,91,41,25,32,204,84,160,115,139,71,169,248,176,126,65,52,249,242,36,41,196,27,109,83,125,53,147,57,139,255,182,29,194,26,168,56,191,22,96,125,241,251,196,71,245,227,103,118,221,170,15,30,150,235,139,147,98,255,188,122,201,121,193,143,148,173,141,167,13,229,17,41,183,152,31,143,145,26,18,39,174,142,228,97,8,152,133,49,173,247,98,77,235,234,92,239,69,163,235,236,206,132,150,188,94,178,206,245,33,98,247,183,12,226,51,246,228,147,130,171,6,223,44,163,164,44,238,165,44,32,90,152,177,143,138,204,71,132,11,207,163,89,152,151,68,82,118,159,23,0,36,161,177,22,213,168,38,199,93,187,62,186,215,11,57,219,106,184,85,202,75,229,99,128,71,108,253,58,122,29,221,158,102,231,8,198,158,81,35,170,73,209,162,21,87,14,148,241,143,132,113,69,125,23,34,76,1,65,50,95,181,238,194,46,110,58,161,92,94,15,97,195,245,117,123,146,41,128,54,228,214,195,171,159,19,173,47,64,207,76,169,241,93,13,200,223,165,190,72,217,139,62,126,247,63,189,87,211,160,165,69,246,116,31,37,46,209,162,130,160,129,94,82,158,253,102,73,122,104,127,206,144,12,46,197,59,151,186,190,188,232,194,95,116,9,229,188,1,0,0,214,179,218,230,187,119,55,66,181,110,240,174,126,28,102,209,216,207,170,77,53,31,120,161,252,175,22,43,74,40,17,45,31,29,137,250,103,79,252,241,218,10,146,203,93,194,236,115,81,38,161,194,34,12,97,174,138,183,86,211,16,168,224,150,15,135,231,47,31,56,154,90,48,85,78,233,237,98,173,213,39,20,141,54,232,229,37,210,49,70,175,199,112,123,151,101,79,215,57,222,178,137,248,153,67,209,225,84,191,48,63,35,151,60,166,217,211,117,150,154,168,249,52,243,79,85,112,84,136,86,79,74,116,203,106,22,173,174,228,178,170,76,199,112,18,77,41,111,100,145,208,240,209,49,64,104,137,42,184,87,107,11,190,97,90,90,217,239,154,242,242,105,233,18,189,47,232,159,255,254,19,112,211,155,6,90,8,214,4,4,155,63,21,254,108,22,243,193,64,73,251,222,243,205,77,44,84,9,227,92,205,133,131,33,197,180,65,166,98,68,220,183,53,201,63,182,211,142,166,248,23,52,64,91,33,91,41,89,9,184,114,133,140,59,239,218,156,249,93,185,252,248,20,6,140,1,243,205,58,26,205,172,20,27,45,115,187,0,242,113,212,132,22,218,232,149,14,17,163,193,184,130,26,191,32,114,10,67,14,33,223,57,13,9,126,183,157,94,208,60,159,189,244,94,68,164,87,126,218,246,79,157,248,165,212,131,225,96,29,218,71,142,153,23,132,195,135,178,134,24,179,27,18,220,62,254,239,203,12,152,204,60,254,199,3,253,155,24,144,181,111,228,220,87,76,154,70,253,50,55,101,173,241,124,160,0,247,126,89,136,29,163,104,68,198,89,246,97,91,212,180,176,47,118,24,119,4,153,208,174,91,21,166,186,80,61,76,94,117,104,223,180,216,34,127,78,33,233,244,149,172,46,83,191,221,42,9,1,189,180,9,57,174,50,80,52,142,176,55,245,77,131,141,114,32,66,168,157,32,250,247,35,254,158,155,29,105,158,127,141,174,196,136,210,70,4,91,120,105,225,36,197,76,123,133,19,202,53,1,127,216,33,165,138,123,19,15,64,187,206,190,150,7,88,102,43,46,39,222,176,194,37,65,38,18,54,178,251,30,173,189,2,119,5,233,75,248,172,142,187,186,212,123,198,27,100,57,49,88,145,36,224,54,128,224,45,220,139,237,104,159,244,86,129,60,96,17,81,239,219,247,54,210,247,128,30,210,138,89,196,39,151,215,95,10,103,150,8,138,160,203,169,235,9,67,143,74,203,161,54,112,15,75,86,175,129,189,154,25,120,167,154,185,192,82,233,200,63,200,30,159,149,185,129,74,121,119,80,80,140,240,56,99,5,143,175,202,58,120,103,122,98,80,63,180,7,119,204,236,245,73,171,68,74,152,238,121,182,228,214,195,59,140,16,20,207,209,212,192,156,160,200,107,32,11,192,6,68,137,45,215,200,84,136,161,130,44,67,60,92,179,102,227,103,242,55,43,16,97,221,35,185,29,39,132,216,121,39,171,86,175,37,21,255,176,225,131,190,169,73,126,33,212,101,124,251,212,231,72,109,231,224,219,107,158,23,217,69,135,130,223,8,52,189,83,221,154,106,234,34,10,32,34,86,28,20,110,227,238,80,183,140,27,93,128,127,55,232,88,159,165,199,229,175,60,194,177,79,106,153,127,226,208,240,117,7,251,125,134,211,26,137,136,110,222,115,230,208,37,108,184,175,158,235,58,18,149,184,69,193,213,213,241,48,231,105,114,238,45,74,67,187,56,250,49,249,236,103,203,120,156,191,59,50,114,3,59,243,116,156,39,251,54,99,214,82,170,78,251,10,172,51,95,80,135,225,204,162,153,205,165,232,187,48,45,30,128,116,73,83,144,109,135,213,17,87,45,141,142,3,188,145,40,65,26,31,72,102,229,130,29,231,226,214,183,50,119,73,58,108,3,116,171,245,97,99,217,126,182,137,162,2,234,241,216,149,237,255,61,212,100,20,214,59,43,231,32,72,220,11,23,15,48,166,122,167,120,237,96,135,193,235,0,4,1,1,0,0,0,0,0,0,1,0,4,4,1,1,4,0,1,1,4,4,1,0,4,0,0,0,0,0,1,0,0,4,0,0,0,4,1,1,4,4,1,1,0,4,0,0,4,4,0,1,4,0,1,1,0,0,0,1,4,0,0,0,4,4,0,0,0,4,0,1,0,4,0,1,0,4,1,0,0,4,1,0,0,0,1,1,0,0,1,1,4,4,0,1,4,0,1,0,4,0,0,1,4,0,0,1,4,0,1,0,0,0,0,0,4,4,0,0,4,4,1,0,0,0,0,1,0,0,1,0,4,4,1,1,4,0,0,0,0,0,1,1,0,4,1,1,0,0,0,1,0,0,0,1,0,4,0,0,4,0,1,1,0,0,1,0,0,4,1,0,4,0,0,1,0,4,0,0,4,0,0,0,4,4,0,1,4,4,1,0,4,4,1,1,4,0,1,0,0,0,1,1,4,4,0,1,4,0,0,1,4,4,0,0,4,4,1,0,0,4,1,1,4,4,0,0,0,4,0,1,0,4,0,1,0,0,0,0,4,0,1,0,0,4,1,0,0,0,0,0,4,0,1,1,40,112,114,105,118,97,116,101,45,107,101,121,32,40,100,115,97,32,32,40,112,32,35,48,48,65,68,55,67,48,48,50,53,66,65,49,65,49,53,70,55,55,53,70,51,70,50,68,54,55,51,55,49,56,51,57,49,68,48,48,52,53,54,57,55,56,68,51,52,55,66,51,51,68,55,66,52,57,69,55,70,51,50,69,68,65,66,32,32,32,32,32,32,57,54,50,55,51,56,57,57,68,68,56,66,50,66,66,52,54,67,68,54,69,67,65,50,54,51,70,65,70,48,52,65,50,56,57,48,51,53,48,51,68,53,57,48,54,50,65,56,56,54,53,68,50,65,69,56,65,68,70,66,53,49,57,49,32,32,32,32,32,32,67,70,51,54,70,70,66,53,54,50,68,48,69,50,70,53,56,48,57,56,48,49,65,49,70,54,55,53,68,65,69,53,57,54,57,56,65,57,69,48,49,69,70,69,56,68,55,68,67,70,67,65,48,56,52,70,52,67,54,70,53,65,52,52,32,32,32,32,32,32,52,52,68,52,57,57,65,48,54,70,70,65,69,65,53,69,56,69,70,53,69,48,49,70,50,70,68,50,48,65,55,66,55,69,70,51,70,54,57,54,56,65,70,66,65,49,70,66,56,68,57,49,70,49,53,53,57,68,53,50,68,56,55,55,55,66,35,41,32,32,40,113,32,35,48,48,69,66,55,66,53,55,53,49,68,50,53,69,66,66,66,55,66,68,53,57,68,57,50,48,51,49,53,70,68,56,52,48,69,49,57,65,69,66,70,57,35,41,32,32,40,103,32,35,49,53,55,52,51,54,51,51,56,55,70,68,70,68,49,68,68,70,51,56,70,52,70,66,69,49,51,53,66,66,50,48,67,55,69,69,52,55,55,50,70,66,57,52,67,51,51,55,65,70,56,54,69,65,56,69,52,57,54,54,54,53,48,51,32,32,32,32,32,32,65,69,48,52,66,54,66,69,56,49,65,50,70,56,68,68,48,57,53,51,49,49,69,48,50,49,55,65,67,65,54,57,56,65,49,49,69,54,67,53,68,51,51,67,67,68,65,69,55,49,52,57,56,69,68,51,53,68,49,51,57,57,49,69,32,32,32,32,32,32,66,48,50,70,48,57,65,66,52,48,66,68,56,70,52,67,53,69,68,56,67,55,53,68,65,55,55,57,68,48,65,69,49,48,52,66,67,51,52,67,57,54,48,66,48,48,50,51,55,55,48,54,56,65,66,52,66,53,65,49,70,57,56,52,32,32,32,32,32,32,51,70,66,65,57,49,70,53,51,55,70,49,66,55,67,65,67,52,68,56,68,68,54,68,56,57,66,48,68,56,54,51,65,70,55,48,50,53,68,53,52,57,70,57,67,55,54,53,68,50,70,67,48,55,69,69,50,48,56,70,56,68,49,53,35,41,32,32,40,121,32,35,54,52,66,49,49,69,70,56,56,55,49,66,69,52,65,66,53,55,50,65,65,56,49,48,68,53,68,51,67,65,49,49,65,54,67,68,66,67,54,51,55,65,56,48,49,52,54,48,50,67,55,50,57,54,48,68,66,49,51,53,66,70,52,54,32,32,32,32,32,32,65,49,56,49,54,65,55,50,52,67,51,52,70,56,55,51,51,48,70,67,57,69,49,56,55,67,53,68,54,54,56,57,55,65,48,52,53,51,53,67,67,50,65,67,57,49,54,52,65,55,49,53,48,65,66,70,65,56,49,55,57,56,50,55,32,32,32,32,32,32,54,69,52,53,56,51,49,65,66,56,49,49,69,69,69,56,52,56,69,66,66,50,52,68,57,70,53,70,50,56,56,51,66,54,69,53,68,68,67,52,67,54,53,57,68,69,70,57,52,52,68,67,70,68,56,48,66,70,52,68,48,65,50,48,32,32,32,32,32,32,52,50,67,65,65,55,68,67,50,56,57,70,48,67,53,65,57,68,49,53,53,70,48,50,68,51,68,53,53,49,68,66,55,52,49,65,56,49,54,57,53,66,55,52,68,52,67,56,70,52,55,55,70,57,67,55,56,51,56,69,66,48,70,66,35,41,32,32,40,120,32,35,49,49,68,53,52,69,52,65,68,66,68,51,48,51,52,49,54,48,70,50,67,69,68,52,66,55,67,68,50,57,50,65,52,69,66,70,51,69,67,48,35,41,41,41,0,0,0,40,112,114,105,118,97,116,101,45,107,101,121,32,40,114,115,97,32,32,40,110,32,35,48,48,101,48,99,101,57,54,102,57,48,98,54,99,57,101,48,50,102,51,57,50,50,98,101,97,100,97,57,51,102,101,53,48,97,56,55,53,101,97,99,54,98,99,99,49,56,98,98,57,97,57,99,102,50,101,56,52,57,54,53,99,97,97,32,32,32,32,32,32,50,100,49,102,102,57,53,97,55,102,53,52,50,52,54,53,99,54,99,48,99,49,57,100,50,55,54,101,52,53,50,54,99,101,48,52,56,56,54,56,97,55,97,57,49,52,102,100,51,52,51,99,99,51,97,56,55,100,100,55,52,50,57,49,32,32,32,32,32,32,102,102,99,53,54,53,53,48,54,100,53,98,98,98,50,53,99,98,97,99,54,97,48,101,50,100,100,49,102,56,98,99,97,97,98,48,100,52,97,50,57,99,50,102,51,55,99,57,53,48,102,51,54,51,52,56,52,98,102,50,54,57,102,55,32,32,32,32,32,32,56,57,49,52,52,48,52,54,52,98,97,102,55,57,56,50,55,101,48,51,97,51,54,101,55,48,98,56,49,52,57,51,56,101,101,98,100,99,54,51,101,57,54,52,50,52,55,98,101,55,53,100,99,53,56,98,48,49,52,98,55,101,97,50,53,49,35,41,32,32,40,101,32,35,48,49,48,48,48,49,35,41,32,32,40,100,32,35,48,52,54,49,50,57,102,50,52,56,57,100,55,49,53,55,57,98,101,48,97,55,53,102,101,48,50,57,98,100,54,99,100,98,53,55,52,101,98,102,53,55,101,97,56,97,53,98,48,102,100,97,57,52,50,99,97,98,57,52,51,98,49,49,32,32,32,32,32,32,55,100,55,98,98,57,53,101,53,100,50,56,56,55,53,101,48,102,57,102,99,53,102,99,99,48,54,97,55,50,102,54,100,53,48,50,52,54,52,100,97,98,100,101,100,55,56,101,102,54,98,55,49,54,49,55,55,98,56,51,100,53,98,100,32,32,32,32,32,32,99,53,52,51,100,99,53,100,51,102,101,100,57,51,50,101,53,57,102,53,56,57,55,101,57,50,101,54,102,53,56,97,48,102,51,51,52,50,52,49,48,54,97,51,98,54,102,97,50,99,98,102,56,55,55,53,49,48,101,52,97,99,50,49,32,32,32,32,32,32,99,51,101,101,52,55,56,53,49,101,57,55,100,49,50,57,57,54,50,50,50,97,99,51,53,54,54,100,52,99,99,98,48,98,56,51,100,49,54,52,48,55,52,97,98,102,55,100,101,54,53,53,102,99,50,52,52,54,100,97,49,55,56,49,35,41,32,32,40,112,32,35,48,48,101,56,54,49,98,55,48,48,101,49,55,101,56,97,102,101,54,56,51,55,101,55,53,49,50,101,51,53,98,54,99,97,49,49,100,48,97,101,52,55,100,56,98,56,53,49,54,49,99,54,55,98,97,102,54,52,51,55,55,50,49,51,32,32,32,32,32,32,102,101,53,50,100,55,55,50,102,50,48,51,53,98,51,99,97,56,51,48,97,102,52,49,100,56,97,52,49,50,48,101,49,99,49,99,55,48,100,49,50,99,99,50,50,102,48,48,100,50,56,100,51,49,100,100,52,56,97,56,100,52,50,52,102,49,35,41,32,32,40,113,32,35,48,48,102,55,97,55,99,97,53,51,54,55,99,54,54,49,102,56,101,54,50,100,102,51,52,102,48,100,48,53,99,49,48,99,56,56,101,53,52,57,50,51,52,56,100,100,55,98,100,100,99,57,52,50,99,57,97,56,102,51,54,57,102,57,32,32,32,32,32,32,51,53,97,48,55,55,56,53,100,50,100,98,56,48,53,50,49,53,101,100,55,56,54,101,52,50,56,53,100,102,49,54,53,56,101,101,100,51,99,101,56,52,102,52,54,57,98,56,49,98,53,48,100,51,53,56,52,48,55,98,52,97,100,51,54,49,35,41,32,32,40,117,32,35,51,48,52,53,53,57,97,57,101,97,100,53,54,100,50,51,48,57,100,50,48,51,56,49,49,97,54,52,49,98,98,49,97,48,57,54,50,54,98,99,56,101,98,51,54,102,102,102,97,50,51,99,57,54,56,101,99,53,98,100,56,57,49,101,32,32,32,32,32,32,101,98,98,97,102,99,55,51,97,101,54,54,54,101,48,49,98,97,55,99,56,57,57,48,98,97,101,48,54,99,99,50,98,98,101,49,48,98,55,53,101,54,57,102,99,97,99,98,51,53,51,97,54,52,55,51,48,55,57,100,56,101,57,98,35,41,41,41,0,0,0,40,112,117,98,108,105,99,45,107,101,121,32,40,100,115,97,32,32,40,112,32,35,48,48,65,68,55,67,48,48,50,53,66,65,49,65,49,53,70,55,55,53,70,51,70,50,68,54,55,51,55,49,56,51,57,49,68,48,48,52,53,54,57,55,56,68,51,52,55,66,51,51,68,55,66,52,57,69,55,70,51,50,69,68,65,66,32,32,32,32,32,32,57,54,50,55,51,56,57,57,68,68,56,66,50,66,66,52,54,67,68,54,69,67,65,50,54,51,70,65,70,48,52,65,50,56,57,48,51,53,48,51,68,53,57,48,54,50,65,56,56,54,53,68,50,65,69,56,65,68,70,66,53,49,57,49,32,32,32,32,32,32,67,70,51,54,70,70,66,53,54,50,68,48,69,50,70,53,56,48,57,56,48,49,65,49,70,54,55,53,68,65,69,53,57,54,57,56,65,57,69,48,49,69,70,69,56,68,55,68,67,70,67,65,48,56,52,70,52,67,54,70,53,65,52,52,32,32,32,32,32,32,52,52,68,52,57,57,65,48,54,70,70,65,69,65,53,69,56,69,70,53,69,48,49,70,50,70,68,50,48,65,55,66,55,69,70,51,70,54,57,54,56,65,70,66,65,49,70,66,56,68,57,49,70,49,53,53,57,68,53,50,68,56,55,55,55,66,35,41,32,32,40,113,32,35,48,48,69,66,55,66,53,55,53,49,68,50,53,69,66,66,66,55,66,68,53,57,68,57,50,48,51,49,53,70,68,56,52,48,69,49,57,65,69,66,70,57,35,41,32,32,40,103,32,35,49,53,55,52,51,54,51,51,56,55,70,68,70,68,49,68,68,70,51,56,70,52,70,66,69,49,51,53,66,66,50,48,67,55,69,69,52,55,55,50,70,66,57,52,67,51,51,55,65,70,56,54,69,65,56,69,52,57,54,54,54,53,48,51,32,32,32,32,32,32,65,69,48,52,66,54,66,69,56,49,65,50,70,56,68,68,48,57,53,51,49,49,69,48,50,49,55,65,67,65,54,57,56,65,49,49,69,54,67,53,68,51,51,67,67,68,65,69,55,49,52,57,56,69,68,51,53,68,49,51,57,57,49,69,32,32,32,32,32,32,66,48,50,70,48,57,65,66,52,48,66,68,56,70,52,67,53,69,68,56,67,55,53,68,65,55,55,57,68,48,65,69,49,48,52,66,67,51,52,67,57,54,48,66,48,48,50,51,55,55,48,54,56,65,66,52,66,53,65,49,70,57,56,52,32,32,32,32,32,32,51,70,66,65,57,49,70,53,51,55,70,49,66,55,67,65,67,52,68,56,68,68,54,68,56,57,66,48,68,56,54,51,65,70,55,48,50,53,68,53,52,57,70,57,67,55,54,53,68,50,70,67,48,55,69,69,50,48,56,70,56,68,49,53,35,41,32,32,40,121,32,35,54,52])
.concat([66,49,49,69,70,56,56,55,49,66,69,52,65,66,53,55,50,65,65,56,49,48,68,53,68,51,67,65,49,49,65,54,67,68,66,67,54,51,55,65,56,48,49,52,54,48,50,67,55,50,57,54,48,68,66,49,51,53,66,70,52,54,32,32,32,32,32,32,65,49,56,49,54,65,55,50,52,67,51,52,70,56,55,51,51,48,70,67,57,69,49,56,55,67,53,68,54,54,56,57,55,65,48,52,53,51,53,67,67,50,65,67,57,49,54,52,65,55,49,53,48,65,66,70,65,56,49,55,57,56,50,55,32,32,32,32,32,32,54,69,52,53,56,51,49,65,66,56,49,49,69,69,69,56,52,56,69,66,66,50,52,68,57,70,53,70,50,56,56,51,66,54,69,53,68,68,67,52,67,54,53,57,68,69,70,57,52,52,68,67,70,68,56,48,66,70,52,68,48,65,50,48,32,32,32,32,32,32,52,50,67,65,65,55,68,67,50,56,57,70,48,67,53,65,57,68,49,53,53,70,48,50,68,51,68,53,53,49,68,66,55,52,49,65,56,49,54,57,53,66,55,52,68,52,67,56,70,52,55,55,70,57,67,55,56,51,56,69,66,48,70,66,35,41,41,41,0,0,0,0,40,112,117,98,108,105,99,45,107,101,121,32,40,114,115,97,32,32,40,110,32,35,48,48,101,48,99,101,57,54,102,57,48,98,54,99,57,101,48,50,102,51,57,50,50,98,101,97,100,97,57,51,102,101,53,48,97,56,55,53,101,97,99,54,98,99,99,49,56,98,98,57,97,57,99,102,50,101,56,52,57,54,53,99,97,97,32,32,32,32,32,32,50,100,49,102,102,57,53,97,55,102,53,52,50,52,54,53,99,54,99,48,99,49,57,100,50,55,54,101,52,53,50,54,99,101,48,52,56,56,54,56,97,55,97,57,49,52,102,100,51,52,51,99,99,51,97,56,55,100,100,55,52,50,57,49,32,32,32,32,32,32,102,102,99,53,54,53,53,48,54,100,53,98,98,98,50,53,99,98,97,99,54,97,48,101,50,100,100,49,102,56,98,99,97,97,98,48,100,52,97,50,57,99,50,102,51,55,99,57,53,48,102,51,54,51,52,56,52,98,102,50,54,57,102,55,32,32,32,32,32,32,56,57,49,52,52,48,52,54,52,98,97,102,55,57,56,50,55,101,48,51,97,51,54,101,55,48,98,56,49,52,57,51,56,101,101,98,100,99,54,51,101,57,54,52,50,52,55,98,101,55,53,100,99,53,56,98,48,49,52,98,55,101,97,50,53,49,35,41,32,32,40,101,32,35,48,49,48,48,48,49,35,41,41,41,0,0,0,0,13,48,22,226,252,255,221,187,189,218,235,167,149,128,100,53,183,248,137,119,27,18,193,230,0,22,36,14,181,232,44,5,176,207,169,17,17,47,149,229,10,153,231,236,116,209,134,147,28,147,66,42,17,129,227,118,58,239,45,177,252,221,221,55,177,222,154,222,44,195,12,10,41,112,25,190,64,9,160,132,15,58,36,187,207,55,209,180,240,121,78,180,253,237,158,4,93,161,21,11,104,49,13,72,90,222,187,139,66,237,157,102,49,232,236,199,231,149,143,63,27,25,223,114,13,51,128,117,81,66,7,148,250,205,125,92,99,109,190,171,100,33,64,170,10,212,1,179,202,209,231,2,174,29,87,83,162,130,49,122,236,221,168,18,93,51,170,253,232,67,111,23,212,70,251,113,34,144,18,56,212,154,148,206,173,105,71,184,98,216,91,150,85,208,243,130,103,151,251,102,78,11,184,21,160,71,91,29,111,224,253,76,184,196,142,194,110,114,232,87,252,120,122,100,68,93,134,153,147,213,139,96,3,14,32,108,246,95,220,57,163,0,11,93,242,175,99,174,50,214,139,126,12,140,16,112,73,80,211,187,4,223,152,41,42,244,12,152,145,244,109,155,83,221,126,158,72,133,145,6,7,126,203,88,46,239,116,59,177,255,47,82,204,8,71,210,205,39,126,28,91,33,235,164,226,210,241,60,56,122,180,25,24,118,79,66,57,96,133,53,231,222,23,157,230,53,235,39,123,246,175,201,184,245,186,54,205,103,196,9,177,16,137,193,123,191,29,225,248,26,205,6,8,198,112,113,84,51,94,45,90,73,222,212,6,208,198,100,44,198,192,188,179,13,208,61,52,143,143,112,66,27,213,119,15,98,79,38,191,210,184,36,158,183,193,21,100,37,165,70,78,229,215,248,96,129,55,62,165,205,149,120,165,21,156,133,136,151,69,230,95,199,123,195,12,186,7,219,171,163,118,6,30,155,34,127,123,46,132,49,215,159,37,36,114,244,190,248,184,252,95,131,242,193,244,109,149,177,245,150,252,240,10,253,76,19,254,176,61,109,80,226,234,18,155,79,37,242,21,242,111,115,35,162,40,196,180,159,121,73,208,37,248,19,199,52,135,129,97,196,152,110,122,234,252,110,209,124,108,135,54,20,7,65,84,241,20,238,222,190,39,175,233,86,65,164,74,160,153,200,247,60,230,186,236,146,109,1,103,221,235,130,22,21,223,238,66,168,180,96,186,253,117,123,144,241,15,3,227,32,158,194,216,36,59,103,57,225,184,63,166,239,84,48,135,113,59,207,242,182,66,100,50,159,204,164,21,203,4,69,26,176,141,125,228,241,229,27,74,132,220,223,231,186,112,218,203,66,10,174,125,205,122,91,232,87,246,90,63,213,140,77,207,32,40,212,164,206,164,48,209,121,251,235,134,52,220,205,211,51,83,59,133,119,181,252,239,55,120,135,6,197,230,179,128,229,244,184,104,78,126,179,200,197,162,158,128,13,124,235,143,57,148,79,42,19,14,149,183,67,28,125,238,47,189,19,54,34,162,202,6,221,43,147,223,55,137,130,36,196,195,235,243,172,183,246,21,87,221,120,52,239,111,97,103,242,228,203,72,193,94,129,82,144,171,15,65,94,101,36,138,180,164,127,218,46,228,64,123,232,132,160,142,233,225,233,137,88,252,144,211,239,91,211,7,221,148,86,72,219,178,229,215,56,1,1,114,87,188,222,14,115,19,49,100,91,79,126,145,148,186,47,60,80,130,18,111,100,74,210,35,117,149,150,119,224,143,122,193,249,33,33,91,122,150,184,135,209,77,58,38,41,223,12,81,186,159,124,244,129,237,99,17,173,101,89,123,234,110,114,0,26,146,48,64,17,119,109,218,0,97,221,12,74,3,70,31,173,176,223,91,96,100,195,237,158,168,230,235,34,138,210,231,206,160,54,231,160,185,166,100,85,9,50,133,16,55,143,235,199,202,5,231,45,15,87,81,137,43,130,9,223,108,26,105,189,242,228,18,170,15,28,69,135,122,162,246,224,25,72,218,58,79,118,241,76,43,28,119,13,86,177,205,103,132,131,13,53,15,250,56,89,243,158,57,66,7,123,153,54,61,9,132,14,97,62,169,74,123,216,96,131,12,139,169,31,44,56,73,17,165,37,118,233,183,209,20,6,75,36,37,14,71,131,118,12,130,141,158,88,209,89,32,13,30,187,102,164,130,10,218,248,48,145,241,4,192,78,110,186,100,81,38,153,13,35,231,30,128,173,178,80,1,104,238,234,131,162,178,141,158,245,139,234,25,64,224,133,103,245,43,51,255,191,45,102,147,86,198,207,111,127,141,42,18,201,155,171,161,8,96,222,31,218,40,32,231,188,39,2,22,41,100,77,0,195,250,24,130,139,241,80,17,203,178,44,92,231,50,178,242,149,54,75,222,7,135,178,246,188,95,160,233,129,65,205,12,33,80,225,189,241,78,226,129,195,104,177,137,231,228,253,216,176,121,92,67,253,139,30,1,80,73,77,65,67,190,56,29,238,60,145,63,156,167,146,190,102,151,8,244,173,238,186,207,190,134,18,25,203,234,182,0,194,96,38,228,189,101,117,122,31,36,100,169,220,72,130,102,173,179,195,134,96,19,40,168,223,216,11,242,28,109,53,190,137,119,16,206,233,178,179,143,170,2,5,30,53,192,11,42,245,107,22,130,255,18,235,17,105,72,227,22,117,77,211,255,58,123,78,27,103,67,95,55,224,246,156,131,172,129,73,206,102,66,51,183,65,147,140,192,84,216,208,136,108,58,203,41,40,188,71,55,186,37,71,43,210,106,166,30,31,214,122,250,186,92,12,7,241,55,68,98,153,231,182,22,216,210,66,136,18,150,10,110,192,165,225,103,158,116,19,26,8,252,114,247,57,209,177,69,55,88,249,88,223,25,207,86,247,195,190,48,186,110,192,36,27,33,7,41,136,194,69,127,49,94,201,17,197,142,188,233,70,188,56,20,250,230,198,74,88,232,186,70,188,78,173,139,80,143,70,95,67,41,120,59,24,36,241,159,186,29,130,244,15,246,175,109,78,44,234,100,146,227,22,139,74,84,146,195,79,155,0,237,140,166,171,120,111,201,154,154,183,165,6,110,110,133,178,169,60,236,26,136,134,131,190,233,4,8,14,86,190,241,85,59,54,229,231,93,242,161,179,133,187,222,247,60,3,254,97,51,98,116,22,40,76,3,60,116,12,109,218,108,197,170,121,173,225,228,60,2,200,240,81,90,243,248,152,159,164,38,22,41,43,216,238,227,47,56,29,154,185,79,12,120,87,50,187,123,217,198,62,169,166,119,110,92,139,101,203,199,48,82,212,139,64,209,43,183,62,192,96,120,141,6,185,244,84,55,163,125,200,48,244,2,19,167,200,50,140,109,185,190,231,212,235,45,157,139,190,6,251,121,121,8,83,34,231,119,207,117,139,164,141,239,17,88,200,131,224,111,120,107,141,166,23,99,90,160,247,92,250,51,0,218,93,176,191,142,242,16,195,185,245,128,194,234,160,122,118,185,8,176,210,217,163,23,66,211,121,141,113,26,2,106,51,198,154,96,253,17,39,227,80,128,67,168,8,153,6,196,237,127,61,239,43,109,130,118,132,235,78,37,207,141,72,102,213,201,54,65,78,231,40,202,10,97,194,207,169,73,61,223,185,227,186,230,141,95,182,100,175,174,146,230,213,199,58,9,5,168,158,125,1,43,242,112,63,23,164,195,22,30,221,249,215,224,21,135,184,177,80,213,79,159,43,130,186,90,98,98,121,1,106,156,27,192,46,169,138,72,21,64,231,22,215,44,90,5,64,34,154,210,147,154,191,45,227,185,69,135,5,30,220,83,52,110,41,153,214,111,255,108,73,134,73,159,28,7,237,226,223,209,66,114,184,174,126,222,25,26,86,62,5,140,111,173,21,28,108,98,102,76,194,84,113,42,43,8,234,57,41,235,147,240,176,220,23,174,242,212,88,251,148,162,158,76,86,207,82,102,254,131,152,129,5,196,46,195,83,57,118,46,105,214,1,8,193,160,211,14,22,231,161,166,223,242,228,133,210,62,105,152,70,144,116,221,14,43,76,86,118,117,79,120,51,57,93,79,35,50,161,93,28,50,61,148,225,245,195,1,147,38,75,47,2,159,199,126,126,153,60,4,149,79,94,189,251,250,63,14,173,247,118,244,147,102,41,111,206,31,61,190,69,30,198,52,171,181,211,183,249,43,247,192,52,4,27,103,181,114,78,61,163,146,85,1,147,34,181,127,168,210,207,103,183,174,96,107,56,20,24,61,195,188,48,125,192,160,56,242,6,22,253,155,81,99,195,144,211,157,88,230,248,121,84,71,214,184,28,169,97,253,151,244,89,119,234,157,83,87,45,207,88,154,86,173,99,78,232,120,27,46,70,126,248,128,101,20,121,129,243,244,85,218,145,243,48,162,64,53,143,152,209,210,24,227,182,188,80,250,63,33,240,64,61,174,189,192,195,76,194,88,73,178,54,143,81,112,211,177,132,131,206,237,15,218,218,141,135,199,121,162,242,232,27,224,148,75,111,113,144,163,138,75,149,157,143,250,246,225,108,172,44,103,72,163,76,124,127,51,226,231,8,219,149,180,67,104,1,188,92,237,236,172,83,85,50,96,9,159,191,237,226,161,223,157,87,240,131,185,134,237,99,184,166,182,26,57,190,94,222,50,247,143,243,56,177,137,137,97,73,241,51,189,55,25,192,218,198,6,245,126,94,98,228,153,234,8,163,60,227,35,78,204,215,203,121,103,67,161,72,25,150,20,163,213,75,201,254,74,23,20,161,102,24,160,234,45,219,132,160,111,72,168,9,74,97,136,168,152,175,0,41,145,89,102,1,99,40,153,225,96,12,243,200,60,239,120,46,50,25,213,208,20,236,15,207,210,7,202,247,114,32,168,208,126,25,65,253,176,166,5,147,218,227,107,232,205,211,190,116,60,165,45,55,72,68,127,76,64,212,181,218,195,14,186,109,167,25,57,8,217,238,186,159,176,207,219,73,83,12,103,78,1,156,61,92,65,185,189,100,106,99,14,44,205,217,125,186,136,115,111,234,98,199,11,231,219,154,242,53,141,221,76,92,140,141,212,240,226,83,129,184,102,152,161,8,200,234,226,26,137,175,76,40,35,130,146,170,83,190,52,147,191,33,58,59,227,75,67,22,6,57,234,154,110,195,232,239,217,205,144,248,174,109,34,128,163,164,64,195,9,156,126,223,7,168,148,166,204,94,124,91,166,179,29,34,47,160,105,154,84,138,129,104,111,41,178,206,58,132,192,83,85,54,137,254,138,230,191,37,188,138,98,180,191,46,34,207,72,111,172,37,135,147,169,169,101,219,189,83,231,251,111,231,120,253,103,233,99,53,169,11,193,43,52,142,233,27,161,232,13,116,128,73,252,125,8,200,153,191,228,141,160,1,17,161,117,121,211,127,192,38,90,218,79,153,31,232,137,205,40,149,237,159,51,253,191,52,120,184,109,69,4,95,152,134,37,34,59,200,196,201,190,86,193,45,170,141,98,79,197,94,245,87,190,10,34,226,191,110,145,210,149,91,199,78,192,195,242,36,153,93,209,66,160,127,13,205,255,39,110,123,240,138,220,168,6,193,69,115,47,35,30,244,134,35,22,53,38,137,234,230,148,176,51,51,242,198,126,21,175,116,43,55,228,115,37,105,72,216,169,233,137,2,22,243,29,239,98,58,56,226,135,167,118,246,165,243,83,72,54,116,99,16,149,32,141,105,118,69,7,212,250,182,80,249,42,89,35,53,247,54,135,110,251,76,192,206,164,125,170,45,21,108,168,150,3,203,93,254,13,197,171,7,215,252,47,196,33,9,187,240,223,137,120,190,226,95,51,79,143,68,201,19,70,117,141,208,5,43,133,213,185,72,65,148,4,220,155,143,9,200,134,231,237,125,115,51,154,195,5,0,65,66,81,23,9,106,166,200,243,14,214,114,0,137,130,118,32,40,190,247,169,169,157,103,50,191,117,91,91,212,0,253,83,179,88,227,176,203,10,34,15,131,20,178,143,31,8,207,114,211,19,74,60,204,102,49,246,140,190,135,28,6,136,143,201,136,151,227,98,96,122,142,207,71,131,82,200,182,251,172,194,60,118,105,192,63,82,2,143,78,77,49,216,100,227,112,56,218,89,84,102,30,240,8,9,193,165,33,48,81,183,104,91,108,160,138,47,130,62,205,7,48,239,158,113,116,129,38,135,220,212,64,51,7,217,47,67,126,65,194,94,12,108,40,9,136,145,216,146,245,246,48,169,8,5,243,126,149,189,255,251,183,111,233,102,194,152,172,228,111,192,236,115,177,42,180,96,188,218,152,52,149,18,174,161,251,54,215,75,45,171,250,37,15,235,252,243,164,35,145,150,226,61,12,127,37,73,175,72,147,188,0,20,54,74,111,129,232,0,242,20,56,67,64,249,163,194,84,122,156,87,79,112,188,249,231,65,218,58,211,90,194,132,160,244,84,5,85,127,177,190,124,53,89,200,21,189,237,171,197,151,127,181,199,90,186,175,222,246,182,58,156,71,58,37,218,2,83,106,126,61,101,73,141,38,84,234,119,164,81,91,213,23,80,136,93,210,215,118,108,19,68,200,168,4,4,33,161,229,184,138,146,26,184,105,88,237,96,150,91,197,151,27,153,236,234,19,89,147,41,241,183,253,1,250,141,142,8,245,246,182,154,159,191,76,59,171,227,93,74,53,29,5,230,85,216,225,160,241,76,107,211,235,237,68,245,36,53,233,176,189,143,187,190,207,98,215,162,84,47,201,73,49,243,181,56,84,164,40,113,5,41,57,72,184,29,91,166,189,151,28,133,47,207,117,214,4,12,201,126,185,116,110,44,223,102,14,155,17,121,51,166,255,127,106,184,245,88,211,29,68,157,221,68,127,22,49,23,250,241,251,8,204,17,245,231,0,27,5,210,0,186,90,115,216,34,183,42,203,129,99,56,58,36,246,172,122,253,190,105,127,231,162,230,205,32,199,240,22,72,73,196,128,193,245,204,64,22,133,56,72,168,176,21,203,24,139,230,255,222,170,76,1,10,72,95,170,178,18,4,252,20,152,37,226,239,208,65,141,180,64,78,251,182,142,36,254,28,186,141,2,155,169,65,4,10,85,26,203,101,143,186,231,244,81,114,37,23,165,149,215,236,6,193,10,152,165,151,170,185,57,197,106,254,121,77,99,247,243,242,64,128,175,104,86,158,12,237,139,149,180,17,136,90,235,225,176,230,9,135,86,113,224,215,167,254,41,78,45,229,102,99,0,192,209,2,5,142,172,196,113,245,119,147,42,55,5,12,242,53,133,87,2,190,97,34,201,160,66,214,128,162,19,223,210,91,181,116,192,153,33,104,236,229,33,212,232,60,251,83,179,237,173,200,201,127,168,40,129,153,149,61,0,249,31,92,153,211,56,254,11,255,78,12,234,7,36,6,177,79,47,170,118,105,185,79,5,149,199,144,116,167,168,176,255,161,85,239,194,162,156,229,39,45,182,166,99,66,106,230,31,0,101,223,102,9,197,14,188,85,221,223,85,6,222,41,154,115,30,145,117,137,175,23,28,145,199,50,104,148,248,137,128,233,1,13,244,85,71,82,201,60,182,3,178,68,200,12,170,240,243,188,233,54,172,135,38,116,58,229,43,216,179,1,73,116,158,26,126,45,238,100,218,177,219,205,16,73,201,1,128,191,104,184,253,243,38,13,231,237,66,147,132,194,165,4,182,55,103,99,22,182,245,80,227,102,71,242,193,54,202,142,219,5,110,19,145,131,241,254,55,122,136,251,212,247,231,214,201,125,251,199,223,252,99,48,222,137,245,182,218,65,41,236,149,102,228,38,25,100,86,183,197,239,84,246,183,88,141,208,1,84,146,72,127,203,186,193,15,85,255,229,73,48,8,182,232,208,181,91,90,46,215,135,225,110,106,171,206,102,58,34,205,243,43,198,249,133,8,158,71,62,203,104,15,1,108,8,32,232,29,162,222,105,139,209,119,87,246,243,246,195,2,250,195,218,126,64,80,213,179,203,77,8,147,23,186,14,215,176,213,120,179,10,12,251,81,217,86,218,215,222,228,187,36,65,86,11,202,148,209,85,87,15,110,229,225,224,190,181,132,97,159,36,10,88,192,75,247,148,142,136,39,227,97,85,123,159,128,2,220,195,21,119,104,5,215,107,108,100,179,77,144,68,163,240,180,102,138,100,241,192,175,213,126,105,246,47,233,73,79,55,158,48,106,53,182,44,115,133,128,133,64,248,145,73,2,174,240,118,77,232,59,8,154,28,66,40,6,148,72,68,184,76,110,115,16,41,9,193,198,95,201,139,244,156,134,125,111,97,79,19,141,17,119,46,225,43,27,179,114,180,144,170,23,215,165,60,186,27,22,125,16,144,173,156,162,43,70,175,210,89,228,159,89,69,211,69,19,218,242,217,135,84,198,219,78,249,228,243,111,72,109,23,234,19,124,9,199,165,29,99,130,115,95,68,244,131,86,23,151,106,198,205,136,2,190,112,114,207,205,179,243,210,93,110,121,96,147,32,165,128,155,69,219,226,96,190,1,49,194,169,92,49,165,235,242,66,78,34,114,21,92,28,44,27,114,246,243,255,210,26,78,64,37,140,47,215,78,50,253,183,103,64,142,19,35,5,120,188,163,92,110,214,15,220,131,34,146,117,23,107,77,120,110,177,235,88,133,79,9,68,135,29,72,63,123,174,254,252,118,255,181,119,191,2,35,140,86,117,244,170,42,176,70,95,1,40,9,43,247,245,56,61,54,31,168,12,138,74,175,82,192,231,213,102,116,8,59,223,16,81,5,149,168,215,90,27,173,213,30,246,121,228,246,108,132,129,117,32,101,250,206,208,88,190,247,136,38,104,4,74,243,248,246,15,112,127,156,160,160,171,70,83,40,108,233,92,163,237,118,225,127,48,172,107,210,41,104,55,169,15,54,133,42,254,227,23,103,151,183,36,32,107,169,245,149,37,205,214,191,30,255,104,44,68,85,117,190,6,159,241,154,101,224,249,29,73,185,238,24,7,1,52,184,202,48,187,21,254,34,232,131,9,87,136,73,98,14,117,85,126,98,218,168,255,118,94,70,69,83,177,8,222,71,109,212,231,233,239,32,4,179,157,222,233,182,31,239,123,190,167,152,162,115,210,219,123,79,74,87,140,173,100,67,4,81,133,209,14,2,250,255,122,40,126,99,182,15,230,161,53,95,9,32,241,235,121,67,157,5,253,177,183,151,100,99,31,100,243,223,74,30,36,95,127,20,40,205,184,162,79,64,0,67,201,32,34,195,12,48,11,211,253,79,55,165,192,217,0,45,29,21,123,20,36,26,17,77,238,103,81,202,15,76,144,255,113,254,95,25,45,95,100,5,26,254,254,19,12,202,8,27,8,33,1,23,5,0,1,83,128,254,94,62,232,248,244,154,172,1,39,231,127,95,238,184,210,97,66,223,6,138,155,158,187,37,234,147,114,223,255,132,206,1,136,113,245,4,75,214,61,59,38,111,162,0,132,212,126,230,235,126,84,160,76,109,68,245,214,243,108,223,171,73,38,245,199,160,174,193,140,51,54,147,126,63,80,97,32,119,211,225,56,182,17,3,14,80,114,187,178,14,248,46,80,224,171,222,119,141,236,129,30,151,87,70,103,79,225,0,84,51,201,143,49,32,105,153,187,29,8,165,4,195,255,5,24,53,77,227,92,61,127,198,102,200,166,169,204,91,93,234,111,236,218,145,111,146,159,47,34,70,159,125,70,145,57,142,109,191,165,79,196,67,17,2,131,149,67,235,78,33,208,184,131,32,2,12,24,182,63,30,147,248,24,230,88,22,40,62,110,72,38,112,138,215,139,193,228,119,116,124,224,6,181,37,10,45,243,2,139,9,121,129,187,234,228,35,59,18,40,56,173,222,105,22,202,116,21,98,27,135,223,183,64,28,33,249,158,26,165,123,55,20,0,200,138,30,4,3,64,17,9,210,228,89,189,213,86,209,227,213,118,232,79,64,163,145,47,222,232,123,85,167,228,234,0,236,194,229,12,166,187,180,77,255,189,86,231,172,105,51,221,53,176,23,236,39,35,87,6,176,200,175,153,145,195,200,86,28,129,101,107,25,97,20,94,117,203,133,110,2,192,7,190,119,85,50,194,236,244,63,137,45,201,191,91,37,59,236,208,183,26,128,183,36,59,109,141,239,99,199,32,252,165,102,195,128,40,56,156,5,50,206,10,138,84,201,170,199,215,161,236,50,250,26,4,90,98,22,29,44,144,1,103,84,122,117,155,247,119,212,49,49,176,38,145,219,111,204,54,70,139,11,199,72,106,230,217,121,90,229,86,235,76,106,2,255,126,67,82,180,118,143,47,165,128,249,13,227,205,116,134,235,4,218,237,4,190,169,23,223,244,24,44,157,127,116,183,180,247,42,171,32,77,195,239,124,107,9,46,84,162,65,23,53,160,182,229,246,66,61,33,38,124,28,44,15,245,194,97,249,218,82,101,248,49,194,210,105,15,19,37,162,127,22,216,200,242,24,4,166,150,26,0,171,38,21,13,33,92,49,99,236,114,10,94,253,254,186,73,217,8,121,24,134,189,13,141,167,112,17,49,12,100,155,62,215,16,62,204,182,211,202,213,136,195,174,12,225,1,48,247,255,138,114,108,161,226,234,113,110,243,154,31,47,209,203,207,23,132,222,193,107,190,7,172,216,161,68,203,86,15,155,139,195,136,57,1,202,47,197,177,205,49,190,180,6,40,120,216,226,164,163,18,50,229,125,111,182,126,253,88,0,233,30,208,194,255,173,36,197,15,153,244,197,170,17,151,149,123,29,0,210,231,229,130,246,115,152,16,150,48,97,0,33,149,45,195,255,33,161,173,21,132,144,41,127,151,187,127,219,179,158,175,42,237,201,41,101,164,226,92,44,243,48,167,232,63,170,208,145,192,92,138,231,44,158,212,169,84,228,12,134,205,10,214,25,25,95,1,3,145,7,119,246,58,160,222,94,86,168,120,223,86,227,222,190,92,240,33,135,227,117,139,81,6,197,179,239,195,165,184,210,182,238,216,119,190,35,229,41,69,21,194,223,239,105,47,251,122,230,175,178,196,112,244,91,235,224,243,118,152,204,214,12,70,228,57,56,133,218,31,47,131,135,25,103,115,0,202,248,68,145,169,158,41,107,41,149,194,47,73,171,190,102,146,105,110,103,181,218,221,211,155,47,5,126,223,28,112,37,219,238,81,94,27,230,36,83,246,108,227,252,106,4,204,22,3,62,33,68,134,208,89,220,183,31,41,101,121,67,253,214,204,121,57,130,65,246,205,43,147,77,195,87,182,130,210,223,78,12,41,229,122,107,83,185,60,254,32,30,133,126,85,51,152,176,240,236,19,114,179,255,211,193,197,133,63,210,126,239,10,64,194,239,141,159,93,250,37,191,61,144,235,7,201,16,232,255,127,96,71,75,228,159,54,68,198,31,140,144,202,206,174,191,249,177,190,234,202,251,238,80,25,207,232,174,7,223,81,6,136,14,146,72,5,173,240,131,141,60,225,213,16,112,146,159,125,16,17,185,125,100,7,212,228,227,178,94,40,79,61,32,168,175,185,224,130,222,250,139,38,103,160,46,121,114,130,192,178,63,85,43,226,154,72,148,151,239,212,188,63,94,18,238,252,255,33,253,27,91,130,237,197,85,146,64,162,87,18,2,131,26,78,255,127,224,186,231,70,130,82,14,20,87,142,191,247,115,51,136,129,159,140,232,78,252,166,165,181,130,201,183,29,192,168,100,194,159,87,49,79,9,103,95,63,189,242,193,247,255,64,252,141,183,31,193,210,107,142,155,229,123,67,191,61,176,153,75,198,219,181,230,192,141,99,153,157,129,85,28,200,151,161,110,45,1,74,40,74,136,197,113,111,195,204,19,194,67,184,241,67,7,108,60,137,9,131,95,221,237,15,80,232,127,47,126,127,192,215,191,127,80,2,4,154,251,90,208,210,71,167,46,25,81,22,62,191,112,175,128,19,195,88,46,48,152,95,196,195,124,114,2,180,15,10,130,239,127,15,173,253,150,140,174,42,44,93,73,154,233,142,184,136,218,80,160,244,39,132,144,87,172,30,73,180,111,121,21,220,82,130,155,125,189,239,125,89,114,166,216,64,168,173,4,69,245,69,3,116,93,250,5,195,62,232,26,117,145,79,194,105,86,146,65,233,239,35,46,241,3,169,242,13,39,96,182,228,118,2,116,101,253,148,178,133,121,146,203,219,118,130,118,129,119,2,141,145,175,248,158,247,72,78,223,109,97,143,14,132,157,226,131,125,47,132,200,229,12,52,130,182,187,150,72,177,180,147,171,60,48,239,40,175,79,152,155,175,159,119,13,86,220,146,32,30,77,34,136,170,55,132,150,220,41,125,220,211,86,39,238,124,144,139,64,210,31,181,227,124,192,231,161,180,102,229,94,97,233,195,157,32,248,60,227,209,148,96,65,163,156,205,14,70,118,92,59,152,234,0,129,120,214,212,44,87,71,253,217,237,108,247,156,34,168,189,170,173,125,18,78,7,138,67,144,192,151,31,138,219,27,8,190,126,160,147,21,202,56,185,255,60,176,151,248,192,194,61,236,178,26,141,81,14,56,100,251,123,204,104,136,39,15,217,129,1,73,18,212,255,229,93,106,248,126,221,20,226,162,118,104,3,164,185,143,149,93,146,250,255,57,75,233,174,57,186,11,211,255,164,59,147,247,250,35,134,73,109,250,188,60,25,69,117,98,39,122,244,92,130,160,139,189,97,209,66,30,209,244,4,173,206,146,163,126,18,183,141,66,16,114,169,114,130,168,196,112,146,11,229,125,18,200,161,91,40,79,244,98,60,165,234,192,53,49,210,5,232,251,41,137,66,130,223,252,180,83,106,182,79,91,193,125,14,171,31,8,31,174,24,134,16,109,8,253,252,137,40,255,249,17,204,75,105,174,92,106,35,77,202,222,18,197,140,63,44,254,45,208,210,150,88,239,248,218,82,207,228,103,91,21,149,140,72,74,73,12,168,182,185,188,130,143,92,69,107,211,137,55,148,96,58,169,201,0,236,83,82,113,68,73,75,135,10,64,188,115,215,28,103,52,124,246,126,113,2,54,85,235,79,255,47,208,162,196,96,191,210,192,3,63,212,109,239,180,80,209,140,71,7,136,24,110,0,85,63,229,162,188,212,230,185,22,128,4,162,51,56,87,151,103,125,32,215,61,143,15,222,51,123,248,114,51,79,204,171,93,197,136,118,176,166,0,123,1,0,123,148,210,117,0,87,248,136,187,249,158,1,66,137,255,165,100,66,224,2,99,133,43,217,219,114,105,27,151,238,222,47,162,110,43,174,8,95,109,97,122,175,103,135,201,229,210,235,31,207,194,200,239,97,113,37,172,241,194,57,130,204,184,76,33,103,209,131,229,177,98,62,220,183,206,189,16,127,56,92,10,249,61,68,240,15,198,109,110,96,73,58,84,96,72,193,39,87,29,138,233,43,56,23,180,138,36,190,225,32,15,218,150,175,37,132,69,104,229,59,131,153,125,69,13,96,80,147,47,40,98,179,52,131,32,17,29,217,160,141,109,43,49,30,43,100,0,90,48,156,136,230,188,82,138,88,3,27,213,239,186,247,156,237,66,65,17,92,49,164,197,62,50,131,54,70,239,223,1,197,51,161,28,83,211,233,131,55,53,238,148,16,32,31,91,167,11,239,126,207,227,105,128,67,63,57,122,207,97,254,122,32,197,238,148,156,136,85,81,6,252,114,121,239,167,173,53,114,29,78,206,99,90,213,186,54,4,222,239,48,196,153,148,7,12,95,125,219,220,24,243,239,214,161,123,47,181,160,5,54,232,89,148,176,21,238,9,217,255,233,134,0,68,220,89,68,148,239,179,204,131,186,251,205,195,224,129,65,218,209,177,42,9,59,193,241,151,249,123,207,230,165,219,13,66,1,91,239,231,228,65,255,161,37,6,248,128,225,128,16,196,31,122,238,155,23,169,198,122,211,164,48,88,254,127,139,222,152,78,63,232,119,105,146,146,121,123,159,250,36,91,200,19,225,131,0,196,172,37,53,80,215,95,97,234,247,84,49,20,98,99,75,85,13,33,17,104,93,89,195,102,200,115,207,99,61,192,52,226,206,135,126,216,212,33,43,103,92,129,97,31,7,127,98,247,57,132,48,30,54,59,87,235,228,164,100,47,96,156,205,58,214,53,70,188,27,45,3,129,158,12,245,1,39,180,122,132,153,121,223,227,160,140,243,108,186,148,48,132,16,94,169,55,37,254,111,111,244,31,59,255,161,106,251,140,32,116,140,69,143,39,162,224,217,52,58,199,78,105,79,136,252,223,232,77,62,136,0,14,239,141,100,89,53,140,56,69,138,102,67,128,29,253,155,29,114,187,132,134,165,51,99,37,232,18,130,78,132,152,128,141,18,180,63,211,254,225,10,40,206,165,155,225,39,82,194,166,213,189,84,151,228,221,85,214,197,100,112,102,235,77,11,132,119,1,168,182,161,169,38,219,132,20,103,181,224,183,67,240,33,96,88,208,229,132,48,240,84,114,244,111,6,83,161,26,163,85,71,220,218,191,93,98,181,230,27,86,104,148,107,202,131,59,210,110,45,219,1,207,236,186,208,211,166,92,61,128,182,9,167,119,175,76,163,180,51,214,200,123,57,149,43,226,94,4,83,14,95,97,111,237,129,100,67,231,32,120,19,94,180,155,99,24,222,34,161,28,136,209,38,103,185,232,167,73,128,123,218,183,34,37,45,85,94,55,210,114,82,28,149,210,121,76,137,13,198,2,180,140,72,91,254,164,27,107,159,176,164,207,21,168,28,5,48,12,162,99,223,113,136,203,47,222,185,233,201,198,12,83,255,238,11,23,69,33,227,53,40,84,180,60,41,99,159,41,231,65,238,124,45,29,110,134,82,4,80,243,133,102,30,198,1,52,243,149,44,162,48,80,8,167,49,19,15,147,96,23,132,249,115,89,152,38,161,68,92,100,236,169,119,200,82,166,51,255,205,65,23,43,160,162,217,186,124,111,3,128,33,8,156,217,80,97,72,63,203,101,215,107,194,171,246,163,100,118,38,52,128,123,94,167,37,252,209,230,228,230,16,199,32,128,182,240,205,59,77,132,23,77,248,238,49,228,36,8,126,235,73,203,44,174,59,106,132,136,120,247,143,246,96,93,238,115,86,247,122,219,92,221,47,193,49,22,161,67,111,246,48,84,236,250,179,250,215,127,21,204,121,133,239,88,222,82,209,94,253,47,219,25,206,50,143,122,249,106,48,248,62,240,2,213,154,49,153,15,250,66,194,176,235,227,167,6,73,142,198,12,35,218,184,40,48,130,128,200,243,222,220,113,177,95,211,200,27,138,8,96,197,192,190,232,201,163,97,77,245,168,188,250,239,47,199,153,46,130,34,180,112,197,130,137,78,217,216,188,52,28,139,230,22,30,48,121,233,59,39,166,234,255,176,198,184,217,97,105,72,178,0,63,206,255,183,59,40,220,8,90,246,218,67,152,151,225,247,47,183,25,118,164,155,28,143,160,55,134,220,177,211,167,22,183,147,195,159,235,110,19,167,62,198,188,198,66,55,81,26,188,40,104,239,214,101,3,82,171,119,106,45,75,237,39,53,22,210,31,130,46,110,92,9,251,242,146,219,203,41,234,94,245,146,88,20,127,79,88,145,123,105,131,84,204,168,103,38,72,96,25,133,234,172,75,140,212,96,56,131,249,224,35,13,138,126,56,108,73,210,230,10,12,96,132,178,29,115,53,216,71,198,177,220,234,86,76,172,179,129,189,62,176,171,14,35,135,188,56,100,250,177,181,240,179,162,94,143,66,70,24,252,122,107,3,10,189,137,176,79,137,165,157,100,94,65,69,163,35,131,3,92,185,59,93,62,114,149,215,67,124,208,109,126,30,223,223,6,239,196,108,108,57,165,96,113,112,190,191,115,5,118,135,131,241,236,35,69,212,64,251,48,11,255,160,159,47,205,236,107,122,140,37,63,47,63,33,30,211,77,0,156,64,229,3,96,73,201,159,207,39,175,212,191,181,189,187,136,144,64,3,226,117,150,208,152,224,160,99,110,210,97,195,21,29,102,231,194,142,255,212,34,111,59,104,40,89,208,127,192,200,121,35,255,226,80,95,119,211,64,195,67,86,134,47,223,26,164,124,136,45,189,210,162,214,224,201,161,25,72,108,52,135,109,183,97,47,15,84,34,225,50,190,42,107,22,84,170,58,142,86,34,208,65,211,162,200,64,219,102,47,57,132,167,47,255,77,0,222,210,185,45,172,63,148,151,216,193,151,74,183,68,118,82,167,55,244,181,239,186,44,184,89,209,81,215,237,240,247,111,31,122,9,90,208,104,123,130,46,245,236,144,84,192,176,34,53,89,142,188,127,47,109,75,162,100,187,80,16,73,102,210,45,129,229,190,144,34,51,183,159,21,59,233,17,228,142,180,93,52,255,75,64,194,69,253,63,151,49,173,46,208,246,196,101,129,252,85,173,202,177,213,174,45,172,161,109,183,212,162,80,12,155,193,242,64,34,136,56,79,110,12,215,191,228,164,114,162,91,79,47,29,76,86,25,83,156,197,84,227,73,185,254,105,70,176,138,171,182,177,221,88,19,199,69,197,133,99,93,147,15,17,213,138,83,87,147,4,57,106,224,55,61,230,179,246,84,42,95,125,120,58,181,160,118,98,223,252,166,25,106,32,66,122,213,212,249,41,145,24,27,246,94,39,114,187,103,129,80,170,145,16,144,56,235,5,181,198,140,203,199,132,15,90,215,42,39,20,74,135,107,147,209,162,175,134,210,42,145,210,86,170,96,67,137,215,13,117,92,66,38,158,179,147,201,132,113,24,45,179,0,108,20,187,226,115,60,188,190,160,121,55,98,84,171,158,69,100,130,139,50,63,130,207,24,119,166,206,162,89,46,0,238,4,230,120,254,137,80,9,171,63,194,246,95,50,5,63,56,129,200,197,99,105,214,90,203,118,201,116,153,212,207,13,24,202,213,130,7,56,246,92,250,199,17,21,195,138,19,158,231,53,208,145,218,71,134,144,15,244,158,65,226,167,65,98,54,49,149,244,30,5,4,59,87,170,141,93,128,74,208,0,131,84,60,42,50,0,223,205,100,191,142,166,87,186,43,55,198,117,65,211,175,80,117,50,193,167,245,11,90,145,171,191,84,107,38,20,11,43,215,201,76,171,130,205,156,68,101,242,251,247,243,197,133,171,148,219,85,27,36,227,212,170,63,189,164,207,226,163,234,45,2,77,32,158,172,37,189,200,179,85,223,234,152,158,189,213,178,49,18,227,108,173,213,42,222,41,67,149,40,69,190,173,105,15,113,216,15,201,81,170,246,107,120,170,30,63,81,34,155,167,81,170,204,68,211,42,240,65,90,123,173,251,124,211,5,149,6,27,145,228,236,65,230,50,195,180,212,104,34,3,204,10,96,201,109,126,56,206,108,177,107,191,120,251,112,106,201,217,3,13,222,57,223,212,218,99,16,224,100,244,54,71,216,40,211,90,150,204,71,179,195,15,187,117,251,27,81,152,53,204,251,79,106,207,139,181,188,10,31,225,74,254,197,191,16,236,10,167,10,87,57,172,47,68,4,63,83,177,136,97,46,122,57,224,121,203,39,87,143,65,235,156,141,214,172,28,150,124,211,42,157,203,117,1,9,255,157,198,240,101,91,199,216,64,219,217,121,119,14,236,212,234,68,71,116,50,28,177,158,203,36,221,189,84,28,126,249,68,17,240,177,14,36,210,253,179,117,150,85,55,172,163,175,39,124,212,77,95,200,81,150,117,144,86,230,21,187,165,240,4,3,88,241,44,4,202,234,55,26,1,219,170,191,141,74,62,186,53,160,255,38,53,9,77,123,195,217,110,48,188,102,38,165,152,37,247,72,86,157,86,94,255,208,99,237,12,207,178,99,124,225,69,11,112,241,80,234,213,114,40,169,133,167,189,31,175,112,72,35,212,243,11,135,167,121,77,59,45,152,65,224,66,231,237,208,12,184,13,71,38,76,129,129,248,215,106,77,71,92,94,12,124,89,25,35,209,152,114,27,56,219,244,210,245,83,134,131,171,35,30,47,110,158,156,113,131,70,224,145,189,110,69,86,154,12,32,57,220,113,197,200,32,28,218,43,150,255,150,230,225,8,171,65,177,185,137,202,124,131,231,105,26,67,72,204,2,121,197,247,162,125,244,158,66,156,22,123,66,73,240,201,90,0,15,143,221,191,101,129,92,1,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,11,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,2,0,0,0,11,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,0,0,0,0,2,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,240,246,0,0,168,244,0,0,240,243,0,0,0,0,0,0,160,7,1,0,1,0,0,0,128,6,1,0,3,0,0,0,72,5,1,0,5,0,0,0,152,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,176,3,1,0,128,2,1,0,120,1,1,0,0,0,0,0,176,4,1,0,1,0,0,0,128,250,0,0,3,0,0,0,32,244,0,0,5,0,0,0,136,238,0,0,2,0,0,0,0,0,0,0,0,0,0,0,152,231,0,0,112,224,0,0,0,0,0,0,0,0,0,0,168,217,0,0,1,0,0,0,216,67,1,0,3,0,0,0,64,61,1,0,5,0,0,0,104,57,1,0,2,0,0,0,0,0,0,0,0,0,0,0,48,54,1,0,152,50,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,1,0,0,0,1,0,1,0,1,1,0,0,1,1,1,1,0,0,0,1,0,0,1,1,0,1,0,1,0,1,1,1,1,0,0,1,1,0,1,1,1,1,0,1,1,1,1,217,120,249,196,25,221,181,237,40,233,253,121,74,160,216,157,198,126,55,131,43,118,83,142,98,76,100,136,68,139,251,162,23,154,89,245,135,179,79,19,97,69,109,141,9,129,125,50,189,143,64,235,134,183,123,11,240,149,33,34,92,107,78,130,84,214,101,147,206,96,178,28,115,86,192,20,167,140,241,220,18,117,202,31,59,190,228,209,66,61,212,48,163,60,182,38,111,191,14,218,70,105,7,87,39,242,29,155,188,148,67,3,248,17,199,246,144,239,62,231,6,195,213,47,200,102,30,215,8,232,234,222,128,82,238,247,132,170,114,172,53,77,106,42,150,26,210,113,90,21,73,116,75,159,208,94,4,24,164,236,194,224,65,110,15,81,203,204,36,145,175,80,161,244,112,57,153,124,58,133,35,184,180,122,252,2,54,91,37,85,151,49,45,93,250,152,227,138,146,174,5,223,41,16,103,108,186,201,211,0,230,207,225,158,168,44,99,22,1,63,88,226,137,169,13,56,52,27,171,51,255,176,187,72,12,95,185,177,205,46,197,243,219,71,229,165,156,119,10,166,32,104,254,127,193,173,111,112,116,105,111,110,32,114,101,113,117,105,114,101,115,32,97,110,32,97,114,103,117,109,101,110,116,32,45,45,32,37,115,0,0,0,0,0,0,0,111,112,116,105,111,110,32,114,101,113,117,105,114,101,115,32,97,110,32,97,114,103,117,109,101,110,116,32,45,45,32,37,99,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,32,0,0,0,64,0,0,0,128,0,0,0,27,0,0,0,54,0,0,0,108,0,0,0,216,0,0,0,171,0,0,0,77,0,0,0,154,0,0,0,47,0,0,0,94,0,0,0,188,0,0,0,99,0,0,0,198,0,0,0,151,0,0,0,53,0,0,0,106,0,0,0,212,0,0,0,179,0,0,0,125,0,0,0,250,0,0,0,239,0,0,0,197,0,0,0,145,0,0,0,79,1,184,135,232,198,35,24,82,145,111,121,245,210,166,54,53,123,12,163,142,155,188,96,87,254,75,46,194,215,224,29,218,74,240,159,229,55,119,21,133,107,160,177,10,41,201,88,103,5,62,203,244,16,93,189,216,149,125,167,139,65,39,228,158,71,23,221,102,124,238,251,51,131,90,173,7,191,45,202,117,243,198,244,219,123,251,200,74,211,230,107,69,125,232,75,214,50,216,253,55,113,241,225,48,15,248,27,135,250,6,63,94,186,174,91,138,0,188,157,109,193,177,14,128,93,210,213,160,132,7,20,181,144,44,163,178,115,76,84,146,116,54,81,56,176,189,90,252,96,98,150,108,66,247,16,124,40,39,140,19,149,156,199,36,70,59,112,202,227,133,203,17,208,147,184,166,131,32,255,159,119,195,204,3,111,8,191,64,231,43,226,121,12,170,130,65,58,234,185,228,154,164,151,126,218,122,23,102,148,161,29,61,240,222,179,11,114,167,28,239,209,83,62,143,51,38,95,236,118,42,73,129,136,238,33,196,26,235,217,197,57,153,205,173,49,139,1,24,35,221,31,78,45,249,72,79,242,101,142,120,92,88,25,141,229,152,87,103,127,5,100,175,99,182,254,245,183,60,165,206,233,104,68,224,77,67,105,41,46,172,21,89,168,10,158,110,71,223,52,53,106,207,220,34,201,192,155,137,212,237,171,18,162,13,82,187,2,47,169,215,97,30,180,80,4,246,194,22,37,134,86,85,9,190,145,169,103,179,232,4,253,163,118,154,146,128,120,228,221,209,56,13,198,53,152,24,247,236,108,67,117,55,38,250,19,148,72,242,208,139,48,132,84,223,35,25,91,61,89,243,174,162,130,99,1,131,46,217,81,155,124,166,235,165,190,22,12,227,97,192,140,58,245,115,44,37,11,187,78,137,107,83,106,180,241,225,230,189,69,226,244,182,102,204,149,3,86,212,28,30,215,251,195,142,181,233,207,191,186,234,119,57,175,51,201,98,113,129,121,9,173,36,205,249,216,229,197,185,77,68,8,134,231,161,29,170,237,6,112,178,210,65,123,160,17,49,194,39,144,32,246,96,255,150,92,177,171,158,156,82,27,95,147,10,239,145,133,73,238,45,79,143,59,71,135,109,70,214,62,105,100,42,206,203,47,252,151,5,122,172,127,213,26,75,14,167,90,40,20,63,41,136,60,76,2,184,218,176,23,85,31,138,125,87,199,141,116,183,196,159,114,126,21,34,18,88,7,153,52,110,80,222,104,101,188,219,248,200,168,43,64,220,254,50,164,202,16,33,240,211,93,15,0,111,157,54,66,74,94,193,224,24,71,1,0,88,72,1,0,1,0,0,0,1,0,0,0,88,71,1,0,112,72,1,0,20,0,0,0,0,0,0,0,88,71,1,0,112,72,1,0,16,0,0,0,0,0,0,0,24,72,1,0,160,72,1,0])
.concat([17,0,0,0,1,0,0,0,152,71,1,0,136,72,1,0,45,1,0,0,0,0,0,0,216,71,1,0,136,72,1,0,46,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,106,63,36,211,8,163,133,46,138,25,19,68,115,112,3,34,56,9,164,208,49,159,41,152,250,46,8,137,108,78,236,230,33,40,69,119,19,208,56,207,102,84,190,108,12,233,52,183,41,172,192,221,80,124,201,181,213,132,63,23,9,71,181,217,213,22,146,27,251,121,137,0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,136,195,64,0,0,0,0,132,215,151,65,0,128,224,55,121,195,65,67,23,110,5,181,181,184,147,70,245,249,63,233,3,79,56,77,50,29,48,249,72,119,130,90,60,191,115,127,221,79,21,117,0,1,23,2,46,24,83,3,106,47,147,25,52,84,69,4,92,107,182,48,166,148,75,26,140,53,129,85,170,70,13,5,36,93,135,108,155,183,193,49,43,167,163,149,152,76,202,27,230,141,115,54,205,130,18,86,98,171,240,71,79,14,189,6,212,37,210,94,39,136,102,109,214,156,121,184,8,194,223,50,104,44,253,168,138,164,90,150,41,153,34,77,96,203,228,28,123,231,59,142,158,116,244,55,216,206,249,131,111,19,178,87,225,99,220,172,196,241,175,72,10,80,66,15,186,190,199,7,222,213,120,38,101,211,209,95,227,40,33,137,89,103,252,110,177,215,248,157,243,122,58,185,198,9,65,195,174,224,219,51,68,105,146,45,82,254,22,169,12,139,128,165,74,91,181,151,201,42,162,154,192,35,134,78,188,97,239,204,17,229,114,29,61,124,235,232,233,60,234,143,125,159,236,117,30,245,62,56,246,217,63,207,118,250,31,132,160,112,237,20,144,179,126,88,251,226,32,100,208,221,119,173,218,197,64,242,57,176,247,73,180,11,127,81,21,67,145,16,113,187,238,191,133,200,161,0,152,225,1,0,0,0,0,0,208,233,0,0,0,0,0,0,63,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,56,51,1,0,3,0,0,0,128,47,1,0,3,0,0,0,176,43,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,225,0,0,3,0,0,0,0,0,0,0,0,0,0,0,96,2,1,0,0,0,0,0,224,42,1,0,192,38,1,0,0,0,0,0,0,0,0,0,152,14,1,0,136,2,1,0,0,0,0,0,0,0,0,0,176,14,1,0,160,2,1,0,0,0,0,0,0,0,0,0,248,42,1,0,0,0,0,0,120,67,1,0,176,60,1,0,32,57,1,0,200,53,1,0,40,50,1,0,0,0,0,0,224,38,1,0,208,16,1,0,0,0,0,0,0,0,0,0,96,46,1,0,160,19,1,0,0,0,0,0,0,0,0,0,136,46,1,0,0,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,0,0,0,0,111,112,116,105,111,110,32,100,111,101,115,110,39,116,32,116,97,107,101,32,97,110,32,97,114,103,117,109,101,110,116,32,45,45,32,37,46,42,115,0,156,2,0,0,0,0,0,0,85,110,115,112,101,99,105,102,105,101,100,32,115,111,117,114,99,101,0,103,99,114,121,112,116,0,71,110,117,80,71,0,71,112,103,83,77,0,71,80,71,32,65,103,101,110,116,0,80,105,110,101,110,116,114,121,0,83,67,68,0,71,80,71,77,69,0,75,101,121,98,111,120,0,75,83,66,65,0,68,105,114,109,110,103,114,0,71,83,84,73,0,71,80,65,0,75,108,101,111,112,97,116,114,97,0,71,49,51,0,65,115,115,117,97,110,0,65,110,121,32,115,111,117,114,99,101,0,85,115,101,114,32,100,101,102,105,110,101,100,32,115,111,117,114,99,101,32,49,0,85,115,101,114,32,100,101,102,105,110,101,100,32,115,111,117,114,99,101,32,50,0,85,115,101,114,32,100,101,102,105,110,101,100,32,115,111,117,114,99,101,32,51,0,85,115,101,114,32,100,101,102,105,110,101,100,32,115,111,117,114,99,101,32,52,0,85,110,107,110,111,119,110,32,115,111,117,114,99,101,0,0,83,117,99,99,101,115,115,0,71,101,110,101,114,97,108,32,101,114,114,111,114,0,85,110,107,110,111,119,110,32,112,97,99,107,101,116,0,85,110,107,110,111,119,110,32,118,101,114,115,105,111,110,32,105,110,32,112,97,99,107,101,116,0,73,110,118,97,108,105,100,32,112,117,98,108,105,99,32,107,101,121,32,97,108,103,111,114,105,116,104,109,0,73,110,118,97,108,105,100,32,100,105,103,101,115,116,32,97,108,103,111,114,105,116,104,109,0,66,97,100,32,112,117,98,108,105,99,32,107,101,121,0,66,97,100,32,115,101,99,114,101,116,32,107,101,121,0,66,97,100,32,115,105,103,110,97,116,117,114,101,0,78,111,32,112,117,98,108,105,99,32,107,101,121,0,67,104,101,99,107,115,117,109,32,101,114,114,111,114,0,66,97,100,32,112,97,115,115,112,104,114,97,115,101,0,73,110,118,97,108,105,100,32,99,105,112,104,101,114,32,97,108,103,111,114,105,116,104,109,0,75,101,121,114,105,110,103,32,111,112,101,110,0,73,110,118,97,108,105,100,32,112,97,99,107,101,116,0,73,110,118,97,108,105,100,32,97,114,109,111,114,0,78,111,32,117,115,101,114,32,73,68,0,78,111,32,115,101,99,114,101,116,32,107,101,121,0,87,114,111,110,103,32,115,101,99,114,101,116,32,107,101,121,32,117,115,101,100,0,66,97,100,32,115,101,115,115,105,111,110,32,107,101,121,0,85,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,97,108,103,111,114,105,116,104,109,0,78,117,109,98,101,114,32,105,115,32,110,111,116,32,112,114,105,109,101,0,73,110,118,97,108,105,100,32,101,110,99,111,100,105,110,103,32,109,101,116,104,111,100,0,73,110,118,97,108,105,100,32,101,110,99,114,121,112,116,105,111,110,32,115,99,104,101,109,101,0,73,110,118,97,108,105,100,32,115,105,103,110,97,116,117,114,101,32,115,99,104,101,109,101,0,73,110,118,97,108,105,100,32,97,116,116,114,105,98,117,116,101,0,78,111,32,118,97,108,117,101,0,78,111,116,32,102,111,117,110,100,0,86,97,108,117,101,32,110,111,116,32,102,111,117,110,100,0,83,121,110,116,97,120,32,101,114,114,111,114,0,66,97,100,32,77,80,73,32,118,97,108,117,101,0,73,110,118,97,108,105,100,32,112,97,115,115,112,104,114,97,115,101,0,73,110,118,97,108,105,100,32,115,105,103,110,97,116,117,114,101,32,99,108,97,115,115,0,82,101,115,111,117,114,99,101,115,32,101,120,104,97,117,115,116,101,100,0,73,110,118,97,108,105,100,32,107,101,121,114,105,110,103,0,84,114,117,115,116,32,68,66,32,101,114,114,111,114,0,66,97,100,32,99,101,114,116,105,102,105,99,97,116,101,0,73,110,118,97,108,105,100,32,117,115,101,114,32,73,68,0,85,110,101,120,112,101,99,116,101,100,32,101,114,114,111,114,0,84,105,109,101,32,99,111,110,102,108,105,99,116,0,75,101,121,115,101,114,118,101,114,32,101,114,114,111,114,0,87,114,111,110,103,32,112,117,98,108,105,99,32,107,101,121,32,97,108,103,111,114,105,116,104,109,0,84,114,105,98,117,116,101,32,116,111,32,68,46,32,65,46,0,87,101,97,107,32,101,110,99,114,121,112,116,105,111,110,32,107,101,121,0,73,110,118,97,108,105,100,32,107,101,121,32,108,101,110,103,116,104,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,83,121,110,116,97,120,32,101,114,114,111,114,32,105,110,32,85,82,73,0,73,110,118,97,108,105,100,32,85,82,73,0,78,101,116,119,111,114,107,32,101,114,114,111,114,0,85,110,107,110,111,119,110,32,104,111,115,116,0,83,101,108,102,116,101,115,116,32,102,97,105,108,101,100,0,68,97,116,97,32,110,111,116,32,101,110,99,114,121,112,116,101,100,0,68,97,116,97,32,110,111,116,32,112,114,111,99,101,115,115,101,100,0,85,110,117,115,97,98,108,101,32,112,117,98,108,105,99,32,107,101,121,0,85,110,117,115,97,98,108,101,32,115,101,99,114,101,116,32,107,101,121,0,73,110,118,97,108,105,100,32,118,97,108,117,101,0,66,97,100,32,99,101,114,116,105,102,105,99,97,116,101,32,99,104,97,105,110,0,77,105,115,115,105,110,103,32,99,101,114,116,105,102,105,99,97,116,101,0,78,111,32,100,97,116,97,0,66,117,103,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,73,110,118,97,108,105,100,32,111,112,101,114,97,116,105,111,110,32,99,111,100,101,0,84,105,109,101,111,117,116,0,73,110,116,101,114,110,97,108,32,101,114,114,111,114,0,69,79,70,32,40,103,99,114,121,112,116,41,0,73,110,118,97,108,105,100,32,111,98,106,101,99,116,0,80,114,111,118,105,100,101,100,32,111,98,106,101,99,116,32,105,115,32,116,111,111,32,115,104,111,114,116,0,80,114,111,118,105,100,101,100,32,111,98,106,101,99,116,32,105,115,32,116,111,111,32,108,97,114,103,101,0,77,105,115,115,105,110,103,32,105,116,101,109,32,105,110,32,111,98,106,101,99,116,0,78,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,67,111,110,102,108,105,99,116,105,110,103,32,117,115,101,0,73,110,118,97,108,105,100,32,99,105,112,104,101,114,32,109,111,100,101,0,73,110,118,97,108,105,100,32,102,108,97,103,0,73,110,118,97,108,105,100,32,104,97,110,100,108,101,0,82,101,115,117,108,116,32,116,114,117,110,99,97,116,101,100,0,73,110,99,111,109,112,108,101,116,101,32,108,105,110,101,0,73,110,118,97,108,105,100,32,114,101,115,112,111,110,115,101,0,78,111,32,97,103,101,110,116,32,114,117,110,110,105,110,103,0,65,103,101,110,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,100,97,116,97,0,85,110,115,112,101,99,105,102,105,99,32,65,115,115,117,97,110,32,115,101,114,118,101,114,32,102,97,117,108,116,0,71,101,110,101,114,97,108,32,65,115,115,117,97,110,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,115,101,115,115,105,111,110,32,107,101,121,0,73,110,118,97,108,105,100,32,83,45,101,120,112,114,101,115,115,105,111,110,0,85,110,115,117,112,112,111,114,116,101,100,32,97,108,103,111,114,105,116,104,109,0,78,111,32,112,105,110,101,110,116,114,121,0,112,105,110,101,110,116,114,121,32,101,114,114,111,114,0,66,97,100,32,80,73,78,0,73,110,118,97,108,105,100,32,110,97,109,101,0,66,97,100,32,100,97,116,97,0,73,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,0,87,114,111,110,103,32,99,97,114,100,0,78,111,32,100,105,114,109,110,103,114,0,100,105,114,109,110,103,114,32,101,114,114,111,114,0,67,101,114,116,105,102,105,99,97,116,101,32,114,101,118,111,107,101,100,0,78,111,32,67,82,76,32,107,110,111,119,110,0,67,82,76,32,116,111,111,32,111,108,100,0,76,105,110,101,32,116,111,111,32,108,111,110,103,0,78,111,116,32,116,114,117,115,116,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,108,101,100,0,66,97,100,32,67,65,32,99,101,114,116,105,102,105,99,97,116,101,0,67,101,114,116,105,102,105,99,97,116,101,32,101,120,112,105,114,101,100,0,67,101,114,116,105,102,105,99,97,116,101,32,116,111,111,32,121,111,117,110,103,0,85,110,115,117,112,112,111,114,116,101,100,32,99,101,114,116,105,102,105,99,97,116,101,0,85,110,107,110,111,119,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,85,110,115,117,112,112,111,114,116,101,100,32,112,114,111,116,101,99,116,105,111,110,0,67,111,114,114,117,112,116,101,100,32,112,114,111,116,101,99,116,105,111,110,0,65,109,98,105,103,117,111,117,115,32,110,97,109,101,0,67,97,114,100,32,101,114,114,111,114,0,67,97,114,100,32,114,101,115,101,116,32,114,101,113,117,105,114,101,100,0,67,97,114,100,32,114,101,109,111,118,101,100,0,73,110,118,97,108,105,100,32,99,97,114,100,0,67,97,114,100,32,110,111,116,32,112,114,101,115,101,110,116,0,78,111,32,80,75,67,83,49,53,32,97,112,112,108,105,99,97,116,105,111,110,0,78,111,116,32,99,111,110,102,105,114,109,101,100,0,67,111,110,102,105,103,117,114,97,116,105,111,110,32,101,114,114,111,114,0,78,111,32,112,111,108,105,99,121,32,109,97,116,99,104,0,73,110,118,97,108,105,100,32,105,110,100,101,120,0,73,110,118,97,108,105,100,32,73,68,0,78,111,32,83,109,97,114,116,67,97,114,100,32,100,97,101,109,111,110,0,83,109,97,114,116,67,97,114,100,32,100,97,101,109,111,110,32,101,114,114,111,114,0,85,110,115,117,112,112,111,114,116,101,100,32,112,114,111,116,111,99,111,108,0,66,97,100,32,80,73,78,32,109,101,116,104,111,100,0,67,97,114,100,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,85,110,115,117,112,112,111,114,116,101,100,32,111,112,101,114,97,116,105,111,110,0,87,114,111,110,103,32,107,101,121,32,117,115,97,103,101,0,78,111,116,104,105,110,103,32,102,111,117,110,100,0,87,114,111,110,103,32,98,108,111,98,32,116,121,112,101,0,77,105,115,115,105,110,103,32,118,97,108,117,101,0,72,97,114,100,119,97,114,101,32,112,114,111,98,108,101,109,0,80,73,78,32,98,108,111,99,107,101,100,0,67,111,110,100,105,116,105,111,110,115,32,111,102,32,117,115,101,32,110,111,116,32,115,97,116,105,115,102,105,101,100,0,80,73,78,115,32,97,114,101,32,110,111,116,32,115,121,110,99,101,100,0,73,110,118,97,108,105,100,32,67,82,76,0,66,69,82,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,66,69,82,0,69,108,101,109,101,110,116,32,110,111,116,32,102,111,117,110,100,0,73,100,101,110,116,105,102,105,101,114,32,110,111,116,32,102,111,117,110,100,0,73,110,118,97,108,105,100,32,116,97,103,0,73,110,118,97,108,105,100,32,108,101,110,103,116,104,0,73,110,118,97,108,105,100,32,107,101,121,32,105,110,102,111,0,85,110,101,120,112,101,99,116,101,100,32,116,97,103,0,78,111,116,32,68,69,82,32,101,110,99,111,100,101,100,0,78,111,32,67,77,83,32,111,98,106,101,99,116,0,73,110,118,97,108,105,100,32,67,77,83,32,111,98,106,101,99,116,0,85,110,107,110,111,119,110,32,67,77,83,32,111,98,106,101,99,116,0,85,110,115,117,112,112,111,114,116,101,100,32,67,77,83,32,111,98,106,101,99,116,0,85,110,115,117,112,112,111,114,116,101,100,32,101,110,99,111,100,105,110,103,0,85,110,115,117,112,112,111,114,116,101,100,32,67,77,83,32,118,101,114,115,105,111,110,0,85,110,107,110,111,119,110,32,97,108,103,111,114,105,116,104,109,0,73,110,118,97,108,105,100,32,99,114,121,112,116,111,32,101,110,103,105,110,101,0,80,117,98,108,105,99,32,107,101,121,32,110,111,116,32,116,114,117,115,116,101,100,0,68,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,0,75,101,121,32,101,120,112,105,114,101,100,0,83,105,103,110,97,116,117,114,101,32,101,120,112,105,114,101,100,0,69,110,99,111,100,105,110,103,32,112,114,111,98,108,101,109,0,73,110,118,97,108,105,100,32,115,116,97,116,101,0,68,117,112,108,105,99,97,116,101,100,32,118,97,108,117,101,0,77,105,115,115,105,110,103,32,97,99,116,105,111,110,0,65,83,78,46,49,32,109,111,100,117,108,101,32,110,111,116,32,102,111,117,110,100,0,73,110,118,97,108,105,100,32,79,73,68,32,115,116,114,105,110,103,0,73,110,118,97,108,105,100,32,116,105,109,101,0,73,110,118,97,108,105,100,32,67,82,76,32,111,98,106,101,99,116,0,85,110,115,117,112,112,111,114,116,101,100,32,67,82,76,32,118,101,114,115,105,111,110,0,73,110,118,97,108,105,100,32,99,101,114,116,105,102,105,99,97,116,101,32,111,98,106,101,99,116,0,85,110,107,110,111,119,110,32,110,97,109,101,0,65,32,108,111,99,97,108,101,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,0,78,111,116,32,108,111,99,107,101,100,0,80,114,111,116,111,99,111,108,32,118,105,111,108,97,116,105,111,110,0,73,110,118,97,108,105,100,32,77,65,67,0,73,110,118,97,108,105,100,32,114,101,113,117,101,115,116,0,85,110,107,110,111,119,110,32,101,120,116,101,110,115,105,111,110,0,85,110,107,110,111,119,110,32,99,114,105,116,105,99,97,108,32,101,120,116,101,110,115,105,111,110,0,76,111,99,107,101,100,0,85,110,107,110,111,119,110,32,111,112,116,105,111,110,0,85,110,107,110,111,119,110,32,99,111,109,109,97,110,100,0,78,111,116,32,111,112,101,114,97,116,105,111,110,97,108,0,78,111,32,112,97,115,115,112,104,114,97,115,101,32,103,105,118,101,110,0,78,111,32,80,73,78,32,103,105,118,101,110,0,78,111,116,32,101,110,97,98,108,101,100,0,78,111,32,99,114,121,112,116,111,32,101,110,103,105,110,101,0,77,105,115,115,105,110,103,32,107,101,121,0,84,111,111,32,109,97,110,121,32,111,98,106,101,99,116,115,0,76,105,109,105,116,32,114,101,97,99,104,101,100,0,78,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,77,105,115,115,105,110,103,32,105,115,115,117,101,114,32,99,101,114,116,105,102,105,99,97,116,101,0,78,111,32,107,101,121,115,101,114,118,101,114,32,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,101,108,108,105,112,116,105,99,32,99,117,114,118,101,0,85,110,107,110,111,119,110,32,101,108,108,105,112,116,105,99,32,99,117,114,118,101,0,68,117,112,108,105,99,97,116,101,100,32,107,101,121,0,65,109,98,105,103,117,111,117,115,32,114,101,115,117,108,116,0,78,111,32,99,114,121,112,116,111,32,99,111,110,116,101,120,116,0,87,114,111,110,103,32,99,114,121,112,116,111,32,99,111,110,116,101,120,116,0,66,97,100,32,99,114,121,112,116,111,32,99,111,110,116,101,120,116,0,67,111,110,102,108,105,99,116,32,105,110,32,116,104,101,32,99,114,121,112,116,111,32,99,111,110,116,101,120,116,0,66,114,111,107,101,110,32,112,117,98,108,105,99,32,107,101,121,0,66,114,111,107,101,110,32,115,101,99,114,101,116,32,107,101,121,0,79,112,101,114,97,116,105,111,110,32,102,117,108,108,121,32,99,97,110,99,101,108,108,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,121,101,116,32,102,105,110,105,115,104,101,100,0,66,117,102,102,101,114,32,116,111,111,32,115,104,111,114,116,0,73,110,118,97,108,105,100,32,108,101,110,103,116,104,32,115,112,101,99,105,102,105,101,114,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,83,116,114,105,110,103,32,116,111,111,32,108,111,110,103,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,85,110,109,97,116,99,104,101,100,32,112,97,114,101,110,116,104,101,115,101,115,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,83,45,101,120,112,114,101,115,115,105,111,110,32,110,111,116,32,99,97,110,111,110,105,99,97,108,0,66,97,100,32,99,104,97,114,97,99,116,101,114,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,66,97,100,32,113,117,111,116,97,116,105,111,110,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,90,101,114,111,32,112,114,101,102,105,120,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,78,101,115,116,101,100,32,100,105,115,112,108,97,121,32,104,105,110,116,115,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,85,110,109,97,116,99,104,101,100,32,100,105,115,112,108,97,121,32,104,105,110,116,115,0,85,110,101,120,112,101,99,116,101,100,32,114,101,115,101,114,118,101,100,32,112,117,110,99,116,117,97,116,105,111,110,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,66,97,100,32,104,101,120,97,100,101,99,105,109,97,108,32,99,104,97,114,97,99,116,101,114,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,79,100,100,32,104,101,120,97,100,101,99,105,109,97,108,32,110,117,109,98,101,114,115,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,66,97,100,32,111,99,116,97,108,32,99,104,97,114,97,99,116,101,114,32,105,110,32,83,45,101,120,112,114,101,115,115,105,111,110,0,71,101,110,101,114,97,108,32,73,80,67,32,101,114,114,111,114,0,73,80,67,32,97,99,99,101,112,116,32,99,97,108,108,32,102,97,105,108,101,100,0,73,80,67,32,99,111,110,110,101,99,116,32,99,97,108,108,32,102,97,105,108,101,100,0,73,110,118,97,108,105,100,32,73,80,67,32,114,101,115,112,111,110,115,101,0,73,110,118,97,108,105,100,32,118,97,108,117,101,32,112,97,115,115,101,100,32,116,111,32,73,80,67,0,73,110,99,111,109,112,108,101,116,101,32,108,105,110,101,32,112,97,115,115,101,100,32,116,111,32,73,80,67,0,76,105,110,101,32,112,97,115,115,101,100,32,116,111,32,73,80,67,32,116,111,111,32,108,111,110,103,0,78,101,115,116,101,100,32,73,80,67,32,99,111,109,109,97,110,100,115,0,78,111,32,100,97,116,97,32,99,97,108,108,98,97,99,107,32,105,110,32,73,80,67,0,78,111,32,105,110,113,117,105,114,101,32,99,97,108,108,98,97,99,107,32,105,110,32,73,80,67,0,78,111,116,32,97,110,32,73,80,67,32,115,101,114,118,101,114,0,78,111,116,32,97,110,32,73,80,67,32,99,108,105,101,110,116,0,80,114,111,98,108,101,109,32,115,116,97,114,116,105,110,103,32,73,80,67,32,115,101,114,118,101,114,0,73,80,67,32,114,101,97,100,32,101,114,114,111,114,0,73,80,67,32,119,114,105,116,101,32,101,114,114,111,114,0,84,111,111,32,109,117,99,104,32,100,97,116,97,32,102,111,114,32,73,80,67,32,108,97,121,101,114,0,85,110,101,120,112,101,99,116,101,100,32,73,80,67,32,99,111,109,109,97,110,100,0,85,110,107,110,111,119,110,32,73,80,67,32,99,111,109,109,97,110,100,0,73,80,67,32,115,121,110,116,97,120,32,101,114,114,111,114,0,73,80,67,32,99,97,108,108,32,104,97,115,32,98,101,101,110,32,99,97,110,99,101,108,108,101,100,0,78,111,32,105,110,112,117,116,32,115,111,117,114,99,101,32,102,111,114,32,73,80,67,0,78,111,32,111,117,116,112,117,116,32,115,111,117,114,99,101,32,102,111,114,32,73,80,67,0,73,80,67,32,112,97,114,97,109,101,116,101,114,32,101,114,114,111,114,0,85,110,107,110,111,119,110,32,73,80,67,32,105,110,113,117,105,114,101,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,49,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,50,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,51,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,52,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,53,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,54,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,55,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,56,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,57,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,49,48,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,49,49,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,49,50,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,49,51,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,49,52,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,49,53,0,85,115,101,114,32,100,101,102,105,110,101,100,32,101,114,114,111,114,32,99,111,100,101,32,49,54,0,83,121,115,116,101,109,32,101,114,114,111,114,32,119,47,111,32,101,114,114,110,111,0,85,110,107,110,111,119,110,32,115,121,115,116,101,109,32,101,114,114,111,114,0,69,110,100,32,111,102,32,102,105,108,101,0,85,110,107,110,111,119,110,32,101,114,114,111,114,32,99,111,100,101,0,0,0,0,0,0,19,0,0,0,26,0,0,0,32,0,0,0,38,0,0,0,48,0,0,0,57,0,0,0,61,0,0,0,67,0,0,0,74,0,0,0,79,0,0,0,87,0,0,0,92,0,0,0,96,0,0,0,106,0,0,0,110,0,0,0,117,0,0,0,128,0,0,0,150,0,0,0,172,0,0,0,194,0,0,0,216,0,0,0,0,0,0,0,8,0,0,0,22,0,0,0,37,0,0,0,63,0,0,0,92,0,0,0,117,0,0,0,132,0,0,0,147,0,0,0,161,0,0,0,175,0,0,0,190,0,0,0,205,0,0,0,230,0,0,0,243,0,0,0,2,1,0,0,16,1,0,0,27,1,0,0,41,1,0,0,63,1,0,0,79,1,0,0,109,1,0,0,129,1,0,0,153,1,0,0,179,1,0,0,204,1,0,0,222,1,0,0,231,1,0,0,241,1,0,0,1,2,0,0,14,2,0,0,28,2,0,0,47,2,0,0,71,2,0,0,91,2,0,0,107,2,0,0,122,2,0,0,138,2,0,0,154,2,0,0,171,2,0,0,185,2,0,0,201,2,0,0,228,2,0,0,245,2,0,0,9,3,0,0,28,3,0,0,45,3,0,0,65,3,0,0,77,3,0,0,91,3,0,0,104,3,0,0,120,3,0,0,139,3,0,0,158,3,0,0,178,3,0,0,198,3,0,0,212,3,0,0,234,3,0,0,254,3,0,0,6,4,0,0,10,4,0,0,24,4,0,0,47,4,0,0,55,4,0,0,70,4,0,0,83,4,0,0,98,4,0,0,127,4,0,0,156,4,0,0,179,4,0,0,195,4,0,0,211,4,0,0,231,4,0,0,244,4,0,0,3,5,0,0,20,5,0,0,36,5,0,0,53,5,0,0,70,5,0,0,82,5,0,0,95,5,0,0,126,5,0,0,147,5,0,0,167,5,0,0,188,5,0,0,210,5,0,0,222,5,0,0,237,5,0,0,245,5,0,0,2,6,0,0,11,6,0,0,29,6,0,0,40,6,0,0,51,6,0,0,65,6,0,0,85,6,0,0,98,6,0,0,110,6,0,0,124,6,0,0,136,6,0,0,156,6,0,0,175,6,0,0,195,6,0,0,217,6,0,0,241,6,0,0,6,7,0,0,29,7,0,0,50,7,0,0,65,7,0,0,76,7,0,0,96,7,0,0,109,7,0,0,122,7,0,0,139,7,0,0,161,7,0,0,175,7,0,0,195,7,0,0,211,7,0,0,225,7,0,0,236,7,0,0,0,8,0,0,23,8,0,0,44,8,0,0,59,8,0,0,80,8,0,0,102,8,0,0,118,8,0,0,132,8,0,0,148,8,0,0,162,8,0,0,179,8,0,0,191,8,0,0,223,8,0,0,243,8,0,0,255,8,0,0,9,9,0,0,21,9,0,0,39,9,0,0,60,9,0,0,72,9,0,0,87,9,0,0,104,9,0,0,119,9,0,0,135,9,0,0,149,9,0,0,168,9,0,0,187,9,0,0,210,9,0,0,231,9,0,0,255,9,0,0,17,10,0,0,39,10,0,0,62,10,0,0,80,10,0,0,92,10,0,0,110,10,0,0,127,10,0,0,141,10,0,0,158,10,0,0,173,10,0,0,196,10,0,0,215,10,0,0,228,10,0,0,247,10,0,0,15,11,0,0,42,11,0,0,55,11,0,0,80,11,0,0,91,11,0,0,110,11,0,0,122,11,0,0,138,11,0,0,156,11,0,0,183,11,0,0,190,11,0,0,205,11,0,0,221,11,0,0,237,11,0,0,1,12,0,0,14,12,0,0,26,12,0,0,43,12,0,0,55,12,0,0,72,12,0,0,86,12,0,0,102,12,0,0,129,12,0,0,152,12,0,0,175,12,0,0,198,12,0,0,213,12,0,0,230,12,0,0,248,12,0,0,13,13,0,0,32,13,0,0,63,13,0,0,81,13,0,0,99,13,0,0,125,13,0,0,152,13,0,0,169,13,0,0,210,13,0,0,242,13,0,0,24,14,0,0,51,14,0,0,81,14,0,0,111,14,0,0,139,14,0,0,176,14,0,0,200,14,0,0,248,14,0,0,34,15,0,0,74,15,0,0,110,15,0,0,128,15,0,0,151,15,0,0,175,15,0,0,196,15,0,0,224,15,0,0,254,15,0,0,26,16,0,0,46,16,0,0,70,16,0,0,97,16,0,0,115,16,0,0,133,16,0,0,161,16,0,0,176,16,0,0,192,16,0,0,220,16,0,0,243,16,0,0,7,17,0,0,24,17,0,0,52,17,0,0,76,17,0,0,101,17,0,0,121,17,0,0,141,17,0,0,167,17,0,0,193,17,0,0,219,17,0,0,245,17,0,0,15,18,0,0,41,18,0,0,67,18,0,0,93,18,0,0,119,18,0,0,146,18,0,0,173,18,0,0,200,18,0,0,227,18,0,0,254,18,0,0,25,19,0,0,52,19,0,0,75,19,0,0,96,19,0,0,108,19,0,0,0,0,0,0,58,103,101,110,101,114,105,99,47,109,112,105,104,45,97,100,100,49,46,99,58,103,101,110,101,114,105,99,47,109,112,105,104,45,115,117,98,49,46,99,58,103,101,110,101,114,105,99,47,109,112,105,104,45,109,117,108,49,46,99,58,103,101,110,101,114,105,99,47,109,112,105,104,45,109,117,108,50,46,99,58,103,101,110,101,114,105,99,47,109,112,105,104,45,109,117,108,51,46,99,58,103,101,110,101,114,105,99,47,109,112,105,104,45,108,115,104,105,102,116,46,99,58,103,101,110,101,114,105,99,47,109,112,105,104,45,114,115,104,105,102,116,46,99,0,0,0,0,0,0,0,0,117,50,188,188,243,33,236,236,198,67,32,32,244,201,179,179,219,3,218,218,123,139,2,2,251,43,226,226,200,250,158,158,74,236,201,201,211,9,212,212,230,107,24,24,107,159,30,30,69,14,152,152,125,56,178,178,232,210,166,166,75,183,38,38,214,87,60,60,50,138,147,147,216,238,130,130,253,152,82,82,55,212,123,123,113,55,187,187,241,151,91,91,225,131,71,71,48,60,36,36,15,226,81,81,248,198,186,186,27,243,74,74,135,72,191,191,250,112,13,13,6,179,176,176,63,222,117,117,94,253,210,210,186,32,125,125,174,49,102,102,91,163,58,58,138,28,89,89,0,0,0,0,188,147,205,205,157,224,26,26,109,44,174,174,193,171,127,127,177,199,43,43,14,185,190,190,128,160,224,224,93,16,138,138,210,82,59,59,213,186,100,100,160,136,216,216,132,165,231,231,7,232,95,95,20,17,27,27,181,194,44,44,144,180,252,252,44,39,49,49,163,101,128,128,178,42,115,115,115,129,12,12,76,95,121,121,84,65,107,107,146,2,75,75,116,105,83,83,54,143,148,148,81,31,131,131,56,54,42,42,176,156,196,196,189,200,34,34,90,248,213,213,252,195,189,189,96,120,72,72,98,206,255,255,150,7,76,76,108,119,65,65,66,230,199,199,247,36,235,235,16,20,28,28,124,99,93,93,40,34,54,54,39,192,103,103,140,175,233,233,19,249,68,68,149,234,20,20,156,187,245,245,199,24,207,207,36,45,63,63,70,227,192,192,59,219,114,114,112,108,84,84,202,76,41,41,227,53,240,240,133,254,8,8,203,23,198,198,17,79,243,243,208,228,140,140,147,89,164,164,184,150,202,202,166,59,104,104,131,77,184,184,32,40,56,56,255,46,229,229,159,86,173,173,119,132,11,11,195,29,200,200,204,255,153,153,3,237,88,88,111,154,25,25,8,10,14,14,191,126,149,149,64,80,112,112,231,48,247,247,43,207,110,110,226,110,31,31,121,61,181,181,12,15,9,9,170,52,97,97,130,22,87,87,65,11,159,159,58,128,157,157,234,100,17,17,185,205,37,37,228,221,175,175,154,8,69,69,164,141,223,223,151,92,163,163,126,213,234,234,218,88,53,53,122,208,237,237,23,252,67,67,102,203,248,248,148,177,251,251,161,211,55,55,29,64,250,250,61,104,194,194,240,204,180,180,222,93,50,50,179,113,156,156,11,231,86,86,114,218,227,227,167,96,135,135,28,27,21,21,239,58,249,249,209,191,99,99,83,169,52,52,62,133,154,154,143,66,177,177,51,209,124,124,38,155,136,136,95,166,61,61,236,215,161,161,118,223,228,228,42,148,129,129,73,1,145,145,129,251,15,15,136,170,238,238,238,97,22,22,33,115,215,215,196,245,151,151,26,168,165,165,235,63,254,254,217,181,109,109,197,174,120,120,57,109,197,197,153,229,29,29,205,164,118,118,173,220,62,62,49,103,203,203,139,71,182,182,1,91,239,239,24,30,18,18,35,197,96,96,221,176,106,106,31,246,77,77,78,233,206,206,45,124,222,222,249,157,85,85,72,90,126,126,79,178,33,33,242,122,3,3,101,38,160,160,142,25,94,94,120,102,90,90,92,75,101,101,88,78,98,98,25,69,253,253,141,244,6,6,229,134,64,64,152,190,242,242,87,172,51,51,103,144,23,23,127,142,5,5,5,94,232,232,100,125,79,79,175,106,137,137,99,149,16,16,182,47,116,116,254,117,10,10,245,146,92,92,183,116,155,155,60,51,45,45,165,214,48,48,206,73,46,46,233,137,73,73,104,114,70,70,68,85,119,119,224,216,168,168,77,4,150,150,67,189,40,40,105,41,169,169,41,121,217,217,46,145,134,134,172,135,209,209,21,74,244,244,89,21,141,141,168,130,214,214,10,188,185,185,158,13,66,66,110,193,246,246,71,184,47,47,223,6,221,221,52,57,35,35,53,98,204,204,106,196,241,241,207,18,193,193,220,235,133,133,34,158,143,143,201,161,113,113,192,240,144,144,155,83,170,170,137,241,1,1,212,225,139,139,237,140,78,78,171,111,142,142,18,162,171,171,162,62,111,111,13,84,230,230,82,242,219,219,187,123,146,146,2,182,183,183,47,202,105,105,169,217,57,57,215,12,211,211,97,35,167,167,30,173,162,162,180,153,195,195,80,68,108,108,4,5,7,7,246,127,4,4,194,70,39,39,22,167,172,172,37,118,208,208,134,19,80,80,86,247,220,220,85,26,132,132,9,81,225,225,190,37,122,122,145,239,19,19,57,57,217,169,23,23,144,103,156,156,113,179,166,166,210,232,7,7,5,4,82,82,152,253,128,128,101,163,228,228,223,118,69,69,8,154,75,75,2,146,224,224,160,128,90,90,102,120,175,175,221,228,106,106,176,221,99,99,191,209,42,42,54,56,230,230,84,13,32,32,67,198,204,204,98,53,242,242,190,152,18,18,30,24,235,235,36,247,161,161,215,236,65,65,119,108,40,40,189,67,188,188,50,117,123,123,212,55,136,136,155,38,13,13,112,250,68,68,249,19,251,251,177,148,126,126,90,72,3,3,122,242,140,140,228,208,182,182,71,139,36,36,60,48,231,231,165,132,107,107,65,84,221,221,6,223,96,96,197,35,253,253,69,25,58,58,163,91,194,194,104,61,141,141,21,89,236,236,33,243,102,102,49,174,111,111,62,162,87,87,22,130,16,16,149,99,239,239,91,1,184,184,77,131,134,134,145,46,109,109,181,217,131,131,31,81,170,170,83,155,93,93,99,124,104,104,59,166,254,254,63,235,48,48,214,165,122,122,37,190,172,172,167,22,9,9,15,12,240,240,53,227,167,167,35,97,144,144,240,192,233,233,175,140,157,157,128,58,92,92,146,245,12,12,129,115,49,49,39,44,208,208,118,37,86,86,231,11,146,146,123,187,206,206,233,78,1,1,241,137,30,30,159,107,52,52,169,83,241,241,196,106,195,195,153,180,91,91,151,241,71,71,131,225,24,24,107,230,34,34,200,189,152,152,14,69,31,31,110,226,179,179,201,244,116,116,47,182,248,248,203,102,153,153,255,204,20,20,234,149,88,88,237,3,220,220,247,86,139,139,225,212,21,21,27,28,162,162,173,30,211,211,12,215,226,226,43,251,200,200,29,195,94,94,25,142,44,44,194,181,73,73,137,233,193,193,18,207,149,149,126,191,125,125,32,186,17,17,100,234,11,11,132,119,197,197,109,57,137,137,106,175,124,124,209,51,113,113,161,201,255,255,206,98,187,187,55,113,15,15,251,129,181,181,61,121,225,225,81,9,62,62,220,173,63,63,45,36,118,118,164,205,85,85,157,249,130,130,238,216,64,64,134,229,120,120,174,197,37,37,205,185,150,150,4,77,119,119,85,68,14,14,10,8,80,80,19,134,247,247,48,231,55,55,211,161,250,250,64,29,97,97,52,170,78,78,140,237,176,176,179,6,84,84,108,112,115,115,42,178,59,59,82,210,159,159,11,65,2,2,139,123,216,216,136,160,243,243,79,17,203,203,103,49,39,39,70,194,103,103,192,39,252,252,180,144,56,56,40,32,4,4,127,246,72,72,120,96,229,229,46,255,76,76,7,150,101,101,75,92,43,43,199,177,142,142,111,171,66,66,13,158,245,245,187,156,219,219,242,82,74,74,243,27,61,61,166,95,164,164,89,147,185,185,188,10,249,249,58,239,19,19,239,145,8,8,254,133,145,145,1,73,22,22,97,238,222,222,124,45,33,33,178,79,177,177,66,143,114,114,219,59,47,47,184,71,191,191,72,135,174,174,44,109,192,192,227,70,60,60,87,214,154,154,133,62,169,169,41,105,79,79,125,100,129,129,148,42,46,46,73,206,198,198,23,203,105,105,202,47,189,189,195,252,163,163,92,151,232,232,94,5,237,237,208,122,209,209,135,172,5,5,142,127,100,100,186,213,165,165,168,26,38,38,183,75,190,190,185,14,135,135,96,167,213,213,248,90,54,54,34,40,27,27,17,20,117,117,222,63,217,217,121,41,238,238,170,136,45,45,51,60,121,121,95,76,183,183,182,2,202,202,150,184,53,53,88,218,196,196,156,176,67,67,252,23,132,132,26,85,77,77,246,31,89,89,28,138,178,178,56,125,51,51,172,87,207,207,24,199,6,6,244,141,83,83,105,116,155,155,116,183,151,151,245,196,173,173,86,159,227,227,218,114,234,234,213,126,244,244,74,21,143,143,158,34,171,171,162,18,98,98,78,88,95,95,232,7,29,29,229,153,35,35,57,52,246,246,193,110,108,108,68,80,50,50,93,222,70,70,114,104,160,160,38,101,205,205,147,188,218,218,3,219,186,186,198,248,158,158,250,200,214,214,130,168,110,110,207,43,112,112,80,64,133,133,235,220,10,10,117,254,147,147,138,50,223,223,141,164,41,41,76,202,28,28,20,16,215,215,115,33,180,180,204,240,212,212,9,211,138,138,16,93,81,81,226,15,0,0,0,0,25,25,154,111,26,26,224,157,148,148,143,54,199,199,230,66,201,201,236,74,210,210,253,94,127,127,171,193,168,168,216,224,50,188,117,188,33,236,243,236,67,32,198,32,201,179,244,179,3,218,219,218,139,2,123,2,43,226,251,226,250,158,200,158,236,201,74,201,9,212,211,212,107,24,230,24,159,30,107,30,14,152,69,152,56,178,125,178,210,166,232,166,183,38,75,38,87,60,214,60,138,147,50,147,238,130,216,130,152,82,253,82,212,123,55,123,55,187,113,187,151,91,241,91,131,71,225,71,60,36,48,36,226,81,15,81,198,186,248,186,243,74,27,74,72,191,135,191,112,13,250,13,179,176,6,176,222,117,63,117,253,210,94,210,32,125,186,125,49,102,174,102,163,58,91,58,28,89,138,89,0,0,0,0,147,205,188,205,224,26,157,26,44,174,109,174,171,127,193,127,199,43,177,43,185,190,14,190,160,224,128,224,16,138,93,138,82,59,210,59,186,100,213,100,136,216,160,216,165,231,132,231,232,95,7,95,17,27,20,27,194,44,181,44,180,252,144,252,39,49,44,49,101,128,163,128,42,115,178,115,129,12,115,12,95,121,76,121,65,107,84,107,2,75,146,75,105,83,116,83,143,148,54,148,31,131,81,131,54,42,56,42,156,196,176,196,200,34,189,34,248,213,90,213,195,189,252,189,120,72,96,72,206,255,98,255,7,76,150,76,119,65,108,65,230,199,66,199,36,235,247,235,20,28,16,28,99,93,124,93,34,54,40,54,192,103,39,103,175,233,140,233,249,68,19,68,234,20,149,20,187,245,156,245,24,207,199,207,45,63,36,63,227,192,70,192,219,114,59,114,108,84,112,84,76,41,202,41,53,240,227,240,254,8,133,8,23,198,203,198,79,243,17,243,228,140,208,140,89,164,147,164,150,202,184,202,59,104,166,104,77,184,131,184,40,56,32,56,46,229,255,229,86,173,159,173,132,11,119,11,29,200,195,200,255,153,204,153,237,88,3,88,154,25,111,25,10,14,8,14,126,149,191,149,80,112,64,112,48,247,231,247,207,110,43,110,110,31,226,31,61,181,121,181,15,9,12,9,52,97,170,97,22,87,130,87,11,159,65,159,128,157,58,157,100,17,234,17,205,37,185,37,221,175,228,175,8,69,154,69,141,223,164,223,92,163,151,163,213,234,126,234,88,53,218,53,208,237,122,237,252,67,23,67,203,248,102,248,177,251,148,251,211,55,161,55,64,250,29,250,104,194,61,194,204,180,240,180,93,50,222,50,113,156,179,156,231,86,11,86,218,227,114,227,96,135,167,135,27,21,28,21,58,249,239,249,191,99,209,99,169,52,83,52,133,154,62,154,66,177,143,177,209,124,51,124,155,136,38,136,166,61,95,61,215,161,236,161,223,228,118,228,148,129,42,129,1,145,73,145,251,15,129,15,170,238,136,238,97,22,238,22,115,215,33,215,245,151,196,151,168,165,26,165,63,254,235,254,181,109,217,109,174,120,197,120,109,197,57,197,229,29,153,29,164,118,205,118,220,62,173,62,103,203,49,203,71,182,139,182,91,239,1,239,30,18,24,18,197,96,35,96,176,106,221,106,246,77,31,77,233,206,78,206,124,222,45,222,157,85,249,85,90,126,72,126,178,33,79,33,122,3,242,3,38,160,101,160,25,94,142,94,102,90,120,90,75,101,92,101,78,98,88,98,69,253,25,253,244,6,141,6,134,64,229,64,190,242,152,242,172,51,87,51,144,23,103,23,142,5,127,5,94,232,5,232,125,79,100,79,106,137,175,137,149,16,99,16,47,116,182,116,117,10,254,10,146,92,245,92,116,155,183,155,51,45,60,45,214,48,165,48,73,46,206,46,137,73,233,73,114,70,104,70,85,119,68,119,216,168,224,168,4,150,77,150,189,40,67,40,41,169,105,169,121,217,41,217,145,134,46,134,135,209,172,209,74,244,21,244,21,141,89,141,130,214,168,214,188,185,10,185,13,66,158,66,193,246,110,246,184,47,71,47,6,221,223,221,57,35,52,35,98,204,53,204,196,241,106,241,18,193,207,193,235,133,220,133,158,143,34,143,161,113,201,113,240,144,192,144,83,170,155,170,241,1,137,1,225,139,212,139,140,78,237,78,111,142,171,142,162,171,18,171,62,111,162,111,84,230,13,230,242,219,82,219,123,146,187,146,182,183,2,183,202,105,47,105,217,57,169,57])
.concat([12,211,215,211,35,167,97,167,173,162,30,162,153,195,180,195,68,108,80,108,5,7,4,7,127,4,246,4,70,39,194,39,167,172,22,172,118,208,37,208,19,80,134,80,247,220,86,220,26,132,85,132,81,225,9,225,37,122,190,122,239,19,145,19,217,169,57,217,144,103,23,144,113,179,156,113,210,232,166,210,5,4,7,5,152,253,82,152,101,163,128,101,223,118,228,223,8,154,69,8,2,146,75,2,160,128,224,160,102,120,90,102,221,228,175,221,176,221,106,176,191,209,99,191,54,56,42,54,84,13,230,84,67,198,32,67,98,53,204,98,190,152,242,190,30,24,18,30,36,247,235,36,215,236,161,215,119,108,65,119,189,67,40,189,50,117,188,50,212,55,123,212,155,38,136,155,112,250,13,112,249,19,68,249,177,148,251,177,90,72,126,90,122,242,3,122,228,208,140,228,71,139,182,71,60,48,36,60,165,132,231,165,65,84,107,65,6,223,221,6,197,35,96,197,69,25,253,69,163,91,58,163,104,61,194,104,21,89,141,21,33,243,236,33,49,174,102,49,62,162,111,62,22,130,87,22,149,99,16,149,91,1,239,91,77,131,184,77,145,46,134,145,181,217,109,181,31,81,131,31,83,155,170,83,99,124,93,99,59,166,104,59,63,235,254,63,214,165,48,214,37,190,122,37,167,22,172,167,15,12,9,15,53,227,240,53,35,97,167,35,240,192,144,240,175,140,233,175,128,58,157,128,146,245,92,146,129,115,12,129,39,44,49,39,118,37,208,118,231,11,86,231,123,187,146,123,233,78,206,233,241,137,1,241,159,107,30,159,169,83,52,169,196,106,241,196,153,180,195,153,151,241,91,151,131,225,71,131,107,230,24,107,200,189,34,200,14,69,152,14,110,226,31,110,201,244,179,201,47,182,116,47,203,102,248,203,255,204,153,255,234,149,20,234,237,3,88,237,247,86,220,247,225,212,139,225,27,28,21,27,173,30,162,173,12,215,211,12,43,251,226,43,29,195,200,29,25,142,94,25,194,181,44,194,137,233,73,137,18,207,193,18,126,191,149,126,32,186,125,32,100,234,17,100,132,119,11,132,109,57,197,109,106,175,137,106,209,51,124,209,161,201,113,161,206,98,255,206,55,113,187,55,251,129,15,251,61,121,181,61,81,9,225,81,220,173,62,220,45,36,63,45,164,205,118,164,157,249,85,157,238,216,130,238,134,229,64,134,174,197,120,174,205,185,37,205,4,77,150,4,85,68,119,85,10,8,14,10,19,134,80,19,48,231,247,48,211,161,55,211,64,29,250,64,52,170,97,52,140,237,78,140,179,6,176,179,108,112,84,108,42,178,115,42,82,210,59,82,11,65,159,11,139,123,2,139,136,160,216,136,79,17,243,79,103,49,203,103,70,194,39,70,192,39,103,192,180,144,252,180,40,32,56,40,127,246,4,127,120,96,72,120,46,255,229,46,7,150,76,7,75,92,101,75,199,177,43,199,111,171,142,111,13,158,66,13,187,156,245,187,242,82,219,242,243,27,74,243,166,95,61,166,89,147,164,89,188,10,185,188,58,239,249,58,239,145,19,239,254,133,8,254,1,73,145,1,97,238,22,97,124,45,222,124,178,79,33,178,66,143,177,66,219,59,114,219,184,71,47,184,72,135,191,72,44,109,174,44,227,70,192,227,87,214,60,87,133,62,154,133,41,105,169,41,125,100,79,125,148,42,129,148,73,206,46,73,23,203,198,23,202,47,105,202,195,252,189,195,92,151,163,92,94,5,232,94,208,122,237,208,135,172,209,135,142,127,5,142,186,213,100,186,168,26,165,168,183,75,38,183,185,14,190,185,96,167,135,96,248,90,213,248,34,40,54,34,17,20,27,17,222,63,117,222,121,41,217,121,170,136,238,170,51,60,45,51,95,76,121,95,182,2,183,182,150,184,202,150,88,218,53,88,156,176,196,156,252,23,67,252,26,85,132,26,246,31,77,246,28,138,89,28,56,125,178,56,172,87,51,172,24,199,207,24,244,141,6,244,105,116,83,105,116,183,155,116,245,196,151,245,86,159,173,86,218,114,227,218,213,126,234,213,74,21,244,74,158,34,143,158,162,18,171,162,78,88,98,78,232,7,95,232,229,153,29,229,57,52,35,57,193,110,246,193,68,80,108,68,93,222,50,93,114,104,70,114,38,101,160,38,147,188,205,147,3,219,218,3,198,248,186,198,250,200,158,250,130,168,214,130,207,43,110,207,80,64,112,80,235,220,133,235,117,254,10,117,138,50,147,138,141,164,223,141,76,202,41,76,20,16,28,20,115,33,215,115,204,240,180,204,9,211,212,9,16,93,138,16,226,15,81,226,0,0,0,0,154,111,25,154,224,157,26,224,143,54,148,143,230,66,199,230,236,74,201,236,253,94,210,253,171,193,127,171,216,224,168,216,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,0,0,0,0,1,1,0,0,1,0,1,0,1,1,1,0,1,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,55,206,57,58,207,245,250,211,55,119,194,171,27,45,197,90,158,103,176,92,66,55,163,79,64,39,130,211,190,155,188,153,157,142,17,213,21,115,15,191,126,28,45,214,123,196,0,199,107,27,140,183,69,144,161,33,190,177,110,178,180,110,54,106,47,171,72,87,121,110,148,188,210,118,163,198,200,194,73,101,238,248,15,83,125,222,141,70,29,10,115,213,198,77,208,76,219,187,57,41,80,70,186,169,232,38,149,172,4,227,94,190,240,213,250,161,154,81,45,106,226,140,239,99,34,238,134,154,184,194,137,192,246,46,36,67,170,3,30,165,164,208,242,156,186,97,192,131,77,106,233,155,80,21,229,143,214,91,100,186,249,162,38,40,225,58,58,167,134,149,169,75,233,98,85,239,211,239,47,199,218,247,82,247,105,111,4,63,89,10,250,119,21,169,228,128,1,134,176,135,173,230,9,155,147,229,62,59,90,253,144,233,151,215,52,158,217,183,240,44,81,139,43,2,58,172,213,150,125,166,125,1,214,62,207,209,40,45,125,124,207,37,159,31,155,184,242,173,114,180,214,90,76,245,136,90,113,172,41,224,230,165,25,224,253,172,176,71,155,250,147,237,141,196,211,232,204,87,59,40,41,102,213,248,40,46,19,121,145,1,95,120,85,96,117,237,68,14,150,247,140,94,211,227,212,109,5,21,186,109,244,136,37,97,161,3,189,240,100,5,21,158,235,195,162,87,144,60,236,26,39,151,42,7,58,169,155,109,63,27,245,33,99,30,251,102,156,245,25,243,220,38,40,217,51,117,245,253,85,177,130,52,86,3,187,60,186,138,17,119,81,40,248,217,10,194,103,81,204,171,95,146,173,204,81,23,232,77,142,220,48,56,98,88,157,55,145,249,32,147,194,144,122,234,206,123,62,251,100,206,33,81,50,190,79,119,126,227,182,168,70,61,41,195,105,83,222,72,128,230,19,100,16,8,174,162,36,178,109,221,253,45,133,105,102,33,7,9,10,70,154,179,221,192,69,100,207,222,108,88,174,200,32,28,221,247,190,91,64,141,88,27,127,1,210,204,187,227,180,107,126,106,162,221,69,255,89,58,68,10,53,62,213,205,180,188,168,206,234,114,187,132,100,250,174,18,102,141,71,111,60,191,99,228,155,210,158,93,47,84,27,119,194,174,112,99,78,246,141,13,14,116,87,19,91,231,113,22,114,248,93,125,83,175,8,203,64,64,204,226,180,78,106,70,210,52,132,175,21,1,40,4,176,225,29,58,152,149,180,159,184,6,72,160,110,206,130,59,63,111,130,171,32,53,75,29,26,1,248,39,114,39,177,96,21,97,220,63,147,231,43,121,58,187,189,37,69,52,225,57,136,160,75,121,206,81,183,201,50,47,201,186,31,160,126,200,28,224,246,209,199,188,195,17,1,207,199,170,232,161,73,135,144,26,154,189,79,212,203,222,218,208,56,218,10,213,42,195,57,3,103,54,145,198,124,49,249,141,79,43,177,224,183,89,158,247,58,187,245,67,255,25,213,242,156,69,217,39,44,34,151,191,42,252,230,21,113,252,145,15,37,21,148,155,97,147,229,250,235,156,182,206,89,100,168,194,209,168,186,18,94,7,193,182,12,106,5,227,101,80,210,16,66,164,3,203,14,110,236,224,59,219,152,22,190,160,152,76,100,233,120,50,50,149,31,159,223,146,211,224,43,52,160,211,30,242,113,137,65,116,10,27,140,52,163,75,32,113,190,197,216,50,118,195,141,159,53,223,46,47,153,155,71,111,11,230,29,241,227,15,84,218,76,229,145,216,218,30,207,121,98,206,111,126,62,205,102,177,24,22,5,29,44,253,197,210,143,132,153,34,251,246,87,243,35,245,35,118,50,166,49,53,168,147,2,205,204,86,98,129,240,172,181,235,117,90,151,54,22,110,204,115,210,136,146,98,150,222,208,73,185,129,27,144,80,76,20,86,198,113,189,199,198,230,10,20,122,50,6,208,225,69,154,123,242,195,253,83,170,201,0,15,168,98,226,191,37,187,246,210,189,53,5,105,18,113,34,2,4,178,124,207,203,182,43,156,118,205,192,62,17,83,211,227,64,22,96,189,171,56,240,173,71,37,156,32,56,186,118,206,70,247,197,161,175,119,96,96,117,32,78,254,203,133,216,141,232,138,176,249,170,122,126,170,249,76,92,194,72,25,140,138,251,2,228,106,195,1,249,225,235,214,105,248,212,144,160,222,92,166,45,37,9,63,159,230,8,194,50,97,78,183,91,226,119,206,227,223,143,87,230,114,195,58,104,90,61,233,247,64,129,148,28,38,76,246,52,41,105,148,247,32,21,65,247,212,2,118,46,107,244,188,104,0,162,212,113,36,8,212,106,244,32,51,183,212,183,67,175,97,0,80,46,246,57,30,70,69,36,151,116,79,33,20,64,136,139,191,29,252,149,77,175,145,181,150,211,221,244,112,69,47,160,102,236,9,188,191,133,151,189,3,208,109,172,127,4,133,203,49,179,39,235,150,65,57,253,85,230,71,37,218,154,10,202,171,37,120,80,40,244,41,4,83,218,134,44,10,251,109,182,233,98,20,220,104,0,105,72,215,164,192,14,104,238,141,161,39,162,254,63,79,140,173,135,232,6,224,140,181,182,214,244,122,124,30,206,170,236,95,55,211,153,163,120,206,66,42,107,64,53,158,254,32,185,133,243,217,171,215,57,238,139,78,18,59,247,250,201,29,86,24,109,75,49,102,163,38,178,151,227,234,116,250,110,58,50,67,91,221,247,231,65,104,251,32,120,202,78,245,10,251,151,179,254,216,172,86,64,69,39,149,72,186,58,58,83,85,135,141,131,32,183,169,107,254,75,149,150,208,188,103,168,85,88,154,21,161,99,41,169,204,51,219,225,153,86,74,42,166,249,37,49,63,28,126,244,94,124,49,41,144,2,232,248,253,112,47,39,4,92,21,187,128,227,44,40,5,72,21,193,149,34,109,198,228,63,19,193,72,220,134,15,199,238,201,249,7,15,31,4,65,164,121,71,64,23,110,136,93,235,81,95,50,209,192,155,213,143,193,188,242,100,53,17,65,52,120,123,37,96,156,42,96,163,232,248,223,27,108,99,31,194,180,18,14,158,50,225,2,209,79,102,175,21,129,209,202,224,149,35,107,225,146,62,51,98,11,36,59,34,185,190,238,14,162,178,133,153,13,186,230,140,12,114,222,40,247,162,45,69,120,18,208,253,148,183,149,98,8,125,100,240,245,204,231,111,163,73,84,250,72,125,135,39,253,157,195,30,141,62,243,65,99,71,10,116,255,46,153,171,110,111,58,55,253,248,244,96,220,18,168,248,221,235,161,76,225,27,153,13,107,110,219,16,85,123,198,55,44,103,109,59,212,101,39,4,232,208,220,199,13,41,241,163,255,0,204,146,15,57,181,11,237,15,105,251,159,123,102,156,125,219,206,11,207,145,160,163,94,21,217,136,47,19,187,36,173,91,81,191,121,148,123,235,214,59,118,179,46,57,55,121,89,17,204,151,226,38,128,45,49,46,244,167,173,66,104,59,43,106,198,204,76,117,18,28,241,46,120,55,66,18,106,231,81,146,183,230,187,161,6,80,99,251,75,24,16,107,26,250,237,202,17,216,189,37,61,201,195,225,226,89,22,66,68,134,19,18,10,110,236,12,217,42,234,171,213,78,103,175,100,95,168,134,218,136,233,191,190,254,195,228,100,87,128,188,157,134,192,247,240,248,123,120,96,77,96,3,96,70,131,253,209,176,31,56,246,4,174,69,119,204,252,54,215,51,107,66,131,113,171,30,240,135,65,128,176,95,94,0,60,190,87,160,119,36,174,232,189,153,66,70,85,97,46,88,191,143,244,88,78,162,253,221,242,56,239,116,244,194,189,137,135,195,249,102,83,116,142,179,200,85,242,117,180,185,217,252,70,97,38,235,122,132,223,29,139,121,14,106,132,226,149,95,145,142,89,110,70,112,87,180,32,145,85,213,140,76,222,2,201,225,172,11,185,208,5,130,187,72,98,168,17,158,169,116,117,182,25,127,183,9,220,169,224,161,9,45,102,51,70,50,196,2,31,90,232,140,190,240,9,37,160,153,74,16,254,110,29,29,61,185,26,223,164,165,11,15,242,134,161,105,241,104,40,131,218,183,220,254,6,57,87,155,206,226,161,82,127,205,79,1,94,17,80,250,131,6,167,196,181,2,160,39,208,230,13,39,140,248,154,65,134,63,119,6,76,96,195,181,6,168,97,40,122,23,240,224,134,245,192,170,88,96,0,98,125,220,48,215,158,230,17,99,234,56,35,148,221,194,83,52,22,194,194,86,238,203,187,222,182,188,144,161,125,252,235,118,29,89,206,9,228,5,111,136,1,124,75,61,10,114,57,36,124,146,124,95,114,227,134,185,157,77,114,180,91,193,26,252,184,158,211,120,85,84,237,181,165,252,8,211,124,61,216,196,15,173,77,94,239,80,30,248,230,97,177,217,20,133,162,60,19,81,108,231,199,213,111,196,78,225,86,206,191,42,54,55,200,198,221,52,50,154,215,18,130,99,146,142,250,14,103,224,0,96,64,233,112,122,75,68,41,179,181,46,9,117,219,35,38,25,196,176,166,110,173,125,223,167,73,184,96,238,156,102,178,237,143,113,140,170,236,255,23,154,105,108,82,100,86,225,158,177,194,165,2,54,25,41,76,9,117,64,19,89,160,62,58,24,228,154,152,84,63,101,157,66,91,214,228,143,107,214,63,247,153,7,156,210,161,245,48,232,239,230,56,45,77,193,93,37,240,134,32,221,76,38,235,112,132,198,233,130,99,94,204,30,2,63,107,104,9,201,239,186,62,20,24,151,60,161,112,106,107,132,53,127,104,134,226,160,82,5,83,156,183,55,7,80,170,28,132,7,62,92,174,222,127,236,68,125,142,184,242,22,87,55,218,58,176,13,12,80,240,4,31,28,240,255,179,0,2,26,245,12,174,178,116,181,60,88,122,131,37,189,33,9,220,249,19,145,209,246,47,169,124,115,71,50,148,1,71,245,34,129,229,229,58,220,218,194,55,52,118,181,200,167,221,243,154,70,97,68,169,14,3,208,15,62,199,200,236,65,30,117,164,153,205,56,226,47,14,234,59,161,187,128,50,49,179,62,24,56,139,84,78,8,185,109,79,3,13,66,111,191,4,10,246,144,18,184,44,121,124,151,36,114,176,121,86,175,137,175,188,31,119,154,222,16,8,147,217,18,174,139,179,46,63,207,220,31,114,18,85,36,113,107,46,230,221,26,80,135,205,132,159,24,71,88,122,23,218,8,116,188,154,159,188,140,125,75,233,58,236,122,236,250,29,133,219,102,67,9,99,210,195,100,196,71,24,28,239,8,217,21,50,55,59,67,221,22,186,194,36,67,77,161,18,81,196,101,42,2,0,148,80,221,228,58,19,158,248,223,113,85,78,49,16,214,119,172,129,155,25,17,95,241,86,53,4,107,199,163,215,59,24,17,60,9,165,36,89,237,230,143,242,250,251,241,151,44,191,186,158,110,60,21,30,112,69,227,134,177,111,233,234,10,94,14,134,179,42,62,90,28,231,31,119,250,6,61,78,185,220,101,41,15,29,231,153,214,137,62,128,37,200,102,82,120,201,76,46,106,179,16,156,186,14,21,198,120,234,226,148,83,60,252,165,244,45,10,30,167,78,247,242,61,43,29,54,15,38,57,25,96,121,194,25,8,167,35,82,182,18,19,247,110,254,173,235,102,31,195,234,149,69,188,227,131,200,123,166,209,55,127,177,40,255,140,1,239,221,50,195,165,90,108,190,133,33,88,101,2,152,171,104,15,165,206,238,59,149,47,219,173,125,239,42,132,47,110,91,40,182,33,21,112,97,7,41,117,71,221,236,16,21,159,97,48,168,204,19,150,189,97,235,30,254,52,3,207,99,3,170,144,92,115,181,57,162,112,76,11,158,158,213,20,222,170,203,188,134,204,238,167,44,98,96,171,92,171,156,110,132,243,178,175,30,139,100,202,240,189,25,185,105,35,160,80,187,90,101,50,90,104,64,179,180,42,60,213,233,158,49,247,184,33,192,25,11,84,155,153,160,95,135,126,153,247,149,168,125,61,98,154,136,55,248,119,45,227,151,95,147,237,17,129,18,104,22,41,136,53,14,214,31,230,199,161,223,222,150,153,186,88,120,165,132,245,87,99,114,34,27,255,195,131,155,150,70,194,26,235,10,179,205,84,48,46,83,228,72,217,143,40,49,188,109,239,242,235,88,234,255,198,52,97,237,40,254,115,60,124,238,217,20,74,93,227,183,100,232,20,93,16,66,224,19,62,32,182,226,238,69,234,171,170,163,21,79,108,219,208,79,203,250,66,244,66,199,181,187,106,239,29,59,79,101,5,33,205,65,158,121,30,216,199,77,133,134,106,71,75,228,80,98,129,61,242,161,98,207,70,38,141,91,160,131,136,252,163,182,199,193,195,36,21,127,146,116,203,105,11,138,132,71,133,178,146,86,0,191,91,9,157,72,25,173,116,177,98,20,0,14,130,35,42,141,66,88,234,245,85,12,62,244,173,29,97,112,63,35,146,240,114,51,65,126,147,141,241,236,95,214,219,59,34,108,89,55,222,124,96,116,238,203,167,242,133,64,110,50,119,206,132,128,7,166,158,80,248,25,85,216,239,232,53,151,217,97,170,167,105,169,194,6,12,197,252,171,4,90,220,202,11,128,46,122,68,158,132,52,69,195,5,103,213,253,201,158,30,14,211,219,115,219,205,136,85,16,121,218,95,103,64,67,103,227,101,52,196,197,216,56,62,113,158,248,40,61,32,255,109,241,231,33,62,21,74,61,176,143,43,159,227,230,247,173,131,219,166,11,49,209,172,181,223,152,219,114,253,47,183,223,26,208,237,175,225,184,150,126,38,106,69,144,124,186,153,127,44,241,71,153,161,36,247,108,145,179,226,242,1,8,22,252,142,133,216,32,105,99,105,78,87,113,163,254,88,164,126,61,147,244,143,116,149,13,88,182,142,114,88,205,139,113,238,74,21,130,29,164,84,123,181,89,90,194,57,213,48,156,19,96,242,42,35,176,209,197,240,133,96,40,24,121,65,202,239,56,219,184,176,220,121,142,14,24,58,96,139,14,158,108,62,138,30,176,193,119,21,215,39,75,49,189,218,47,175,120,96,92,96,85,243,37,85,230,148,171,85,170,98,152,72,87,64,20,232,99,106,57,202,85,182,16,171,42,52,92,204,180,206,232,65,17,175,134,84,161,147,233,114,124,17,20,238,179,42,188,111,99,93,197,169,43,246,49,24,116,22,62,92,206,30,147,135,155,51,186,214,175,92,207,36,108,129,83,50,122,119,134,149,40,152,72,143,59,175,185,75,107,27,232,191,196,147,33,40,102,204,9,216,97,145,169,33,251,96,172,124,72,50,128,236,93,93,93,132,239,177,117,133,233,2,35,38,220,136,27,101,235,129,62,137,35,197,172,150,211,243,111,109,15,57,66,244,131,130,68,11,46,4,32,132,164,74,240,200,105,94,155,31,158,66,104,198,33,154,108,233,246,97,156,12,103,240,136,211,171,210,160,81,106,104,47,84,216,40,167,15,150,163,51,81,171,108,11,239,110,228,59,122,19,80,240,59,186,152,42,251,126,29,101,241,161,118,1,175,57,62,89,202,102,136,14,67,130,25,134,238,140,180,159,111,69,195,165,132,125,190,94,139,59,216,117,111,224,115,32,193,133,159,68,26,64,166,106,193,86,98,170,211,78,6,119,63,54,114,223,254,27,61,2,155,66,36,215,208,55,72,18,10,208,211,234,15,219,155,192,241,73,201,114,83,7,123,27,153,128,216,121,212,37,247,222,232,246,26,80,254,227,59,76,121,182,189,224,108,151,186,6,192,4,182,79,169,193,196,96,159,64,194,158,92,94,99,36,106,25,175,111,251,104,181,83,108,62,235,178,57,19,111,236,82,59,31,81,252,109,44,149,48,155,68,69,129,204,9,189,94,175,4,208,227,190,253,74,51,222,7,40,15,102,179,75,46,25,87,168,203,192,15,116,200,69,57,95,11,210,219,251,211,185,189,192,121,85,10,50,96,26,198,0,161,214,121,114,44,64,254,37,159,103,204,163,31,251,248,233,165,142,248,34,50,219,223,22,117,60,21,107,97,253,200,30,80,47,171,82,5,173,250,181,61,50,96,135,35,253,72,123,49,83,130,223,0,62,187,87,92,158,160,140,111,202,46,86,135,26,219,105,23,223,246,168,66,213,195,255,126,40,198,50,103,172,115,85,79,140,176,39,91,105,200,88,202,187,93,163,255,225,160,17,240,184,152,61,250,16,184,131,33,253,108,181,252,74,91,211,209,45,121,228,83,154,101,69,248,182,188,73,142,210,144,151,251,75,218,242,221,225,51,126,203,164,65,19,251,98,232,198,228,206,218,202,32,239,1,76,119,54,254,158,126,208,180,31,241,43,77,218,219,149,152,145,144,174,113,142,173,234,160,213,147,107,208,209,142,208,224,37,199,175,47,91,60,142,183,148,117,142,251,226,246,143,100,43,18,242,18,184,136,136,28,240,13,144,160,94,173,79,28,195,143,104,145,241,207,209,173,193,168,179,24,34,47,47,119,23,14,190,254,45,117,234,161,31,2,139,15,204,160,229,232,116,111,181,214,243,172,24,153,226,137,206,224,79,168,180,183,224,19,253,129,59,196,124,217,168,173,210,102,162,95,22,5,119,149,128,20,115,204,147,119,20,26,33,101,32,173,230,134,250,181,119,245,66,84,199,207,53,157,251,12,175,205,235,160,137,62,123,211,27,65,214,73,126,30,174,45,14,37,0,94,179,113,32,187,0,104,34,175,224,184,87,155,54,100,36,30,185,9,240,29,145,99,85,170,166,223,89,137,67,193,120,127,83,90,217,162,91,125,32,197,185,229,2,118,3,38,131,169,207,149,98,104,25,200,17,65,74,115,78,202,45,71,179,74,169,20,123,82,0,81,27,21,41,83,154,63,87,15,214,228,198,155,188,118,164,96,43,0,116,230,129,181,111,186,8,31,233,27,87,107,236,150,242,21,217,13,42,33,101,99,182,182,249,185,231,46,5,52,255,100,86,133,197,93,45,176,83,161,143,159,169,153,71,186,8,106,7,133,110,117,110,107,110,111,119,110,32,111,112,116,105,111,110,32,45,45,32,37,115,0,0,0,0,117,110,107,110,111,119,110,32,111,112,116,105,111,110,32,45,45,32,37,99,0,0,0,0,1,0,0,0,112,0,1,0,2,0,0,0,64,248,0,0,4,0,0,0,216,241,0,0,8,0,0,0,8,236,0,0,0,1,0,0,32,229,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,216,242,0,0,2,0,0,0,144,242,0,0,1,0,0,0,240,240,0,0,8,0,0,0,128,240,0,0,3,0,0,0,32,240,0,0,3,0,0,0,176,239,0,0,9,0,0,0,104,239,0,0,10,0,0,0,16,239,0,0,11,0,0,0,128,238,0,0,5,0,0,0,224,237,0,0,45,1,0,0,8,237,0,0,6,0,0,0,168,236,0,0,7,0,0,0,0,0,0,0,0,0,0,0,1,2,4,8,16,32,64,128,77,154,121,242,169,31,62,124,248,189,55,110,220,245,167,3,6,12,24,48,96,192,205,215,227,139,91,182,33,66,132,69,138,89,178,41,82,164,5,10,20,40,80,160,13,26,52,104,208,237,151,99,198,193,207,211,235,155,123,246,161,15,30,60,120,240,173,23,46,92,184,61,122,244,165,7,14,28,56,112,224,141,87,174,17,34,68,136,93,186,57,114,228,133,71,142,81,162,9,18,36,72,144,109,218,249,191,51,102,204,213,231,131,75,150,97,194,201,223,243,171,27,54,108,216,253,183,35,70,140,85,170,25,50,100,200,221,247,163,11,22,44,88,176,45,90,180,37,74,148,101,202,217,255,179,43,86,172,21,42,84,168,29,58,116,232,157,119,238,145,111,222,241,175,19,38,76,152,125,250,185,63,126,252,181,39,78,156,117,234,153,127,254,177,47,94,188,53,106,212,229,135,67,134,65,130,73,146,105,210,233,159,115,230,129,79,158,113,226,137,95,190,49,98,196,197,199,195,203,219,251,187,59,118,236,149,103,206,209,239,147,107,214,225,143,83,166,1,2,4,8,16,32,64,128,77,154,121,242,169,31,62,124,248,189,55,110,220,245,167,3,6,12,24,48,96,192,205,215,227,139,91,182,33,66,132,69,138,89,178,41,82,164,5,10,20,40,80,160,13,26,52,104,208,237,151,99,198,193,207,211,235,155,123,246,161,15,30,60,120,240,173,23,46,92,184,61,122,244,165,7,14,28,56,112,224,141,87,174,17,34,68,136,93,186,57,114,228,133,71,142,81,162,9,18,36,72,144,109,218,249,191,51,102,204,213,231,131,75,150,97,194,201,223,243,171,27,54,108,216,253,183,35,70,140,85,170,25,50,100,200,221,247,163,11,22,44,88,176,45,90,180,37,74,148,101,202,217,255,179,43,86,172,21,42,84,168,29,58,116,232,157,119,238,145,111,222,241,175,19,38,76,152,125,250,185,63,126,252,181,39,78,156,117,234,153,127,254,177,47,94,188,53,106,212,229,135,67,134,65,130,73,146,105,210,233,159,115,230,129,79,158,113,226,137,95,190,49,98,196,197,199,195,203,0,0,0,0,7,0,0,0,13,0,0,0,98,0,0,0,99,0,0,0,68,0,0,0,97,0,0,0,11,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,9,0,0,0,77,0,0,0,74,0,0,0,53,0,0,0,0,0,0,0,56,0,0,0,57,0,0,0,59,0,0,0,16,0,0,0,125,0,0,0,10,0,0,0,44,0,0,0,70,0,0,0,103,0,0,0,111,0,0,0,104,0,0,0,0,0,0,0,35,0,0,0,35,0,0,0,89,0,0,0,0,0,0,0,33,0,0,0,73,0,0,0,122,0,0,0,17,0,0,0,14,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,0,0,113,0,0,0,43,0,0,0,0,0,0,0,84,0,0,0,115,0,0,0,4,0,0,0,22,0,0,0,5,0,0,0,106,0,0,0,21,0,0,0,120,0,0,0,51,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,79,0,0,0,80,0,0,0,83,0,0,0,82,0,0,0,81,0,0,0,48,0,0,0,40,0,0,0,124,0,0,0,24,0,0,0,31,0,0,0,90,0,0,0,72,0,0,0,36,0,0,0,119,0,0,0,0,0,0,0,100,0,0,0,102,0,0,0,101,0,0,0,23,0,0,0,55,0,0,0,105,0,0,0,50,0,0,0,61,0,0,0,19,0,0,0,2,0,0,0,8,0,0,0,37,0,0,0,67,0,0,0,123,0,0,0,12,0,0,0,42,0,0,0,64,0,0,0,65,0,0,0,92,0,0,0,28,0,0,0,63,0,0,0,60,0,0,0,38,0,0,0,15,0,0,0,107,0,0,0,20,0,0,0,39,0,0,0,118,0,0,0,88,0,0,0,95,0,0,0,25,0,0,0,76,0,0,0,6,0,0,0,95,0,0,0,75,0,0,0,1,0,0,0,96,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,0,0,0,93,0,0,0,91,0,0,0,34,0,0,0,78,0,0,0,66,0,0,0,121,0,0,0,85,0,0,0,30,0,0,0,0,0,0,0,108,0,0,0,94,0,0,0,29,0,0,0,3,0,0,0,69,0,0,0,116,0,0,0,86,0,0,0,62,0,0,0,110,0,0,0,109,0,0,0,26,0,0,0,117,0,0,0,49,0,0,0,87,0,0,0,11,0,0,0,18,0,0,0,54,0,0,0,0,0,0,0,107,128,0,0,81,128,0,0,127,128,0,0,47,128,0,0,49,128,0,0,104,128,0,0,0,128,0,0,82,128,0,0,11,128,0,0,21,128,0,0,6,128,0,0,138,128,0,0,86,128,0,0,1,128,0,0,36,128,0,0,95,128,0,0,19,128,0,0,35,128,0,0,139,128,0,0,80,128,0,0,97,128,0,0,51,128,0,0,48,128,0,0,75,128,0,0,65,128,0,0,102,128,0,0,134,128,0,0,37,128,0,0,91,128,0,0,126,128,0,0,122,128,0,0,66,128,0,0,109,128,0,0,32,128,0,0,117,128,0,0,28,128,0,0,29,128,0,0,69,128,0,0,83,128,0,0,94,128,0,0,98,128,0,0,63,128,0,0,87,128,0,0,43,128,0,0,22,128,0,0,54,128,0,0,55,128,0,0,56,128,0,0,62,128,0,0,136,128,0,0,78,128,0,0,53,128,0,0,10,128,0,0,14,128,0,0,140,128,0,0,76,128,0,0,16,128,0,0,17,128,0,0,18,128,0,0,93,128,0,0,79,128,0,0,131,128,0,0,92,128,0,0,88,128,0,0,89,128,0,0,119,128,0,0,84,128,0,0,4,128,0,0,128,128,0,0,23,128,0,0,114,128,0,0,68,128,0,0,33,128,0,0,13,128,0,0,106,128,0,0,103,128,0,0,12,128,0,0,118,128,0,0,57,128,0,0,58,128,0,0,61,128,0,0,60,128,0,0,59,128,0,0,45,128,0,0,121,128,0,0,130,128,0,0,137,128,0,0,100,128,0,0,30,128,0,0,67,128,0,0,116,128,0,0,90,128,0,0,115,128,0,0,125,128,0,0,101,128,0,0,105,128,0,0,108,128,0,0,5,128,0,0,2,128,0,0,3,128,0,0,72,128,0,0,74,128,0,0,73,128,0,0,24,128,0,0,26,128,0,0,77,128,0,0,50,128,0,0,96,128,0,0,124,128,0,0,133,128,0,0,132,128,0,0,25,128,0,0,41,128,0,0,42,128,0,0,7,128,0,0,46,128,0,0,129,128,0,0,135,128,0,0,99,128,0,0,70,128,0,0,52,128,0,0,120,128,0,0,34,128,0,0,85,128,0,0,64,128,0,0,20,128,0,0,1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1,80,35,1,0,72,32,1,0,48,30,1,0,0,0,0,0,168,43,1,0,72,46,1,0,0,0,0,0,0,0,0,0,128,46,1,0,72,46,1,0,0,0,0,0,0,0,0,0,200,250,0,0,32,250,0,0,0,0,0,0,0,0,0,0,0,220,0,0,192,0,0,0,1,0,0,0,192,69,1,0,232,65,1,0,248,58,1,0,32,56,1,0,0,52,1,0,160,48,1,0,16,45,1,0,224,0,0,0,1,0,0,0,24,42,1,0,48,38,1,0,88,35,1,0,88,32,1,0,88,30,1,0,112,25,1,0,64,24,1,0,0,1,0,0,1,0,0,0,208,22,1,0,96,20,1,0,248,18,1,0,184,17,1,0,104,16,1,0,56,15,1,0,40,14,1,0,128,1,0,0,1,0,0,0,184,12,1,0,176,9,1,0,208,8,1,0,216,7,1,0,168,6,1,0,144,5,1,0,216,4,1,0,9,2,0,0,1,0,0,0,240,3,1,0,208,2,1,0,184,1,1,0,136,0,1,0,32,254,0,0,48,253,0,0,216,252,0,0,160,0,0,0,0,0,0,0,0,252,0,0,88,251,0,0,152,250,0,0,240,249,0,0,64,249,0,0,184,248,0,0,96,248,0,0,192,0,0,0,0,0,0,0,248,246,0,0,96,246,0,0,216,245,0,0,80,245,0,0,192,244,0,0,56,244,0,0,208,243,0,0,224,0,0,0,0,0,0,0,240,242,0,0,152,242,0,0,24,242,0,0,152,240,0,0,56,240,0,0,200,239,0,0,152,239,0,0,0,1,0,0,0,0,0,0,32,239,0,0,160,238,0,0,40,238,0,0,128,237,0,0,192,236,0,0,80,236,0,0,144,234,0,0,64,1,0,0,0,0,0,0,240,233,0,0,80,233,0,0,176,232,0,0,64,232,0,0,168,231,0,0,40,231,0,0,160,230,0,0,128,1,0,0,0,0,0,0,232,229,0,0,72,229,0,0,160,227,0,0,16,227,0,0,80,226,0,0,136,225,0,0,48,225,0,0,0,2,0,0,0,0,0,0,120,224,0,0,176,223,0,0,216,222,0,0,120,221,0,0,184,220,0,0,0,219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,74,1,0,32,224,1,0,46,1,0,0,1,0,0,0,184,74,1,0,32,224,1,0,47,1,0,0,1,0,0,0,8,75,1,0,32,224,1,0,48,1,0,0,1,0,0,0,144,74,1,0,32,224,1,0,45,1,0,0,0,0,0,0,104,74,1,0,32,224,1,0,1,0,0,0,1,0,0,0,64,74,1,0,32,224,1,0,3,0,0,0,0,0,0,0,24,74,1,0,80,75,1,0,2,0,0,0,1,0,0,0,200,73,1,0,64,75,1,0,8,0,0,0,1,0,0,0,240,73,1,0,72,75,1,0,11,0,0,0,1,0,0,0,120,73,1,0,48,75,1,0,10,0,0,0,1,0,0,0,160,73,1,0,56,75,1,0,9,0,0,0,1,0,0,0,80,73,1,0,32,224,1,0,6,0,0,0,0,0,0,0,40,73,1,0,32,224,1,0,50,1,0,0,0,0,0,0,0,73,1,0,32,224,1,0,51,1,0,0,0,0,0,0,216,72,1,0,32,224,1,0,49,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,220,0,0,216,217,0,0,0,220,0,0,192,217,0,0,0,220,0,0,136,217,0,0,16,45,1,0,64,217,0,0,16,45,1,0,184,70,1,0,64,24,1,0,104,70,1,0,64,24,1,0,80,69,1,0,64,24,1,0,64,69,1,0,40,14,1,0,32,69,1,0,40,14,1,0,152,68,1,0,216,4,1,0,24,68,1,0,216,4,1,0,240,67,1,0,216,252,0,0,192,67,1,0,96,248,0,0,144,67,1,0,208,243,0,0,56,67,1,0,152,239,0,0,216,66,1,0,144,234,0,0,120,65,1,0,160,230,0,0,48,65,1,0,48,225,0,0,192,64,1,0,0,0,0,0,0,0,0,0,0,0,0,0,150,48,7,119,44,97,14,238,186,81,9,153,25,196,109,7,143,244,106,112,53,165,99,233,163,149,100,158,50,136,219,14,164,184,220,121,30,233,213,224,136,217,210,151,43,76,182,9,189,124,177,126,7,45,184,231,145,29,191,144,100,16,183,29,242,32,176,106,72,113,185,243,222,65,190,132,125,212,218,26,235,228,221,109,81,181,212,244,199,133,211,131,86,152,108,19,192,168,107,100,122,249,98,253,236,201,101,138,79,92,1,20,217,108,6,99,99,61,15,250,245,13,8,141,200,32,110,59,94,16,105,76,228,65,96,213,114,113,103,162,209,228,3,60,71,212,4,75,253,133,13,210,107,181,10,165,250,168,181,53,108,152,178,66,214,201,187,219,64,249,188,172,227,108,216,50,117,92,223,69,207,13,214,220,89,61,209,171,172,48,217,38,58,0,222,81,128,81,215,200,22,97,208,191,181,244,180,33,35,196,179,86,153,149,186,207,15,165,189,184,158,184,2,40,8,136,5,95,178,217,12,198,36,233,11,177,135,124,111,47,17,76,104,88,171,29,97,193,61,45,102,182,144,65,220,118,6,113,219,1,188,32,210,152,42,16,213,239,137,133,177,113,31,181,182,6,165,228,191,159,51,212,184,232,162,201,7,120,52,249,0,15,142,168,9,150,24,152,14,225,187,13,106,127,45,61,109,8,151,108,100,145,1,92,99,230,244,81,107,107,98,97,108,28,216,48,101,133,78,0,98,242,237,149,6,108,123,165,1,27,193,244,8,130,87,196,15,245,198,217,176,101,80,233,183,18,234,184,190,139,124,136,185,252,223,29,221,98,73,45,218,21,243,124,211,140,101,76,212,251,88,97,178,77,206,81,181,58,116,0,188,163,226,48,187,212,65,165,223,74,215,149,216,61,109,196,209,164,251,244,214,211,106,233,105,67,252,217,110,52,70,136,103,173,208,184,96,218,115,45,4,68,229,29,3,51,95,76,10,170,201,124,13,221,60,113,5,80,170,65,2,39,16,16,11,190,134,32,12,201,37,181,104,87,179,133,111,32,9,212,102,185,159,228,97,206,14,249,222,94,152,201,217,41,34,152,208,176,180,168,215,199,23,61,179,89,129,13,180,46,59,92,189,183,173,108,186,192,32,131,184,237,182,179,191,154,12,226,182,3,154,210,177,116,57,71,213,234,175,119,210,157,21,38,219,4,131,22,220,115,18,11,99,227,132,59,100,148,62,106,109,13,168,90,106,122,11,207,14,228,157,255,9,147,39,174,0,10,177,158,7,125,68,147,15,240,210,163,8,135,104,242,1,30,254,194,6,105,93,87,98,247,203,103,101,128,113,54,108,25,231,6,107,110,118,27,212,254,224,43,211,137,90,122,218,16,204,74,221,103,111,223,185,249,249,239,190,142,67,190,183,23,213,142,176,96,232,163,214,214,126,147,209,161,196,194,216,56,82,242,223,79,241,103,187,209,103,87,188,166,221,6,181,63,75,54,178,72,218,43,13,216,76,27,10,175,246,74,3,54,96,122,4,65,195,239,96,223,85,223,103,168,239,142,110,49,121,190,105,70,140,179,97,203,26,131,102,188,160,210,111,37,54,226,104,82,149,119,12,204,3,71,11,187,185,22,2,34,47,38,5,85,190,59,186,197,40,11,189,178,146,90,180,43,4,106,179,92,167,255,215,194,49,207,208,181,139,158,217,44,29,174,222,91,176,194,100,155,38,242,99,236,156,163,106,117,10,147,109,2,169,6,9,156,63,54,14,235,133,103,7,114,19,87,0,5,130,74,191,149,20,122,184,226,174,43,177,123,56,27,182,12,155,142,210,146,13,190,213,229,183,239,220,124,33,223,219,11,212,210,211,134,66,226,212,241,248,179,221,104,110,131,218,31,205,22,190,129,91,38,185,246,225,119,176,111,119,71,183,24,230,90,8,136,112,106,15,255,202,59,6,102,92,11,1,17,255,158,101,143,105,174,98,248,211,255,107,97,69,207,108,22,120,226,10,160,238,210,13,215,84,131,4,78,194,179,3,57,97,38,103,167,247,22,96,208,77,71,105,73,219,119,110,62,74,106,209,174,220,90,214,217,102,11,223,64,240,59,216,55,83,174,188,169,197,158,187,222,127,207,178,71,233,255,181,48,28,242,189,189,138,194,186,202,48,147,179,83,166,163,180,36,5,54,208,186,147,6,215,205,41,87,222,84,191,103,217,35,46,122,102,179,184,74,97,196,2,27,104,93,148,43,111,42,55,190,11,180,161,142,12,195,27,223,5,90,141,239,2,45,112,97,98,103,110,113,0,0,224,79,1,0,40,224,1,0,4,0,0,0,0,0,0,0,240,78,1,0,40,224,1,0,46,1,0,0,0,0,0,0,160,77,1,0,208,80,1,0,2,0,0,0,1,0,0,0,16,80,1,0,40,224,1,0,45,1,0,0,0,0,0,0,32,79,1,0,40,224,1,0,3,0,0,0,0,0,0,0,160,80,1,0,232,80,1,0,7,0,0,0,1,0,0,0,112,80,1,0,224,80,1,0,8,0,0,0,1,0,0,0,64,80,1,0,216,80,1,0,9,0,0,0,1,0,0,0,112,77,1,0,40,224,1,0,10,0,0,0,0,0,0,0,64,77,1,0,40,224,1,0,47,1,0,0,0,0,0,0,48,78,1,0,40,224,1,0,48,1,0,0,0,0,0,0,0,78,1,0,40,224,1,0,49,1,0,0,0,0,0,0,208,77,1,0,40,224,1,0,50,1,0,0,0,0,0,0,144,78,1,0,40,224,1,0,51,1,0,0,0,0,0,0,96,78,1,0,40,224,1,0,53,1,0,0,0,0,0,0,176,79,1,0,40,224,1,0,54,1,0,0,0,0,0,0,128,79,1,0,40,224,1,0,55,1,0,0,0,0,0,0,80,79,1,0,40,224,1,0,56,1,0,0,0,0,0,0,192,78,1,0,40,224,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,67,1,0,0,0,0,0,124,36,36,36,125,114,115,116,117,118,119,120,121,122,123,36,36,36,36,36,36,36,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,36,36,36,36,36,36,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,0,0,0,0,0,0,0,0,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47,0,0,0,0,0,0,0,0,112,0,112,112,44,0,44,44,179,0,179,179,192,0,192,192,228,0,228,228,87,0,87,87,234,0,234,234,174,0,174,174,35,0,35,35,107,0,107,107,69,0,69,69,165,0,165,165,237,0,237,237,79,0,79,79,29,0,29,29,146,0,146,146,134,0,134,134,175,0,175,175,124,0,124,124,31,0,31,31,62,0,62,62,220,0,220,220,94,0,94,94,11,0,11,11,166,0,166,166,57,0,57,57,213,0,213,213,93,0,93,93,217,0,217,217,90,0,90,90,81,0,81,81,108,0,108,108,139,0,139,139,154,0,154,154,251,0,251,251,176,0,176,176,116,0,116,116,43,0,43,43,240,0,240,240,132,0,132,132,223,0,223,223,203,0,203,203,52,0,52,52,118,0,118,118,109,0,109,109,169,0,169,169,209,0,209,209,4,0,4,4,20,0,20,20,58,0,58,58,222,0,222,222,17,0,17,17,50,0,50,50,156,0,156,156,83,0,83,83,242,0,242,242,254,0,254,254,207,0,207,207,195,0,195,195,122,0,122,122,36,0,36,36,232,0,232,232,96,0,96,96,105,0,105,105,170,0,170,170,160,0,160,160,161,0,161,161,98,0,98,98,84,0,84,84,30,0,30,30,224,0,224,224,100,0,100,100,16,0,16,16,0,0,0,0,163,0,163,163,117,0,117,117,138,0,138,138,230,0,230,230,9,0,9,9,221,0,221,221,135,0,135,135,131,0,131,131,205,0,205,205,144,0,144,144,115,0,115,115,246,0,246,246,157,0,157,157,191,0,191,191,82,0,82,82,216,0,216,216,200,0,200,200,198,0,198,198,129,0,129,129,111,0,111,111,19,0,19,19,99,0,99,99,233,0,233,233,167,0,167,167,159,0,159,159,188,0,188,188,41,0,41,41,249,0,249,249,47,0,47,47,180,0,180,180,120,0,120,120,6,0,6,6,231,0,231,231,113,0,113,113,212,0,212,212,171,0,171,171,136,0,136,136,141,0,141,141,114,0,114,114,185,0,185,185,248,0,248,248,172,0,172,172,54,0,54,54,42,0,42,42,60,0,60,60,241,0,241,241,64,0,64,64,211,0,211,211,187,0,187,187,67,0,67,67,21,0,21,21,173,0,173,173,119,0,119,119,128,0,128,128,130,0,130,130,236,0,236,236,39,0,39,39,229,0,229,229,133,0,133,133,53,0,53,53,12,0,12,12,65,0,65,65,239,0,239,239,147,0,147,147,25,0,25,25,33,0,33,33,14,0,14,14,78,0,78,78,101,0,101,101,189,0,189,189,184,0,184,184,143,0,143,143,235,0,235,235,206,0,206,206,48,0,48,48,95,0,95,95,197,0,197,197,26,0,26,26,225,0,225,225,202,0,202,202,71,0,71,71,61,0,61,61,1,0,1,1,214,0,214,214,86,0,86,86,77,0,77,77,13,0,13,13,102,0,102,102,204,0,204,204,45,0,45,45,18,0,18,18,32,0,32,32,177,0,177,177,153,0,153,153,76,0,76,76,194,0,194,194,126,0,126,126,5,0,5,5,183,0,183,183,49,0,49,49,23,0,23,23,215,0,215,215,88,0,88,88,97,0,97,97,27,0,27,27,28,0,28,28,15,0,15,15,22,0,22,22])
.concat
.concat([97,108,103,111,114,105,116,104,109,32,100,105,115,97,98,108,101,100,0,0,0,0,0,0,114,109,100,49,54,48,0,0,112,114,105,118,97,116,101,45,107,101,121,0,0,0,0,0,48,120,48,100,57,48,50,57,97,100,50,99,55,101,53,99,102,52,51,52,48,56,50,51,98,50,97,56,55,100,99,54,56,99,57,101,52,99,101,51,49,55,52,99,49,101,54,101,102,100,101,101,49,50,99,48,55,100,0,0,0,0,0,0,97,99,46,99,0,0,0,0,114,105,112,101,109,100,49,54,48,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,48,120,100,55,99,49,51,52,97,97,50,54,52,51,54,54,56,54,50,97,49,56,51,48,50,53,55,53,100,48,102,98,57,56,100,49,49,54,98,99,52,98,54,100,100,101,98,99,97,51,97,53,97,55,57,51,57,102,0,0,0,0,0,0,99,97,110,39,116,32,111,112,101,110,32,37,115,58,32,37,115,10,0,0,0,0,0,0,115,104,97,50,53,54,0,0,101,114,114,111,114,32,115,101,116,116,105,110,103,32,107,101,121,32,102,111,114,32,82,78,71,0,0,0,0,0,0,0,99,97,110,39,116,32,119,114,105,116,101,32,96,37,115,39,58,32,37,115,10,0,0,0,100,97,116,97,45,57,32,107,101,121,45,50,48,0,0,0,101,108,103,97,109,97,108,46,99,0,0,0,0,0,0,0,115,101,0,0,0,0,0,0,116,114,97,110,115,105,101,110,116,45,107,101,121,0,0,0,48,46,51,46,52,52,48,49,46,53,46,51,46,49,46,57,46,52,52,0,0,0,0,0,66,108,111,119,102,105,115,104,32,115,101,108,102,116,101,115,116,32,102,97,105,108,101,100,32,40,51,41,46,0,0,0,37,42,115,91,117,110,107,110,111,119,110,32,116,97,103,32,37,100,93,10,0,0,0,0,99,97,110,39,116,32,108,111,99,107,32,109,101,109,111,114,121,58,32,37,115,10,0,0,37,48,50,88,0,0,0,0,112,97,100,108,111,99,107,45,115,104,97,0,0,0,0,0,70,65,84,65,76,58,32,101,114,114,111,114,32,114,101,97,100,105,110,103,32,96,37,115,39,32,105,110,32,108,105,98,103,99,114,121,112,116,58,32,37,115,10,0,0,0,0,0,48,120,50,53,56,48,102,54,51,99,99,102,101,52,52,49,51,56,56,55,48,55,49,51,98,49,97,57,50,51,54,57,101,51,51,101,50,49,51,53,100,50,54,54,100,98,98,51,55,50,51,56,54,99,52,48,48,98,0,0,0,0,0,0,37,115,58,0,0,0,0,0,63,79,84,82,0,0,0,0,84,119,111,102,105,115,104,45,50,53,54,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,0,109,100,53,0,0,0,0,0,48,120,54,56,97,53,101,54,50,99,97,57,99,101,54,99,49,99,50,57,57,56,48,51,97,54,99,49,53,51,48,98,53,49,52,101,49,56,50,97,100,56,98,48,48,52,50,97,53,57,99,97,100,50,57,102,52,51,0,0,0,0,0,0,115,104,97,49,0,0,0,0,97,98,99,0,0,0,0,0,97,98,99,0,0,0,0,0,48,120,100,55,99,49,51,52,97,97,50,54,52,51,54,54,56,54,50,97,49,56,51,48,50,53,55,53,100,49,100,55,56,55,98,48,57,102,48,55,53,55,57,55,100,97,56,57,102,53,55,101,99,56,99,48,102,102,0,0,0,0,0,0,97,98,99,100,98,99,100,101,99,100,101,102,100,101,102,103,101,102,103,104,102,103,104,105,103,104,105,106,104,105,106,107,105,106,107,108,106,107,108,109,107,108,109,110,108,109,110,111,109,110,111,112,110,111,112,113,0,0,0,0,0,0,0,0,114,97,110,100,111,109,45,111,118,101,114,114,105,100,101,0,83,101,114,112,101,110,116,45,49,57,50,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,0,49,46,50,46,52,49,48,46,50,48,48,48,48,52,46,49,46,52,0,0,0,0,0,0,99,104,101,99,107,105,110,103,32,103,58,0,0,0,0,0,98,114,97,105,110,112,111,111,108,80,50,50,52,114,49,0,110,0,0,0,0,0,0,0,108,97,98,101,108,0,0,0,111,105,100,46,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,49,46,49,46,49,0,0,0,0,0,0,0,0,77,68,53,0,0,0,0,0,77,68,52,0,0,0,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,52,51,0,48,120,49,52,98,54,57,48,56,54,54,97,98,100,53,98,98,56,56,98,53,102,52,56,50,56,99,49,52,57,48,48,48,50,101,54,55,55,51,102,97,50,102,97,50,57,57,98,56,102,0,0,0,0,0,0,82,70,67,50,50,54,56,32,100,101,99,114,121,112,116,105,111,110,32,116,101,115,116,32,50,32,102,97,105,108,101,100,46,0,0,0,0,0,0,0,104,97,115,104,45,97,108,103,111,0,0,0,0,0,0,0,111,112,101,110,112,103,112,45,114,115,97,0,0,0,0,0,37,109,41,0,0,0,0,0,48,120,99,48,97,48,54,52,55,101,97,97,98,54,97,52,56,55,53,51,98,48,51,51,99,53,54,99,98,48,102,48,57,48,48,97,50,102,53,99,52,56,53,51,51,55,53,102,100,54,0,0,0,0,0,0,110,111,45,98,108,105,110,100,105,110,103,0,0,0,0,0,115,101,101,100,108,101,110,32,60,61,32,115,105,122,101,111,102,32,115,101,101,100,95,104,101,108,112,95,98,117,102,102,101,114,0,0,0,0,0,0,98,97,100,32,115,105,103,110,97,116,117,114,101,32,110,111,116,32,100,101,116,101,99,116,101,100,0,0,0,0,0,0,48,120,99,51,48,50,102,52,49,100,57,51,50,97,51,54,99,100,97,55,97,51,52,54,50,102,57,101,57,101,57,49,54,98,53,98,101,56,102,49,48,50,57,97,99,52,97,99,99,49,0,0,0,0,0,0,100,105,103,101,115,116,0,0,112,115,115,0,0,0,0,0,73,68,69,65,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,118,101,114,105,102,121,32,102,97,105,108,101,100,0,0,0,32,9,32,9,32,32,9,32,0,0,0,0,0,0,0,0,48,120,52,54,57,97,50,56,101,102,55,99,50,56,99,99,97,51,100,99,55,50,49,100,48,52,52,102,52,52,57,54,98,99,99,97,55,101,102,52,49,52,54,102,98,102,50,53,99,57,0,0,0,0,0,0,110,111,32,115,101,108,102,116,101,115,116,32,97,118,97,105,108,97,98,108,101,0,0,0,111,97,101,112,0,0,0,0,115,105,103,110,105,110,103,32,102,97,105,108,101,100,0,0,99,111,110,116,101,120,116,45,62,99,111,110,116,101,120,116,95,112,114,105,118,32,33,61,32,78,85,76,76,0,0,0,48,120,54,97,57,49,49,55,52,48,55,54,98,49,101,48,101,49,57,99,51,57,99,48,51,49,102,101,56,54,56,53,99,49,99,97,101,48,52,48,101,53,99,54,57,97,50,56,101,102,0,0,0,0,0,0,40,109,111,100,101,32,61,61,32,71,67,82,89,95,65,67,95,73,79,95,82,69,65,68,65,66,76,69,41,32,124,124,32,40,109,111,100,101,32,61,61,32,71,67,82,89,95,65,67,95,73,79,95,87,82,73,84,65,66,76,69,41,0,0,112,114,111,116,111,99,111,108,0,0,0,0,0,0,0,0,112,107,99,115,49,0,0,0,114,115,97,0,0,0,0,0,48,120,99,51,48,50,102,52,49,100,57,51,50,97,51,54,99,100,97,55,97,51,52,54,51,48,57,51,100,49,56,100,98,55,56,102,99,101,52,55,54,100,101,49,97,56,54,50,57,55,0,0,0,0,0,0,114,101,97,100,32,101,114,114,111,114,32,111,110,32,114,97,110,100,111,109,32,100,101,118,105,99,101,58,32,37,115,10,0,0,0,0,0,0,0,0,114,97,119,0,0,0,0,0,101,114,114,111,114,32,99,114,101,97,116,105,110,103,32,99,105,112,104,101,114,32,99,111,110,116,101,120,116,32,102,111,114,32,82,78,71,0,0,0,99,97,110,39,116,32,99,114,101,97,116,101,32,96,37,115,39,58,32,37,115,10,0,0,101,110,99,45,118,97,108,0,74,101,102,101,0,0,0,0,120,118,97,108,117,101,0,0,80,79,83,73,88,76,89,95,67,79,82,82,69,67,84,0,69,67,68,72,0,0,0,0,113,98,105,116,115,0,0,0,48,46,51,46,52,52,48,49,46,53,46,51,46,49,46,57,46,52,51,0,0,0,0,0,66,108,111,119,102,105,115,104,32,115,101,108,102,116,101,115,116,32,102,97,105,108,101,100,32,40,50,41,46,0,0,0,34,93,10,0,0,0,0,0,102,97,105,108,101,100,32,116,111,32,114,101,115,101,116,32,117,105,100,58,32,37,115,10,0,0,0,0,0,0,0,0,37,115,32,0,0,0,0,0,112,97,100,108,111,99,107,45,97,101,115,0,0,0,0,0,47,112,114,111,99,47,118,101,114,115,105,111,110,0,0,0,98,114,97,105,110,112,111,111,108,80,49,57,50,114,49,0,48,0,0,0,0,0,0,0,84,119,111,102,105,115,104,45,50,53,54,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,0,101,110,99,45,118,97,108,0,109,105,115,109,97,116,99,104,0,0,0,0,0,0,0,0,48,120,49,54,54,55,99,98,52,55,55,97,49,97,56,101,99,51,51,56,102,57,52,55,52,49,54,54,57,99,57,55,54,51,49,54,100,97,54,51,50,49,0,0,0,0,0,0,32,112,108,97,105,110,58,0,9,37,115,10,0,0,0,0,63,0,0,0,0,0,0,0,100,101,99,114,121,112,116,32,114,101,116,117,114,110,101,100,32,110,111,32,112,108,97,105,110,116,101,120,116,0,0,0,115,104,111,114,116,32,115,116,114,105,110,103,0,0,0,0,115,104,111,114,116,32,115,116,114,105,110,103,0,0,0,0,48,120,98,101,100,53,97,102,49,54,101,97,51,102,54,97,52,102,54,50,57,51,56,99,52,54,51,49,101,98,53,97,102,55,98,100,98,99,100,98,99,51,0,0,0,0,0,0,108,111,110,103,32,115,116,114,105,110,103,0,0,0,0,0,112,117,98,107,101,121,95,100,101,99,114,121,112,116,58,32,97,108,103,111,61,37,100,10,0,0,0,0,0,0,0,0,83,101,114,112,101,110,116,45,49,50,56,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,0,118,97,108,117,101,0,0,0,49,46,50,46,52,49,48,46,50,48,48,48,48,52,46,49,46,51,0,0,0,0,0,0,73,68,69,65,0,0,0,0,48,120,101,57,53,101,52,97,53,102,55,51,55,48,53,57,100,99,54,48,100,102,53,57,57,49,100,52,53,48,50,57,52,48,57,101,54,48,102,99,48,57,0,0,0,0,0,0,111,112,101,110,112,103,112,45,100,115,97,0,0,0,0,0,115,0,0,0,0,0,0,0,118,97,108,117,101,32,101,120,116,114,97,99,116,101,100,32,102,114,111,109,32,80,75,67,83,35,49,32,98,108,111,99,107,32,116,121,112,101,32,50,32,101,110,99,111,100,101,100,32,100,97,116,97,58,0,0,100,101,99,114,121,112,116,32,102,97,105,108,101,100,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,52,50,0,48,120,49,101,53,56,57,97,56,53,57,53,52,50,51,52,49,50,49,51,52,102,97,97,50,100,98,100,101,99,57,53,99,56,100,56,54,55,53,101,53,56,0,0,0,0,0,0,100,115,97,0,0,0,0,0,82,70,67,50,50,54,56,32,101,110,99,114,121,112,116,105,111,110,32,116,101,115,116,32,50,32,102,97,105,108,101,100,46,0,0,0,0,0,0,0,118,97,108,117,101,32,101,120,116,114,97,99,116,101,100,32,102,114,111,109,32,79,65,69,80,32,101,110,99,111,100,101,100,32,100,97,116,97,58,0,99,105,112,104,101,114,116,101,120,116,32,109,97,116,99,104,101,115,32,112,108,97,105,110,116,101,120,116,0,0,0,0,68,69,83,0,0,0,0,0,40,101,110,99,45,118,97,108,40,0,0,0,0,0,0,0,48,120,51,52,48,101,55,98,101,50,97,50,56,48,101,98,55,52,101,50,98,101,54,49,98,97,100,97,55,52,53,100,57,55,101,56,102,55,99,51,48,48,0,0,0,0,0,0,98,97,100,32,115,105,103,110,97,116,117,114,101,32,110,111,116,32,100,101,116,101,99,116,101,100,0,0,0,0,0,0,95,103,99,114,121,95,109,100,95,103,101,116,95,97,108,103,111,95,100,108,101,110,32,40,104,97,115,104,97,108,103,111,41,32,61,61,32,113,98,105,116,115,47,56,0,0,0,0,103,99,114,121,95,112,107,95,100,101,99,114,121,112,116,32,114,101,116,117,114,110,101,100,32,103,97,114,98,97,103,101,0,0,0,0,0,0,0,0,48,120,101,57,53,101,52,97,53,102,55,51,55,48,53,57,100,99,54,48,100,102,99,55,97,100,57,53,98,51,100,56,49,51,57,53,49,53,54,50,48,102,0,0,0,0,0,0,118,101,114,105,102,121,32,102,97,105,108,101,100,0,0,0,103,99,114,121,95,109,100,95,111,112,101,110,32,102,97,105,108,101,100,32,102,111,114,32,97,108,103,111,32,37,100,58,32,37,115,0,0,0,0,0,32,32,32,115,105,103,58,0,73,68,69,65,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,101,110,99,114,121,112,116,32,102,97,105,108,101,100,0,0,68,69,83,32,109,97,105,110,116,101,110,97,110,99,101,32,116,101,115,116,32,102,97,105,108,101,100,46,0,0,0,0,32,9,32,32,9,9,9,9,32,9,32,9,32,9,32,32,0,0,0,0,0,0,0,0,98,114,97,105,110,112,111,111,108,80,49,54,48,114,49,0,115,105,103,110,105,110,103,32,102,97,105,108,101,100,0,0,109,111,100,117,108,101,0,0,32,32,100,97,116,97,58,0,99,111,110,118,101,114,116,105,110,103,32,100,97,116,97,32,102,97,105,108,101,100,0,0,115,109,115,116,97,116,101,32,33,61,32,78,85,76,76,0,48,120,49,49,56,51,57,50,57,54,97,55,56,57,97,51,98,99,48,48,52,53,99,56,97,53,102,98,52,50,99,55,100,49,98,100,57,57,56,102,53,52,52,52,57,53,55,57,98,52,52,54,56,49,55,97,102,98,100,49,55,50,55,51,101,54,54,50,99,57,55,101,101,55,50,57,57,53,101,102,52,50,54,52,48,99,53,53,48,98,57,48,49,51,102,97,100,48,55,54,49,51,53,51,99,55,48,56,54,97,50,55,50,99,50,52,48,56,56,98,101,57,52,55,54,57,102,100,49,54,54,53,48,0,0,0,99,111,110,118,101,114,116,105,110,103,32,100,97,116,97,32,102,97,105,108,101,100,0,0,41,0,0,0,0,0,0,0,110,97,109,101,0,0,0,0,32,32,115,107,101,121,58,0,40,100,97,116,97,32,40,102,108,97,103,115,32,114,97,119,41,32,40,118,97,108,117,101,32,37,109,41,41,0,0,0,112,117,98,107,101,121,95,115,105,103,110,58,32,97,108,103,111,61,37,100,10,0,0,0,48,120,99,54,56,53,56,101,48,54,98,55,48,52,48,52,101,57,99,100,57,101,51,101,99,98,54,54,50,51,57,53,98,52,52,50,57,99,54,52,56,49,51,57,48,53,51,102,98,53,50,49,102,56,50,56,97,102,54,48,54,98,52,100,51,100,98,97,97,49,52,98,53,101,55,55,101,102,101,55,53,57,50,56,102,101,49,100,99,49,50,55,97,50,102,102,97,56,100,101,51,51,52,56,98,51,99,49,56,53,54,97,52,50,57,98,102,57,55,101,55,101,51,49,99,50,101,53,98,100,54,54,0,0,0,0,112,117,98,107,101,121,0,0,98,111,103,117,115,32,114,101,97,100,32,102,114,111,109,32,114,97,110,100,111,109,32,100,101,118,105,99,101,32,40,110,61,37,100,41,10,0,0,0,69,120,112,101,99,116,101,100,32,108,105,98,111,116,114,32,65,80,73,32,118,101,114,115,105,111,110,32,37,117,46,37,117,46,37,117,32,105,110,99,111,109,112,97,116,105,98,108,101,32,119,105,116,104,32,97,99,116,117,97,108,32,118,101,114,115,105,111,110,32,37,117,46,37,117,46,37,117,46,32,32,65,98,111,114,116,105,110,103,46,10,0,0,0,0,0,116,101,109,112,118,97,108,117,101,95,102,111,114,95,120,57,51,49,95,97,101,115,95,100,114,105,118,101,114,0,0,0,37,115,9,37,115,9,37,48,56,120,10,0,0,0,0,0,110,111,116,101,58,32,114,97,110,100,111,109,95,115,101,101,100,32,102,105,108,101,32,110,111,116,32,117,112,100,97,116,101,100,10,0,0,0,0,0,112,117,98,107,101,121,0,0,119,104,97,116,32,100,111,32,121,97,32,119,97,110,116,32,102,111,114,32,110,111,116,104,105,110,103,63,0,0,0,0,114,115,0,0,0,0,0,0,114,115,0,0,0,0,0,0,114,115,0,0,0,0,0,0,48,46,51,46,52,52,48,49,46,53,46,51,46,49,46,57,46,52,49,0,0,0,0,0,66,108,111,119,102,105,115,104,32,115,101,108,102,116,101,115,116,32,102,97,105,108,101,100,32,40,49,41,46,0,0,0,37,42,115,91,100,97,116,97,61,34,0,0,0,0,0,0,79,111,112,115,44,32,115,101,99,117,114,101,32,109,101,109,111,114,121,32,112,111,111,108,32,97,108,114,101,97,100,121,32,105,110,105,116,105,97,108,105,122,101,100,10,0,0,0,65,115,115,101,114,116,105,111,110,32,96,37,115,39,32,102,97,105,108,101,100,32,40,37,115,58,37,100,58,37,115,41,10,0,0,0,0,0,0,0,112,97,100,108,111,99,107,45,114,110,103,0,0,0,0,0,114,0,0,0,0,0,0,0,48,120,49,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,97,53,49,56,54,56,55,56,51,98,102,50,102,57,54,54,98,55,102,99,99,48,49,52,56,102,55,48,57,97,53,100,48,51,98,98,53,99,57,98,56,56,57,57,99,52,55,97,101,98,98,54,102,98,55,49,101,57,49,51,56,54,52,48,57,0,0,0,115,105,103,110,0,0,0,0,109,112,105,117,116,105,108,46,99,0,0,0,0,0,0,0,37,108,88,0,0,0,0,0,63,79,84,82,32,69,114,114,111,114,58,32,0,0,0,0,84,119,111,102,105,115,104,45,49,50,56,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,0,110,101,100,112,113,117,0,0,101,110,99,114,121,112,116,0,65,69,83,45,49,50,56,0,103,99,114,121,95,99,105,112,104,101,114,95,99,108,111,115,101,58,32,97,108,114,101,97,100,121,32,99,108,111,115,101,100,47,105,110,118,97,108,105,100,32,104,97,110,100,108,101,0,0,0,0,0,0,0,0,48,120,48,53,49,57,53,51,101,98,57,54,49,56,101,49,99,57,97,49,102,57,50,57,97,50,49,97,48,98,54,56,53,52,48,101,101,97,50,100,97,55,50,53,98,57,57,98,51,49,53,102,51,98,56,98,52,56,57,57,49,56,101,102,49,48,57,101,49,53,54,49,57,51,57,53,49,101,99,55,101,57,51,55,98,49,54,53,50,99,48,98,100,51,98,98,49,98,102,48,55,51,53,55,51,100,102,56,56,51,100,50,99,51,52,102,49,101,102,52,53,49,102,100,52,54,98,53,48,51,102,48,48,0,0,0,107,101,121,32,99,111,110,115,105,115,116,101,110,99,121,0,82,83,65,0,0,0,0,0,37,48,50,120,0,0,0,0,49,46,51,46,54,46,49,46,52,46,49,46,49,49,53,57,49,46,49,50,46,50,0,0,115,105,103,110,0,0,0,0,65,69,83,49,50,56,0,0,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,49,46,49,46,49,50,0,0,0,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,49,46,49,46,49,49,0,0,0,158,168,134,239,226,104,219,236,206,66,12,117,36,223,50,224,117,26,42,38,0,0,0,0,48,120,48,49,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,99,0,0,99,111,110,118,101,114,116,0,169,153,62,54,71,6,129,106,186,62,37,113,120,80,194,108,156,208,216,157,0,0,0,0,102,108,97,103,115,0,0,0,83,101,114,112,101,110,116,32,116,101,115,116,32,102,97,105,108,117,114,101,58,32,37,115,10,0,0,0,0,0,0,0,107,101,121,32,99,111,110,115,105,115,116,101,110,99,121,0,82,73,74,78,68,65,69,76,0,0,0,0,0,0,0,0,83,69,69,68,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,83,97,109,112,108,101,32,35,52,0,0,0,0,0,0,0,48,120,48,49,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,100,115,97,32,32,104,0,0,115,105,103,45,118,97,108,0,97,0,0,0,0,0,0,0,99,111,110,118,101,114,116,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,52,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,52,49,0,70,73,80,83,45,49,57,56,97,44,32,65,46,52,0,0,78,73,83,84,32,80,45,53,50,49,0,0,0,0,0,0,115,101,101,100,0,0,0,0,82,70,67,50,50,54,56,32,100,101,99,114,121,112,116,105,111,110,32,116,101,115,116,32,49,32,102,97,105,108,101,100,46,0,0,0,0,0,0,0,32,32,104,97,115,104,0,0,95,103,99,114,121,95,109,112,105,95,103,101,116,95,110,98,105,116,115,32,40,40,120,112,41,41,32,61,61,32,110,98,105,116,115,0,0,0,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,51,0,0,40,101,110,99,45,118,97,108,40,37,115,40,97,37,98,41,41,41,0,0,0,0,0,0,188,244,30,171,139,178,216,2,243,208,92,175,124,176,146,236,248,209,163,170,0,0,0,0,48,120,51,54,49,55,100,101,52,97,57,54,50,54,50,99,54,102,53,100,57,101,57,56,98,102,57,50,57,50,100,99,50,57,102,56,102,52,49,100,98,100,50,56,57,97,49,52,55,99,101,57,100,97,51,49,49,51,98,53,102,48,98,56,99,48,48,97,54,48,98,49,99,101,49,100,55,101,56,49,57,100,55,97,52,51,49,100,55,99,57,48,101,97,48,101,53,102,0,0,0,0,0,0,33,100,101,114,105,118,101,112,97,114,109,115,0,0,0,0,70,65,84,65,76,58,32,102,97,105,108,101,100,32,116,111,32,97,99,113,117,105,114,101,32,116,104,101,32,70,83,77,32,108,111,99,107,32,105,110,32,108,105,98,103,114,121,112,116,58,32,37,115,10,0,0,32,32,32,115,105,103,0,0,112,114,105,109,101,103,101,110,46,99,0,0,0,0,0,0,95,103,99,114,121,95,109,112,105,95,103,101,116,95,110,98,105,116,115,32,40,40,120,105,41,41,32,61,61,32,49,48,49,0,0,0,0,0,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,50,0,0,83,97,109,112,108,101,32,35,51,0,0,0,0,0,0,0,48,120,97,97,56,55,99,97,50,50,98,101,56,98,48,53,51,55,56,101,98,49,99,55,49,101,102,51,50,48,97,100,55,52,54,101,49,100,51,98,54,50,56,98,97,55,57,98,57,56,53,57,102,55,52,49,101,48,56,50,53,52,50,97,51,56,53,53,48,50,102,50,53,100,98,102,53,53,50,57,54,99,51,97,53,52,53,101,51,56,55,50,55,54,48,97,98,55,0,0,0,0,0,0,95,103,99,114,121,95,109,112,105,95,103,101,116,95,110,98,105,116,115,32,40,40,112,114,105,109,101,95,113,41,41,32,61,61,32,113,98,105,116,115,0,0,0,0,0,0,0,0,70,65,84,65,76,58,32,102,97,105,108,101,100,32,116,111,32,114,101,108,101,97,115,101,32,116,104,101,32,70,83,77,32,108,111,99,107,32,105,110,32,108,105,98,103,114,121,112,116,58,32,37,115,10,0,0,77,68,53,32,117,115,101,100,0,0,0,0,0,0,0,0,32,32,112,107,101,121,0,0,105,100,101,97,46,99,0,0,32,32,117,0,0,0,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,49,0,0,99,105,112,104,101,114,0,0,63,79,84,82,0,0,0,0,70,73,80,83,45,49,57,56,97,44,32,65,46,51,0,0,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,99,55,54,51,52,100,56,49,102,52,51,55,50,100,100,102,53,56,49,97,48,100,98,50,52,56,98,48,97,55,55,97,101,99,101,99,49,57,54,97,99,99,99,53,50,57,55,51,0,0,0,0,0,0,95,103,99,114,121,95,109,112,105,95,103,101,116,95,110,98,105,116,115,32,40,40,112,114,105,109,101,95,112,41,41,32,61,61,32,110,98,105,116,115,0,0,0,0,0,0,0,0,114,97,110,100,111,109,0,0,99,105,112,104,101,114,0,0,112,117,98,107,101,121,95,118,101,114,105,102,121,58,32,97,108,103,111,61,37,100,10,0,32,32,100,0,0,0,0,0,37,115,10,0,0,0,0,0,99,111,110,116,101,120,116,32,33,61,32,78,85,76,76,0,9,34,211,64,95,170,61,25,79,130,164,88,48,115,125,92,198,199,93,36,0,0,0,0,48,120,98,51,51,49,50,102,97,55,101,50,51,101,101,55,101,52,57,56,56,101,48,53,54,98,101,51,102,56,50,100,49,57,49,56,49,100,57,99,54,101,102,101,56,49,52,49,49,50,48,51,49,52,48,56,56,102,53,48,49,51,56,55,53,97,99,54,53,54,51,57,56,100,56,97,50,101,100,49,57,100,50,97,56,53,99,56,101,100,100,51,101,99,50,97,101,102,0,0,0,0,0,0,112,107,95,100,115,97,0,0,41,0,0,0,0,0,0,0,40,37,115,32,37,37,109,41,0,0,0,0,0,0,0,0,97,108,103,111,114,105,116,104,109,32,110,111,116,32,102,111,117,110,100,0,0,0,0,0,97,99,99,111,117,110,116,0,32,32,101,0,0,0,0,0,65,69,83,45,49,50,56,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,83,97,109,112,108,101,32,35,50,0,0,0,0,0,0,0,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,101,102,102,102,102,102,102,102,102,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,102,102,102,102,102,102,102,99,0,0,0,0,0,0,99,104,111,111,115,105,110,103,32,97,32,114,97,110,100,111,109,32,107,32,0,0,0,0,32,40,0,0,0,0,0,0,115,101,108,101,99,116,40,41,32,101,114,114,111,114,58,32,37,115,10,0,0,0,0,0,97,108,103,111,114,105,116,104,109,32,100,105,115,97,98,108,101,100,0,0,0,0,0,0,33,115,116,114,111,110,103,95,114,110,103,95,99,111,110,116,101,120,116,45,62,116,101,115,116,95,100,116,95,112,116,114,0,0,0,0,0,0,0,0,35,32,87,65,82,78,73,78,71,33,32,89,111,117,32,115,104,111,117,108,100,110,39,116,32,99,111,112,121,32,116,104,105,115,32,102,105,108,101,32,116,111,32,97,110,111,116,104,101,114,32,99,111,109,112,117,116,101,114,46,32,73,116,32,105,115,32,117,110,110,101,99,101,115,115,97,114,121,32,97,110,100,32,99,97,110,32,99,97,117,115,101,32,112,114,111,98,108,101,109,115,46,10,0,114,97,110,100,111,109,45,99,115,112,114,110,103,46,99,0,32,32,110,0,0,0,0,0,100,97,116,97,45,50,56,32,107,101,121,45,52,0,0,0,100,105,103,101,115,116,32,109,105,115,109,97,116,99,104,0,97,98,0,0,0,0,0,0,65,69,83,45,49,50,56,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,50,0,0,0,0,0,0,0,49,46,50,46,51,57,50,46,50,48,48,48,49,49,46,54,49,46,49,46,49,46,49,46,52,0,0,0,0,0,0,0,50,78,208,254,244,19,162,3,0,0,0,0,0,0,0,0,65,114,99,102,111,117,114,32,100,101,99,114,121,112,116,105,111,110,32,116,101,115,116,32,49,32,102,97,105,108,101,100,46,0,0,0,0,0,0,0,37,42,115,91,99,108,111,115,101,93,10,0,0,0,0,0,102,97,105,108,101,100,32,116,111,32,100,114,111,112,32,115,101,116,117,105,100,10,0,0,40,112,117,98,108,105,99,45,107,101,121,32,40,100,115,97,32,40,112,32,37,109,41,40,113,32,37,109,41,40,103,32,37,109,41,40,121,32,37,109,41,41,41,0,0,0,0,0,46,46,46,32,116,104,105,115,32,105,115,32,97,32,98,117,103,32,40,37,115,58,37,100,58,37,115,41,10,0,0,0,111,117,116,32,111,102,32,99,111,114,101,32,105,110,32,115,101,99,117,114,101,32,109,101,109,111,114,121,0,0,0,0,47,101,116,99,47,103,99,114,121,112,116,47,102,105,112,115,95,101,110,97,98,108,101,100,0,0,0,0,0,0,0,0,102,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,104,101,32,82,78,71,32,108,111,99,107,58,32,37,115,10,0,0,0,0,0,0,70,73,80,83,45,49,57,56,97,44,32,65,46,50,0,0,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,101,102,102,102,102,102,102,102,102,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,102,102,102,102,102,102,102,102,0,0,0,0,0,0,115,101,108,102,45,116,101,115,116,32,97,102,116,101,114,32,107,101,121,32,103,101,110,101,114,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,33,97,112,0,0,0,0,0,79,107,97,121,0,0,0,0,37,48,56,108,88,0,0,0,32,32,9,9,32,32,9,9,0,0,0,0,0,0,0,0,84,119,111,102,105,115,104,45,49,50,56,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,0,110,111,32,115,101,108,102,116,101,115,116,32,97,118,97,105,108,97,98,108,101,0,0,0,114,115,97,45,117,115,101,45,101,0,0,0,0,0,0,0,32,32,113,0,0,0,0,0,100,101,99,114,121,112,116,32,109,105,115,109,97,116,99,104,0,0,0,0,0,0,0,0,112,117,98,107,101,121,0,0,102,97,105,108,101,100,32,116,111,32,97,99,113,117,105,114,101,32,116,104,101,32,82,78,71,32,108,111,99,107,58,32,37,115,10,0,0,0,0,0,79,76,163,213,214,139,167,204,10,18,8,201,198,30,156,93,160,64,60,10,0,0,0,0,78,73,83,84,32,80,45,51,56,52,0,0,0,0,0,0,100,115,97,32,32,120,0,0,99,105,112,104,101,114,0,0,102,32,33,61,32,78,85,76,76,0,0,0,0,0,0,0,37,115,9,37,115,9,37,115,9,0,0,0,0,0,0,0,37,115,10,0,0,0,0,0,84,73,71,69,82,50,0,0,32,32,112,0,0,0,0,0,100,101,99,114,121,112,116,32,99,111,109,109,97,110,100,0,101,99,99,0,0,0,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,50,46,50,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,50,46,49,0,0,109,101,109,111,114,121,32,99,111,114,114,117,112,116,105,111,110,32,100,101,116,101,99,116,101,100,32,105,110,32,82,78,71,32,99,111,110,116,101,120,116,32,37,112,10,0,0,0,102,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,104,101,32,110,111,110,99,101,32,98,117,102,102,101,114,32,108,111,99,107,58,32,37,115,10,0,0,0,0,0,83,97,109,112,108,101,32,35,49,0,0,0,0,0,0,0,48,120,52,102,101,51,52,50,101,50,102,101,49,97,55,102,57,98,56,101,101,55,101,98,52,97,55,99,48,102,57,101,49,54,50,98,99,101,51,51,53,55,54,98,51,49,53,101,99,101,99,98,98,54,52,48,54,56,51,55,98,102,53,49,102,53,0,0,0,0,0,0,100,115,97,32,32,121,0,0,72,77,65,67,45,0,0,0,97,98,99,0,0,0,0,0,121,0,0,0,0,0,0,0,83,69,82,80,69,78,84,50,53,54,0,0,0,0,0,0,112,32,97,110,100,32,113,32,97,114,101,32,115,119,97,112,112,101,100,10,0,0,0,0,101,110,99,114,121,112,116,32,109,105,115,109,97,116,99,104,0,0,0,0,0,0,0,0,83,69,69,68,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,112,97,98,103,110,0,0,0,102,97,105,108,101,100,32,116,111,32,114,101,108,101,97,115,101,32,116,104,101,32,82,78,71,32,108,111,99,107,58,32,37,115,10,0,0,0,0,0,102,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,104,101,32,112,111,111,108,32,108,111,99,107,58,32,37,115,10,0,0,0,0,0,70,73,80,83,45,49,57,56,97,44,32,65,46,49,0,0,48,120,54,98,49,55,100,49,102,50,101,49,50,99,52,50,52,55,102,56,98,99,101,54,101,53,54,51,97,52,52,48,102,50,55,55,48,51,55,100,56,49,50,100,101,98,51,51,97,48,102,52,97,49,51,57,52,53,100,56,57,56,99,50,57,54,0,0,0,0,0,0,100,115,97,32,32,103,0,0,100,105,103,101,115,116,0,0,103,0,0,0,0,0,0,0,110,101,100,112,113,117,0,0,49,46,51,46,51,54,46,51,46,50,46,49,0,0,0,0,95,103,99,114,121,95,109,112,105,95,103,99,100,32,40,103,44,32,101,44,32,112,104,105,41,0,0,0,0,0,0,0,101,110,99,114,121,112,116,32,99,111,109,109,97,110,100,0,63,79,84,82,124,37,48,56,120,124,37,48,56,120,44,37,48,53,104,117,44,37,48,53,104,117,44,37,115,44,0,0,40,49,58,37,99,37,117,58,0,0,0,0,0,0,0,0,65,69,83,50,53,54,0,0,101,114,114,111,114,32,99,114,101,97,116,105,110,103,32,107,101,121,32,102,111,114,32,82,78,71,58,32,37,115,10,0,110,111,32,101,110,116,114,111,112,121,32,103,97,116,104,101,114,105,110,103,32,109,111,100,117,108,101,32,100,101,116,101,99,116,101,100,10,0,0,0,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,105,110,32,115,101,99,111,110,100,32,105,109,112,108,101,109,101,110,116,97,116,105,111,110,0,48,120,102,102,102,102,102,102,102,102,48,48,48,48,48,48,48,48,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,98,99,101,54,102,97,97,100,97,55,49,55,57,101,56,52,102,51,98,57,99,97,99,50,102,99,54,51,50,53,53,49,0,0,0,0,0,0,100,115,97,32,32,113,0,0,104,109,97,99,0,0,0,0,82,70,67,50,50,54,56,32,101,110,99,114,121,112,116,105,111,110,32,116,101,115,116,32,49,32,102,97,105,108,101,100,46,0,0,0,0,0,0,0,113,0,0,0,0,0,0,0,88,113,0,0,0,0,0,0,115,101,116,32,73,86,0,0,63,79,84,82,44,37,48,53,104,117,44,37,48,53,104,117,44,37,115,44,0,0,0,0,115,104,97,100,111,119,101,100,45,112,114,105,118,97,116,101,45,107,101,121,0,0,0,0,112,0,0,0,0,0,0,0,112,117,98,107,101,121,46,99,0,0,0,0,0,0,0,0,101,114,114,111,114,32,99,114,101,97,116,105,110,103,32,99,105,112,104,101,114,32,99,111,110,116,101,120,116,32,102,111,114,32,82,78,71,58,32,37,115,10,0,0,0,0,0,0,47,100,101,118,47,117,114,97,110,100,111,109,0,0,0,0,95,103,99,114,121,95,104,109,97,99,50,53,54,95,102,105,110,97,108,105,122,101,32,102,97,105,108,101,100,0,0,0,48,120,53,97,99,54,51,53,100,56,97,97,51,97,57,51,101,55,98,51,101,98,98,100,53,53,55,54,57,56,56,54,98,99,54,53,49,100,48,54,98,48,99,99,53,51,98,48,102,54,51,98,99,101,51,99,51,101,50,55,100,50,54,48,52,98,0,0,0,0,0,0,100,115,97,32,32,112,0,0,108,105,98,103,99,114,121,112,116,32,115,101,108,102,116,101,115,116,58,32,37,115,32,37,115,37,115,32,40,37,100,41,58,32,37,115,37,115,37,115,37,115,10,0,0,0,0,0,37,48,50,88,0,0,0,0,113,98,105,116,115,47,56,32,60,61,32,115,105,122,101,111,102,32,100,105,103,101,115,116,0,0,0,0,0,0,0,0,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,50,46,53,0,0,0,0,0,0,88,113,50,0,0,0,0,0,115,101,116,32,107,101,121,0,63,79,84,82,44,37,104,117,44,37,104,117,44,37,110,37,42,91,94,44,93,44,37,110,0,0,0,0,0,0,0,0,112,114,111,116,101,99,116,101,100,45,112,114,105,118,97,116,101,45,107,101,121,0,0,0,119,43,98,0,0,0,0,0,58,32,0,0,0,0,0,0,115,101,118,101,114,101,32,101,114,114,111,114,32,103,101,116,116,105,110,103,32,114,97,110,100,111,109,10,0,0,0,0,47,100,101,118,47,114,97,110,100,111,109,0,0,0,0,0,95,103,99,114,121,95,104,109,97,99,50,53,54,95,110,101,119,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,48,120,102,102,102,102,102,102,102,102,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,99,0,0,0,0,0,0,113,98,105,116,115,32,62,61,32,49,54,48,0,0,0,0,112,117,98,107,101,121,0,0,117,110,105,109,112,108,101,109,101,110,116,101,100,32,102,117,110,99,116,105,111,110,32,99,97,108,108,101,100,0,0,0,112,114,105,118,97,116,101,45,107,101,121,0,0,0,0,0,107,101,121,108,101,110,32,61,61,32,49,54,0,0,0,0,88,113,49,0,0,0,0,0,111,112,101,110,0,0,0,0,108,111,119,45,108,101,118,101,108,0,0,0,0,0,0,0,63,79,84,82,44,0,0,0,112,114,105,118,97,116,101,45,107,101,121,0,0,0,0,0,79,73,68,46,0,0,0,0,37,115,0,0,0,0,0,0,63,79,84,82,37,115,10,60,98,62,37,115,60,47,98,62,32,104,97,115,32,114,101,113,117,101,115,116,101,100,32,97,110,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,111,116,114,46,99,121,112,104,101,114,112,117,110,107,115,46,99,97,47,34,62,79,102,102,45,116,104,101,45,82,101,99,111,114,100,32,112,114,105,118,97,116,101,32,99,111,110,118,101,114,115,97,116,105,111,110,60,47,97,62,46,32,32,72,111,119,101,118,101,114,44,32,121,111,117,32,100,111,32,110,111,116,32,104,97,118,101,32,97,32,112,108,117,103,105,110,32,116,111,32,115,117,112,112,111,114,116,32,116,104,97,116,46,10,83,101,101,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,111,116,114,46,99,121,112,104,101,114,112,117,110,107,115,46,99,97,47,34,62,104,116,116,112,58,47,47,111,116,114,46,99,121,112,104,101,114,112,117,110,107,115,46,99,97,47,60,47,97,62,32,102,111,114,32,109,111,114,101,32,105,110,102,111,114,109,97,116,105,111,110,46,0,0,0,0,0,0,0,102,111,114,107,32,119,105,116,104,111,117,116,32,112,114,111,112,101,114,32,114,101,45,105,110,105,116,105,97,108,105,122,97,116,105,111,110,32,100,101,116,101,99,116,101,100,32,105,110,32,82,78,71,0,0,0,87,65,82,78,73,78,71,58,32,117,115,105,110,103,32,105,110,115,101,99,117,114,101,32,114,97,110,100,111,109,32,110,117,109,98,101,114,32,103,101,110,101,114,97,116,111,114,33,33,10,0,0,0,0,0,0,100,111,101,115,32,110,111,116,32,109,97,116,99,104,0,0,48,120,102,102,102,102,102,102,102,102,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,0,0,0,0,32,40,116,114,97,110,115,105,101,110,116,45,107,101,121,41,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,99,105,112,104,101,114,46,99,0,0,0,0,0,0,0,0,112,114,111,116,111,99,111,108,0,0,0,0,0,0,0,0,88,112,0,0,0,0,0,0,110,111,32,116,101,115,116,32,100,97,116,97,32,102,111,114,32,116,104,105,115,32,109,111,100,101,0,0,0,0,0,0,63,79,84,82,124,37,42,120,124,37,42,120,44,37,104,117,44,37,104,117,44,37,110,37,42,91,94,44,93,44,37,110,0,0,0,0,0,0,0,0,112,117,98,108,105,99,45,107,101,121,0,0,0,0,0,0,111,105,100,46,0,0,0,0,32,41,10,0,0,0,0,0,37,115,37,115,37,115,58,32,37,115,10,0,0,0,0,0,102,45,62,102,105,110,103,101,114,112,114,105,110,116,32,33,61,32,78,85,76,76,0,0,114,110,103,95,99,116,120,0,102,97,105,108,101,100,32,116,111,32,97,99,113,117,105,114])
.concat([101,32,116,104,101,32,112,111,111,108,32,108,111,99,107,58,32,37,115,10,0,0,0,0,103,99,114,121,95,109,100,95,114,101,97,100,32,102,97,105,108,101,100,0,0,0,0,0,37,115,58,32,0,0,0,0,78,73,83,84,32,80,45,50,53,54,0,0,0,0,0,0,99,104,111,111,115,105,110,103,32,97,32,114,97,110,100,111,109,32,120,37,115,0,0,0,83,104,117,116,100,111,119,110,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,110,97,109,101,0,0,0,0,88,112,50,0,0,0,0,0,112,114,105,118,107,101,121,115,0,0,0,0,0,0,0,0,111,102,98,0,0,0,0,0,112,32,45,32,115,116,114,105,110,103,32,60,32,110,101,101,100,101,100,0,0,0,0,0,63,79,84,82,124,0,0,0,112,114,105,109,101,103,101,110,0,0,0,0,0,0,0,0,109,100,95,101,110,97,98,108,101,58,32,97,108,103,111,114,105,116,104,109,32,37,100,32,110,111,116,32,97,118,97,105,108,97,98,108,101,10,0,0,40,112,114,111,116,111,99,111,108,32,37,115,41,0,0,0,102,97,105,108,101,100,32,116,111,32,100,117,109,112,32,100,97,116,97,32,115,101,116,0,98,117,102,102,101,114,0,0,102,97,105,108,101,100,32,116,111,32,114,101,108,101,97,115,101,32,116,104,101,32,112,111,111,108,32,108,111,99,107,58,32,37,115,10,0,0,0,0,103,99,114,121,95,109,100,95,115,101,116,107,101,121,32,102,97,105,108,101,100,0,0,0,48,120,98,100,51,55,54,51,56,56,98,53,102,55,50,51,102,98,52,99,50,50,100,102,101,54,99,100,52,51,55,53,97,48,53,97,48,55,52,55,54,52,52,52,100,53,56,49,57,57,56,53,48,48,55,101,51,52,0,0,0,0,0,0,95,103,99,114,121,95,109,112,105,95,103,101,116,95,110,98,105,116,115,32,40,40,113,41,41,32,61,61,32,113,98,105,116,115,0,0,0,0,0,0,37,99,0,0,0,0,0,0,103,108,111,98,97,108,46,99,0,0,0,0,0,0,0,0,70,97,116,97,108,45,69,114,114,111,114,0,0,0,0,0,117,115,101,100,32,105,110,32,110,111,110,45,111,112,101,114,97,116,105,111,110,97,108,32,115,116,97,116,101,0,0,0,110,101,101,100,95,101,110,116,114,111,112,121,0,0,0,0,37,115,10,0,0,0,0,0,97,99,99,111,117,110,116,0,33,115,116,100,95,114,110,103,95,99,111,110,116,101,120,116,45,62,116,101,115,116,95,100,116,95,112,116,114,0,0,0,119,98,0,0,0,0,0,0,97,108,103,111,114,105,116,104,109,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,88,112,49,0,0,0,0,0,105,110,118,97,108,105,100,32,68,65,84,65,77,79,68,69,0,0,0,0,0,0,0,0,112,103,121,120,0,0,0,0,99,102,98,0,0,0,0,0,105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0,0,0,0,0,0,0,112,97,98,103,110,113,100,0,41,0,0,0,0,0,0,0,63,79,84,82,58,0,0,0,48,120,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,67,57,48,70,68,65,65,50,50,49,54,56,67,50,51,52,67,52,67,54,54,50,56,66,56,48,68,67,49,67,68,49,50,57,48,50,52,69,48,56,56,65,54,55,67,67,55,52,48,50,48,66,66,69,65,54,51,66,49,51,57,66,50,50,53,49,52,65,48,56,55,57,56,69,51,52,48,52,68,68,69,70,57,53,49,57,66,51,67,68,51,65,52,51,49,66,51,48,50,66,48,65,54,68,70,50,53,70,49,52,51,55,52,70,69,49,51,53,54,68,54,68,53,49,67,50,52,53,69,52,56,53,66,53,55,54,54,50,53,69,55,69,67,54,70,52,52,67,52,50,69,57,65,54,51,55,69,68,54,66,48,66,70,70,53,67,66,54,70,52,48,54,66,55,69,68,69,69,51,56,54,66,70,66,53,65,56,57,57,70,65,53,65,69,57,70,50,52,49,49,55,67,52,66,49,70,69,54,52,57,50,56,54,54,53,49,69,67,69,52,53,66,51,68,67,50,48,48,55,67,66,56,65,49,54,51,66,70,48,53,57,56,68,65,52,56,51,54,49,67,53,53,68,51,57,65,54,57,49,54,51,70,65,56,70,68,50,52,67,70,53,70,56,51,54,53,53,68,50,51,68,67,65,51,65,68,57,54,49,67,54,50,70,51,53,54,50,48,56,53,53,50,66,66,57,69,68,53,50,57,48,55,55,48,57,54,57,54,54,68,54,55,48,67,51,53,52,69,52,65,66,67,57,56,48,52,70,49,55,52,54,67,48,56,67,65,50,51,55,51,50,55,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,0,110,98,105,116,115,32,61,61,32,95,103,99,114,121,95,109,112,105,95,103,101,116,95,110,98,105,116,115,32,40,40,112,114,105,109,101,41,41,0,0,112,113,103,121,120,0,0,0,67,82,67,50,52,82,70,67,50,52,52,48,0,0,0,0,49,0,0,0,0,0,0,0,67,65,77,69,76,76,73,65,50,53,54,0,0,0,0,0,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,0,0,0,0,0,117,110,107,110,111,119,110,0,65,114,99,102,111,117,114,32,101,110,99,114,121,112,116,105,111,110,32,116,101,115,116,32,49,32,102,97,105,108,101,100,46,0,0,0,0,0,0,0,40,110,97,109,101,32,37,115,41,0,0,0,0,0,0,0,115,101,99,117,114,101,32,109,101,109,111,114,121,32,112,111,111,108,32,105,115,32,110,111,116,32,108,111,99,107,101,100,32,119,104,105,108,101,32,105,110,32,70,73,80,83,32,109,111,100,101,10,0,0,0,0,10,0,0,0,0,0,0,0,0,1,10,0,0,0,0,0,110,111,45,98,108,105,110,100,105,110,103,0,0,0,0,0,111,117,116,32,111,102,32,99,111,114,101,32,104,97,110,100,108,101,114,32,105,103,110,111,114,101,100,32,105,110,32,70,73,80,83,32,109,111,100,101,10,0,0,0,0,0,0,0,33,110,111,95,102,105,112,115,95,109,111,100,101,95,114,101,113,117,105,114,101,100,0,0,42,108,111,99,107,32,61,61,32,77,85,84,69,88,95,76,79,67,75,69,68,0,0,0,101,110,116,114,111,112,121,95,99,111,108,108,101,99,116,95,98,117,102,102,101,114,0,0,119,97,105,116,105,110,103,32,102,111,114,32,108,111,99,107,32,111,110,32,96,37,115,39,46,46,46,10,0,0,0,0,103,99,114,121,95,109,100,95,111,112,101,110,32,102,97,105,108,101,100,0,0,0,0,0,111,112,101,110,112,103,112,45,101,108,103,45,115,105,103,0,116,108,118,45,62,100,97,116,97,32,33,61,32,78,85,76,76,0,0,0,0,0,0,0,48,120,98,55,48,101,48,99,98,100,54,98,98,52,98,102,55,102,51,50,49,51,57,48,98,57,52,97,48,51,99,49,100,51,53,54,99,50,49,49,50,50,51,52,51,50,56,48,100,54,49,49,53,99,49,100,50,49,0,0,0,0,0,0,100,115,97,46,99,0,0,0,48,46,51,46,52,52,48,49,46,53,46,51,46,49,46,57,46,52,0,0,0,0,0,0,92,48,0,0,0,0,0,0,105,110,118,97,108,105,100,32,102,108,97,103,32,118,97,108,117,101,10,0,0,0,0,0,102,105,112,115,45,109,111,100,101,58,37,99,58,37,99,58,10,0,0,0,0,0,0,0,69,114,114,111,114,0,0,0,37,115,10,0,0,0,0,0,45,0,0,0,0,0,0,0,32,32,9,9,32,32,9,32,0,0,0,0,0,0,0,0,119,104,105,114,108,112,111,111,108,46,99,0,0,0,0,0,112,114,105,118,107,101,121,115,0,0,0,0,0,0,0,0,115,101,108,102,45,116,101,115,116,32,97,102,116,101,114,32,107,101,121,32,103,101,110,101,114,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,65,69,83,45,49,57,50,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,40,109,105,115,99,45,107,101,121,45,105,110,102,111,40,112,109,49,45,102,97,99,116,111,114,115,0,0,0,0,0,0,112,114,111,116,111,46,99,0,44,32,112,37,100,61,37,117,0,0,0,0,0,0,0,0,33,32,97,104,100,45,62,98,117,102,112,111,115,0,0,0,32,40,97,99,99,111,117,110,116,10,0,0,0,0,0,0,118,105,115,105,98,105,108,105,116,121,46,99,0,0,0,0,32,0,0,0,0,0,0,0,114,98,0,0,0,0,0,0,101,114,114,111,114,32,103,101,116,116,105,110,103,32,101,110,116,114,111,112,121,32,100,97,116,97,10,0,0,0,0,0,99,97,110,39,116,32,108,111,99,107,32,96,37,115,39,58,32,37,115,10,0,0,0,0,105,110,118,97,108,105,100,32,116,101,115,116,115,32,100,97,116,97,0,0,0,0,0,0,111,112,101,110,112,103,112,45,101,108,103,0,0,0,0,0,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,49,54,97,50,101,48,98,56,102,48,51,101,49,51,100,100,50,57,52,53,53,99,53,99,50,97,51,100,0,0,0,0,0,0,95,103,99,114,121,95,109,112,105,95,103,101,116,95,110,98,105,116,115,32,40,40,112,41,41,32,61,61,32,110,98,105,116,115,0,0,0,0,0,0,48,46,51,46,52,52,48,49,46,53,46,51,46,49,46,57,46,51,0,0,0,0,0,0,92,98,0,0,0,0,0,0,10,0,0,0,0,0,0,0,79,112,101,114,97,116,105,111,110,97,108,0,0,0,0,0,47,100,101,118,47,114,97,110,100,111,109,0,0,0,0,0,40,112,114,105,118,107,101,121,115,32,40,97,99,99,111,117,110,116,32,40,110,97,109,101,32,37,115,41,32,40,112,114,111,116,111,99,111,108,32,37,115,41,32,40,112,114,105,118,97,116,101,45,107,101,121,32,40,100,115,97,32,32,32,32,32,32,32,32,32,40,112,32,37,77,41,32,40,113,32,37,77,41,32,40,103,32,37,77,41,32,40,121,32,37,77,41,32,40,120,32,37,77,41,32,41,41,41,41,0,0,0,0,119,98,0,0,0,0,0,0,84,87,79,70,73,83,72,49,50,56,0,0,0,0,0,0,32,32,117,61,32,0,0,0,84,73,71,69,82,0,0,0,65,69,83,45,49,57,50,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,40,112,114,105,118,97,116,101,45,107,101,121,40,0,0,0,108,101,110,112,32,61,61,32,48,0,0,0,0,0,0,0,44,32,113,48,61,37,117,0,33,110,111,110,99,101,95,99,111,110,116,101,120,116,45,62,116,101,115,116,95,100,116,95,112,116,114,0,0,0,0,0,97,104,100,45,62,98,117,102,115,105,122,101,32,61,61,32,40,110,32,45,32,115,105,122,101,111,102,32,40,115,116,114,117,99,116,32,103,99,114,121,95,109,100,95,104,97,110,100,108,101,41,32,43,32,49,41,0,0,0,0,0,0,0,0,83,72,65,51,56,52,0,0,40,115,105,103,45,118,97,108,32,40,100,115,97,32,40,114,32,37,109,41,40,115,32,37,109,41,41,41,0,0,0,0,40,102,108,97,103,115,0,0,83,72,65,50,53,54,0,0,33,101,110,116,114,111,112,121,95,99,111,108,108,101,99,116,95,98,117,102,102,101,114,0,99,97,110,39,116,32,114,101,97,100,32,96,37,115,39,58,32,37,115,10,0,0,0,0,84,104,105,115,32,105,115,32,97,32,116,101,115,116,32,117,115,105,110,103,32,97,32,108,97,114,103,101,114,32,116,104,97,110,32,98,108,111,99,107,45,115,105,122,101,32,107,101,121,32,97,110,100,32,97,32,108,97,114,103,101,114,32,116,104,97,110,32,98,108,111,99,107,45,115,105,122,101,32,100,97,116,97,46,32,84,104,101,32,107,101,121,32,110,101,101,100,115,32,116,111,32,98,101,32,104,97,115,104,101,100,32,98,101,102,111,114,101,32,98,101,105,110,103,32,117,115,101,100,32,98,121,32,116,104,101,32,72,77,65,67,32,97,108,103,111,114,105,116,104,109,46,0,0,0,0,0,0,0,0,101,108,103,0,0,0,0,0,48,120,98,52,48,53,48,97,56,53,48,99,48,52,98,51,97,98,102,53,52,49,51,50,53,54,53,48,52,52,98,48,98,55,100,55,98,102,100,56,98,97,50,55,48,98,51,57,52,51,50,51,53,53,102,102,98,52,0,0,0,0,0,0,41,0,0,0,0,0,0,0,48,46,51,46,52,52,48,49,46,53,46,51,46,49,46,57,46,49,0,0,0,0,0,0,92,118,0,0,0,0,0,0,37,115,58,0,0,0,0,0,83,101,108,102,45,84,101,115,116,0,0,0,0,0,0,0,115,104,111,114,116,32,115,116,114,105,110,103,0,0,0,0,114,98,0,0,0,0,0,0,121,0,0,0,0,0,0,0,114,97,110,100,111,109,32,117,115,97,103,101,58,32,112,111,111,108,115,105,122,101,61,37,100,32,109,105,120,101,100,61,37,108,117,32,112,111,108,108,115,61,37,108,117,47,37,108,117,32,97,100,100,101,100,61,37,108,117,47,37,108,117,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,117,116,109,105,120,61,37,108,117,32,103,101,116,108,118,108,49,61,37,108,117,47,37,108,117,32,103,101,116,108,118,108,50,61,37,108,117,47,37,108,117,37,115,10,0,0,0,0,0,32,32,100,61,32,0,0,0,83,69,82,80,69,78,84,49,57,50,0,0,0,0,0,0,65,69,83,45,50,53,54,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,37,115,10,0,0,0,0,0,37,83,0,0,0,0,0,0,98,105,116,32,115,105,122,101,115,58,32,112,114,105,109,101,61,37,117,44,32,113,61,37,117,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,107,101,121,108,101,110,32,60,61,32,104,100,45,62,99,116,120,45,62,109,97,99,112,97,100,115,95,66,115,105,122,101,0,0,0,0,0,0,0,0,115,0,0,0,0,0,0,0,79,73,68,46,0,0,0,0,99,111,110,116,101,120,116,95,112,114,105,118,32,33,61,32,78,85,76,76,0,0,0,0,97,99,95,105,111,45,62,109,111,100,101,32,61,61,32,71,67,82,89,95,65,67,95,73,79,95,87,82,73,84,65,66,76,69,0,0,0,0,0,0,104,109,97,99,0,0,0,0,103,101,116,116,105,109,101,111,102,100,97,121,40,41,32,102,97,105,108,101,100,58,32,37,115,10,0,0,0,0,0,0,119,97,114,110,105,110,103,58,32,105,110,118,97,108,105,100,32,115,105,122,101,32,111,102,32,114,97,110,100,111,109,95,115,101,101,100,32,102,105,108,101,32,45,32,110,111,116,32,117,115,101,100,10,0,0,0,100,97,116,97,45,49,53,50,32,107,101,121,45,49,51,49,0,0,0,0,0,0,0,0,117,115,105,110,103,32,97,32,115,117,112,112,108,105,101,100,32,120,32,111,102,32,115,105,122,101,32,37,117,0,0,0,37,115,58,32,0,0,0,0,100,105,103,101,115,116,32,115,105,122,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,101,120,112,101,99,116,101,100,32,115,105,122,101,0,0,0,0,0,0,0,0,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,101,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,101,0,0,0,0,0,0,37,109,0,0,0,0,0,0,49,46,50,46,51,57,50,46,50,48,48,48,49,49,46,54,49,46,49,46,49,46,49,46,50,0,0,0,0,0,0,0,92,102,0,0,0,0,0,0,104,119,102,108,105,115,116,58,0,0,0,0,0,0,0,0,73,110,105,116,0,0,0,0,103,0,0,0,0,0,0,0,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,49,46,49,46,49,51,0,0,0,110,101,0,0,0,0,0,0,49,46,51,46,51,54,46,51,46,51,46,49,46,50,0,0,48,120,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,67,57,48,70,68,65,65,50,50,49,54,56,67,50,51,52,67,52,67,54,54,50,56,66,56,48,68,67,49,67,68,49,50,57,48,50,52,69,48,56,56,65,54,55,67,67,55,52,48,50,48,66,66,69,65,54,51,66,49,51,57,66,50,50,53,49,52,65,48,56,55,57,56,69,51,52,48,52,68,68,69,70,57,53,49,57,66,51,67,68,51,65,52,51,49,66,51,48,50,66,48,65,54,68,70,50,53,70,49,52,51,55,52,70,69,49,51,53,54,68,54,68,53,49,67,50,52,53,69,52,56,53,66,53,55,54,54,50,53,69,55,69,67,54,70,52,52,67,52,50,69,57,65,54,51,55,69,68,54,66,48,66,70,70,53,67,66,54,70,52,48,54,66,55,69,68,69,69,51,56,54,66,70,66,53,65,56,57,57,70,65,53,65,69,57,70,50,52,49,49,55,67,52,66,49,70,69,54,52,57,50,56,54,54,53,49,69,67,69,52,53,66,51,68,67,50,48,48,55,67,66,56,65,49,54,51,66,70,48,53,57,56,68,65,52,56,51,54,49,67,53,53,68,51,57,65,54,57,49,54,51,70,65,56,70,68,50,52,67,70,53,70,56,51,54,53,53,68,50,51,68,67,65,51,65,68,57,54,49,67,54,50,70,51,53,54,50,48,56,53,53,50,66,66,57,69,68,53,50,57,48,55,55,48,57,54,57,54,54,68,54,55,48,67,51,53,52,69,52,65,66,67,57,56,48,52,70,49,55,52,54,67,48,56,67,65,50,51,55,51,50,55,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,0,32,32,101,61,32,0,0,0,69,76,71,0,0,0,0,0,65,69,83,45,50,53,54,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,40,112,117,98,108,105,99,45,107,101,121,40,0,0,0,0,102,97,99,116,111,114,32,112,105,58,32,0,0,0,0,0,0,2,3,0,0,0,0,0,109,111,114,101,32,116,104,97,110,32,111,110,101,32,97,108,103,111,114,105,116,104,109,32,105,110,32,109,100,95,114,101,97,100,40,48,41,10,0,0,114,0,0,0,0,0,0,0,111,105,100,46,0,0,0,0,97,99,95,105,111,45,62,109,111,100,101,32,61,61,32,71,67,82,89,95,65,67,95,73,79,95,82,69,65,68,65,66,76,69,0,0,0,0,0,0,65,69,83,49,57,50,0,0,65,69,83,32,101,110,99,114,121,112,116,105,111,110,32,105,110,32,82,78,71,32,102,97,105,108,101,100,58,32,37,115,10,0,0,0,0,0,0,0,110,111,116,101,58,32,114,97,110,100,111,109,95,115,101,101,100,32,102,105,108,101,32,105,115,32,101,109,112,116,121,10,0,0,0,0,0,0,0,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,0,0,0,0,112,107,95,101,108,103,0,0,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,0,0,0,0,0,0,40,112,109,49,45,102,97,99,116,111,114,115,0,0,0,0,67,65,77,69,76,76,73,65,45,50,53,54,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,92,114,0,0,0,0,0,0,109,112,105,45,97,115,109,58,37,115,58,10,0,0,0,0,80,111,119,101,114,45,79,110,0,0,0,0,0,0,0,0,82,70,67,50,50,54,56,32,115,101,108,102,116,101,115,116,32,102,97,105,108,101,100,32,40,37,115,41,46,10,0,0,113,0,0,0,0,0,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,50,46,51,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,50,46,52,0,0,32,32,110,61,32,0,0,0,99,105,112,104,101,114,0,0,69,67,68,83,65,0,0,0,40,107,101,121,45,100,97,116,97,0,0,0,0,0,0,0,102,97,99,116,111,114,32,113,48,58,32,0,0,0,0,0,109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,87,65,82,78,73,78,71,58,32,109,111,114,101,32,116,104,97,110,32,111,110,101,32,97,108,103,111,114,105,116,104,109,32,105,110,32,109,100,95,103,101,116,95,97,108,103,111,40,41,10,0,0,0,0,0,0,101,99,100,115,97,0,0,0,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,49,46,49,50,46,49,46,51,0,100,115,97,0,0,0,0,0,63,0,0,0,0,0,0,0,66,97,100,32,99,104,101,99,107,58,32,84,104,101,114,101,32,105,115,32,78,79,32,99,111,114,114,101,115,112,111,110,100,101,110,99,101,32,98,101,116,119,101,101,110,32,39,100,39,32,97,110,100,32,39,81,39,33,10,0,0,0,0,0,115,105,103,45,118,97,108,0,66,97,100,32,99,104,101,99,107,58,32,81,32,99,97,110,32,110,111,116,32,98,101,32,97,32,80,111,105,110,116,32,97,116,32,73,110,102,105,110,105,116,121,33,10,0,0,0,109,111,100,117,108,101,0,0,99,104,101,99,107,95,115,101,99,114,101,116,95,107,101,121,58,32,69,32,105,115,32,110,111,116,32,97,32,99,117,114,118,101,32,111,102,32,111,114,100,101,114,32,110,10,0,0,108,101,110,103,116,104,32,61,61,32,49,54,0,0,0,0,96,37,115,39,32,105,115,32,110,111,116,32,97,32,114,101,103,117,108,97,114,32,102,105,108,101,32,45,32,105,103,110,111,114,101,100,10,0,0,0,84,101,115,116,32,85,115,105,110,103,32,76,97,114,103,101,114,32,84,104,97,110,32,66,108,111,99,107,45,83,105,122,101,32,75,101,121,32,45,32,72,97,115,104,32,75,101,121,32,70,105,114,115,116,0,0,99,104,111,111,115,105,110,103,32,97,32,114,97,110,100,111,109,32,107,32,0,0,0,0,78,73,83,84,32,80,45,50,50,52,0,0,0,0,0,0,37,83,0,0,0,0,0,0,67,65,77,69,76,76,73,65,45,50,53,54,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,92,110,0,0,0,0,0,0,114,110,100,45,109,111,100,58,108,105,110,117,120,58,10,0,100,101,110,105,101,100,0,0,66,97,100,32,99,104,101,99,107,58,32,39,71,39,32,99,97,110,110,111,116,32,98,101,32,80,111,105,110,116,32,97,116,32,73,110,102,105,110,105,116,121,33,10,0,0,0,0,66,97,100,32,99,104,101,99,107,58,32,80,111,105,110,116,32,39,71,39,32,100,111,101,115,32,110,111,116,32,98,101,108,111,110,103,32,116,111,32,99,117,114,118,101,32,39,69,39,33,10,0,0,0,0,0,48,120,48,50,0,0,0,0,112,0,0,0,0,0,0,0,68,83,65,0,0,0,0,0,157,14,24,9,113,100,116,203,8,110,131,78,49,10,74,28,237,20,158,156,0,242,72,82,121,114,206,197,112,76,42,91,7,184,179,220,56,236,196,235,174,151,221,216,127,61,137,133,0,0,0,0,0,0,0,0,32,121,70,85,152,12,145,216,187,180,193,234,151,97,138,75,240,63,66,88,25,72,178,238,78,231,173,103,0,0,0,0,101,99,99,0,0,0,0,0,67,82,67,51,50,0,0,0,10,0,0,0,0,0,0,0,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,49,46,49,46,52,0,0,0,0,32,32,102,61,32,0,0,0,101,99,100,104,0,0,0,0,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,50,46,52,0,0,0,0,0,0,108,111,119,45,108,101,118,101,108,0,0,0,0,0,0,0,67,65,83,84,53,0,0,0,101,99,100,104,58,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,97,102,102,105,110,101,32,99,111,111,114,100,105,110,97,116,101,115,32,102,111,114,32,107,71,10,0,0,110,98,105,116,115,0,0,0,102,97,99,116,111,114,32,32,113,58,32,0,0,0,0,0,101,99,100,104,58,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,97,102,102,105,110,101,32,99,111,111,114,100,105,110,97,116,101,115,32,102,111,114,32,107,100,71,10,0,63,79,84,82,58,65,65,69,0,0,0,0,0,0,0,0,112,111,115,115,105,98,108,101,32,117,115,97,103,101,32,101,114,114,111,114,0,0,0,0,101,99,100,104,58,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,97,102,102,105,110,101,32,99,111,111,114,100,105,110,97,116,101,115,10,0,49,46,51,46,51,54,46,51,46,49,46,51,46,50,46,49,0,0,0,0,0,0,0,0,99,105,112,104,101,114,95,101,110,99,114,121,112,116,58,32,105,110,118,97,108,105,100,32,109,111,100,101,32,37,100,10,0,0,0,0,0,0,0,0,40,37,109,41,0,0,0,0,112,117,98,107,101,121,0,0,67,65,77,69,76,76,73,65,49,50,56,0,0,0,0,0,101,110,99,45,118,97,108,0,108,111,119,45,108,101,118,101,108,0,0,0,0,0,0,0,66,76,79,87,70,73,83,72,0,0,0,0,0,0,0,0,99,104,111,111,115,105,110,103,32,97,32,114,97,110,100,111,109,32,107,32,111,102,32,37,117,32,98,105,116,115,32,97,116,32,115,101,99,108,101,118,101,108,32,37,100,10,0,0,100,117,112,108,105,99,97,116,101,32,49,50,56,32,98,105,116,32,98,108,111,99,107,32,114,101,116,117,114,110,101,100,32,98,121,32,82,78,71,0,99,97,110,39,116,32,115,116,97,116,32,96,37,115,39,58,32,37,115,10,0,0,0,0,100,97,116,97,45,53,52,32,107,101,121,45,49,51,49,0,115,105,103,110,43,118,101,114,105,102,121,0,0,0,0,0,37,115,58,32,0,0,0,0,48,120,48,55,49,57,50,98,57,53,102,102,99,56,100,97,55,56,54,51,49,48,49,49,101,100,54,98,50,52,99,100,100,53,55,51,102,57,55,55,97,49,49,101,55,57,52,56,49,49,0,0,0,0,0,0,40,109,105,115,99,45,107,101,121,45,105,110,102,111,0,0,67,65,77,69,76,76,73,65,45,49,57,50,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,38,92,0,0,0,0,0,0,99,114,99,58,109,100,52,58,109,100,53,58,114,109,100,49,54,48,58,115,104,97,49,58,115,104,97,50,53,54,58,115,104,97,53,49,50,58,116,105,103,101,114,58,119,104,105,114,108,112,111,111,108,0,0,0,103,114,97,110,116,101,100,0,65,82,67,70,79,85,82,0,101,99,100,115,97,32,115,105,103,110,32,114,101,115,117,108,116,32,115,32,0,0,0,0,109,100,46,99,0,0,0,0,101,99,100,115,97,32,115,105,103,110,32,114,101,115,117,108,116,32,114,32,0,0,0,0,100,115,97,0,0,0,0,0,109,101,109,111,114,121,32,97,116,32,37,112,32,99,111,114,114,117,112,116,101,100,32,40,117,110,100,101,114,102,108,111,119,61,37,48,50,120,41,10,0,0,0,0,0,0,0,0,9,51,12,51,247,17,71,232,61,25,47,199,130,205,27,71,83,17,27,23,59,59,5,210,47,160,128,134,227,176,247,18,252,199,199,26,85,126,45,185,102,195,233,250,145,116,96,57,0,0,0,0,0,0,0,0,117,56,139,22,81,39,118,204,93,186,93,161,253,137,1,80,176,198,69,92,180,245,139,25,82,82,37,37,0,0,0,0,49,46,50,46,56,52,48,46,49,48,48,52,53,46,52,46,49,0,0,0,0,0,0,0,101,99,99,32,115,105,103,110,58,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,97,102,102,105,110,101,32,99,111,111,114,100,105,110,97,116,101,115,10,0,0,0,0,0,37,115,10,0,0,0,0,0,32,32,103,61,32,0,0,0,101,99,100,115,97,32,115,105,103,110,32,104,97,115,104,32,32,0,0,0,0,0,0,0,65,69,83,45,49,57,50,0,101,99,99,32,118,101,114,105,102,121,58,32,65,99,99,101,112,116,101,100,10,0,0,0,51,68,69,83,0,0,0,0,114,115,97,45,117,115,101,45,101,0,0,0,0,0,0,0,101,99,99,32,118,101,114,105,102,121,58,32,78,111,116,32,118,101,114,105,102,105,101,100,10,0,0,0,0,0,0,0,112,114,105,109,101,32,32,32,32,58,32,0,0,0,0,0,63,79,84,82,32,69,114,114,111,114,58,0,0,0,0,0,110,111,32,65,83,78,46,49,32,79,73,68,32,102,111,114,32,109,100,32,97,108,103,111,32,37,100,10,0,0,0,0,32,32,32,32,32,115,0,0,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,51,46,55,0,0,0,0,0,0,99,45,62,117,110,117,115,101,100,32,60,32,98,108,111,99,107,115,105,122,101,0,0,0,32,32,32,32,32,114,0,0,100,97,116,97,0,0,0,0,32,32,32,32,32,121,0,0,52,46,48,46,48,0,0,0,91,110,105,108,93,10,0,0,32,32,32,32,32,120,0,0,114,110,103,95,99,116,120,45,62,105,115,95,115,101,101,100,101,100,0,0,0,0,0,0,99,97,110,39,116,32,111,112,101,110,32,96,37,115,39,58,32,37,115,10,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,0,0,0,0,0,0,0,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0,0,0,0,48,120,49,56,56,100,97,56,48,101,98,48,51,48,57,48,102,54,55,99,98,102,50,48,101,98,52,51,97,49,56,56,48,48,102,52,102,102,48,97,102,100,56,50,102,102,49,48,49,50,0,0,0,0,0,0,40,115,101,101,100,45,118,97,108,117,101,115,40,99,111,117,110,116,101,114,32,37,100,41,40,115,101,101,100,32,37,98,41,40,104,32,37,109,41,41,0,0,0,0,0,0,0,0,67,65,77,69,76,76,73,65,45,49,57,50,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,37,117,0,0,0,0,0,0,100,105,103,101,115,116,115,58,37,115,58,10,0,0,0,0,108,105,98,103,99,114,121,112,116,32,115,116,97,116,101,32,116,114,97,110,115,105,116,105,111,110,32,37,115,32,61,62,32,37,115,32,37,115,10,0,101,99,99,32,118,101,114,105,102,121,58,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,97,102,102,105,110,101,32,99,111,111,114,100,105,110,97,116,101,115,10,0,0,0,110,32,60,61,32,104,45,62,99,105,112,104,101,114,45,62,98,108,111,99,107,115,105,122,101,0,0,0,0,0,0,0,115,101,99,109,101,109,32,117,115,97,103,101,58,32,37,117,47,37,108,117,32,98,121,116,101,115,32,105,110,32,37,117,32,98,108,111,99,107,115,10,0,0,0,0,0,0,0,0,101,99,99,32,118,101,114,105,102,121,58,32,82,101,106,101,99,116,101,100,10,0,0,0,41,10,0,0,0,0,0,0,203,0,117,63,69,163,94,139,181,160,61,105,154,198,80,7,39,44,50,171,14,222,209,99,26,139,96,90,67,255,91,237,128,134,7,43,161,231,204,35,88,186,236,161,52,200,37,167,0,0,0,0,0,0,0,0,35,9,125,34,52,5,216,34,134,66,164,119,189,162,85,179,42,173,188,228,189,160,179,247,227,108,157,167,0,0,0,0,49,46,51,46,49,52,46,51,46,50,46,50,57,0,0,0,69,67,68,83,65,32,111,112,101,114,97,116,105,111,110,58,32,115,105,103,110,44,32,118,101,114,105,102,121,32,111,107,46,10,0,0,0,0,0,0,112,104,105,61,32,0,0,0,69,67,68,83,65,32,111,112,101,114,97,116,105,111,110,58,32,115,105,103,110,44,32,118,101,114,105,102,121,32,102,97,105,108,101,100,10,0,0,0,82,73,74,78,68,65,69,76,49,57,50,0,0,0,0,0,69,67,68,83,65,32,111,112,101,114,97,116,105,111,110,58,32,115,105,103,110,32,102,97,105,108,101,100,10,0,0,0,103,101,110,107,101,121,0,0,84,101,115,116,105,110,103,32,107,101,121,46,10,0,0,0,103,101,110,32,112,114,105,109,101,58,32,112,98,105,116,115,61,37,117,32,113,98,105,116,115,61,37,117,32,102,98,105,116,115,61,37,117,47,37,117,32,110,61,37,100,10,0,0,63,79,84,82,58,65,65,69,68,0,0,0,0,0,0,0,109,100,32,100,101,98,117,103,58,32,99,97,110,39,116,32,111,112,101,110,32,37,115,10,0,0,0,0,0,0,0,0,101,99,103,101,110,58,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,97,102,102,105,110,101,32,99,111,111,114,100,105,110,97,116,101,115,10,0,0,0,0,0,0,0,0,37,115,10,0,0,0,0,0,109,105,115,99,46,99,0,0,99,105,112,104,101,114,95,100,101,99,114,121,112,116,58,32,105,110,118,97,108,105,100,32,109,111,100,101,32,37,100,10,0,0,0,0,0,0,0,0,101,99,103,101,110,32,99,117,114,118,101,32,117,115,101,100,58,32,37,115,10,0,0,0,9,37,115,10,0,0,0,0,118,97,108,117,101,0,0,0,101,99,103,101,110,32,99,117,114,118,101,32,71,122,0,0,101,99,103,101,110,32,99,117,114,118,101,32,71,121,0,0,108,101,110,112,32,61,61,32,48,0,0,0,0,0,0,0,114,110,103,95,99,116,120,45,62,99,105,112,104,101,114,95,104,100,0,0,0,0,0,0,78,111,32,119,97,121,32,116,111,32,103,97,116,104,101,114,32,101,110,116,114,111,112,121,32,102,111,114,32,116,104,101,32,82,78,71,10,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,101,110,99,114,121,112,116,43,100,101,99,114,121,112,116,0,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,57,57,100,101,102,56,51,54,49,52,54,98,99,57,98,49,98,52,100,50,50,56,51,49,0,0,0,0,0,0,103,0,0,0,0,0,0,0,67,65,77,69,76,76,73,65,45,49,50,56,32,116,101,115,116,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,37,100,0,0,0,0,0,0,100,115,97,58,101,108,103,97,109,97,108,58,114,115,97,58,101,99,99,0,0,0,0,0,110,111,32,100,101,115,99,114,105,112,116,105,111,110,32,97,118,97,105,108,97,98,108,101,0,0,0,0,0,0,0,0,101,99,103,101,110,32,99,117,114,118,101,32,71,120,0,0,40,37,115,0,0,0,0,0,99,111,110,116,101,120,116,46,99,0,0,0,0,0,0,0,101,99,103,101,110,32,99,117,114,118,101,32,32,110,0,0,40,112,114,105,118,107,101,121,115,10,0,0,0,0,0,0,100,105,103,101,115,116,0,0,100,105,103,101,115,116,0,0,49,46,51,46,49,52,46,51,46,50,46,50,54,0,0,0,101,99,103,101,110,32,99,117,114,118,101,32,32,98,0,0,32,32,113,61,32,0,0,0,101,99,103,101,110,32,99,117,114,118,101,32,32,97,0,0,101,99,103,101,110,32,99,117,114,118,101,32,32,112,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,50,52,0,114,98,0,0,0,0,0,0,37,77,41,0,0,0,0,0,101,99,103,101,110,32,114,101,115,117,108,116,32,100,0,0,111,118,101,114,102,108,111,119,32,105,110,32,112,114,105,109,101,32,103,101,110,101,114,97,116,105,111,110,10,0,0,0,49,46,53,46,51,0,0,0,63,79,84,82,58,65,65,69,75,0,0,0,0,0,0,0,119,0,0,0,0,0,0,0,101,99,103,101,110,32,114,101,115,117,108,116,32,81,0,0,68,69,83,32,119,101,97,107,32,107,101,121,32,100,101,116,101,99,116,105,111,110,32,102,97,105,108,101,100,0,0,0,99,105,112,104,101,114,32,109,111,100,101,32,78,79,78,69,32,117,115,101,100,0,0,0,101,99,103,101,110,32,114,101,115,117,108,116,32,110,0,0,37,48,50,120,0,0,0,0,112,117,98,108,105,99,45,107,101,121,0,0,0,0,0,0,101,99,103,101,110,32,114,101,115,117,108,116,32,71,0,0,101,99,103,101,110,32,114,101,115,117,108,116,32,98,0,0,102,105,112,115,95,114,110,103,95,105,115,95,108,111,99,107,101,100,0,0,0,0,0,0,83,108,111,119,32,101,110,116,114,111,112,121,32,103,97,116,104,101,114,105,110,103,32,109,111,100,117,108,101,32,110,111,116,32,121,101,116,32,105,110,105,116,105,97,108,105,122,101,100,10,0,0,0,0,0,0,100,97,116,97,45,53,48,32,107,101,121,45,50,54,0,0,69,108,103,97,109,97,108,32,116,101,115,116,32,107,101,121,32,102,111,114,32,37,115,32,37,115,32,102,97,105,108,101,100,10,0,0,0,0,0,0,48,120,54,52,50,49,48,53,49,57,101,53,57,99,56,48,101,55,48,102,97,55,101,57,97,98,55,50,50,52,51,48,52,57,102,101,98,56,100,101,101,99,99,49,52,54,98,57,98,49,0,0,0,0,0,0,113,0,0,0,0,0,0,0,67,65,77,69,76,76,73,65,45,49,50,56,32,116,101,115,116,32,101,110,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,46,0,0,0,0,45,46,47,95,58,42,43,61,0,0,0,0,0,0,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,40,102,97,116,97,108,32,111,114,32,98,117,103,41,0,0,0,112,117,98,107,101,121,115,58,37,115,58,10,0,0,0,0,44,32,102,117,110,99,116,105,111,110,32,0,0,0,0,0,101,99,103,101,110,32,114,101,115,117,108,116,32,97,0,0,33,100,111,110,101,0,0,0,99,97,108,108,101,100,32,105,110,32,110,111,110,45,111,112,101,114,97,116,105,111,110,97,108,32,115,116,97,116,101,0,47,100,101,118,47,117,114,97,110,100,111,109,0,0,0,0,42,108,111,99,107,32,61,61,32,77,85,84,69,88,95,85,78,76,79,67,75,69,68,0,101,99,103,101,110,32,114,101,115,117,108,116,32,112,0,0,119,43,98,0,0,0,0,0,231,24,72,61,12,231,105,100,78,46,66,199,188,21,180,99,142,31,152,177,59,32,68,40,86,50,168,3,175,169,115,235,222,15,242,68,135,126,166,10,76,176,67,44,229,119,195,27,235,0,156,92,44,73,170,46,78,173,178,23,173,140,192,155,0,0,0,0,0,0,0,0,114,97,110,100,111,109,45,102,105,112,115,46,99,0,0,0,205,199,110,92,153,20,251,146,129,161,199,226,132,215,62,103,241,128,154,72,164,151,32,14,4,109,57,204,199,17,44,208,0,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,49,46,50,46,56,52,48,46,49,48,48,52,48,46,52,46,51,0,0,0,0,0,0,0,37,48,56,120,0,0,0,0,40,99,117,114,118,101,32,37,115,41,0,0,0,0,0,0,32,40,104,119,114,110,103,32,102,97,105,108,101,100,41,0,99,111,110,116,101,120,116,95,112,114,105,118,46,99,0,0,109,111,100,117,108,101,0,0,103,99,114,121,95,109,100,95,111,112,101,110,32,102,97,105,108,101,100,0,0,0,0,0,32,32,112,61,32,0,0,0,116,114,97,110,115,105,101,110,116,45,107,101,121,0,0,0,112,103,121,0,0,0,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,50,51,0,41,0,0,0,0,0,0,0,115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0,0,0,0,0,0,0,112,97,98,103,110,113,0,0,40,115,105,103,45,118,97,108,40,0,0,0,0,0,0,0,40,49,58,37,99,37,117,58,0,0,0,0,0,0,0,0,48,120,55,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,69,52,56,55,69,68,53,49,49,48,66,52,54,49,49,65,54,50,54,51,51,49,52,53,67,48,54,69,48,69,54,56,57,52,56,49,50,55,48,52,52,53,51,51,69,54,51,65,48,49,48,53,68,70,53,51,49,68,56,57,67,68,57,49,50,56,65,53,48,52,51,67,67,55,49,65,48,50,54,69,70,55,67,65,56,67,68,57,69,54,57,68,50,49,56,68,57,56,49,53,56,53,51,54,70,57,50,70,56,65,49,66,65,55,70,48,57,65,66,54,66,54,65,56,69,49,50,50,70,50,52,50,68,65,66,66,51,49,50,70,51,70,54,51,55,65,50,54,50,49,55,52,68,51,49,66,70,54,66,53,56,53,70,70,65,69,53,66,55,65,48,51,53,66,70,54,70,55,49,67,51,53,70,68,65,68,52,52,67,70,68,50,68,55,52,70,57,50,48,56,66,69,50,53,56,70,70,51,50,52,57,52,51,51,50,56,70,54,55,50,50,68,57,69,69,49,48,48,51,69,53,67,53,48,66,49,68,70,56,50,67,67,54,68,50,52,49,66,48,69,50,65,69,57,67,68,51,52,56,66,49,70,68,52,55,69,57,50,54,55,65,70,67,49,66,50,65,69,57,49,69,69,53,49,68,54,67,66,48,69,51,49,55,57,65,66,49,48,52,50,65,57,53,68,67,70,54,65,57,52,56,51,66,56,52,66,52,66,51,54,66,51,56,54,49,65,65,55,50,53,53,69,52,67,48,50,55,56,66,65,51,54,48,52,54,53,49,49,66,57,57,51,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,0,116,108,118,32,33,61,32,78,85,76,76,0,0,0,0,0,112,113,103,121,0,0,0,0,99,97,110,39,116,32,103,101,110,101,114,97,116,101,32,97,32,112,114,105,109,101,32,119,105,116,104,32,108,101,115,115,32,116,104,97,110,32,37,100,32,98,105,116,115,10,0,0,67,82,67,51,50,82,70,67,49,53,49,48,0,0,0,0,67,65,83,84,53,32,115,101,108,102,116,101,115,116,32,102,97,105,108,101,100,32,40,37,115,41,46,10,0,0,0,0,67,65,77,69,76,76,73,65,49,57,50,0,0,0,0,0,63,79,84,82,118,0,0,0,37,115,10,0,0,0,0,0,65,82,67,70,79,85,82,32,115,101,108,102,116,101,115,116,32,102,97,105,108,101,100,32,40,37,115,41,10,0,0,0,100,98,103,109,100,45,37,48,53,100,46,37,46,49,48,115,0,0,0,0,0,0,0,0,99,117,114,118,101,0,0,0])
.concat([109,101,109,111,114,121,32,97,116,32,37,112,32,99,111,114,114,117,112,116,101,100,32,40,111,118,101,114,102,108,111,119,61,37,48,50,120,41,10,0,119,101,97,107,32,107,101,121,32,116,97,98,108,101,32,100,101,102,101,99,116,0,0,0,37,42,115,91,111,112,101,110,93,10,0,0,0,0,0,0,73,86,32,108,101,110,103,116,104,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,98,108,111,99,107,108,101,110,103,116,104,0,0,0,0,111,112,101,114,97,116,105,111,110,32,105,115,32,110,111,116,32,112,111,115,115,105,98,108,101,32,119,105,116,104,111,117,116,32,105,110,105,116,105,97,108,105,122,101,100,32,115,101,99,117,114,101,32,109,101,109,111,114,121,10,0,0,0,0,49,46,51,46,51,54,46,51,46,51,46,50,46,56,46,49,46,49,46,49,51,0,0,0,37,115,9,37,115,9,37,115,9,0,0,0,0,0,0,0,10,70,97,116,97,108,32,101,114,114,111,114,58,32,0,0,97,117,116,104,46,99,0,0,112,114,105,118,97,116,101,45,107,101,121,0,0,0,0,0,105,110,118,97,108,105,100,32,102,108,97,103,32,118,97,108,117,101,32,105,110,32,109,112,105,10,0,0,0,0,0,0,49,46,51,46,51,54,46,51,46,51,46,50,46,56,46,49,46,49,46,49,49,0,0,0,99,117,115,116,111,109,32,97,108,108,111,99,97,116,105,111,110,32,104,97,110,100,108,101,114,0,0,0,0,0,0,0,102,105,112,115,46,99,0,0,97,116,104,46,99,0,0,0,49,46,51,46,51,54,46,51,46,51,46,50,46,56,46,49,46,49,46,57,0,0,0,0,75,65,84,0,0,0,0,0,116,111,111,32,109,97,110,121,32,114,97,110,100,111,109,32,98,105,116,115,32,114,101,113,117,101,115,116,101,100,10,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,0,0,0,101,108,103,32,32,120,61,32,0,0,0,0,0,0,0,0,116,108,118,46,99,0,0,0,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,101,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,99,0,0,0,0,0,0,112,0,0,0,0,0,0,0,37,115,10,0,0,0,0,0,8,9,11,10,12,13,34,39,92,0,0,0,0,0,0,0,91,85,110,107,110,111,119,110,32,108,111,103,32,108,101,118,101,108,32,37,100,93,58,32,0,0,0,0,0,0,0,0,109,112,105,95,103,101,116,95,111,112,97,113,117,101,32,111,110,32,110,111,114,109,97,108,32,109,112,105,10,0,0,0,97,114,99,102,111,117,114,58,98,108,111,119,102,105,115,104,58,99,97,115,116,53,58,100,101,115,58,97,101,115,58,116,119,111,102,105,115,104,58,115,101,114,112,101,110,116,58,114,102,99,50,50,54,56,58,115,101,101,100,58,99,97,109,101,108,108,105,97,58,105,100,101,97,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,49,46,51,46,51,54,46,51,46,51,46,50,46,56,46,49,46,49,46,55,0,0,0,0,91,77,80,73,95,78,85,76,76,93,0,0,0,0,0,0,32,9,32,9,32,32,9,32,0,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,33,32,40,98,117,102,102,101,114,95,115,105,122,101,32,124,124,32,99,97,114,114,121,41,0,0,0,0,0,0,0,0,49,46,51,46,51,54,46,51,46,51,46,50,46,56,46,49,46,49,46,53,0,0,0,0,32,41,10,0,0,0,0,0,111,110,101,32,109,105,108,108,105,111,110,32,34,97,34,0,111,110,101,32,109,105,108,108,105,111,110,32,34,97,34,0,49,46,50,46,56,52,48,46,49,49,51,53,52,57,46,49,46,49,46,53,0,0,0,0,49,46,51,46,51,54,46,51,46,51,46,50,46,56,46,49,46,49,46,51,0,0,0,0,83,69,82,80,69,78,84,0,32,0,0,0,0,0,0,0,114,115,97,46,99,0,0,0,49,46,51,46,51,54,46,51,46,51,46,50,46,56,46,49,46,49,46,49,0,0,0,0,50,46,49,54,46,56,52,48,46,49,46,49,48,49,46,51,46,52,46,49,46,50,50,0,49,46,51,46,49,51,50,46,48,46,51,53,0,0,0,0,40,115,105,103,45,118,97,108,40,37,115,40,115,37,98,41,41,41,0,0,0,0,0,0,115,101,99,112,53,50,49,114,49,0,0,0,0,0,0,0,95,103,99,114,121,95,109,112,105,95,99,109,112,32,40,40,120,41,44,40,110,109,105,110,117,115,49,41,41,32,60,32,48,32,38,38,32,95,103,99,114,121,95,109,112,105,95,99,109,112,95,117,105,32,40,40,120,41,44,40,49,41,41,32,62,32,48,0,0,0,0,0,63,79,84,82,63,0,0,0,79,111,112,115,58,32,109,100,32,100,101,98,117,103,32,97,108,114,101,97,100,121,32,115,116,97,114,116,101,100,10,0,49,46,51,46,49,51,50,46,48,46,51,52,0,0,0,0,83,72,65,49,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,0,0,0,0,0,109,112,105,32,114,111,117,110,100,105,110,103,32,116,111,32,99,101,105,108,105,110,103,32,110,111,116,32,121,101,116,32,105,109,112,108,101,109,101,110,116,101,100,10,0,0,0,0,87,65,82,78,73,78,71,58,32,99,105,112,104,101,114,95,115,101,116,105,118,58,32,105,118,108,101,110,61,37,117,32,98,108,107,108,101,110,61,37,117,10,0,0,0,0,0,0,115,101,99,112,51,56,52,114,49,0,0,0,0,0,0,0,119,98,0,0,0,0,0,0,41,41,0,0,0,0,0,0,115,101,99,112,50,53,54,114,49,0,0,0,0,0,0,0,112,114,105,109,101,50,53,54,118,49,0,0,0,0,0,0,114,97,110,100,111,109,0,0,112,111,111,108,95,105,115,95,108,111,99,107,101,100,0,0,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,0,0,0,0,0,0,101,108,103,32,32,121,61,32,0,0,0,0,0,0,0,0,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,101,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,0,0,0,0,100,111,109,97,105,110,0,0,48,46,51,46,52,52,48,49,46,53,46,51,46,49,46,57,46,50,52,0,0,0,0,0,92,120,37,48,50,120,0,0,87,97,114,110,105,110,103,58,32,117,115,105,110,103,32,105,110,115,101,99,117,114,101,32,109,101,109,111,114,121,33,10,0,0,0,0,0,0,0,0,68,66,71,58,32,0,0,0,99,105,112,104,101,114,115,58,37,115,58,10,0,0,0,0,102,97,116,97,108,32,0,0,49,46,50,46,56,52,48,46,49,48,48,52,53,46,51,46,49,46,55,0,0,0,0,0,91,114,101,115,101,110,116,93,0,0,0,0,0,0,0,0,32,9,32,32,9,9,9,9,32,9,32,9,32,9,32,32,0,0,0,0,0,0,0,0,87,72,73,82,76,80,79,79,76,0,0,0,0,0,0,0,49,46,51,46,49,51,50,46,48,46,51,51,0,0,0,0,40,112,114,111,116,111,99,111,108,32,37,115,41,0,0,0,108,105,98,103,99,114,121,112,116,32,118,101,114,115,105,111,110,32,109,105,115,109,97,116,99,104,10,0,0,0,0,0,49,46,53,46,51,0,0,0,3,4,0,0,0,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,0,0,0,0,136,230,0,0,184,114,0,0,216,38,1,0,200,16,1,0,136,4,1,0,48,250,0,0,224,243,0,0,3,0,0,0,10,0,0,0,30,0,0,0,4,0,0,0,12,0,0,0,14,0,0,0,2,0,0,0,34,0,0,0,0,0,0,0,128,40,1,0,136,187,0,0,56,61,1,0,160,26,1,0,48,11,1,0,184,255,0,0,56,61,1,0,3,0,0,0,26,0,0,0,46,0,0,0,22,0,0,0,24,0,0,0,4,0,0,0,6,0,0,0,14,0,0,0,0,0,0,0,32,43,1,0,152,187,0,0,128,61,1,0,208,26,1,0,112,225,1,0,192,255,0,0,128,61,1,0,1,0,0,0,8,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,200,247,0,0,168,187,0,0,128,61,1,0,208,26,1,0,80,241,0,0,112,225,1,0,128,61,1,0,2,0,0,0,8,0,0,0,16,0,0,0,6,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,232,45,1,0,184,187,0,0,64,63,1,0,152,28,1,0,120,225,1,0,200,255,0,0,64,63,1,0,1,0,0,0,20,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,50,0,0,0,6,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,4,0,0,0,36,0,0,0,10,0,0,0,16,0,0,0,12,0,0,0,10,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,112,114,111,99,47,115,121,115,47,99,114,121,112,116,111,47,102,105,112,115,95,101,110,97,98,108,101,100,0,0,0,168,70,1,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,68,0,0,0,34,0,0,0,12,0,0,0,6,0,0,0,168,0,0,0,112,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,14,0,0,0,30,0,0,0,34,0,0,0,24,0,0,0,104,0,0,0,152,33,1,0,16,216,0,0,19,0,0,0,40,122,0,0,24,0,0,0,46,0,0,0,30,0,0,0,34,0,0,0,24,0,0,0,104,0,0,0,152,217,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,22,0,0,0,30,0,0,0,34,0,0,0,24,0,0,0,104,0,0,0,120,218,0,0,200,12,0,0,19,0,0,0,48,122,0,0,64,0,0,0,62,0,0,0,64,0,0,0,40,0,0,0,8,0,0,0,208,0,0,0,72,34,1,0,224,12,0,0,19,0,0,0,64,122,0,0,48,0,0,0,6,0,0,0,64,0,0,0,40,0,0,0,8,0,0,0,208,0,0,0,120,34,1,0,224,215,0,0,19,0,0,0,80,122,0,0,32,0,0,0,24,0,0,0,28,0,0,0,18,0,0,0,26,0,0,0,104,0,0,0,208,219,0,0,248,215,0,0,19,0,0,0,96,122,0,0,28,0,0,0,48,0,0,0,28,0,0,0,18,0,0,0,26,0,0,0,104,0,0,0,144,222,0,0,168,215,0,0,15,0,0,0,104,122,0,0,20,0,0,0,54,0,0,0,2,0,0,0,44,0,0,0,2,0,0,0,92,0,0,0,8,231,0,0,184,215,0,0,15,0,0,0,128,122,0,0,20,0,0,0,66,0,0,0,32,0,0,0,28,0,0,0,10,0,0,0,92,0,0,0,16,244,0,0,200,215,0,0,18,0,0,0,144,122,0,0,16,0,0,0,10,0,0,0,12,0,0,0,36,0,0,0,22,0,0,0,88,0,0,0,24,244,0,0,40,216,0,0,18,0,0,0,160,122,0,0,16,0,0,0,64,0,0,0,8,0,0,0,16,0,0,0,28,0,0,0,88,0,0,0,120,63,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,58,0,0,0,58,0,0,0,60,0,0,0,20,0,0,0,8,0,0,0,80,46,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,38,0,0,0,58,0,0,0,8,0,0,0,20,0,0,0,8,0,0,0,160,28,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,30,0,0,0,38,0,0,0,2,0,0,0,20,0,0,0,8,0,0,0,34,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,10,10,84,104,105,115,32,105,115,32,76,105,98,103,99,114,121,112,116,32,49,46,53,46,51,32,45,32,84,104,101,32,71,78,85,32,67,114,121,112,116,111,32,76,105,98,114,97,114,121,10,67,111,112,121,114,105,103,104,116,32,50,48,48,48,44,32,50,48,48,50,44,32,50,48,48,51,44,32,50,48,48,52,44,32,50,48,48,55,44,32,50,48,48,56,44,32,50,48,48,57,44,10,32,32,32,32,32,32,32,32,32,32,50,48,49,48,44,32,50,48,49,49,44,32,50,48,49,50,32,70,114,101,101,32,83,111,102,116,119,97,114,101,32,70,111,117,110,100,97,116,105,111,110,44,32,73,110,99,46,10,67,111,112,121,114,105,103,104,116,32,50,48,49,50,44,32,50,48,49,51,32,103,49,48,32,67,111,100,101,32,71,109,98,72,10,10,40,97,51,101,97,98,99,98,32,50,48,49,51,45,49,48,45,50,52,84,49,52,58,50,50,43,48,48,48,48,41,10,10,10,0,0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,128,33,1,0,0,0,0,0,0,0,0,0,16,0,0,0,128,0,0,0,160,16,0,0,42,0,0,0,50,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,217,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,1,0,0,160,16,0,0,42,0,0,0,50,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,50,1,0,0,0,0,0,248,121,0,0,8,0,0,0,192,0,0,0,4,3,0,0,20,0,0,0,20,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,15,1,0,0,0,0,0,0,0,0,0,16,0,0,0,0,1,0,0,16,2,0,0,46,0,0,0,18,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,36,1,0,0,0,0,0,0,0,0,0,16,0,0,0,192,0,0,0,16,2,0,0,46,0,0,0,18,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,224,0,0,136,196,0,0,0,0,0,0,16,0,0,0,128,0,0,0,16,2,0,0,46,0,0,0,18,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,225,0,0,0,0,0,0,144,29,0,0,16,0,0,0,128,0,0,0,128,0,0,0,18,0,0,0,62,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,236,0,0,0,0,0,0,24,122,0,0,8,0,0,0,40,0,0,0,128,0,0,0,30,0,0,0,42,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,249,0,0,0,0,0,0,0,0,0,0,8,0,0,0,128,0,0,0,212,0,0,0,2,0,0,0,16,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,251,0,0,0,0,0,0,0,0,0,0,8,0,0,0,64,0,0,0,0,1,0,0,40,0,0,0,84,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,46,1,0,0,0,0,0,0,0,0,0,8,0,0,0,128,0,0,0,80,0,0,0,54,0,0,0,78,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,28,1,0,0,0,0,0,48,213,0,0,16,0,0,0,0,1,0,0,20,1,0,0,52,0,0,0,68,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,63,1,0,0,0,0,0,88,213,0,0,16,0,0,0,192,0,0,0,20,1,0,0,52,0,0,0,68,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,47,1,0,0,0,0,0,128,213,0,0,16,0,0,0,128,0,0,0,20,1,0,0,52,0,0,0,68,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,47,1,0,0,0,0,0,0,0,0,0,8,0,0,0,128,0,0,0,72,16,0,0,38,0,0,0,48,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,49,1,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,8,1,0,0,36,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,0,0,0,0,64,17,1,0,40,115,0,0,0,115,0,0,16,0,0,0,0,1,0,0,232,1,0,0,4,0,0,0,80,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,41,1,0,96,115,0,0,56,115,0,0,16,0,0,0,192,0,0,0,232,1,0,0,4,0,0,0,80,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,235,0,0,240,114,0,0,200,114,0,0,16,0,0,0,128,0,0,0,232,1,0,0,4,0,0,0,80,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,26,0,0,0,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,111,116,114,108,95,116,108,118,95,110,101,119,0,0,0,0,111,116,114,108,95,112,114,111,116,111,95,99,114,101,97,116,101,95,100,97,116,97,0,0,111,116,114,108,95,99,111,110,116,101,120,116,95,112,114,105,118,95,110,101,119,0,0,0,111,116,114,108,95,99,111,110,116,101,120,116,95,102,105,110,100,95,102,105,110,103,101,114,112,114,105,110,116,0,0,0,111,116,114,108,95,97,117,116,104,95,115,116,97,114,116,95,118,50,51,0,0,0,0,0,110,101,119,95,99,111,110,116,101,120,116,0,0,0,0,0,100,111,95,115,101,116,107,101,121,0,0,0,0,0,0,0,99,114,101,97,116,101,95,118,49,95,107,101,121,95,101,120,99,104,97,110,103,101,95,109,101,115,115,97,103,101,0,0,99,114,101,97,116,101,95,115,105,103,110,97,116,117,114,101,95,109,101,115,115,97,103,101,0,0,0,0,0,0,0,0,99,114,101,97,116,101,95,114,101,118,101,97,108,115,105,103,95,109,101,115,115,97,103,101,0,0,0,0,0,0,0,0,99,114,101,97,116,101,95,107,101,121,95,109,101,115,115,97,103,101,0,0,0,0,0,0,99,104,101,99,107,95,112,117,98,107,101,121,95,97,117,116,104,0,0,0,0,0,0,0,99,97,108,99,117,108,97,116,101,95,112,117,98,107,101,121,95,97,117,116,104,0,0,0,95,103,99,114,121,95,97,116,104,95,109,117,116,101,120,95,117,110,108,111,99,107,0,0,95,103,99,114,121,95,97,116,104,95,109,117,116,101,120,95,108,111,99,107,0,0,0,0,95,103,99,114,121,95,97,116,104,95,109,117,116,101,120,95,100,101,115,116,114,111,121,0,120,57,51,49,95,114,101,115,101,101,100,0,0,0,0,0,120,57,51,49,95,103,101,116,95,100,116,0,0,0,0,0,120,57,51,49,95,103,101,110,101,114,97,116,101,95,115,101,101,100,0,0,0,0,0,0,120,57,51,49,95,103,101,110,101,114,97,116,101,95,107,101,121,0,0,0,0,0,0,0,120,57,51,49,95,97,101,115,95,100,114,105,118,101,114,0,119,104,105,114,108,112,111,111,108,95,97,100,100,0,0,0,118,115,101,120,112,95,115,115,99,97,110,0,0,0,0,0,115,101,120,112,95,101,108,101,109,101,110,116,115,95,101,120,116,114,97,99,116,95,101,99,99,0,0,0,0,0,0,0,115,101,108,102,116,101,115,116,95,107,97,116,0,0,0,0,114,101,97,100,95,115,101,101,100,95,102,105,108,101,0,0,114,101,97,100,95,112,111,111,108,0,0,0,0,0,0,0,112,115,115,95,118,101,114,105,102,121,0,0,0,0,0,0,112,115,115,95,101,110,99,111,100,101,0,0,0,0,0,0,112,114,101,112,97,114,101,95,109,97,99,112,97,100,115,0,112,107,99,115,49,95,101,110,99,111,100,101,95,102,111,114,95,115,105,103,110,97,116,117,114,101,0,0,0,0,0,0,112,107,99,115,49,95,101,110,99,111,100,101,95,102,111,114,95,101,110,99,114,121,112,116,105,111,110,0,0,0,0,0,112,107,95,114,101,103,105,115,116,101,114,95,100,101,102,97,117,108,116,0,0,0,0,0,109,112,105,95,115,101,116,95,115,101,99,117,114,101,0,0,109,105,120,95,112,111,111,108,0,0,0,0,0,0,0,0,109,100,95,119,114,105,116,101,0,0,0,0,0,0,0,0,109,100,95,114,101,103,105,115,116,101,114,95,100,101,102,97,117,108,116,0,0,0,0,0,109,100,95,114,101,97,100,0,109,100,95,103,101,116,95,97,108,103,111,0,0,0,0,0,109,100,95,99,111,112,121,0,109,95,111,117,116,95,111,102,95,110,0,0,0,0,0,0,105,115,95,112,114,105,109,101,0,0,0,0,0,0,0,0,103,108,111,98,97,108,95,105,110,105,116,0,0,0,0,0,103,101,116,95,114,97,110,100,111,109,0,0,0,0,0,0,103,101,116,95,112,111,111,108,95,112,114,105,109,101,0,0,103,101,116,95,101,110,116,114,111,112,121,0,0,0,0,0,103,101,110,101,114,97,116,101,95,120,57,51,49,0,0,0,103,101,110,101,114,97,116,101,95,115,116,100,0,0,0,0,103,101,110,101,114,97,116,101,95,102,105,112,115,49,56,54,0,0,0,0,0,0,0,0,103,101,110,101,114,97,116,101,0,0,0,0,0,0,0,0,103,101,110,101,114,97,116,101,0,0,0,0,0,0,0,0,103,101,110,95,120,57,51,49,95,112,97,114,109,95,120,112,0,0,0,0,0,0,0,0,103,101,110,95,120,57,51,49,95,112,97,114,109,95,120,105,0,0,0,0,0,0,0,0,103,101,110,95,107,0,0,0,103,99,114,121,95,115,101,120,112,95,118,108,105,115,116,0,103,99,114,121,95,114,97,110,100,111,109,105,122,101,0,0,103,99,114,121,95,114,97,110,100,111,109,95,98,121,116,101,115,95,115,101,99,117,114,101,0,0,0,0,0,0,0,0,103,99,114,121,95,114,97,110,100,111,109,95,98,121,116,101,115,0,0,0,0,0,0,0,103,99,114,121,95,109,100,95,104,97,115,104,95,98,117,102,102,101,114,0,0,0,0,0,103,99,114,121,95,109,100,95,103,101,116,95,97,108,103,111,0,0,0,0,0,0,0,0,103,99,114,121,95,99,114,101,97,116,101,95,110,111,110,99,101,0,0,0,0,0,0,0,101,110,116,114,111,112,121,95,99,111,108,108,101,99,116,95,99,98,0,0,0,0,0,0,101,110,99,114,121,112,116,95,97,101,115,0,0,0,0,0,100,117,109,109,121,95,118,101,114,105,102,121,0,0,0,0,100,117,109,109,121,95,115,105,103,110,0,0,0,0,0,0,100,117,109,109,121,95,103,101,116,95,110,98,105,116,115,0,100,117,109,109,121,95,103,101,110,101,114,97,116,101,0,0,100,117,109,109,121,95,101,110,99,114,121,112,116,95,115,116,114,101,97,109,0,0,0,0,100,117,109,109,121,95,101,110,99,114,121,112,116,95,98,108,111,99,107,0,0,0,0,0,100,117,109,109,121,95,101,110,99,114,121,112,116,0,0,0,100,117,109,109,121,95,100,101,99,114,121,112,116,95,115,116,114,101,97,109,0,0,0,0,100,117,109,109,121,95,100,101,99,114,121,112,116,95,98,108,111,99,107,0,0,0,0,0,100,117,109,109,121,95,100,101,99,114,121,112,116,0,0,0,100,117,109,109,121,95,99,104,101,99,107,95,115,101,99,114,101,116,95,107,101,121,0,0,100,111,95,102,97,115,116,95,114,97,110,100,111,109,95,112,111,108,108,0,0,0,0,0,100,111,95,99,116,114,95,101,110,99,114,121,112,116,0,0,99,105,112,104,101,114,95,115,101,116,105,118,0,0,0,0,99,105,112,104,101,114,95,114,101,103,105,115,116,101,114,95,100,101,102,97,117,108,116,0,99,105,112,104,101,114,95,101,110,99,114,121,112,116,0,0,99,105,112,104,101,114,95,100,101,99,114,121,112,116,0,0,97,100,100,95,114,97,110,100,111,109,110,101,115,115,0,0,95,103,99,114,121,95,115,101,120,112,95,118,108,105,115,116,0,0,0,0,0,0,0,0,95,103,99,114,121,95,115,101,120,112,95,115,112,114,105,110,116,0,0,0,0,0,0,0,95,103,99,114,121,95,115,101,120,112,95,112,114,101,112,101,110,100,0,0,0,0,0,0,95,103,99,114,121,95,115,101,120,112,95,110,116,104,0,0,95,103,99,114,121,95,115,101,120,112,95,102,105,110,100,95,116,111,107,101,110,0,0,0,95,103,99,114,121,95,115,101,120,112,95,99,111,110,115,0,95,103,99,114,121,95,115,101,120,112,95,97,112,112,101,110,100,0,0,0,0,0,0,0,95,103,99,114,121,95,115,101,120,112,95,97,108,105,115,116,0,0,0,0,0,0,0,0,95,103,99,114,121,95,114,110,103,102,105,112,115,95,105,110,105,116,105,97,108,105,122,101,0,0,0,0,0,0,0,0,95,103,99,114,121,95,114,110,103,99,115,112,114,110,103,95,115,101,116,95,115,101,101,100,95,102,105,108,101,0,0,0,95,103,99,114,121,95,112,107,95,115,105,103,110,0,0,0,95,103,99,114,121,95,112,107,95,103,101,110,107,101,121,0,95,103,99,114,121,95,112,107,95,101,110,99,114,121,112,116,0,0,0,0,0,0,0,0,95,103,99,114,121,95,109,112,105,95,115,101,116,95,98,117,102,102,101,114,0,0,0,0,95,103,99,114,121,95,109,100,95,103,101,116,0,0,0,0,95,103,99,114,121,95,108,111,103,118,0,0,0,0,0,0,95,103,99,114,121,95,105,110,105,116,105,97,108,105,122,101,95,102,105,112,115,95,109,111,100,101,0,0,0,0,0,0,95,103,99,114,121,95,105,110,97,99,116,105,118,97,116,101,95,102,105,112,115,95,109,111,100,101,0,0,0,0,0,0,95,103,99,114,121,95,103,101,110,101,114,97,116,101,95,102,105,112,115,49,56,54,95,51,95,112,114,105,109,101,0,0,95,103,99,114,121,95,102,97,116,97,108,95,101,114,114,111,114,0,0,0,0,0,0,0,95,103,99,114,121,95,99,105,112,104,101,114,95,99,116,108,0,0,0,0,0,0,0,0,95,103,99,114,121,95,97,99,95,105,111,95,119,114,105,116,101,0,0,0,0,0,0,0,95,103,99,114,121,95,97,99,95,105,111,95,114,101,97,100,0,0,0,0,0,0,0,0,95,103,99,114,121,95,97,99,95,105,111,95,105,110,105,116,95,118,97,0,0,0,0,0,0,0,0,0,8,90,1,0,26,0,0,0,56,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,90,1,0,26,0,0,0,52,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,50,48,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0,0,0,0,0,0,0,0,0,0,0,0,192,89,1,0,0,0,0,0,208,89,1,0,0,90,1,0,0,0,0,0,0,0,0,0,224,89,1,0,8,90,1,0,0,0,0,0,0,0,0,0,9,13,11,14,18,26,22,28,27,23,29,18,36,52,44,56,45,57,39,54,54,46,58,36,63,35,49,42,72,104,88,112,65,101,83,126,90,114,78,108,83,127,69,98,108,92,116,72,101,81,127,70,126,70,98,84,119,75,105,90,144,208,176,224,153,221,187,238,130,202,166,252,139,199,173,242,180,228,156,216,189,233,151,214,166,254,138,196,175,243,129,202,216,184,232,144,209,181,227,158,202,162,254,140,195,175,245,130,252,140,196,168,245,129,207,166,238,150,210,180,231,155,217,186,59,187,123,219,50,182,112,213,41,161,109,199,32,172,102,201,31,143,87,227,22,130,92,237,13,149,65,255,4,152,74,241,115,211,35,171,122,222,40,165,97,201,53,183,104,196,62,185,87,231,15,147,94,234,4,157,69,253,25,143,76,240,18,129,171,107,203,59,162,102,192,53,185,113,221,39,176,124,214,41,143,95,231,3,134,82,236,13,157,69,241,31,148,72,250,17,227,3,147,75,234,14,152,69,241,25,133,87,248,20,142,89,199,55,191,115,206,58,180,125,213,45,169,111,220,32,162,97,118,109,246,173,127,96,253,163,100,119,224,177,109,122,235,191,82,89,218,149,91,84,209,155,64,67,204,137,73,78,199,135,62,5,174,221,55,8,165,211,44,31,184,193,37,18,179,207,26,49,130,229,19,60,137,235,8,43,148,249,1,38,159,247,230,189,70,77,239,176,77,67,244,167,80,81,253,170,91,95,194,137,106,117,203,132,97,123,208,147,124,105,217,158,119,103,174,213,30,61,167,216,21,51,188,207,8,33,181,194,3,47,138,225,50,5,131,236,57,11,152,251,36,25,145,246,47,23,77,214,141,118,68,219,134,120,95,204,155,106,86,193,144,100,105,226,161,78,96,239,170,64,123,248,183,82,114,245,188,92,5,190,213,6,12,179,222,8,23,164,195,26,30,169,200,20,33,138,249,62,40,135,242,48,51,144,239,34,58,157,228,44,221,6,61,150,212,11,54,152,207,28,43,138,198,17,32,132,249,50,17,174,240,63,26,160,235,40,7,178,226,37,12,188,149,110,101,230,156,99,110,232,135,116,115,250,142,121,120,244,177,90,73,222,184,87,66,208,163,64,95,194,170,77,84,204,236,218,247,65,229,215,252,79,254,192,225,93,247,205,234,83,200,238,219,121,193,227,208,119,218,244,205,101,211,249,198,107,164,178,175,49,173,191,164,63,182,168,185,45,191,165,178,35,128,134,131,9,137,139,136,7,146,156,149,21,155,145,158,27,124,10,71,161,117,7,76,175,110,16,81,189,103,29,90,179,88,62,107,153,81,51,96,151,74,36,125,133,67,41,118,139,52,98,31,209,61,111,20,223,38,120,9,205,47,117,2,195,16,86,51,233,25,91,56,231,2,76,37,245,11,65,46,251,215,97,140,154,222,108,135,148,197,123,154,134,204,118,145,136,243,85,160,162,250,88,171,172,225,79,182,190,232,66,189,176,159,9,212,234,150,4,223,228,141,19,194,246,132,30,201,248,187,61,248,210,178,48,243,220,169,39,238,206,160,42,229,192,71,177,60,122,78,188,55,116,85,171,42,102,92,166,33,104,99,133,16,66,106,136,27,76,113,159,6,94,120,146,13,80,15,217,100,10,6,212,111,4,29,195,114,22,20,206,121,24,43,237,72,50,34,224,67,60,57,247,94,46,48,250,85,32,154,183,1,236,147,186,10,226,136,173,23,240,129,160,28,254,190,131,45,212,183,142,38,218,172,153,59,200,165,148,48,198,210,223,89,156,219,210,82,146,192,197,79,128,201,200,68,142,246,235,117,164,255,230,126,170,228,241,99,184,237,252,104,182,10,103,177,12,3,106,186,2,24,125,167,16,17,112,172,30,46,83,157,52,39,94,150,58,60,73,139,40,53,68,128,38,66,15,233,124,75,2,226,114,80,21,255,96,89,24,244,110,102,59,197,68,111,54,206,74,116,33,211,88,125,44,216,86,161,12,122,55,168,1,113,57,179,22,108,43,186,27,103,37,133,56,86,15,140,53,93,1,151,34,64,19,158,47,75,29,233,100,34,71,224,105,41,73,251,126,52,91,242,115,63,85,205,80,14,127,196,93,5,113,223,74,24,99,214,71,19,109,49,220,202,215,56,209,193,217,35,198,220,203,42,203,215,197,21,232,230,239,28,229,237,225,7,242,240,243,14,255,251,253,121,180,146,167,112,185,153,169,107,174,132,187,98,163,143,181,93,128,190,159,84,141,181,145,79,154,168,131,70,151,163,141,0,0,0,0,13,11,14,9,26,22,28,18,23,29,18,27,52,44,56,36,57,39,54,45,46,58,36,54,35,49,42,63,104,88,112,72,101,83,126,65,114,78,108,90,127,69,98,83,92,116,72,108,81,127,70,101,70,98,84,126,75,105,90,119,208,176,224,144,221,187,238,153,202,166,252,130,199,173,242,139,228,156,216,180,233,151,214,189,254,138,196,166,243,129,202,175,184,232,144,216,181,227,158,209,162,254,140,202,175,245,130,195,140,196,168,252,129,207,166,245,150,210,180,238,155,217,186,231,187,123,219,59,182,112,213,50,161,109,199,41,172,102,201,32,143,87,227,31,130,92,237,22,149,65,255,13,152,74,241,4,211,35,171,115,222,40,165,122,201,53,183,97,196,62,185,104,231,15,147,87,234,4,157,94,253,25,143,69,240,18,129,76,107,203,59,171,102,192,53,162,113,221,39,185,124,214,41,176,95,231,3,143,82,236,13,134,69,241,31,157,72,250,17,148,3,147,75,227,14,152,69,234,25,133,87,241,20,142,89,248,55,191,115,199,58,180,125,206,45,169,111,213,32,162,97,220,109,246,173,118,96,253,163,127,119,224,177,100,122,235,191,109,89,218,149,82,84,209,155,91,67,204,137,64,78,199,135,73,5,174,221,62,8,165,211,55,31,184,193,44,18,179,207,37,49,130,229,26,60,137,235,19,43,148,249,8,38,159,247,1,189,70,77,230,176,77,67,239,167,80,81,244,170,91,95,253,137,106,117,194,132,97,123,203,147,124,105,208,158,119,103,217,213,30,61,174,216,21,51,167,207,8,33,188,194,3,47,181,225,50,5,138,236,57,11,131,251,36,25,152,246,47,23,145,214,141,118,77,219,134,120,68,204,155,106,95,193,144,100,86,226,161,78,105,239,170,64,96,248,183,82,123,245,188,92,114,190,213,6,5,179,222,8,12,164,195,26,23,169,200,20,30,138,249,62,33,135,242,48,40,144,239,34,51,157,228,44,58,6,61,150,221,11,54,152,212,28,43,138,207,17,32,132,198,50,17,174,249,63,26,160,240,40,7,178,235,37,12,188,226,110,101,230,149,99,110,232,156,116,115,250,135,121,120,244,142,90,73,222,177,87,66,208,184,64,95,194,163,77,84,204,170,218,247,65,236,215,252,79,229,192,225,93,254,205,234,83,247,238,219,121,200,227,208,119,193,244,205,101,218,249,198,107,211,178,175,49,164,191,164,63,173,168,185,45,182,165,178,35,191,134,131,9,128,139,136,7,137,156,149,21,146,145,158,27,155,10,71,161,124,7,76,175,117,16,81,189,110,29,90,179,103,62,107,153,88,51,96,151,81,36,125,133,74,41,118,139,67,98,31,209,52,111,20,223,61,120,9,205,38,117,2,195,47,86,51,233,16,91,56,231,25,76,37,245,2,65,46,251,11,97,140,154,215,108,135,148,222,123,154,134,197,118,145,136,204,85,160,162,243,88,171,172,250,79,182,190,225,66,189,176,232,9,212,234,159,4,223,228,150,19,194,246,141,30,201,248,132,61,248,210,187,48,243,220,178,39,238,206,169,42,229,192,160,177,60,122,71,188,55,116,78,171,42,102,85,166,33,104,92,133,16,66,99,136,27,76,106,159,6,94,113,146,13,80,120,217,100,10,15,212,111,4,6,195,114,22,29,206,121,24,20,237,72,50,43,224,67,60,34,247,94,46,57,250,85,32,48,183,1,236,154,186,10,226,147,173,23,240,136,160,28,254,129,131,45,212,190,142,38,218,183,153,59,200,172,148,48,198,165,223,89,156,210,210,82,146,219,197,79,128,192,200,68,142,201,235,117,164,246,230,126,170,255,241,99,184,228,252,104,182,237,103,177,12,10,106,186,2,3,125,167,16,24,112,172,30,17,83,157,52,46,94,150,58,39,73,139,40,60,68,128,38,53,15,233,124,66,2,226,114,75,21,255,96,80,24,244,110,89,59,197,68,102,54,206,74,111,33,211,88,116,44,216,86,125,12,122,55,161,1,113,57,168,22,108,43,179,27,103,37,186,56,86,15,133,53,93,1,140,34,64,19,151,47,75,29,158,100,34,71,233,105,41,73,224,126,52,91,251,115,63,85,242,80,14,127,205,93,5,113,196,74,24,99,223,71,19,109,214,220,202,215,49,209,193,217,56,198,220,203,35,203,215,197,42,232,230,239,21,229,237,225,28,242,240,243,7,255,251,253,14,180,146,167,121,185,153,169,112,174,132,187,107,163,143,181,98,128,190,159,93,141,181,145,84,154,168,131,79,151,163,141,70,0,0,0,0,11,14,9,13,22,28,18,26,29,18,27,23,44,56,36,52,39,54,45,57,58,36,54,46,49,42,63,35,88,112,72,104,83,126,65,101,78,108,90,114,69,98,83,127,116,72,108,92,127,70,101,81,98,84,126,70,105,90,119,75,176,224,144,208,187,238,153,221,166,252,130,202,173,242,139,199,156,216,180,228,151,214,189,233,138,196,166,254,129,202,175,243,232,144,216,184,227,158,209,181,254,140,202,162,245,130,195,175,196,168,252,140,207,166,245,129,210,180,238,150,217,186,231,155,123,219,59,187,112,213,50,182,109,199,41,161,102,201,32,172,87,227,31,143,92,237,22,130,65,255,13,149,74,241,4,152,35,171,115,211,40,165,122,222,53,183,97,201,62,185,104,196,15,147,87,231,4,157,94,234,25,143,69,253,18,129,76,240,203,59,171,107,192,53,162,102,221,39,185,113,214,41,176,124,231,3,143,95,236,13,134,82,241,31,157,69,250,17,148,72,147,75,227,3,152,69,234,14,133,87,241,25,142,89,248,20,191,115,199,55,180,125,206,58,169,111,213,45,162,97,220,32,246,173,118,109,253,163,127,96,224,177,100,119,235,191,109,122,218,149,82,89,209,155,91,84,204,137,64,67,199,135,73,78,174,221,62,5,165,211,55,8,184,193,44,31,179,207,37,18,130,229,26,49,137,235,19,60,148,249,8,43,159,247,1,38,70,77,230,189,77,67,239,176,80,81,244,167,91,95,253,170,106,117,194,137,97,123,203,132,124,105,208,147,119,103,217,158,30,61,174,213,21,51,167,216,8,33,188,207,3,47,181,194,50,5,138,225,57,11,131,236,36,25,152,251,47,23,145,246,141,118,77,214,134,120,68,219,155,106,95,204,144,100,86,193,161,78,105,226,170,64,96,239,183,82,123,248,188,92,114,245,213,6,5,190,222,8,12,179,195,26,23,164,200,20,30,169,249,62,33,138,242,48,40,135,239,34,51,144,228,44,58,157,61,150,221,6,54,152,212,11,43,138,207,28,32,132,198,17,17,174,249,50,26,160,240,63,7,178,235,40,12,188,226,37,101,230,149,110,110,232,156,99,115,250,135,116,120,244,142,121,73,222,177,90,66,208,184,87,95,194,163,64,84,204,170,77,247,65,236,218,252,79,229,215,225,93,254,192,234,83,247,205,219,121,200,238,208,119,193,227,205,101,218,244,198,107,211,249,175,49,164,178,164,63,173,191,185,45,182,168,178,35,191,165,131,9,128,134,136,7,137,139,149,21,146,156,158,27,155,145,71,161,124,10,76,175,117,7,81,189,110,16,90,179,103,29,107,153,88,62,96,151,81,51,125,133,74,36,118,139,67,41,31,209,52,98,20,223,61,111,9,205,38,120,2,195,47,117,51,233,16,86,56,231,25,91,37,245,2,76,46,251,11,65,140,154,215,97,135,148,222,108,154,134,197,123,145,136,204,118,160,162,243,85,171,172,250,88,182,190,225,79,189,176,232,66,212,234,159,9,223,228,150,4,194,246,141,19,201,248,132,30,248,210,187,61,243,220,178,48,238,206,169,39,229,192,160,42,60,122,71,177,55,116,78,188,42,102,85,171,33,104,92,166,16,66,99,133,27,76,106,136,6,94,113,159,13,80,120,146,100,10,15,217,111,4,6,212,114,22,29,195,121,24,20,206,72,50,43,237,67,60,34,224,94,46,57,247,85,32,48,250,1,236,154,183,10,226,147,186,23,240,136,173,28,254,129,160,45,212,190,131,38,218,183,142,59,200,172,153,48,198,165,148,89,156,210,223,82,146,219,210,79,128,192,197,68,142,201,200,117,164,246,235,126,170,255,230,99,184,228,241,104,182,237,252,177,12,10,103,186,2,3,106,167,16,24,125,172,30,17,112,157,52,46,83,150,58,39,94,139,40,60,73,128,38,53,68,233,124,66,15,226,114,75,2,255,96,80,21,244,110,89,24,197,68,102,59,206,74,111,54,211,88,116,33,216,86,125,44,122,55,161,12,113,57,168,1,108,43,179,22,103,37,186,27,86,15,133,56,93,1,140,53,64,19,151,34,75,29,158,47,34,71,233,100,41,73,224,105,52,91,251,126,63,85,242,115,14,127,205,80,5,113,196,93,24,99,223,74,19,109,214,71,202,215,49,220,193,217,56,209,220,203,35,198,215,197,42,203,230,239,21,232,237,225,28,229,240,243,7,242,251,253,14,255,146,167,121,180,153,169,112,185,132,187,107,174,143,181,98,163,190,159,93,128,181,145,84,141,168,131,79,154,163,141,70,151,0,0,0,0,14,9,13,11,28,18,26,22,18,27,23,29,56,36,52,44,54,45,57,39,36,54,46,58,42,63,35,49,112,72,104,88,126,65,101,83,108,90,114,78,98,83,127,69,72,108,92,116,70,101,81,127,84,126,70,98,90,119,75,105,224,144,208,176,238,153,221,187,252,130,202,166,242,139,199,173,216,180,228,156,214,189,233,151,196,166,254,138,202,175,243,129,144,216,184,232,158,209,181,227,140,202,162,254,130,195,175,245,168,252,140,196,166,245,129,207,180,238,150,210,186,231,155,217,219,59,187,123,213,50,182,112,199,41,161,109,201,32,172,102,227,31,143,87,237,22,130,92,255,13,149,65,241,4,152,74,171,115,211,35,165,122,222,40,183,97,201,53,185,104,196,62,147,87,231,15,157,94,234,4,143,69,253,25,129,76,240,18,59,171,107,203,53,162,102,192,39,185,113,221,41,176,124,214,3,143,95,231,13,134,82,236,31,157,69,241,17,148,72,250,75,227,3,147,69,234,14,152,87,241,25,133,89,248,20,142,115,199,55,191,125,206,58,180,111,213,45,169,97,220,32,162,173,118,109,246,163,127,96,253,177,100,119,224,191,109,122,235,149,82,89,218,155,91,84,209,137,64,67,204,135,73,78,199,221,62,5,174,211,55,8,165,193,44,31,184,207,37,18,179,229,26,49,130,235,19,60,137,249,8,43,148,247,1,38,159,77,230,189,70,67,239,176,77,81,244,167,80,95,253,170,91,117,194,137,106,123,203,132,97,105,208,147,124,103,217,158,119,61,174,213,30,51,167,216,21,33,188,207,8,47,181,194,3,5,138,225,50,11,131,236,57,25,152,251,36,23,145,246,47,118,77,214,141,120,68,219,134,106,95,204,155,100,86,193,144,78,105,226,161,64,96,239,170,82,123,248,183,92,114,245,188,6,5,190,213,8,12,179,222,26,23,164,195,20,30,169,200,62,33,138,249,48,40,135,242,34,51,144,239,44,58,157,228,150,221,6,61,152,212,11,54,138,207,28,43,132,198,17,32,174,249,50,17,160,240,63,26,178,235,40,7,188,226,37,12])
.concat([230,149,110,101,232,156,99,110,250,135,116,115,244,142,121,120,222,177,90,73,208,184,87,66,194,163,64,95,204,170,77,84,65,236,218,247,79,229,215,252,93,254,192,225,83,247,205,234,121,200,238,219,119,193,227,208,101,218,244,205,107,211,249,198,49,164,178,175,63,173,191,164,45,182,168,185,35,191,165,178,9,128,134,131,7,137,139,136,21,146,156,149,27,155,145,158,161,124,10,71,175,117,7,76,189,110,16,81,179,103,29,90,153,88,62,107,151,81,51,96,133,74,36,125,139,67,41,118,209,52,98,31,223,61,111,20,205,38,120,9,195,47,117,2,233,16,86,51,231,25,91,56,245,2,76,37,251,11,65,46,154,215,97,140,148,222,108,135,134,197,123,154,136,204,118,145,162,243,85,160,172,250,88,171,190,225,79,182,176,232,66,189,234,159,9,212,228,150,4,223,246,141,19,194,248,132,30,201,210,187,61,248,220,178,48,243,206,169,39,238,192,160,42,229,122,71,177,60,116,78,188,55,102,85,171,42,104,92,166,33,66,99,133,16,76,106,136,27,94,113,159,6,80,120,146,13,10,15,217,100,4,6,212,111,22,29,195,114,24,20,206,121,50,43,237,72,60,34,224,67,46,57,247,94,32,48,250,85,236,154,183,1,226,147,186,10,240,136,173,23,254,129,160,28,212,190,131,45,218,183,142,38,200,172,153,59,198,165,148,48,156,210,223,89,146,219,210,82,128,192,197,79,142,201,200,68,164,246,235,117,170,255,230,126,184,228,241,99,182,237,252,104,12,10,103,177,2,3,106,186,16,24,125,167,30,17,112,172,52,46,83,157,58,39,94,150,40,60,73,139,38,53,68,128,124,66,15,233,114,75,2,226,96,80,21,255,110,89,24,244,68,102,59,197,74,111,54,206,88,116,33,211,86,125,44,216,55,161,12,122,57,168,1,113,43,179,22,108,37,186,27,103,15,133,56,86,1,140,53,93,19,151,34,64,29,158,47,75,71,233,100,34,73,224,105,41,91,251,126,52,85,242,115,63,127,205,80,14,113,196,93,5,99,223,74,24,109,214,71,19,215,49,220,202,217,56,209,193,203,35,198,220,197,42,203,215,239,21,232,230,225,28,229,237,243,7,242,240,253,14,255,251,167,121,180,146,169,112,185,153,187,107,174,132,181,98,163,143,159,93,128,190,145,84,141,181,131,79,154,168,141,70,151,163,244,167,80,81,65,101,83,126,23,164,195,26,39,94,150,58,171,107,203,59,157,69,241,31,250,88,171,172,227,3,147,75,48,250,85,32,118,109,246,173,204,118,145,136,2,76,37,245,229,215,252,79,42,203,215,197,53,68,128,38,98,163,143,181,177,90,73,222,186,27,103,37,234,14,152,69,254,192,225,93,47,117,2,195,76,240,18,129,70,151,163,141,211,249,198,107,143,95,231,3,146,156,149,21,109,122,235,191,82,89,218,149,190,131,45,212,116,33,211,88,224,105,41,73,201,200,68,142,194,137,106,117,142,121,120,244,88,62,107,153,185,113,221,39,225,79,182,190,136,173,23,240,32,172,102,201,206,58,180,125,223,74,24,99,26,49,130,229,81,51,96,151,83,127,69,98,100,119,224,177,107,174,132,187,129,160,28,254,8,43,148,249,72,104,88,112,69,253,25,143,222,108,135,148,123,248,183,82,115,211,35,171,75,2,226,114,31,143,87,227,85,171,42,102,235,40,7,178,181,194,3,47,197,123,154,134,55,8,165,211,40,135,242,48,191,165,178,35,3,106,186,2,22,130,92,237,207,28,43,138,121,180,146,167,7,242,240,243,105,226,161,78,218,244,205,101,5,190,213,6,52,98,31,209,166,254,138,196,46,83,157,52,243,85,160,162,138,225,50,5,246,235,117,164,131,236,57,11,96,239,170,64,113,159,6,94,110,16,81,189,33,138,249,62,221,6,61,150,62,5,174,221,230,189,70,77,84,141,181,145,196,93,5,113,6,212,111,4,80,21,255,96,152,251,36,25,189,233,151,214,64,67,204,137,217,158,119,103,232,66,189,176,137,139,136,7,25,91,56,231,200,238,219,121,124,10,71,161,66,15,233,124,132,30,201,248,0,0,0,0,128,134,131,9,43,237,72,50,17,112,172,30,90,114,78,108,14,255,251,253,133,56,86,15,174,213,30,61,45,57,39,54,15,217,100,10,92,166,33,104,91,84,209,155,54,46,58,36,10,103,177,12,87,231,15,147,238,150,210,180,155,145,158,27,192,197,79,128,220,32,162,97,119,75,105,90,18,26,22,28,147,186,10,226,160,42,229,192,34,224,67,60,27,23,29,18,9,13,11,14,139,199,173,242,182,168,185,45,30,169,200,20,241,25,133,87,117,7,76,175,153,221,187,238,127,96,253,163,1,38,159,247,114,245,188,92,102,59,197,68,251,126,52,91,67,41,118,139,35,198,220,203,237,252,104,182,228,241,99,184,49,220,202,215,99,133,16,66,151,34,64,19,198,17,32,132,74,36,125,133,187,61,248,210,249,50,17,174,41,161,109,199,158,47,75,29,178,48,243,220,134,82,236,13,193,227,208,119,179,22,108,43,112,185,153,169,148,72,250,17,233,100,34,71,252,140,196,168,240,63,26,160,125,44,216,86,51,144,239,34,73,78,199,135,56,209,193,217,202,162,254,140,212,11,54,152,245,129,207,166,122,222,40,165,183,142,38,218,173,191,164,63,58,157,228,44,120,146,13,80,95,204,155,106,126,70,98,84,141,19,194,246,216,184,232,144,57,247,94,46,195,175,245,130,93,128,190,159,208,147,124,105,213,45,169,111,37,18,179,207,172,153,59,200,24,125,167,16,156,99,110,232,59,187,123,219,38,120,9,205,89,24,244,110,154,183,1,236,79,154,168,131,149,110,101,230,255,230,126,170,188,207,8,33,21,232,230,239,231,155,217,186,111,54,206,74,159,9,212,234,176,124,214,41,164,178,175,49,63,35,49,42,165,148,48,198,162,102,192,53,78,188,55,116,130,202,166,252,144,208,176,224,167,216,21,51,4,152,74,241,236,218,247,65,205,80,14,127,145,246,47,23,77,214,141,118,239,176,77,67,170,77,84,204,150,4,223,228,209,181,227,158,106,136,27,76,44,31,184,193,101,81,127,70,94,234,4,157,140,53,93,1,135,116,115,250,11,65,46,251,103,29,90,179,219,210,82,146,16,86,51,233,214,71,19,109,215,97,140,154,161,12,122,55,248,20,142,89,19,60,137,235,169,39,238,206,97,201,53,183,28,229,237,225,71,177,60,122,210,223,89,156,242,115,63,85,20,206,121,24,199,55,191,115,247,205,234,83,253,170,91,95,61,111,20,223,68,219,134,120,175,243,129,202,104,196,62,185,36,52,44,56,163,64,95,194,29,195,114,22,226,37,12,188,60,73,139,40,13,149,65,255,168,1,113,57,12,179,222,8,180,228,156,216,86,193,144,100,203,132,97,123,50,182,112,213,108,92,116,72,184,87,66,208,167,80,81,244,101,83,126,65,164,195,26,23,94,150,58,39,107,203,59,171,69,241,31,157,88,171,172,250,3,147,75,227,250,85,32,48,109,246,173,118,118,145,136,204,76,37,245,2,215,252,79,229,203,215,197,42,68,128,38,53,163,143,181,98,90,73,222,177,27,103,37,186,14,152,69,234,192,225,93,254,117,2,195,47,240,18,129,76,151,163,141,70,249,198,107,211,95,231,3,143,156,149,21,146,122,235,191,109,89,218,149,82,131,45,212,190,33,211,88,116,105,41,73,224,200,68,142,201,137,106,117,194,121,120,244,142,62,107,153,88,113,221,39,185,79,182,190,225,173,23,240,136,172,102,201,32,58,180,125,206,74,24,99,223,49,130,229,26,51,96,151,81,127,69,98,83,119,224,177,100,174,132,187,107,160,28,254,129,43,148,249,8,104,88,112,72,253,25,143,69,108,135,148,222,248,183,82,123,211,35,171,115,2,226,114,75,143,87,227,31,171,42,102,85,40,7,178,235,194,3,47,181,123,154,134,197,8,165,211,55,135,242,48,40,165,178,35,191,106,186,2,3,130,92,237,22,28,43,138,207,180,146,167,121,242,240,243,7,226,161,78,105,244,205,101,218,190,213,6,5,98,31,209,52,254,138,196,166,83,157,52,46,85,160,162,243,225,50,5,138,235,117,164,246,236,57,11,131,239,170,64,96,159,6,94,113,16,81,189,110,138,249,62,33,6,61,150,221,5,174,221,62,189,70,77,230,141,181,145,84,93,5,113,196,212,111,4,6,21,255,96,80,251,36,25,152,233,151,214,189,67,204,137,64,158,119,103,217,66,189,176,232,139,136,7,137,91,56,231,25,238,219,121,200,10,71,161,124,15,233,124,66,30,201,248,132,0,0,0,0,134,131,9,128,237,72,50,43,112,172,30,17,114,78,108,90,255,251,253,14,56,86,15,133,213,30,61,174,57,39,54,45,217,100,10,15,166,33,104,92,84,209,155,91,46,58,36,54,103,177,12,10,231,15,147,87,150,210,180,238,145,158,27,155,197,79,128,192,32,162,97,220,75,105,90,119,26,22,28,18,186,10,226,147,42,229,192,160,224,67,60,34,23,29,18,27,13,11,14,9,199,173,242,139,168,185,45,182,169,200,20,30,25,133,87,241,7,76,175,117,221,187,238,153,96,253,163,127,38,159,247,1,245,188,92,114,59,197,68,102,126,52,91,251,41,118,139,67,198,220,203,35,252,104,182,237,241,99,184,228,220,202,215,49,133,16,66,99,34,64,19,151,17,32,132,198,36,125,133,74,61,248,210,187,50,17,174,249,161,109,199,41,47,75,29,158,48,243,220,178,82,236,13,134,227,208,119,193,22,108,43,179,185,153,169,112,72,250,17,148,100,34,71,233,140,196,168,252,63,26,160,240,44,216,86,125,144,239,34,51,78,199,135,73,209,193,217,56,162,254,140,202,11,54,152,212,129,207,166,245,222,40,165,122,142,38,218,183,191,164,63,173,157,228,44,58,146,13,80,120,204,155,106,95,70,98,84,126,19,194,246,141,184,232,144,216,247,94,46,57,175,245,130,195,128,190,159,93,147,124,105,208,45,169,111,213,18,179,207,37,153,59,200,172,125,167,16,24,99,110,232,156,187,123,219,59,120,9,205,38,24,244,110,89,183,1,236,154,154,168,131,79,110,101,230,149,230,126,170,255,207,8,33,188,232,230,239,21,155,217,186,231,54,206,74,111,9,212,234,159,124,214,41,176,178,175,49,164,35,49,42,63,148,48,198,165,102,192,53,162,188,55,116,78,202,166,252,130,208,176,224,144,216,21,51,167,152,74,241,4,218,247,65,236,80,14,127,205,246,47,23,145,214,141,118,77,176,77,67,239,77,84,204,170,4,223,228,150,181,227,158,209,136,27,76,106,31,184,193,44,81,127,70,101,234,4,157,94,53,93,1,140,116,115,250,135,65,46,251,11,29,90,179,103,210,82,146,219,86,51,233,16,71,19,109,214,97,140,154,215,12,122,55,161,20,142,89,248,60,137,235,19,39,238,206,169,201,53,183,97,229,237,225,28,177,60,122,71,223,89,156,210,115,63,85,242,206,121,24,20,55,191,115,199,205,234,83,247,170,91,95,253,111,20,223,61,219,134,120,68,243,129,202,175,196,62,185,104,52,44,56,36,64,95,194,163,195,114,22,29,37,12,188,226,73,139,40,60,149,65,255,13,1,113,57,168,179,222,8,12,228,156,216,180,193,144,100,86,132,97,123,203,182,112,213,50,92,116,72,108,87,66,208,184,80,81,244,167,83,126,65,101,195,26,23,164,150,58,39,94,203,59,171,107,241,31,157,69,171,172,250,88,147,75,227,3,85,32,48,250,246,173,118,109,145,136,204,118,37,245,2,76,252,79,229,215,215,197,42,203,128,38,53,68,143,181,98,163,73,222,177,90,103,37,186,27,152,69,234,14,225,93,254,192,2,195,47,117,18,129,76,240,163,141,70,151,198,107,211,249,231,3,143,95,149,21,146,156,235,191,109,122,218,149,82,89,45,212,190,131,211,88,116,33,41,73,224,105,68,142,201,200,106,117,194,137,120,244,142,121,107,153,88,62,221,39,185,113,182,190,225,79,23,240,136,173,102,201,32,172,180,125,206,58,24,99,223,74,130,229,26,49,96,151,81,51,69,98,83,127,224,177,100,119,132,187,107,174,28,254,129,160,148,249,8,43,88,112,72,104,25,143,69,253,135,148,222,108,183,82,123,248,35,171,115,211,226,114,75,2,87,227,31,143,42,102,85,171,7,178,235,40,3,47,181,194,154,134,197,123,165,211,55,8,242,48,40,135,178,35,191,165,186,2,3,106,92,237,22,130,43,138,207,28,146,167,121,180,240,243,7,242,161,78,105,226,205,101,218,244,213,6,5,190,31,209,52,98,138,196,166,254,157,52,46,83,160,162,243,85,50,5,138,225,117,164,246,235,57,11,131,236,170,64,96,239,6,94,113,159,81,189,110,16,249,62,33,138,61,150,221,6,174,221,62,5,70,77,230,189,181,145,84,141,5,113,196,93,111,4,6,212,255,96,80,21,36,25,152,251,151,214,189,233,204,137,64,67,119,103,217,158,189,176,232,66,136,7,137,139,56,231,25,91,219,121,200,238,71,161,124,10,233,124,66,15,201,248,132,30,0,0,0,0,131,9,128,134,72,50,43,237,172,30,17,112,78,108,90,114,251,253,14,255,86,15,133,56,30,61,174,213,39,54,45,57,100,10,15,217,33,104,92,166,209,155,91,84,58,36,54,46,177,12,10,103,15,147,87,231,210,180,238,150,158,27,155,145,79,128,192,197,162,97,220,32,105,90,119,75,22,28,18,26,10,226,147,186,229,192,160,42,67,60,34,224,29,18,27,23,11,14,9,13,173,242,139,199,185,45,182,168,200,20,30,169,133,87,241,25,76,175,117,7,187,238,153,221,253,163,127,96,159,247,1,38,188,92,114,245,197,68,102,59,52,91,251,126,118,139,67,41,220,203,35,198,104,182,237,252,99,184,228,241,202,215,49,220,16,66,99,133,64,19,151,34,32,132,198,17,125,133,74,36,248,210,187,61,17,174,249,50,109,199,41,161,75,29,158,47,243,220,178,48,236,13,134,82,208,119,193,227,108,43,179,22,153,169,112,185,250,17,148,72,34,71,233,100,196,168,252,140,26,160,240,63,216,86,125,44,239,34,51,144,199,135,73,78,193,217,56,209,254,140,202,162,54,152,212,11,207,166,245,129,40,165,122,222,38,218,183,142,164,63,173,191,228,44,58,157,13,80,120,146,155,106,95,204,98,84,126,70,194,246,141,19,232,144,216,184,94,46,57,247,245,130,195,175,190,159,93,128,124,105,208,147,169,111,213,45,179,207,37,18,59,200,172,153,167,16,24,125,110,232,156,99,123,219,59,187,9,205,38,120,244,110,89,24,1,236,154,183,168,131,79,154,101,230,149,110,126,170,255,230,8,33,188,207,230,239,21,232,217,186,231,155,206,74,111,54,212,234,159,9,214,41,176,124,175,49,164,178,49,42,63,35,48,198,165,148,192,53,162,102,55,116,78,188,166,252,130,202,176,224,144,208,21,51,167,216,74,241,4,152,247,65,236,218,14,127,205,80,47,23,145,246,141,118,77,214,77,67,239,176,84,204,170,77,223,228,150,4,227,158,209,181,27,76,106,136,184,193,44,31,127,70,101,81,4,157,94,234,93,1,140,53,115,250,135,116,46,251,11,65,90,179,103,29,82,146,219,210,51,233,16,86,19,109,214,71,140,154,215,97,122,55,161,12,142,89,248,20,137,235,19,60,238,206,169,39,53,183,97,201,237,225,28,229,60,122,71,177,89,156,210,223,63,85,242,115,121,24,20,206,191,115,199,55,234,83,247,205,91,95,253,170,20,223,61,111,134,120,68,219,129,202,175,243,62,185,104,196,44,56,36,52,95,194,163,64,114,22,29,195,12,188,226,37,139,40,60,73,65,255,13,149,113,57,168,1,222,8,12,179,156,216,180,228,144,100,86,193,97,123,203,132,112,213,50,182,116,72,108,92,66,208,184,87,81,244,167,80,126,65,101,83,26,23,164,195,58,39,94,150,59,171,107,203,31,157,69,241,172,250,88,171,75,227,3,147,32,48,250,85,173,118,109,246,136,204,118,145,245,2,76,37,79,229,215,252,197,42,203,215,38,53,68,128,181,98,163,143,222,177,90,73,37,186,27,103,69,234,14,152,93,254,192,225,195,47,117,2,129,76,240,18,141,70,151,163,107,211,249,198,3,143,95,231,21,146,156,149,191,109,122,235,149,82,89,218,212,190,131,45,88,116,33,211,73,224,105,41,142,201,200,68,117,194,137,106,244,142,121,120,153,88,62,107,39,185,113,221,190,225,79,182,240,136,173,23,201,32,172,102,125,206,58,180,99,223,74,24,229,26,49,130,151,81,51,96,98,83,127,69,177,100,119,224,187,107,174,132,254,129,160,28,249,8,43,148,112,72,104,88,143,69,253,25,148,222,108,135,82,123,248,183,171,115,211,35,114,75,2,226,227,31,143,87,102,85,171,42,178,235,40,7,47,181,194,3,134,197,123,154,211,55,8,165,48,40,135,242,35,191,165,178,2,3,106,186,237,22,130,92,138,207,28,43,167,121,180,146,243,7,242,240,78,105,226,161,101,218,244,205,6,5,190,213,209,52,98,31,196,166,254,138,52,46,83,157,162,243,85,160,5,138,225,50,164,246,235,117,11,131,236,57,64,96,239,170,94,113,159,6,189,110,16,81,62,33,138,249,150,221,6,61,221,62,5,174,77,230,189,70,145,84,141,181,113,196,93,5,4,6,212,111,96,80,21,255,25,152,251,36,214,189,233,151,137,64,67,204,103,217,158,119,176,232,66,189,7,137,139,136,231,25,91,56,121,200,238,219,161,124,10,71,124,66,15,233,248,132,30,201,0,0,0,0,9,128,134,131,50,43,237,72,30,17,112,172,108,90,114,78,253,14,255,251,15,133,56,86,61,174,213,30,54,45,57,39,10,15,217,100,104,92,166,33,155,91,84,209,36,54,46,58,12,10,103,177,147,87,231,15,180,238,150,210,27,155,145,158,128,192,197,79,97,220,32,162,90,119,75,105,28,18,26,22,226,147,186,10,192,160,42,229,60,34,224,67,18,27,23,29,14,9,13,11,242,139,199,173,45,182,168,185,20,30,169,200,87,241,25,133,175,117,7,76,238,153,221,187,163,127,96,253,247,1,38,159,92,114,245,188,68,102,59,197,91,251,126,52,139,67,41,118,203,35,198,220,182,237,252,104,184,228,241,99,215,49,220,202,66,99,133,16,19,151,34,64,132,198,17,32,133,74,36,125,210,187,61,248,174,249,50,17,199,41,161,109,29,158,47,75,220,178,48,243,13,134,82,236,119,193,227,208,43,179,22,108,169,112,185,153,17,148,72,250,71,233,100,34,168,252,140,196,160,240,63,26,86,125,44,216,34,51,144,239,135,73,78,199,217,56,209,193,140,202,162,254,152,212,11,54,166,245,129,207,165,122,222,40,218,183,142,38,63,173,191,164,44,58,157,228,80,120,146,13,106,95,204,155,84,126,70,98,246,141,19,194,144,216,184,232,46,57,247,94,130,195,175,245,159,93,128,190,105,208,147,124,111,213,45,169,207,37,18,179,200,172,153,59,16,24,125,167,232,156,99,110,219,59,187,123,205,38,120,9,110,89,24,244,236,154,183,1,131,79,154,168,230,149,110,101,170,255,230,126,33,188,207,8,239,21,232,230,186,231,155,217,74,111,54,206,234,159,9,212,41,176,124,214,49,164,178,175,42,63,35,49,198,165,148,48,53,162,102,192,116,78,188,55,252,130,202,166,224,144,208,176,51,167,216,21,241,4,152,74,65,236,218,247,127,205,80,14,23,145,246,47,118,77,214,141,67,239,176,77,204,170,77,84,228,150,4,223,158,209,181,227,76,106,136,27,193,44,31,184,70,101,81,127,157,94,234,4,1,140,53,93,250,135,116,115,251,11,65,46,179,103,29,90,146,219,210,82,233,16,86,51,109,214,71,19,154,215,97,140,55,161,12,122,89,248,20,142,235,19,60,137,206,169,39,238,183,97,201,53,225,28,229,237,122,71,177,60,156,210,223,89,85,242,115,63,24,20,206,121,115,199,55,191,83,247,205,234,95,253,170,91,223,61,111,20,120,68,219,134,202,175,243,129,185,104,196,62,56,36,52,44,194,163,64,95,22,29,195,114,188,226,37,12,40,60,73,139,255,13,149,65,57,168,1,113,8,12,179,222,216,180,228,156,100,86,193,144,123,203,132,97,213,50,182,112,72,108,92,116,208,184,87,66,99,99,165,198,124,124,132,248,119,119,153,238,123,123,141,246,242,242,13,255,107,107,189,214,111,111,177,222,197,197,84,145,48,48,80,96,1,1,3,2,103,103,169,206,43,43,125,86,254,254,25,231,215,215,98,181,171,171,230,77,118,118,154,236,202,202,69,143,130,130,157,31,201,201,64,137,125,125,135,250,250,250,21,239,89,89,235,178,71,71,201,142,240,240,11,251,173,173,236,65,212,212,103,179,162,162,253,95,175,175,234,69,156,156,191,35,164,164,247,83,114,114,150,228,192,192,91,155,183,183,194,117,253,253,28,225,147,147,174,61,38,38,106,76,54,54,90,108,63,63,65,126,247,247,2,245,204,204,79,131,52,52,92,104,165,165,244,81,229,229,52,209,241,241,8,249,113,113,147,226,216,216,115,171,49,49,83,98,21,21,63,42,4,4,12,8,199,199,82,149,35,35,101,70,195,195,94,157,24,24,40,48,150,150,161,55,5,5,15,10,154,154,181,47,7,7,9,14,18,18,54,36,128,128,155,27,226,226,61,223,235,235,38,205,39,39,105,78,178,178,205,127,117,117,159,234,9,9,27,18,131,131,158,29,44,44,116,88,26,26,46,52,27,27,45,54,110,110,178,220,90,90,238,180,160,160,251,91,82,82,246,164,59,59,77,118,214,214,97,183,179,179,206,125,41,41,123,82,227,227,62,221,47,47,113,94,132,132,151,19,83,83,245,166,209,209,104,185,0,0,0,0,237,237,44,193,32,32,96,64,252,252,31,227,177,177,200,121,91,91,237,182,106,106,190,212,203,203,70,141,190,190,217,103,57,57,75,114,74,74,222,148,76,76,212,152,88,88,232,176,207,207,74,133,208,208,107,187,239,239,42,197,170,170,229,79,251,251,22,237,67,67,197,134,77,77,215,154,51,51,85,102,133,133,148,17,69,69,207,138,249,249,16,233,2,2,6,4,127,127,129,254,80,80,240,160,60,60,68,120,159,159,186,37,168,168,227,75,81,81,243,162,163,163,254,93,64,64,192,128,143,143,138,5,146,146,173,63,157,157,188,33,56,56,72,112,245,245,4,241,188,188,223,99,182,182,193,119,218,218,117,175,33,33,99,66,16,16,48,32,255,255,26,229,243,243,14,253,210,210,109,191,205,205,76,129,12,12,20,24,19,19,53,38,236,236,47,195,95,95,225,190,151,151,162,53,68,68,204,136,23,23,57,46,196,196,87,147,167,167,242,85,126,126,130,252,61,61,71,122,100,100,172,200,93,93,231,186,25,25,43,50,115,115,149,230,96,96,160,192,129,129,152,25,79,79,209,158,220,220,127,163,34,34,102,68,42,42,126,84,144,144,171,59,136,136,131,11,70,70,202,140,238,238,41,199,184,184,211,107,20,20,60,40,222,222,121,167,94,94,226,188,11,11,29,22,219,219,118,173,224,224,59,219,50,50,86,100,58,58,78,116,10,10,30,20,73,73,219,146,6,6,10,12,36,36,108,72,92,92,228,184,194,194,93,159,211,211,110,189,172,172,239,67,98,98,166,196,145,145,168,57,149,149,164,49,228,228,55,211,121,121,139,242,231,231,50,213,200,200,67,139,55,55,89,110,109,109,183,218,141,141,140,1,213,213,100,177,78,78,210,156,169,169,224,73,108,108,180,216,86,86,250,172,244,244,7,243,234,234,37,207,101,101,175,202,122,122,142,244,174,174,233,71,8,8,24,16,186,186,213,111,120,120,136,240,37,37,111,74,46,46,114,92,28,28,36,56,166,166,241,87,180,180,199,115,198,198,81,151,232,232,35,203,221,221,124,161,116,116,156,232,31,31,33,62,75,75,221,150,189,189,220,97,139,139,134,13,138,138,133,15,112,112,144,224,62,62,66,124,181,181,196,113,102,102,170,204,72,72,216,144,3,3,5,6,246,246,1,247,14,14,18,28,97,97,163,194,53,53,95,106,87,87,249,174,185,185,208,105,134,134,145,23,193,193,88,153,29,29,39,58,158,158,185,39,225,225,56,217,248,248,19,235,152,152,179,43,17,17,51,34,105,105,187,210,217,217,112,169,142,142,137,7,148,148,167,51,155,155,182,45,30,30,34,60,135,135,146,21,233,233,32,201,206,206,73,135,85,85,255,170,40,40,120,80,223,223,122,165,140,140,143,3,161,161,248,89,137,137,128,9,13,13,23,26,191,191,218,101,230,230,49,215,66,66,198,132,104,104,184,208,65,65,195,130,153,153,176,41,45,45,119,90,15,15,17,30,176,176,203,123,84,84,252,168,187,187,214,109,22,22,58,44,99,165,198,99,124,132,248,124,119,153,238,119,123,141,246,123,242,13,255,242,107,189,214,107,111,177,222,111,197,84,145,197,48,80,96,48,1,3,2,1,103,169,206,103,43,125,86,43,254,25,231,254,215,98,181,215,171,230,77,171,118,154,236,118,202,69,143,202,130,157,31,130,201,64,137,201,125,135,250,125,250,21,239,250,89,235,178,89,71,201,142,71,240,11,251,240,173,236,65,173,212,103,179,212,162,253,95,162,175,234,69,175,156,191,35,156,164,247,83,164,114,150,228,114,192,91,155,192,183,194,117,183,253,28,225,253,147,174,61,147,38,106,76,38,54,90,108,54,63,65,126,63,247,2,245,247,204,79,131,204,52,92,104,52,165,244,81,165,229,52,209,229,241,8,249,241,113,147,226,113,216,115,171,216,49,83,98,49,21,63,42,21,4,12,8,4,199,82,149,199,35,101,70,35,195,94,157,195,24,40,48,24,150,161,55,150,5,15,10,5,154,181,47,154,7,9,14,7,18,54,36,18,128,155,27,128,226,61,223,226,235,38,205,235,39,105,78,39,178,205,127,178,117,159,234,117,9,27,18,9,131,158,29,131,44,116,88,44,26,46,52,26,27,45,54,27,110,178,220,110,90,238,180,90,160,251,91,160,82,246,164,82,59,77,118,59,214,97,183,214,179,206,125,179,41,123,82,41,227,62,221,227,47,113,94,47,132,151,19,132,83,245,166,83,209,104,185,209,0,0,0,0,237,44,193,237,32,96,64,32,252,31,227,252,177,200,121,177,91,237,182,91,106,190,212,106,203,70,141,203,190,217,103,190,57,75,114,57,74,222,148,74,76,212,152,76,88,232,176,88,207,74,133,207,208,107,187,208,239,42,197,239,170,229,79,170,251,22,237,251,67,197,134,67,77,215,154,77,51,85,102,51,133,148,17,133,69,207,138,69,249,16,233,249,2,6,4,2,127,129,254,127,80,240,160,80,60,68,120,60,159,186,37,159,168,227,75,168,81,243,162,81,163,254,93,163,64,192,128,64,143,138,5,143,146,173,63,146,157,188,33,157,56,72,112,56,245,4,241,245,188,223,99,188,182,193,119,182,218,117,175,218,33,99,66,33,16,48,32,16,255,26,229,255,243,14,253,243,210,109,191,210,205,76,129,205,12,20,24,12,19,53,38,19,236,47,195,236,95,225,190,95,151,162,53,151,68,204,136,68,23,57,46,23,196,87,147,196,167,242,85,167,126,130,252,126,61,71,122,61,100,172,200,100,93,231,186,93,25,43,50,25,115,149,230,115,96,160,192,96,129,152,25,129,79,209,158,79,220,127,163,220,34,102,68,34,42,126,84,42,144,171,59,144,136,131,11,136,70,202,140,70,238,41,199,238,184,211,107,184,20,60,40,20,222,121,167,222,94,226,188,94,11,29,22,11,219,118,173,219,224,59,219,224,50,86,100,50,58,78,116,58,10,30,20,10,73,219,146,73,6,10,12,6,36,108,72,36,92,228,184,92,194,93,159,194,211,110,189,211,172,239,67,172,98,166,196,98,145,168,57,145,149,164,49,149,228,55,211,228,121,139,242,121,231,50,213,231,200,67,139,200,55,89,110,55,109,183,218,109,141,140,1,141,213,100,177,213,78,210,156,78,169,224,73,169,108,180,216,108,86,250,172,86,244,7,243,244,234,37,207,234,101,175,202,101,122,142,244,122,174,233,71,174,8,24,16,8,186,213,111,186,120,136,240,120,37,111,74,37,46,114,92,46,28,36,56,28,166,241,87,166,180,199,115,180,198,81,151,198,232,35,203,232,221,124,161,221,116,156,232,116,31,33,62,31,75,221,150,75,189,220,97,189,139,134,13,139,138,133,15,138,112,144,224,112,62,66,124,62,181,196,113,181,102,170,204,102,72,216,144,72,3,5,6,3,246,1,247,246,14,18,28,14,97,163,194,97,53,95,106,53,87,249,174,87,185,208,105,185,134,145,23,134,193,88,153,193,29,39,58,29,158,185,39,158,225,56,217,225,248,19,235,248,152,179,43,152,17,51,34,17,105,187,210,105,217,112,169,217,142,137,7,142,148,167,51,148,155,182,45,155,30,34,60,30,135,146,21,135,233,32,201,233,206,73,135,206,85,255,170,85,40,120,80,40,223,122,165,223,140,143,3,140,161,248,89,161,137,128,9,137,13,23,26,13,191,218,101,191,230,49,215,230,66,198,132,66,104,184,208,104,65,195,130,65,153,176,41,153,45,119,90,45,15,17,30,15,176,203,123,176,84,252,168,84,187,214,109,187,22,58,44,22,165,198,99,99,132,248,124,124,153,238,119,119,141,246,123,123,13,255,242,242,189,214,107,107,177,222,111,111,84,145,197,197,80,96,48,48,3,2,1,1,169,206,103,103,125,86,43,43,25,231,254,254,98,181,215,215,230,77,171,171,154,236,118,118,69,143,202,202,157,31,130,130,64,137,201,201,135,250,125,125,21,239,250,250,235,178,89,89,201,142,71,71,11,251,240,240,236,65,173,173,103,179,212,212,253,95,162,162,234,69,175,175,191,35,156,156,247,83,164,164,150,228,114,114,91,155,192,192,194,117,183,183,28,225,253,253,174,61,147,147,106,76,38,38,90,108,54,54,65,126,63,63,2,245,247,247,79,131,204,204,92,104,52,52,244,81,165,165,52,209,229,229,8,249,241,241,147,226,113,113,115,171,216,216,83,98,49,49,63,42,21,21,12,8,4,4,82,149,199,199,101,70,35,35,94,157,195,195,40,48,24,24,161,55,150,150,15,10,5,5,181,47,154,154,9,14,7,7,54,36,18,18,155,27,128,128,61,223,226,226,38,205,235,235,105,78,39,39,205,127,178,178,159,234,117,117,27,18,9,9,158,29,131,131,116,88,44,44,46,52,26,26,45,54,27,27,178,220,110,110,238,180,90,90,251,91,160,160,246,164,82,82,77,118,59,59,97,183,214,214,206,125,179,179,123,82,41,41,62,221,227,227,113,94,47,47,151,19,132,132,245,166,83,83,104,185,209,209,0,0,0,0,44,193,237,237,96,64,32,32,31,227,252,252,200,121,177,177,237,182,91,91,190,212,106,106,70,141,203,203,217,103,190,190,75,114,57,57,222,148,74,74,212,152,76,76,232,176,88,88,74,133,207,207,107,187,208,208,42,197,239,239,229,79,170,170,22,237,251,251,197,134,67,67,215,154,77,77,85,102,51,51,148,17,133,133,207,138,69,69,16,233,249,249,6,4,2,2,129,254,127,127,240,160,80,80,68,120,60,60,186,37,159,159,227,75,168,168,243,162,81,81,254,93,163,163,192,128,64,64,138,5,143,143,173,63,146,146,188,33,157,157,72,112,56,56,4,241,245,245,223,99,188,188,193,119,182,182,117,175,218,218,99,66,33,33,48,32,16,16,26,229,255,255,14,253,243,243,109,191,210,210,76,129,205,205,20,24,12,12,53,38,19,19,47,195,236,236,225,190,95,95,162,53,151,151,204,136,68,68,57,46,23,23,87,147,196,196,242,85,167,167,130,252,126,126,71,122,61,61,172,200,100,100,231,186,93,93,43,50,25,25,149,230,115,115,160,192,96,96,152,25,129,129,209,158,79,79,127,163,220,220,102,68,34,34,126,84,42,42,171,59,144,144,131,11,136,136,202,140,70,70,41,199,238,238,211,107,184,184,60,40,20,20,121,167,222,222,226,188,94,94,29,22,11,11,118,173,219,219,59,219,224,224,86,100,50,50,78,116,58,58,30,20,10,10,219,146,73,73,10,12,6,6,108,72,36,36,228,184,92,92,93,159,194,194,110,189,211,211,239,67,172,172,166,196,98,98,168,57,145,145,164,49,149,149,55,211,228,228,139,242,121,121,50,213,231,231,67,139,200,200,89,110,55,55,183,218,109,109,140,1,141,141,100,177,213,213,210,156,78,78,224,73,169,169,180,216,108,108,250,172,86,86,7,243,244,244,37,207,234,234,175,202,101,101,142,244,122,122,233,71,174,174,24,16,8,8,213,111,186,186,136,240,120,120,111,74,37,37,114,92,46,46,36,56,28,28,241,87,166,166,199,115,180,180,81,151,198,198,35,203,232,232,124,161,221,221,156,232,116,116,33,62,31,31,221,150,75,75,220,97,189,189,134,13,139,139,133,15,138,138,144,224,112,112,66,124,62,62,196,113,181,181,170,204,102,102,216,144,72,72,5,6,3,3,1,247,246,246,18,28,14,14,163,194,97,97,95,106,53,53,249,174,87,87,208,105,185,185,145,23,134,134,88,153,193,193,39,58,29,29,185,39,158,158,56,217,225,225,19,235,248,248,179,43,152,152,51,34,17,17,187,210,105,105,112,169,217,217,137,7,142,142,167,51,148,148,182,45,155,155,34,60,30,30,146,21,135,135,32,201,233,233,73,135,206,206,255,170,85,85,120,80,40,40,122,165,223,223,143,3,140,140,248,89,161,161,128,9,137,137,23,26,13,13,218,101,191,191,49,215,230,230,198,132,66,66,184,208,104,104,195,130,65,65,176,41,153,153,119,90,45,45,17,30,15,15,203,123,176,176,252,168,84,84,214,109,187,187,58,44,22,22,198,99,99,165,248,124,124,132,238,119,119,153,246,123,123,141,255,242,242,13,214,107,107,189,222,111,111,177,145,197,197,84,96,48,48,80,2,1,1,3,206,103,103,169,86,43,43,125,231,254,254,25,181,215,215,98,77,171,171,230,236,118,118,154,143,202,202,69,31,130,130,157,137,201,201,64,250,125,125,135,239,250,250,21,178,89,89,235,142,71,71,201,251,240,240,11,65,173,173,236,179,212,212,103,95,162,162,253,69,175,175,234,35,156,156,191,83,164,164,247,228,114,114,150,155,192,192,91,117,183,183,194,225,253,253,28,61,147,147,174,76,38,38,106,108,54,54,90,126,63,63,65,245,247,247,2,131,204,204,79,104,52,52,92,81,165,165,244,209,229,229,52,249,241,241,8,226,113,113,147,171,216,216,115,98,49,49,83,42,21,21,63,8,4,4,12,149,199,199,82,70,35,35,101,157,195,195,94,48,24,24,40,55,150,150,161,10,5,5,15,47,154,154,181,14,7,7,9,36,18,18,54,27,128,128,155,223,226,226,61,205,235,235,38,78,39,39,105,127,178,178,205,234,117,117,159,18,9,9,27,29,131,131,158,88,44,44,116,52,26,26,46,54,27,27,45,220,110,110,178,180,90,90,238,91,160,160,251,164,82,82,246,118,59,59,77,183,214,214,97,125,179,179,206,82,41,41,123,221,227,227,62,94,47,47,113,19,132,132,151,166,83,83,245,185,209,209,104,0,0,0,0,193,237,237,44,64,32,32,96,227,252,252,31,121,177,177,200,182,91,91,237,212,106,106,190,141,203,203,70,103,190,190,217,114,57,57,75,148,74,74,222,152,76,76,212,176,88,88,232,133,207,207,74,187,208,208,107,197,239,239,42,79,170,170,229,237,251,251,22,134,67,67,197,154,77,77,215,102,51,51,85,17,133,133,148,138,69,69,207,233,249,249,16,4,2,2,6,254,127,127,129,160,80,80,240,120,60,60,68,37,159,159,186,75,168,168,227,162,81,81,243,93,163,163,254,128,64,64,192,5,143,143,138,63,146,146,173,33,157,157,188,112,56,56,72,241,245,245,4,99,188,188,223,119,182,182,193,175,218,218,117,66,33,33,99,32,16,16,48,229,255,255,26,253,243,243,14,191,210,210,109,129,205,205,76,24,12,12,20,38,19,19,53,195,236,236,47,190,95,95,225,53,151,151,162,136,68,68,204,46,23,23,57,147,196,196,87,85,167,167,242,252,126,126,130,122,61,61,71,200,100,100,172,186,93,93,231,50,25,25,43,230,115,115,149,192,96,96,160,25,129,129,152,158,79,79,209,163,220,220,127,68,34,34,102,84,42,42,126,59,144,144,171,11,136,136,131,140,70,70,202,199,238,238,41,107,184,184,211,40,20,20,60,167,222,222,121,188,94,94,226,22,11,11,29,173,219,219,118,219,224,224,59,100,50,50,86,116,58,58,78,20,10,10,30,146,73,73,219,12,6,6,10,72,36,36,108,184,92,92,228,159,194,194,93,189,211,211,110,67,172,172,239,196,98,98,166,57,145,145,168,49,149,149,164,211,228,228,55,242,121,121,139,213,231,231,50,139,200,200,67,110,55,55,89,218,109,109,183,1,141,141,140,177,213,213,100,156,78,78,210,73,169,169,224,216,108,108,180,172,86,86,250,243,244,244,7,207,234,234,37,202,101,101,175,244,122,122,142,71,174,174,233,16,8,8,24,111,186,186,213,240,120,120,136,74,37,37,111,92,46,46,114,56,28,28,36,87,166,166,241,115,180,180,199,151,198,198,81,203,232,232,35,161,221,221,124,232,116,116,156,62,31,31,33,150,75,75,221,97,189,189,220,13,139,139,134,15,138,138,133,224,112,112,144,124,62,62,66,113,181,181,196,204,102,102,170,144,72,72,216,6,3,3,5,247,246,246,1,28,14,14,18,194,97,97,163,106,53,53,95,174,87,87,249,105,185,185,208,23,134,134,145,153,193,193,88,58,29,29,39,39,158,158,185,217,225,225,56,235,248,248,19,43,152,152,179,34,17,17,51,210,105,105,187,169,217,217,112,7,142,142,137,51,148,148,167,45,155,155,182,60,30,30,34,21,135,135,146,201,233,233,32,135,206,206,73,170,85,85,255,80,40,40,120,165,223,223,122,3,140,140,143,89,161,161,248,9,137,137,128,26,13,13,23,101,191,191,218,215,230,230,49,132,66,66,198,208,104,104,184,130,65,65,195,41,153,153,176,90,45,45,119,30,15,15,17,123,176,176,203,168,84,84,252,109,187,187,214,44,22,22,58,56,56,48,8,40,232,224,200,45,44,33,13,38,164,162,134,15,204,195,207,30,220,210,206,51,176,179,131,56,184,176,136,47,172,163,143,32,96,96,64,21,84,81,69,7,196,195,199,4,68,64,68,47,108,99,79,43,104,99,75,27,88,83,75,3,192,195,195,34,96,98,66,51,48,51,3,53,180,177,133,41,40,33,9,32,160,160,128,34,224,226,194,39,164,163,135,19,208,211,195,17,144,145,129,17,16,17,1,6,4,2,6,28,28,16,12,60,188,176,140,54,52,50,6,11,72,67,75,47,236,227,207,8,136,128,136,44,108,96,76,40,168,160,136,23,20,19,7,4,196,192,196,22,20,18,6,52,244,240,196,2,192,194,194,5,68,65,69,33,224,225,193,22,212,210,198,63,60,51,15,61,60,49,13,14,140,130,142,24,152,144,136,40,40,32,8,14,76,66,78,54,244,242,198,62,60,50,14,37,164,161,133,57,248,241,201,13,12,1,13,31,220,211,207,24,216,208,200,43,40,35,11,38,100,98,70,58,120,114,74,39,36,35,7,47,44,35,15,49,240,241,193,50,112,114,66,2,64,66,66,20,212,208,196,1,64,65,65,0,192,192,192,51,112,115,67,39,100,99,71,44,172,160,140,11,136,131,139,55,244,243,199,45,172,161,141,0,128,128,128,31,28,19,15,10,200,194,202,44,44,32,12,42,168,162,138,52,52,48,4,18,208,210,194,11,8,3,11,46,236,226,206,41,232,225,201,29,92,81,77,20,148,144,132,24,24,16,8,56,248,240,200,23,84,83,71,46,172,162,142,8,8,0,8,5,196,193,197,19,16,19,3,13,204,193,205,6,132,130,134,57,184,177,137,63,252,243,207,61,124,113,77,1,192,193,193,49,48,49,1,53,244,241,197,10,136,130,138,42,104,98,74,49,176,177,129,17,208,209,193,32,32,32,0,23,212,211,199,2,0,2,2,34,32,34,2,4,4,0,4,40,104,96,72,49,112,113,65,7,4,3,7,27,216,211,203,29,156,145,141,25,152,145,137,33,96,97,65,62,188,178,142,38,228,226,198,25,88,81,73,29,220,209,205,17,80,81,65,16,144,144,128,28,220,208,204,26,152,146,138,35,160,163,131,43,168,163,139,16,208,208,192,1,128,129,129,15,12,3,15,7,68,67,71,26,24,18,10,35,224,227,195,44,236,224,204,13,140,129,141,63,188,179,143,22,148,146,134,59,120,115,75,28,92,80,76,34,160,162,130,33,160,161,129,35,96,99,67,35,32,35,3,13,76,65,77,8,200,192,200,30,156,146,142,28,156,144,140,58,56,50,10,12,12,0,12,46,44,34,14,58,184,178,138,46,108,98,78,31,156,147,143,26,88,82,74,50,240,242,194,18,144,146,130,51,240,243,195,9,72,65,73,56,120,112,72,12,204,192,204,21,20,17,5,59,248,243,203,48,112,112,64,53,116,113,69,63,124,115,79,53,52,49,5,16,16,16,0,3,0,3,3,36,100,96,68,45,108,97,77,6,196,194,198,52,116,112,68,21,212,209,197,52,180,176,132,42,232,226,202,9,8,1,9,54,116,114,70,25,24,17,9,62,252,242,206,0,64,64,64,18,16,18,2,32,224,224,192,61,188,177,141,5,4,1,5,58,248,242,202,1,0,1,1,48,240,240,192,42,40,34,10,30,92,82,78,41,168,161,137,22,84,82,70,3,64,67,67,5,132,129,133,20,20,16,4,9,136,129,137,27,152,147,139,48,176,176,128,37,228,225,197,8,72,64,72,57,120,113,73,23,148,147,135,60,252,240,204,30,28,18,14,2,128,130,130,33,32,33,1,12,140,128,140,27,24,19,11,31,92,83,79,55,116,115,71,20,84,80,68,50,176,178,130,29,28,17,13,37,36,33,5,15,76,67,79,0,0,0,0,6,68,66,70,45,236,225,205,24,88,80,72,18,80,82,66,43,232,227,203,62,124,114,78,26,216,210,202,9,200,193,201,61,252,241,205,48,48,48,0,21,148,145,133,37,100,97,69,60,60,48,12,54,180,178,134,36,228,224,196,59,184,179,139,60,124,112,76,14,12,2,14,16,80,80,64,57,56,49,9,38,36,34,6,50,48,50,2,4,132,128,132,41,104,97,73,19,144,147,131,55,52,51,7,39,228,227,199,36,36,32,4,36,164,160,132,11,200,195,203,19,80,83,67,10,8,2,10,7,132,131,135,25,216,209,201,12,76,64,76,3,128,131,131,15,140,131,143,14,204,194,206,59,56,51,11,10,72,66,74,55,180,179,135,137,41,168,161,133,5,132,129,198,22,212,210,195,19,208,211,68,20,84,80,13,29,28,17,140,44,172,160,5,37,36,33,77,29,92,81,67,3,64,67,8,24,24,16,14,30,28,18,65,17,80,81,204,60,252,240,202,10,200,194,67,35,96,99,8,40,40,32,68,4,68,64,0,32,32,32,141,29,156,145,192,32,224,224,194,34,224,226,200,8,200,192,7,23,20,19,133,37,164,161,143,15,140,131,3,3,0,3,75,59,120,115,139,59,184,179,3,19,16,19,194,18,208,210,206,46,236,226,64,48,112,112,140,12,140,128,15,63,60,51,136,40,168,160,2,50,48,50,205,29,220,209,198,54,244,242,68,52,116,112,204,44,236,224,133,21,148,145,11,11,8,3,71,23,84,83,76,28,92,80,75,27,88,83,141,61,188,177,1,1,0,1,4,36,36,32,12,28,28,16,67,51,112,115,136,24,152,144,0,16,16,16,204,12,204,192,194,50,240,242,201,25,216,209,12,44,44,32,199,39,228,227,66,50,112,114,131,3,128,131,139,27,152,147,193,17,208,209,134,6,132,130,201,9,200,193,64,32,96,96,64,16,80,80,131,35,160,163,203,43,232,227,13,13,12,1,134,54,180,178,142,30,156,146,79,15,76,67,135,55,180,179,74,26,88,82,198,6,196,194,72,56,120,112,134,38,164,162,2,18,16,18,143,47,172,163,197,21,212,209,65,33,96,97,195,3,192,195,132,52,180,176,65,1,64,65,66,18,80,82,77,61,124,113,141,13,140,129,8,8,8,0,15,31,28,19,137,25,152,145,0,0,0,0,9,25,24,17,4,4,4,0,67,19,80,83,199,55,244,243,193,33,224,225,205,61,252,241,70,54,116,114,15,47,44,35,7,39,36,35,128,48,176,176,139,11,136,131,14,14,12,2,139,43,168,163,130,34,160,162,78,46,108,98,131,19,144,147,77,13,76,65,73,41,104,97,76,60,124,112,9,9,8,1,10,10,8,2,143,63,188,179,207,47,236,227,195,51,240,243,197,5,196,193,135,7,132,131,4,20,20,16,206,62,252,242,68,36,100,96])
.concat([206,30,220,210,14,46,44,34,75,11,72,67,10,26,24,18,6,6,4,2,1,33,32,33,75,43,104,99,70,38,100,98,2,2,0,2,197,53,244,241,130,18,144,146,138,10,136,130,12,12,12,0,131,51,176,179,78,62,124,114,192,16,208,208,74,58,120,114,71,7,68,67,134,22,148,146,197,37,228,225,6,38,36,34,128,0,128,128,141,45,172,161,207,31,220,211,129,33,160,161,0,48,48,48,7,55,52,51,142,46,172,162,6,54,52,50,5,21,20,17,2,34,32,34,8,56,56,48,196,52,244,240,135,39,164,163,69,5,68,65,76,12,76,64,129,1,128,129,201,41,232,225,132,4,132,128,135,23,148,147,5,53,52,49,203,11,200,195,206,14,204,194,12,60,60,48,65,49,112,113,1,17,16,17,199,7,196,195,137,9,136,129,69,53,116,113,203,59,248,243,202,26,216,210,200,56,248,240,132,20,148,144,73,25,88,81,130,2,128,130,196,4,196,192,207,63,252,243,73,9,72,65,9,57,56,49,71,39,100,99,192,0,192,192,207,15,204,195,199,23,212,211,136,56,184,176,15,15,12,3,142,14,140,130,66,2,64,66,3,35,32,35,129,17,144,145,76,44,108,96,203,27,216,211,132,36,164,160,4,52,52,48,193,49,240,241,72,8,72,64,194,2,192,194,79,47,108,99,13,61,60,49,13,45,44,33,64,0,64,64,142,62,188,178,14,62,60,50,140,60,188,176,193,1,192,193,138,42,168,162,138,58,184,178,78,14,76,66,69,21,84,81,11,59,56,51,204,28,220,208,72,40,104,96,79,63,124,115,140,28,156,144,200,24,216,208,74,10,72,66,70,22,84,82,71,55,116,115,128,32,160,160,205,45,236,225,70,6,68,66,133,53,180,177,11,43,40,35,69,37,100,97,202,58,248,242,195,35,224,227,137,57,184,177,129,49,176,177,143,31,156,147,78,30,92,82,201,57,248,241,198,38,228,226,130,50,176,178,1,49,48,49,202,42,232,226,77,45,108,97,79,31,92,83,196,36,228,224,192,48,240,240,205,13,204,193,136,8,136,128,6,22,20,18,10,58,56,50,72,24,88,80,196,20,212,208,66,34,96,98,9,41,40,33,7,7,4,3,3,51,48,51,200,40,232,224,11,27,24,19,5,5,4,1,73,57,120,113,128,16,144,144,74,42,104,98,10,42,40,34,138,26,152,146,48,8,56,56,224,200,40,232,33,13,45,44,162,134,38,164,195,207,15,204,210,206,30,220,179,131,51,176,176,136,56,184,163,143,47,172,96,64,32,96,81,69,21,84,195,199,7,196,64,68,4,68,99,79,47,108,99,75,43,104,83,75,27,88,195,195,3,192,98,66,34,96,51,3,51,48,177,133,53,180,33,9,41,40,160,128,32,160,226,194,34,224,163,135,39,164,211,195,19,208,145,129,17,144,17,1,17,16,2,6,6,4,16,12,28,28,176,140,60,188,50,6,54,52,67,75,11,72,227,207,47,236,128,136,8,136,96,76,44,108,160,136,40,168,19,7,23,20,192,196,4,196,18,6,22,20,240,196,52,244,194,194,2,192,65,69,5,68,225,193,33,224,210,198,22,212,51,15,63,60,49,13,61,60,130,142,14,140,144,136,24,152,32,8,40,40,66,78,14,76,242,198,54,244,50,14,62,60,161,133,37,164,241,201,57,248,1,13,13,12,211,207,31,220,208,200,24,216,35,11,43,40,98,70,38,100,114,74,58,120,35,7,39,36,35,15,47,44,241,193,49,240,114,66,50,112,66,66,2,64,208,196,20,212,65,65,1,64,192,192,0,192,115,67,51,112,99,71,39,100,160,140,44,172,131,139,11,136,243,199,55,244,161,141,45,172,128,128,0,128,19,15,31,28,194,202,10,200,32,12,44,44,162,138,42,168,48,4,52,52,210,194,18,208,3,11,11,8,226,206,46,236,225,201,41,232,81,77,29,92,144,132,20,148,16,8,24,24,240,200,56,248,83,71,23,84,162,142,46,172,0,8,8,8,193,197,5,196,19,3,19,16,193,205,13,204,130,134,6,132,177,137,57,184,243,207,63,252,113,77,61,124,193,193,1,192,49,1,49,48,241,197,53,244,130,138,10,136,98,74,42,104,177,129,49,176,209,193,17,208,32,0,32,32,211,199,23,212,2,2,2,0,34,2,34,32,0,4,4,4,96,72,40,104,113,65,49,112,3,7,7,4,211,203,27,216,145,141,29,156,145,137,25,152,97,65,33,96,178,142,62,188,226,198,38,228,81,73,25,88,209,205,29,220,81,65,17,80,144,128,16,144,208,204,28,220,146,138,26,152,163,131,35,160,163,139,43,168,208,192,16,208,129,129,1,128,3,15,15,12,67,71,7,68,18,10,26,24,227,195,35,224,224,204,44,236,129,141,13,140,179,143,63,188,146,134,22,148,115,75,59,120,80,76,28,92,162,130,34,160,161,129,33,160,99,67,35,96,35,3,35,32,65,77,13,76,192,200,8,200,146,142,30,156,144,140,28,156,50,10,58,56,0,12,12,12,34,14,46,44,178,138,58,184,98,78,46,108,147,143,31,156,82,74,26,88,242,194,50,240,146,130,18,144,243,195,51,240,65,73,9,72,112,72,56,120,192,204,12,204,17,5,21,20,243,203,59,248,112,64,48,112,113,69,53,116,115,79,63,124,49,5,53,52,16,0,16,16,3,3,3,0,96,68,36,100,97,77,45,108,194,198,6,196,112,68,52,116,209,197,21,212,176,132,52,180,226,202,42,232,1,9,9,8,114,70,54,116,17,9,25,24,242,206,62,252,64,64,0,64,18,2,18,16,224,192,32,224,177,141,61,188,1,5,5,4,242,202,58,248,1,1,1,0,240,192,48,240,34,10,42,40,82,78,30,92,161,137,41,168,82,70,22,84,67,67,3,64,129,133,5,132,16,4,20,20,129,137,9,136,147,139,27,152,176,128,48,176,225,197,37,228,64,72,8,72,113,73,57,120,147,135,23,148,240,204,60,252,18,14,30,28,130,130,2,128,33,1,33,32,128,140,12,140,19,11,27,24,83,79,31,92,115,71,55,116,80,68,20,84,178,130,50,176,17,13,29,28,33,5,37,36,67,79,15,76,0,0,0,0,66,70,6,68,225,205,45,236,80,72,24,88,82,66,18,80,227,203,43,232,114,78,62,124,210,202,26,216,193,201,9,200,241,205,61,252,48,0,48,48,145,133,21,148,97,69,37,100,48,12,60,60,178,134,54,180,224,196,36,228,179,139,59,184,112,76,60,124,2,14,14,12,80,64,16,80,49,9,57,56,34,6,38,36,50,2,50,48,128,132,4,132,97,73,41,104,147,131,19,144,51,7,55,52,227,199,39,228,32,4,36,36,160,132,36,164,195,203,11,200,83,67,19,80,2,10,10,8,131,135,7,132,209,201,25,216,64,76,12,76,131,131,3,128,131,143,15,140,194,206,14,204,51,11,59,56,66,74,10,72,179,135,55,180,168,161,137,41,132,129,133,5,212,210,198,22,208,211,195,19,84,80,68,20,28,17,13,29,172,160,140,44,36,33,5,37,92,81,77,29,64,67,67,3,24,16,8,24,28,18,14,30,80,81,65,17,252,240,204,60,200,194,202,10,96,99,67,35,40,32,8,40,68,64,68,4,32,32,0,32,156,145,141,29,224,224,192,32,224,226,194,34,200,192,200,8,20,19,7,23,164,161,133,37,140,131,143,15,0,3,3,3,120,115,75,59,184,179,139,59,16,19,3,19,208,210,194,18,236,226,206,46,112,112,64,48,140,128,140,12,60,51,15,63,168,160,136,40,48,50,2,50,220,209,205,29,244,242,198,54,116,112,68,52,236,224,204,44,148,145,133,21,8,3,11,11,84,83,71,23,92,80,76,28,88,83,75,27,188,177,141,61,0,1,1,1,36,32,4,36,28,16,12,28,112,115,67,51,152,144,136,24,16,16,0,16,204,192,204,12,240,242,194,50,216,209,201,25,44,32,12,44,228,227,199,39,112,114,66,50,128,131,131,3,152,147,139,27,208,209,193,17,132,130,134,6,200,193,201,9,96,96,64,32,80,80,64,16,160,163,131,35,232,227,203,43,12,1,13,13,180,178,134,54,156,146,142,30,76,67,79,15,180,179,135,55,88,82,74,26,196,194,198,6,120,112,72,56,164,162,134,38,16,18,2,18,172,163,143,47,212,209,197,21,96,97,65,33,192,195,195,3,180,176,132,52,64,65,65,1,80,82,66,18,124,113,77,61,140,129,141,13,8,0,8,8,28,19,15,31,152,145,137,25,0,0,0,0,24,17,9,25,4,0,4,4,80,83,67,19,244,243,199,55,224,225,193,33,252,241,205,61,116,114,70,54,44,35,15,47,36,35,7,39,176,176,128,48,136,131,139,11,12,2,14,14,168,163,139,43,160,162,130,34,108,98,78,46,144,147,131,19,76,65,77,13,104,97,73,41,124,112,76,60,8,1,9,9,8,2,10,10,188,179,143,63,236,227,207,47,240,243,195,51,196,193,197,5,132,131,135,7,20,16,4,20,252,242,206,62,100,96,68,36,220,210,206,30,44,34,14,46,72,67,75,11,24,18,10,26,4,2,6,6,32,33,1,33,104,99,75,43,100,98,70,38,0,2,2,2,244,241,197,53,144,146,130,18,136,130,138,10,12,0,12,12,176,179,131,51,124,114,78,62,208,208,192,16,120,114,74,58,68,67,71,7,148,146,134,22,228,225,197,37,36,34,6,38,128,128,128,0,172,161,141,45,220,211,207,31,160,161,129,33,48,48,0,48,52,51,7,55,172,162,142,46,52,50,6,54,20,17,5,21,32,34,2,34,56,48,8,56,244,240,196,52,164,163,135,39,68,65,69,5,76,64,76,12,128,129,129,1,232,225,201,41,132,128,132,4,148,147,135,23,52,49,5,53,200,195,203,11,204,194,206,14,60,48,12,60,112,113,65,49,16,17,1,17,196,195,199,7,136,129,137,9,116,113,69,53,248,243,203,59,216,210,202,26,248,240,200,56,148,144,132,20,88,81,73,25,128,130,130,2,196,192,196,4,252,243,207,63,72,65,73,9,56,49,9,57,100,99,71,39,192,192,192,0,204,195,207,15,212,211,199,23,184,176,136,56,12,3,15,15,140,130,142,14,64,66,66,2,32,35,3,35,144,145,129,17,108,96,76,44,216,211,203,27,164,160,132,36,52,48,4,52,240,241,193,49,72,64,72,8,192,194,194,2,108,99,79,47,60,49,13,61,44,33,13,45,64,64,64,0,188,178,142,62,60,50,14,62,188,176,140,60,192,193,193,1,168,162,138,42,184,178,138,58,76,66,78,14,84,81,69,21,56,51,11,59,220,208,204,28,104,96,72,40,124,115,79,63,156,144,140,28,216,208,200,24,72,66,74,10,84,82,70,22,116,115,71,55,160,160,128,32,236,225,205,45,68,66,70,6,180,177,133,53,40,35,11,43,100,97,69,37,248,242,202,58,224,227,195,35,184,177,137,57,176,177,129,49,156,147,143,31,92,82,78,30,248,241,201,57,228,226,198,38,176,178,130,50,48,49,1,49,232,226,202,42,108,97,77,45,92,83,79,31,228,224,196,36,240,240,192,48,204,193,205,13,136,128,136,8,20,18,6,22,56,50,10,58,88,80,72,24,212,208,196,20,96,98,66,34,40,33,9,41,4,3,7,7,48,51,3,51,232,224,200,40,24,19,11,27,4,1,5,5,120,113,73,57,144,144,128,16,104,98,74,42,40,34,10,42,152,146,138,26,168,61,1,0,0,0,0,0,232,26,1,0,0,0,0,0,216,45,1,0,0,0,0,0,82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125,99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22,185,121,55,158,115,243,110,60,230,230,221,120,204,205,187,241,153,155,119,227,51,55,239,198,103,110,222,141,207,220,188,27,158,185,121,55,60,115,243,110,120,230,230,221,241,204,205,187,227,153,155,119,198,51,55,239,141,103,110,222,27,207,220,188,240,38,1,0,0,0,0,0,144,231,0,0,0,0,0,0,24,216,48,120,192,24,96,24,35,38,70,175,5,35,140,35,198,184,145,249,126,198,63,198,232,251,205,111,19,232,135,232,135,203,19,161,76,135,38,135,184,17,109,98,169,184,218,184,1,9,2,5,8,1,4,1,79,13,158,110,66,79,33,79,54,155,108,238,173,54,216,54,166,255,81,4,89,166,162,166,210,12,185,189,222,210,111,210,245,14,247,6,251,245,243,245,121,150,242,128,239,121,249,121,111,48,222,206,95,111,161,111,145,109,63,239,252,145,126,145,82,248,164,7,170,82,85,82,96,71,192,253,39,96,157,96,188,53,101,118,137,188,202,188,155,55,43,205,172,155,86,155,142,138,1,140,4,142,2,142,163,210,91,21,113,163,182,163,12,108,24,60,96,12,48,12,123,132,246,138,255,123,241,123,53,128,106,225,181,53,212,53,29,245,58,105,232,29,116,29,224,179,221,71,83,224,167,224,215,33,179,172,246,215,123,215,194,156,153,237,94,194,47,194,46,67,92,150,109,46,184,46,75,41,150,122,98,75,49,75,254,93,225,33,163,254,223,254,87,213,174,22,130,87,65,87,21,189,42,65,168,21,84,21,119,232,238,182,159,119,193,119,55,146,110,235,165,55,220,55,229,158,215,86,123,229,179,229,159,19,35,217,140,159,70,159,240,35,253,23,211,240,231,240,74,32,148,127,106,74,53,74,218,68,169,149,158,218,79,218,88,162,176,37,250,88,125,88,201,207,143,202,6,201,3,201,41,124,82,141,85,41,164,41,10,90,20,34,80,10,40,10,177,80,127,79,225,177,254,177,160,201,93,26,105,160,186,160,107,20,214,218,127,107,177,107,133,217,23,171,92,133,46,133,189,60,103,115,129,189,206,189,93,143,186,52,210,93,105,93,16,144,32,80,128,16,64,16,244,7,245,3,243,244,247,244,203,221,139,192,22,203,11,203,62,211,124,198,237,62,248,62,5,45,10,17,40,5,20,5,103,120,206,230,31,103,129,103,228,151,213,83,115,228,183,228,39,2,78,187,37,39,156,39,65,115,130,88,50,65,25,65,139,167,11,157,44,139,22,139,167,246,83,1,81,167,166,167,125,178,250,148,207,125,233,125,149,73,55,251,220,149,110,149,216,86,173,159,142,216,71,216,251,112,235,48,139,251,203,251,238,205,193,113,35,238,159,238,124,187,248,145,199,124,237,124,102,113,204,227,23,102,133,102,221,123,167,142,166,221,83,221,23,175,46,75,184,23,92,23,71,69,142,70,2,71,1,71,158,26,33,220,132,158,66,158,202,212,137,197,30,202,15,202,45,88,90,153,117,45,180,45,191,46,99,121,145,191,198,191,7,63,14,27,56,7,28,7,173,172,71,35,1,173,142,173,90,176,180,47,234,90,117,90,131,239,27,181,108,131,54,131,51,182,102,255,133,51,204,51,99,92,198,242,63,99,145,99,2,18,4,10,16,2,8,2,170,147,73,56,57,170,146,170,113,222,226,168,175,113,217,113,200,198,141,207,14,200,7,200,25,209,50,125,200,25,100,25,73,59,146,112,114,73,57,73,217,95,175,154,134,217,67,217,242,49,249,29,195,242,239,242,227,168,219,72,75,227,171,227,91,185,182,42,226,91,113,91,136,188,13,146,52,136,26,136,154,62,41,200,164,154,82,154,38,11,76,190,45,38,152,38,50,191,100,250,141,50,200,50,176,89,125,74,233,176,250,176,233,242,207,106,27,233,131,233,15,119,30,51,120,15,60,15,213,51,183,166,230,213,115,213,128,244,29,186,116,128,58,128,190,39,97,124,153,190,194,190,205,235,135,222,38,205,19,205,52,137,104,228,189,52,208,52,72,50,144,117,122,72,61,72,255,84,227,36,171,255,219,255,122,141,244,143,247,122,245,122,144,100,61,234,244,144,122,144,95,157,190,62,194,95,97,95,32,61,64,160,29,32,128,32,104,15,208,213,103,104,189,104,26,202,52,114,208,26,104,26,174,183,65,44,25,174,130,174,180,125,117,94,201,180,234,180,84,206,168,25,154,84,77,84,147,127,59,229,236,147,118,147,34,47,68,170,13,34,136,34,100,99,200,233,7,100,141,100,241,42,255,18,219,241,227,241,115,204,230,162,191,115,209,115,18,130,36,90,144,18,72,18,64,122,128,93,58,64,29,64,8,72,16,40,64,8,32,8,195,149,155,232,86,195,43,195,236,223,197,123,51,236,151,236,219,77,171,144,150,219,75,219,161,192,95,31,97,161,190,161,141,145,7,131,28,141,14,141,61,200,122,201,245,61,244,61,151,91,51,241,204,151,102,151,0,0,0,0,0,0,0,0,207,249,131,212,54,207,27,207,43,110,86,135,69,43,172,43,118,225,236,179,151,118,197,118,130,230,25,176,100,130,50,130,214,40,177,169,254,214,127,214,27,195,54,119,216,27,108,27,181,116,119,91,193,181,238,181,175,190,67,41,17,175,134,175,106,29,212,223,119,106,181,106,80,234,160,13,186,80,93,80,69,87,138,76,18,69,9,69,243,56,251,24,203,243,235,243,48,173,96,240,157,48,192,48,239,196,195,116,43,239,155,239,63,218,126,195,229,63,252,63,85,199,170,28,146,85,73,85,162,219,89,16,121,162,178,162,234,233,201,101,3,234,143,234,101,106,202,236,15,101,137,101,186,3,105,104,185,186,210,186,47,74,94,147,101,47,188,47,192,142,157,231,78,192,39,192,222,96,161,129,190,222,95,222,28,252,56,108,224,28,112,28,253,70,231,46,187,253,211,253,77,31,154,100,82,77,41,77,146,118,57,224,228,146,114,146,117,250,234,188,143,117,201,117,6,54,12,30,48,6,24,6,138,174,9,152,36,138,18,138,178,75,121,64,249,178,242,178,230,133,209,89,99,230,191,230,14,126,28,54,112,14,56,14,31,231,62,99,248,31,124,31,98,85,196,247,55,98,149,98,212,58,181,163,238,212,119,212,168,129,77,50,41,168,154,168,150,82,49,244,196,150,98,150,249,98,239,58,155,249,195,249,197,163,151,246,102,197,51,197,37,16,74,177,53,37,148,37,89,171,178,32,242,89,121,89,132,208,21,174,84,132,42,132,114,197,228,167,183,114,213,114,57,236,114,221,213,57,228,57,76,22,152,97,90,76,45,76,94,148,188,59,202,94,101,94,120,159,240,133,231,120,253,120,56,229,112,216,221,56,224,56,140,152,5,134,20,140,10,140,209,23,191,178,198,209,99,209,165,228,87,11,65,165,174,165,226,161,217,77,67,226,175,226,97,78,194,248,47,97,153,97,179,66,123,69,241,179,246,179,33,52,66,165,21,33,132,33,156,8,37,214,148,156,74,156,30,238,60,102,240,30,120,30,67,97,134,82,34,67,17,67,199,177,147,252,118,199,59,199,252,79,229,43,179,252,215,252,4,36,8,20,32,4,16,4,81,227,162,8,178,81,89,81,153,37,47,199,188,153,94,153,109,34,218,196,79,109,169,109,13,101,26,57,104,13,52,13,250,121,233,53,131,250,207,250,223,105,163,132,182,223,91,223,126,169,252,155,215,126,229,126,36,25,72,180,61,36,144,36,59,254,118,215,197,59,236,59,171,154,75,61,49,171,150,171,206,240,129,209,62,206,31,206,17,153,34,85,136,17,68,17,143,131,3,137,12,143,6,143,78,4,156,107,74,78,37,78,183,102,115,81,209,183,230,183,235,224,203,96,11,235,139,235,60,193,120,204,253,60,240,60,129,253,31,191,124,129,62,129,148,64,53,254,212,148,106,148,247,28,243,12,235,247,251,247,185,24,111,103,161,185,222,185,19,139,38,95,152,19,76,19,44,81,88,156,125,44,176,44,211,5,187,184,214,211,107,211,231,140,211,92,107,231,187,231,110,57,220,203,87,110,165,110,196,170,149,243,110,196,55,196,3,27,6,15,24,3,12,3,86,220,172,19,138,86,69,86,68,94,136,73,26,68,13,68,127,160,254,158,223,127,225,127,169,136,79,55,33,169,158,169,42,103,84,130,77,42,168,42,187,10,107,109,177,187,214,187,193,135,159,226,70,193,35,193,83,241,166,2,162,83,81,83,220,114,165,139,174,220,87,220,11,83,22,39,88,11,44,11,157,1,39,211,156,157,78,157,108,43,216,193,71,108,173,108,49,164,98,245,149,49,196,49,116,243,232,185,135,116,205,116,246,21,241,9,227,246,255,246,70,76,140,67,10,70,5,70,172,165,69,38,9,172,138,172,137,181,15,151,60,137,30,137,20,180,40,68,160,20,80,20,225,186,223,66,91,225,163,225,22,166,44,78,176,22,88,22,58,247,116,210,205,58,232,58,105,6,210,208,111,105,185,105,9,65,18,45,72,9,36,9,112,215,224,173,167,112,221,112,182,111,113,84,217,182,226,182,208,30,189,183,206,208,103,208,237,214,199,126,59,237,147,237,204,226,133,219,46,204,23,204,66,104,132,87,42,66,21,66,152,44,45,194,180,152,90,152,164,237,85,14,73,164,170,164,40,117,80,136,93,40,160,40,92,134,184,49,218,92,109,92,248,107,237,63,147,248,199,248,134,194,17,164,68,134,34,134,24,24,216,48,120,192,24,96,35,35,38,70,175,5,35,140,198,198,184,145,249,126,198,63,232,232,251,205,111,19,232,135,135,135,203,19,161,76,135,38,184,184,17,109,98,169,184,218,1,1,9,2,5,8,1,4,79,79,13,158,110,66,79,33,54,54,155,108,238,173,54,216,166,166,255,81,4,89,166,162,210,210,12,185,189,222,210,111,245,245,14,247,6,251,245,243,121,121,150,242,128,239,121,249,111,111,48,222,206,95,111,161,145,145,109,63,239,252,145,126,82,82,248,164,7,170,82,85,96,96,71,192,253,39,96,157,188,188,53,101,118,137,188,202,155,155,55,43,205,172,155,86,142,142,138,1,140,4,142,2,163,163,210,91,21,113,163,182,12,12,108,24,60,96,12,48,123,123,132,246,138,255,123,241,53,53,128,106,225,181,53,212,29,29,245,58,105,232,29,116,224,224,179,221,71,83,224,167,215,215,33,179,172,246,215,123,194,194,156,153,237,94,194,47,46,46,67,92,150,109,46,184,75,75,41,150,122,98,75,49,254,254,93,225,33,163,254,223,87,87,213,174,22,130,87,65,21,21,189,42,65,168,21,84,119,119,232,238,182,159,119,193,55,55,146,110,235,165,55,220,229,229,158,215,86,123,229,179,159,159,19,35,217,140,159,70,240,240,35,253,23,211,240,231,74,74,32,148,127,106,74,53,218,218,68,169,149,158,218,79,88,88,162,176,37,250,88,125,201,201,207,143,202,6,201,3,41,41,124,82,141,85,41,164,10,10,90,20,34,80,10,40,177,177,80,127,79,225,177,254,160,160,201,93,26,105,160,186,107,107,20,214,218,127,107,177,133,133,217,23,171,92,133,46,189,189,60,103,115,129,189,206,93,93,143,186,52,210,93,105,16,16,144,32,80,128,16,64,244,244,7,245,3,243,244,247,203,203,221,139,192,22,203,11,62,62,211,124,198,237,62,248,5,5,45,10,17,40,5,20,103,103,120,206,230,31,103,129,228,228,151,213,83,115,228,183,39,39,2,78,187,37,39,156,65,65,115,130,88,50,65,25,139,139,167,11,157,44,139,22,167,167,246,83,1,81,167,166,125,125,178,250,148,207,125,233,149,149,73,55,251,220,149,110,216,216,86,173,159,142,216,71,251,251,112,235,48,139,251,203,238,238,205,193,113,35,238,159,124,124,187,248,145,199,124,237,102,102,113,204,227,23,102,133,221,221,123,167,142,166,221,83,23,23,175,46,75,184,23,92,71,71,69,142,70,2,71,1,158,158,26,33,220,132,158,66,202,202,212,137,197,30,202,15,45,45,88,90,153,117,45,180,191,191,46,99,121,145,191,198,7,7,63,14,27,56,7,28,173,173,172,71,35,1,173,142,90,90,176,180,47,234,90,117,131,131,239,27,181,108,131,54,51,51,182,102,255,133,51,204,99,99,92,198,242,63,99,145,2,2,18,4,10,16,2,8,170,170,147,73,56,57,170,146,113,113,222,226,168,175,113,217,200,200,198,141,207,14,200,7,25,25,209,50,125,200,25,100,73,73,59,146,112,114,73,57,217,217,95,175,154,134,217,67,242,242,49,249,29,195,242,239,227,227,168,219,72,75,227,171,91,91,185,182,42,226,91,113,136,136,188,13,146,52,136,26,154,154,62,41,200,164,154,82,38,38,11,76,190,45,38,152,50,50,191,100,250,141,50,200,176,176,89,125,74,233,176,250,233,233,242,207,106,27,233,131,15,15,119,30,51,120,15,60,213,213,51,183,166,230,213,115,128,128,244,29,186,116,128,58,190,190,39,97,124,153,190,194,205,205,235,135,222,38,205,19,52,52,137,104,228,189,52,208,72,72,50,144,117,122,72,61,255,255,84,227,36,171,255,219,122,122,141,244,143,247,122,245,144,144,100,61,234,244,144,122,95,95,157,190,62,194,95,97,32,32,61,64,160,29,32,128,104,104,15,208,213,103,104,189,26,26,202,52,114,208,26,104,174,174,183,65,44,25,174,130,180,180,125,117,94,201,180,234,84,84,206,168,25,154,84,77,147,147,127,59,229,236,147,118,34,34,47,68,170,13,34,136,100,100,99,200,233,7,100,141,241,241,42,255,18,219,241,227,115,115,204,230,162,191,115,209,18,18,130,36,90,144,18,72,64,64,122,128,93,58,64,29,8,8,72,16,40,64,8,32,195,195,149,155,232,86,195,43,236,236,223,197,123,51,236,151,219,219,77,171,144,150,219,75,161,161,192,95,31,97,161,190,141,141,145,7,131,28,141,14,61,61,200,122,201,245,61,244,151,151,91,51,241,204,151,102,0,0,0,0,0,0,0,0,207,207,249,131,212,54,207,27,43,43,110,86,135,69,43,172,118,118,225,236,179,151,118,197,130,130,230,25,176,100,130,50,214,214,40,177,169,254,214,127,27,27,195,54,119,216,27,108,181,181,116,119,91,193,181,238,175,175,190,67,41,17,175,134,106,106,29,212,223,119,106,181,80,80,234,160,13,186,80,93,69,69,87,138,76,18,69,9,243,243,56,251,24,203,243,235,48,48,173,96,240,157,48,192,239,239,196,195,116,43,239,155,63,63,218,126,195,229,63,252,85,85,199,170,28,146,85,73,162,162,219,89,16,121,162,178,234,234,233,201,101,3,234,143,101,101,106,202,236,15,101,137,186,186,3,105,104,185,186,210,47,47,74,94,147,101,47,188,192,192,142,157,231,78,192,39,222,222,96,161,129,190,222,95,28,28,252,56,108,224,28,112,253,253,70,231,46,187,253,211,77,77,31,154,100,82,77,41,146,146,118,57,224,228,146,114,117,117,250,234,188,143,117,201,6,6,54,12,30,48,6,24,138,138,174,9,152,36,138,18,178,178,75,121,64,249,178,242,230,230,133,209,89,99,230,191,14,14,126,28,54,112,14,56,31,31,231,62,99,248,31,124,98,98,85,196,247,55,98,149,212,212,58,181,163,238,212,119,168,168,129,77,50,41,168,154,150,150,82,49,244,196,150,98,249,249,98,239,58,155,249,195,197,197,163,151,246,102,197,51,37,37,16,74,177,53,37,148,89,89,171,178,32,242,89,121,132,132,208,21,174,84,132,42,114,114,197,228,167,183,114,213,57,57,236,114,221,213,57,228,76,76,22,152,97,90,76,45,94,94,148,188,59,202,94,101,120,120,159,240,133,231,120,253,56,56,229,112,216,221,56,224,140,140,152,5,134,20,140,10,209,209,23,191,178,198,209,99,165,165,228,87,11,65,165,174,226,226,161,217,77,67,226,175,97,97,78,194,248,47,97,153,179,179,66,123,69,241,179,246,33,33,52,66,165,21,33,132,156,156,8,37,214,148,156,74,30,30,238,60,102,240,30,120,67,67,97,134,82,34,67,17,199,199,177,147,252,118,199,59,252,252,79,229,43,179,252,215,4,4,36,8,20,32,4,16,81,81,227,162,8,178,81,89,153,153,37,47,199,188,153,94,109,109,34,218,196,79,109,169,13,13,101,26,57,104,13,52,250,250,121,233,53,131,250,207,223,223,105,163,132,182,223,91,126,126,169,252,155,215,126,229,36,36,25,72,180,61,36,144,59,59,254,118,215,197,59,236,171,171,154,75,61,49,171,150,206,206,240,129,209,62,206,31,17,17,153,34,85,136,17,68,143,143,131,3,137,12,143,6,78,78,4,156,107,74,78,37,183,183,102,115,81,209,183,230,235,235,224,203,96,11,235,139,60,60,193,120,204,253,60,240,129,129,253,31,191,124,129,62,148,148,64,53,254,212,148,106,247,247,28,243,12,235,247,251,185,185,24,111,103,161,185,222,19,19,139,38,95,152,19,76,44,44,81,88,156,125,44,176,211,211,5,187,184,214,211,107,231,231,140,211,92,107,231,187,110,110,57,220,203,87,110,165,196,196,170,149,243,110,196,55,3,3,27,6,15,24,3,12,86,86,220,172,19,138,86,69,68,68,94,136,73,26,68,13,127,127,160,254,158,223,127,225,169,169,136,79,55,33,169,158,42,42,103,84,130,77,42,168,187,187,10,107,109,177,187,214,193,193,135,159,226,70,193,35,83,83,241,166,2,162,83,81,220,220,114,165,139,174,220,87,11,11,83,22,39,88,11,44,157,157,1,39,211,156,157,78,108,108,43,216,193,71,108,173,49,49,164,98,245,149,49,196,116,116,243,232,185,135,116,205,246,246,21,241,9,227,246,255,70,70,76,140,67,10,70,5,172,172,165,69,38,9,172,138,137,137,181,15,151,60,137,30,20,20,180,40,68,160,20,80,225,225,186,223,66,91,225,163,22,22,166,44,78,176,22,88,58,58,247,116,210,205,58,232,105,105,6,210,208,111,105,185,9,9,65,18,45,72,9,36,112,112,215,224,173,167,112,221,182,182,111,113,84,217,182,226,208,208,30,189,183,206,208,103,237,237,214,199,126,59,237,147,204,204,226,133,219,46,204,23,66,66,104,132,87,42,66,21,152,152,44,45,194,180,152,90,164,164,237,85,14,73,164,170,40,40,117,80,136,93,40,160,92,92,134,184,49,218,92,109,248,248,107,237,63,147,248,199,134,134,194,17,164,68,134,34,96,24,24,216,48,120,192,24,140,35,35,38,70,175,5,35,63,198,198,184,145,249,126,198,135,232,232,251,205,111,19,232,38,135,135,203,19,161,76,135,218,184,184,17,109,98,169,184,4,1,1,9,2,5,8,1,33,79,79,13,158,110,66,79,216,54,54,155,108,238,173,54,162,166,166,255,81,4,89,166,111,210,210,12,185,189,222,210,243,245,245,14,247,6,251,245,249,121,121,150,242,128,239,121,161,111,111,48,222,206,95,111,126,145,145,109,63,239,252,145,85,82,82,248,164,7,170,82,157,96,96,71,192,253,39,96,202,188,188,53,101,118,137,188,86,155,155,55,43,205,172,155,2,142,142,138,1,140,4,142,182,163,163,210,91,21,113,163,48,12,12,108,24,60,96,12,241,123,123,132,246,138,255,123,212,53,53,128,106,225,181,53,116,29,29,245,58,105,232,29,167,224,224,179,221,71,83,224,123,215,215,33,179,172,246,215,47,194,194,156,153,237,94,194,184,46,46,67,92,150,109,46,49,75,75,41,150,122,98,75,223,254,254,93,225,33,163,254,65,87,87,213,174,22,130,87,84,21,21,189,42,65,168,21,193,119,119,232,238,182,159,119,220,55,55,146,110,235,165,55,179,229,229,158,215,86,123,229,70,159,159,19,35,217,140,159,231,240,240,35,253,23,211,240,53,74,74,32,148,127,106,74,79,218,218,68,169,149,158,218,125,88,88,162,176,37,250,88,3,201,201,207,143,202,6,201,164,41,41,124,82,141,85,41,40,10,10,90,20,34,80,10,254,177,177,80,127,79,225,177,186,160,160,201,93,26,105,160,177,107,107,20,214,218,127,107,46,133,133,217,23,171,92,133,206,189,189,60,103,115,129,189,105,93,93,143,186,52,210,93,64,16,16,144,32,80,128,16,247,244,244,7,245,3,243,244,11,203,203,221,139,192,22,203,248,62,62,211,124,198,237,62,20,5,5,45,10,17,40,5,129,103,103,120,206,230,31,103,183,228,228,151,213,83,115,228,156,39,39,2,78,187,37,39,25,65,65,115,130,88,50,65,22,139,139,167,11,157,44,139,166,167,167,246,83,1,81,167,233,125,125,178,250,148,207,125,110,149,149,73,55,251,220,149,71,216,216,86,173,159,142,216,203,251,251,112,235,48,139,251,159,238,238,205,193,113,35,238,237,124,124,187,248,145,199,124,133,102,102,113,204,227,23,102,83,221,221,123,167,142,166,221,92,23,23,175,46,75,184,23,1,71,71,69,142,70,2,71,66,158,158,26,33,220,132,158,15,202,202,212,137,197,30,202,180,45,45,88,90,153,117,45,198,191,191,46,99,121,145,191,28,7,7,63,14,27,56,7,142,173,173,172,71,35,1,173,117,90,90,176,180,47,234,90,54,131,131,239,27,181,108,131,204,51,51,182,102,255,133,51,145,99,99,92,198,242,63,99,8,2,2,18,4,10,16,2,146,170,170,147,73,56,57,170,217,113,113,222,226,168,175,113,7,200,200,198,141,207,14,200,100,25,25,209,50,125,200,25,57,73,73,59,146,112,114,73,67,217,217,95,175,154,134,217,239,242,242,49,249,29,195,242,171,227,227,168,219,72,75,227,113,91,91,185,182,42,226,91,26,136,136,188,13,146,52,136,82,154,154,62,41,200,164,154,152,38,38,11,76,190,45,38,200,50,50,191,100,250,141,50,250,176,176,89,125,74,233,176,131,233,233,242,207,106,27,233,60,15,15,119,30,51,120,15,115,213,213,51,183,166,230,213,58,128,128,244,29,186,116,128,194,190,190,39,97,124,153,190,19,205,205,235,135,222,38,205,208,52,52,137,104,228,189,52,61,72,72,50,144,117,122,72,219,255,255,84,227,36,171,255,245,122,122,141,244,143,247,122,122,144,144,100,61,234,244,144,97,95,95,157,190,62,194,95,128,32,32,61,64,160,29,32,189,104,104,15,208,213,103,104,104,26,26,202,52,114,208,26,130,174,174,183,65,44,25,174,234,180,180,125,117,94,201,180,77,84,84,206,168,25,154,84,118,147,147,127,59,229,236,147,136,34,34,47,68,170,13,34,141,100,100,99,200,233,7,100,227,241,241,42,255,18,219,241,209,115,115,204,230,162,191,115,72,18,18,130,36,90,144,18,29,64,64,122,128,93,58,64,32,8,8,72,16,40,64,8,43,195,195,149,155,232,86,195,151,236,236,223,197,123,51,236,75,219,219,77,171,144,150,219,190,161,161,192,95,31,97,161,14,141,141,145,7,131,28,141,244,61,61,200,122,201,245,61,102,151,151,91,51,241,204,151,0,0,0,0,0,0,0,0,27,207,207,249,131,212,54,207,172,43,43,110,86,135,69,43,197,118,118,225,236,179,151,118,50,130,130,230,25,176,100,130,127,214,214,40,177,169,254,214,108,27,27,195,54,119,216,27,238,181,181,116,119,91,193,181,134,175,175,190,67,41,17,175,181,106,106,29,212,223,119,106,93,80,80,234,160,13,186,80,9,69,69,87,138,76,18,69,235,243,243,56,251,24,203,243,192,48,48,173,96,240,157,48,155,239,239,196,195,116,43,239,252,63,63,218,126,195,229,63,73,85,85,199,170,28,146,85,178,162,162,219,89,16,121,162,143,234,234,233,201,101,3,234,137,101,101,106,202,236,15,101,210,186,186,3,105,104,185,186,188,47,47,74,94,147,101,47,39,192,192,142,157,231,78,192,95,222,222,96,161,129,190,222,112,28,28,252,56,108,224,28,211,253,253,70,231,46,187,253,41,77,77,31,154,100,82,77,114,146,146,118,57,224,228,146,201,117,117,250,234,188,143,117,24,6,6,54,12,30,48,6,18,138,138,174,9,152,36,138,242,178,178,75,121,64,249,178,191,230,230,133,209,89,99,230,56,14,14,126,28,54,112,14,124,31,31,231,62,99,248,31,149,98,98,85,196,247,55,98,119,212,212,58,181,163,238,212,154,168,168,129,77,50,41,168,98,150,150,82,49,244,196,150,195,249,249,98,239,58,155,249,51,197,197,163,151,246,102,197,148,37,37,16,74,177,53,37,121,89,89,171,178,32,242,89,42,132,132,208,21,174,84,132,213,114,114,197,228,167,183,114,228,57,57,236,114,221,213,57,45,76,76,22,152,97,90,76,101,94,94,148,188,59,202,94,253,120,120,159,240,133,231,120,224,56,56,229,112,216,221,56,10,140,140,152,5,134,20,140,99,209,209,23,191,178,198,209,174,165,165,228,87,11,65,165,175,226,226,161,217,77,67,226,153,97,97,78,194,248,47,97,246,179,179,66,123,69,241,179,132,33,33,52,66,165,21,33,74,156,156,8,37,214,148,156,120,30,30,238,60,102,240,30,17,67,67,97,134,82,34,67,59,199,199,177,147,252,118,199,215,252,252,79,229,43,179,252,16,4,4,36,8,20,32,4,89,81,81,227,162,8,178,81,94,153,153,37,47,199,188,153,169,109,109,34,218,196,79,109,52,13,13,101,26,57,104,13,207,250,250,121,233,53,131,250,91,223,223,105,163,132,182,223,229,126,126,169,252,155,215,126,144,36,36,25,72,180,61,36,236,59,59,254,118,215,197,59,150,171,171,154,75,61,49,171,31,206,206,240,129,209,62,206,68,17,17,153,34,85,136,17,6,143,143,131,3,137,12,143,37,78,78,4,156,107,74,78,230,183,183,102,115,81,209,183,139,235,235,224,203,96,11,235,240,60,60,193,120,204,253,60,62,129,129,253,31,191,124,129,106,148,148,64,53,254,212,148,251,247,247,28,243,12,235,247,222,185,185,24,111,103,161,185,76,19,19,139,38,95,152,19,176,44,44,81,88,156,125,44,107,211,211,5,187,184,214,211,187,231,231,140,211,92,107,231,165,110,110,57,220,203,87,110,55,196,196,170,149,243,110,196,12,3,3,27,6,15,24,3,69,86,86,220,172,19,138,86,13,68,68,94,136,73,26,68,225,127,127,160,254,158,223,127,158,169,169,136,79,55,33,169,168,42,42,103,84,130,77,42,214,187,187,10,107,109,177,187,35,193,193,135,159,226,70,193,81,83,83,241,166,2,162,83,87,220,220,114,165,139,174,220,44,11,11,83,22,39,88,11,78,157,157,1,39,211,156,157,173,108,108,43,216,193,71,108,196,49,49,164,98,245,149,49,205,116,116,243,232,185,135,116,255,246,246,21,241,9,227,246,5,70,70,76,140,67,10,70,138,172,172,165,69,38,9,172,30,137,137,181,15,151,60,137,80,20,20,180,40,68,160,20,163,225,225,186,223,66,91,225,88,22,22,166,44,78,176,22,232,58,58,247,116,210,205,58,185,105,105,6,210,208,111,105,36,9,9,65,18,45,72,9,221,112,112,215,224,173,167,112,226,182,182,111,113,84,217,182,103,208,208,30,189,183,206,208,147,237,237,214,199,126,59,237,23,204,204,226,133,219,46,204,21,66,66,104,132,87,42,66,90,152,152,44,45,194,180,152,170,164,164,237,85,14,73,164,160,40,40,117,80,136,93,40,109,92,92,134,184,49,218,92,199,248,248,107,237,63,147,248,34,134,134,194,17,164,68,134,24,96,24,24,216,48,120,192,35,140,35,35,38,70,175,5,198,63,198,198,184,145,249,126,232,135,232,232,251,205,111,19,135,38,135,135,203,19,161,76,184,218,184,184,17,109,98,169,1,4,1,1,9,2,5,8,79,33,79,79,13,158,110,66,54,216,54,54,155,108,238,173,166,162,166,166,255,81,4,89,210,111,210,210,12,185,189,222,245,243,245,245,14,247,6,251,121,249,121,121,150,242,128,239,111,161,111,111,48,222,206,95,145,126,145,145,109,63,239,252,82,85,82,82,248,164,7,170,96,157,96,96,71,192,253,39,188,202,188,188,53,101,118,137,155,86,155,155,55,43,205,172,142,2,142,142,138,1,140,4,163,182,163,163,210,91,21,113,12,48,12,12,108,24,60,96,123,241,123,123,132,246,138,255,53,212,53,53,128,106,225,181,29,116,29,29,245,58,105,232,224,167,224,224,179,221,71,83,215,123,215,215,33,179,172,246,194,47,194,194,156,153,237,94,46,184,46,46,67,92,150,109,75,49,75,75,41,150,122,98,254,223,254,254,93,225,33,163,87,65,87,87,213,174,22,130,21,84,21,21,189,42,65,168,119,193,119,119,232,238,182,159,55,220,55,55,146,110,235,165,229,179,229,229,158,215,86,123,159,70,159,159,19,35,217,140,240,231,240,240,35,253,23,211,74,53,74,74,32,148,127,106,218,79,218,218,68,169,149,158,88,125,88,88,162,176,37,250,201,3,201,201,207,143,202,6,41,164,41,41,124,82,141,85,10,40,10,10,90,20,34,80,177,254,177,177,80,127,79,225,160,186,160,160,201,93,26,105,107,177,107,107,20,214,218,127,133,46,133,133,217,23,171,92,189,206,189,189,60,103,115,129,93,105,93,93,143,186,52,210,16,64,16,16,144,32,80,128,244,247,244,244,7,245,3,243,203,11,203,203,221,139,192,22,62,248,62,62,211,124,198,237,5,20,5,5,45,10,17,40,103,129,103,103,120,206,230,31,228,183,228,228,151,213,83,115,39,156,39,39,2,78,187,37,65,25,65,65,115,130,88,50,139,22,139,139,167,11,157,44,167,166,167,167,246,83,1,81,125,233,125,125,178,250,148,207,149,110,149,149,73,55,251,220,216,71,216,216,86,173,159,142,251,203,251,251,112,235,48,139,238,159,238,238,205,193,113,35,124,237,124,124,187,248,145,199,102,133,102,102,113,204,227,23,221,83,221,221,123,167,142,166,23,92,23,23,175,46,75,184,71,1,71,71,69,142,70,2,158,66,158,158,26,33,220,132,202,15,202,202,212,137,197,30,45,180,45,45,88,90,153,117,191,198,191,191,46,99,121,145,7,28,7,7,63,14,27,56,173,142,173,173,172,71,35,1,90,117,90,90,176,180,47,234,131,54,131,131,239,27,181,108,51,204,51,51,182,102,255,133,99,145,99,99,92,198,242,63,2,8,2,2,18,4,10,16,170,146,170,170,147,73,56,57,113,217,113,113,222,226,168,175,200,7,200,200,198,141,207,14,25,100,25,25,209,50,125,200,73,57,73,73,59,146,112,114,217,67,217,217,95,175,154,134,242,239,242,242,49,249,29,195,227,171,227,227,168,219,72,75,91,113,91,91,185,182,42,226,136,26,136,136,188,13,146,52,154,82,154,154,62,41,200,164,38,152,38,38,11,76,190,45,50,200,50,50,191,100,250,141,176,250,176,176,89,125,74,233,233,131,233,233,242,207,106,27,15,60,15,15,119,30,51,120,213,115,213,213,51,183,166,230,128,58,128,128,244,29,186,116,190,194,190,190,39,97,124,153,205,19,205,205,235,135,222,38,52,208,52,52,137,104,228,189,72,61,72,72,50,144,117,122,255,219,255,255,84,227,36,171,122,245,122,122,141,244,143,247,144,122,144,144,100,61,234,244,95,97,95,95,157,190,62,194,32,128,32,32,61,64,160,29,104,189,104,104,15,208,213,103,26,104,26,26,202,52,114,208])
.concat([174,130,174,174,183,65,44,25,180,234,180,180,125,117,94,201,84,77,84,84,206,168,25,154,147,118,147,147,127,59,229,236,34,136,34,34,47,68,170,13,100,141,100,100,99,200,233,7,241,227,241,241,42,255,18,219,115,209,115,115,204,230,162,191,18,72,18,18,130,36,90,144,64,29,64,64,122,128,93,58,8,32,8,8,72,16,40,64,195,43,195,195,149,155,232,86,236,151,236,236,223,197,123,51,219,75,219,219,77,171,144,150,161,190,161,161,192,95,31,97,141,14,141,141,145,7,131,28,61,244,61,61,200,122,201,245,151,102,151,151,91,51,241,204,0,0,0,0,0,0,0,0,207,27,207,207,249,131,212,54,43,172,43,43,110,86,135,69,118,197,118,118,225,236,179,151,130,50,130,130,230,25,176,100,214,127,214,214,40,177,169,254,27,108,27,27,195,54,119,216,181,238,181,181,116,119,91,193,175,134,175,175,190,67,41,17,106,181,106,106,29,212,223,119,80,93,80,80,234,160,13,186,69,9,69,69,87,138,76,18,243,235,243,243,56,251,24,203,48,192,48,48,173,96,240,157,239,155,239,239,196,195,116,43,63,252,63,63,218,126,195,229,85,73,85,85,199,170,28,146,162,178,162,162,219,89,16,121,234,143,234,234,233,201,101,3,101,137,101,101,106,202,236,15,186,210,186,186,3,105,104,185,47,188,47,47,74,94,147,101,192,39,192,192,142,157,231,78,222,95,222,222,96,161,129,190,28,112,28,28,252,56,108,224,253,211,253,253,70,231,46,187,77,41,77,77,31,154,100,82,146,114,146,146,118,57,224,228,117,201,117,117,250,234,188,143,6,24,6,6,54,12,30,48,138,18,138,138,174,9,152,36,178,242,178,178,75,121,64,249,230,191,230,230,133,209,89,99,14,56,14,14,126,28,54,112,31,124,31,31,231,62,99,248,98,149,98,98,85,196,247,55,212,119,212,212,58,181,163,238,168,154,168,168,129,77,50,41,150,98,150,150,82,49,244,196,249,195,249,249,98,239,58,155,197,51,197,197,163,151,246,102,37,148,37,37,16,74,177,53,89,121,89,89,171,178,32,242,132,42,132,132,208,21,174,84,114,213,114,114,197,228,167,183,57,228,57,57,236,114,221,213,76,45,76,76,22,152,97,90,94,101,94,94,148,188,59,202,120,253,120,120,159,240,133,231,56,224,56,56,229,112,216,221,140,10,140,140,152,5,134,20,209,99,209,209,23,191,178,198,165,174,165,165,228,87,11,65,226,175,226,226,161,217,77,67,97,153,97,97,78,194,248,47,179,246,179,179,66,123,69,241,33,132,33,33,52,66,165,21,156,74,156,156,8,37,214,148,30,120,30,30,238,60,102,240,67,17,67,67,97,134,82,34,199,59,199,199,177,147,252,118,252,215,252,252,79,229,43,179,4,16,4,4,36,8,20,32,81,89,81,81,227,162,8,178,153,94,153,153,37,47,199,188,109,169,109,109,34,218,196,79,13,52,13,13,101,26,57,104,250,207,250,250,121,233,53,131,223,91,223,223,105,163,132,182,126,229,126,126,169,252,155,215,36,144,36,36,25,72,180,61,59,236,59,59,254,118,215,197,171,150,171,171,154,75,61,49,206,31,206,206,240,129,209,62,17,68,17,17,153,34,85,136,143,6,143,143,131,3,137,12,78,37,78,78,4,156,107,74,183,230,183,183,102,115,81,209,235,139,235,235,224,203,96,11,60,240,60,60,193,120,204,253,129,62,129,129,253,31,191,124,148,106,148,148,64,53,254,212,247,251,247,247,28,243,12,235,185,222,185,185,24,111,103,161,19,76,19,19,139,38,95,152,44,176,44,44,81,88,156,125,211,107,211,211,5,187,184,214,231,187,231,231,140,211,92,107,110,165,110,110,57,220,203,87,196,55,196,196,170,149,243,110,3,12,3,3,27,6,15,24,86,69,86,86,220,172,19,138,68,13,68,68,94,136,73,26,127,225,127,127,160,254,158,223,169,158,169,169,136,79,55,33,42,168,42,42,103,84,130,77,187,214,187,187,10,107,109,177,193,35,193,193,135,159,226,70,83,81,83,83,241,166,2,162,220,87,220,220,114,165,139,174,11,44,11,11,83,22,39,88,157,78,157,157,1,39,211,156,108,173,108,108,43,216,193,71,49,196,49,49,164,98,245,149,116,205,116,116,243,232,185,135,246,255,246,246,21,241,9,227,70,5,70,70,76,140,67,10,172,138,172,172,165,69,38,9,137,30,137,137,181,15,151,60,20,80,20,20,180,40,68,160,225,163,225,225,186,223,66,91,22,88,22,22,166,44,78,176,58,232,58,58,247,116,210,205,105,185,105,105,6,210,208,111,9,36,9,9,65,18,45,72,112,221,112,112,215,224,173,167,182,226,182,182,111,113,84,217,208,103,208,208,30,189,183,206,237,147,237,237,214,199,126,59,204,23,204,204,226,133,219,46,66,21,66,66,104,132,87,42,152,90,152,152,44,45,194,180,164,170,164,164,237,85,14,73,40,160,40,40,117,80,136,93,92,109,92,92,134,184,49,218,248,199,248,248,107,237,63,147,134,34,134,134,194,17,164,68,192,24,96,24,24,216,48,120,5,35,140,35,35,38,70,175,126,198,63,198,198,184,145,249,19,232,135,232,232,251,205,111,76,135,38,135,135,203,19,161,169,184,218,184,184,17,109,98,8,1,4,1,1,9,2,5,66,79,33,79,79,13,158,110,173,54,216,54,54,155,108,238,89,166,162,166,166,255,81,4,222,210,111,210,210,12,185,189,251,245,243,245,245,14,247,6,239,121,249,121,121,150,242,128,95,111,161,111,111,48,222,206,252,145,126,145,145,109,63,239,170,82,85,82,82,248,164,7,39,96,157,96,96,71,192,253,137,188,202,188,188,53,101,118,172,155,86,155,155,55,43,205,4,142,2,142,142,138,1,140,113,163,182,163,163,210,91,21,96,12,48,12,12,108,24,60,255,123,241,123,123,132,246,138,181,53,212,53,53,128,106,225,232,29,116,29,29,245,58,105,83,224,167,224,224,179,221,71,246,215,123,215,215,33,179,172,94,194,47,194,194,156,153,237,109,46,184,46,46,67,92,150,98,75,49,75,75,41,150,122,163,254,223,254,254,93,225,33,130,87,65,87,87,213,174,22,168,21,84,21,21,189,42,65,159,119,193,119,119,232,238,182,165,55,220,55,55,146,110,235,123,229,179,229,229,158,215,86,140,159,70,159,159,19,35,217,211,240,231,240,240,35,253,23,106,74,53,74,74,32,148,127,158,218,79,218,218,68,169,149,250,88,125,88,88,162,176,37,6,201,3,201,201,207,143,202,85,41,164,41,41,124,82,141,80,10,40,10,10,90,20,34,225,177,254,177,177,80,127,79,105,160,186,160,160,201,93,26,127,107,177,107,107,20,214,218,92,133,46,133,133,217,23,171,129,189,206,189,189,60,103,115,210,93,105,93,93,143,186,52,128,16,64,16,16,144,32,80,243,244,247,244,244,7,245,3,22,203,11,203,203,221,139,192,237,62,248,62,62,211,124,198,40,5,20,5,5,45,10,17,31,103,129,103,103,120,206,230,115,228,183,228,228,151,213,83,37,39,156,39,39,2,78,187,50,65,25,65,65,115,130,88,44,139,22,139,139,167,11,157,81,167,166,167,167,246,83,1,207,125,233,125,125,178,250,148,220,149,110,149,149,73,55,251,142,216,71,216,216,86,173,159,139,251,203,251,251,112,235,48,35,238,159,238,238,205,193,113,199,124,237,124,124,187,248,145,23,102,133,102,102,113,204,227,166,221,83,221,221,123,167,142,184,23,92,23,23,175,46,75,2,71,1,71,71,69,142,70,132,158,66,158,158,26,33,220,30,202,15,202,202,212,137,197,117,45,180,45,45,88,90,153,145,191,198,191,191,46,99,121,56,7,28,7,7,63,14,27,1,173,142,173,173,172,71,35,234,90,117,90,90,176,180,47,108,131,54,131,131,239,27,181,133,51,204,51,51,182,102,255,63,99,145,99,99,92,198,242,16,2,8,2,2,18,4,10,57,170,146,170,170,147,73,56,175,113,217,113,113,222,226,168,14,200,7,200,200,198,141,207,200,25,100,25,25,209,50,125,114,73,57,73,73,59,146,112,134,217,67,217,217,95,175,154,195,242,239,242,242,49,249,29,75,227,171,227,227,168,219,72,226,91,113,91,91,185,182,42,52,136,26,136,136,188,13,146,164,154,82,154,154,62,41,200,45,38,152,38,38,11,76,190,141,50,200,50,50,191,100,250,233,176,250,176,176,89,125,74,27,233,131,233,233,242,207,106,120,15,60,15,15,119,30,51,230,213,115,213,213,51,183,166,116,128,58,128,128,244,29,186,153,190,194,190,190,39,97,124,38,205,19,205,205,235,135,222,189,52,208,52,52,137,104,228,122,72,61,72,72,50,144,117,171,255,219,255,255,84,227,36,247,122,245,122,122,141,244,143,244,144,122,144,144,100,61,234,194,95,97,95,95,157,190,62,29,32,128,32,32,61,64,160,103,104,189,104,104,15,208,213,208,26,104,26,26,202,52,114,25,174,130,174,174,183,65,44,201,180,234,180,180,125,117,94,154,84,77,84,84,206,168,25,236,147,118,147,147,127,59,229,13,34,136,34,34,47,68,170,7,100,141,100,100,99,200,233,219,241,227,241,241,42,255,18,191,115,209,115,115,204,230,162,144,18,72,18,18,130,36,90,58,64,29,64,64,122,128,93,64,8,32,8,8,72,16,40,86,195,43,195,195,149,155,232,51,236,151,236,236,223,197,123,150,219,75,219,219,77,171,144,97,161,190,161,161,192,95,31,28,141,14,141,141,145,7,131,245,61,244,61,61,200,122,201,204,151,102,151,151,91,51,241,0,0,0,0,0,0,0,0,54,207,27,207,207,249,131,212,69,43,172,43,43,110,86,135,151,118,197,118,118,225,236,179,100,130,50,130,130,230,25,176,254,214,127,214,214,40,177,169,216,27,108,27,27,195,54,119,193,181,238,181,181,116,119,91,17,175,134,175,175,190,67,41,119,106,181,106,106,29,212,223,186,80,93,80,80,234,160,13,18,69,9,69,69,87,138,76,203,243,235,243,243,56,251,24,157,48,192,48,48,173,96,240,43,239,155,239,239,196,195,116,229,63,252,63,63,218,126,195,146,85,73,85,85,199,170,28,121,162,178,162,162,219,89,16,3,234,143,234,234,233,201,101,15,101,137,101,101,106,202,236,185,186,210,186,186,3,105,104,101,47,188,47,47,74,94,147,78,192,39,192,192,142,157,231,190,222,95,222,222,96,161,129,224,28,112,28,28,252,56,108,187,253,211,253,253,70,231,46,82,77,41,77,77,31,154,100,228,146,114,146,146,118,57,224,143,117,201,117,117,250,234,188,48,6,24,6,6,54,12,30,36,138,18,138,138,174,9,152,249,178,242,178,178,75,121,64,99,230,191,230,230,133,209,89,112,14,56,14,14,126,28,54,248,31,124,31,31,231,62,99,55,98,149,98,98,85,196,247,238,212,119,212,212,58,181,163,41,168,154,168,168,129,77,50,196,150,98,150,150,82,49,244,155,249,195,249,249,98,239,58,102,197,51,197,197,163,151,246,53,37,148,37,37,16,74,177,242,89,121,89,89,171,178,32,84,132,42,132,132,208,21,174,183,114,213,114,114,197,228,167,213,57,228,57,57,236,114,221,90,76,45,76,76,22,152,97,202,94,101,94,94,148,188,59,231,120,253,120,120,159,240,133,221,56,224,56,56,229,112,216,20,140,10,140,140,152,5,134,198,209,99,209,209,23,191,178,65,165,174,165,165,228,87,11,67,226,175,226,226,161,217,77,47,97,153,97,97,78,194,248,241,179,246,179,179,66,123,69,21,33,132,33,33,52,66,165,148,156,74,156,156,8,37,214,240,30,120,30,30,238,60,102,34,67,17,67,67,97,134,82,118,199,59,199,199,177,147,252,179,252,215,252,252,79,229,43,32,4,16,4,4,36,8,20,178,81,89,81,81,227,162,8,188,153,94,153,153,37,47,199,79,109,169,109,109,34,218,196,104,13,52,13,13,101,26,57,131,250,207,250,250,121,233,53,182,223,91,223,223,105,163,132,215,126,229,126,126,169,252,155,61,36,144,36,36,25,72,180,197,59,236,59,59,254,118,215,49,171,150,171,171,154,75,61,62,206,31,206,206,240,129,209,136,17,68,17,17,153,34,85,12,143,6,143,143,131,3,137,74,78,37,78,78,4,156,107,209,183,230,183,183,102,115,81,11,235,139,235,235,224,203,96,253,60,240,60,60,193,120,204,124,129,62,129,129,253,31,191,212,148,106,148,148,64,53,254,235,247,251,247,247,28,243,12,161,185,222,185,185,24,111,103,152,19,76,19,19,139,38,95,125,44,176,44,44,81,88,156,214,211,107,211,211,5,187,184,107,231,187,231,231,140,211,92,87,110,165,110,110,57,220,203,110,196,55,196,196,170,149,243,24,3,12,3,3,27,6,15,138,86,69,86,86,220,172,19,26,68,13,68,68,94,136,73,223,127,225,127,127,160,254,158,33,169,158,169,169,136,79,55,77,42,168,42,42,103,84,130,177,187,214,187,187,10,107,109,70,193,35,193,193,135,159,226,162,83,81,83,83,241,166,2,174,220,87,220,220,114,165,139,88,11,44,11,11,83,22,39,156,157,78,157,157,1,39,211,71,108,173,108,108,43,216,193,149,49,196,49,49,164,98,245,135,116,205,116,116,243,232,185,227,246,255,246,246,21,241,9,10,70,5,70,70,76,140,67,9,172,138,172,172,165,69,38,60,137,30,137,137,181,15,151,160,20,80,20,20,180,40,68,91,225,163,225,225,186,223,66,176,22,88,22,22,166,44,78,205,58,232,58,58,247,116,210,111,105,185,105,105,6,210,208,72,9,36,9,9,65,18,45,167,112,221,112,112,215,224,173,217,182,226,182,182,111,113,84,206,208,103,208,208,30,189,183,59,237,147,237,237,214,199,126,46,204,23,204,204,226,133,219,42,66,21,66,66,104,132,87,180,152,90,152,152,44,45,194,73,164,170,164,164,237,85,14,93,40,160,40,40,117,80,136,218,92,109,92,92,134,184,49,147,248,199,248,248,107,237,63,68,134,34,134,134,194,17,164,120,192,24,96,24,24,216,48,175,5,35,140,35,35,38,70,249,126,198,63,198,198,184,145,111,19,232,135,232,232,251,205,161,76,135,38,135,135,203,19,98,169,184,218,184,184,17,109,5,8,1,4,1,1,9,2,110,66,79,33,79,79,13,158,238,173,54,216,54,54,155,108,4,89,166,162,166,166,255,81,189,222,210,111,210,210,12,185,6,251,245,243,245,245,14,247,128,239,121,249,121,121,150,242,206,95,111,161,111,111,48,222,239,252,145,126,145,145,109,63,7,170,82,85,82,82,248,164,253,39,96,157,96,96,71,192,118,137,188,202,188,188,53,101,205,172,155,86,155,155,55,43,140,4,142,2,142,142,138,1,21,113,163,182,163,163,210,91,60,96,12,48,12,12,108,24,138,255,123,241,123,123,132,246,225,181,53,212,53,53,128,106,105,232,29,116,29,29,245,58,71,83,224,167,224,224,179,221,172,246,215,123,215,215,33,179,237,94,194,47,194,194,156,153,150,109,46,184,46,46,67,92,122,98,75,49,75,75,41,150,33,163,254,223,254,254,93,225,22,130,87,65,87,87,213,174,65,168,21,84,21,21,189,42,182,159,119,193,119,119,232,238,235,165,55,220,55,55,146,110,86,123,229,179,229,229,158,215,217,140,159,70,159,159,19,35,23,211,240,231,240,240,35,253,127,106,74,53,74,74,32,148,149,158,218,79,218,218,68,169,37,250,88,125,88,88,162,176,202,6,201,3,201,201,207,143,141,85,41,164,41,41,124,82,34,80,10,40,10,10,90,20,79,225,177,254,177,177,80,127,26,105,160,186,160,160,201,93,218,127,107,177,107,107,20,214,171,92,133,46,133,133,217,23,115,129,189,206,189,189,60,103,52,210,93,105,93,93,143,186,80,128,16,64,16,16,144,32,3,243,244,247,244,244,7,245,192,22,203,11,203,203,221,139,198,237,62,248,62,62,211,124,17,40,5,20,5,5,45,10,230,31,103,129,103,103,120,206,83,115,228,183,228,228,151,213,187,37,39,156,39,39,2,78,88,50,65,25,65,65,115,130,157,44,139,22,139,139,167,11,1,81,167,166,167,167,246,83,148,207,125,233,125,125,178,250,251,220,149,110,149,149,73,55,159,142,216,71,216,216,86,173,48,139,251,203,251,251,112,235,113,35,238,159,238,238,205,193,145,199,124,237,124,124,187,248,227,23,102,133,102,102,113,204,142,166,221,83,221,221,123,167,75,184,23,92,23,23,175,46,70,2,71,1,71,71,69,142,220,132,158,66,158,158,26,33,197,30,202,15,202,202,212,137,153,117,45,180,45,45,88,90,121,145,191,198,191,191,46,99,27,56,7,28,7,7,63,14,35,1,173,142,173,173,172,71,47,234,90,117,90,90,176,180,181,108,131,54,131,131,239,27,255,133,51,204,51,51,182,102,242,63,99,145,99,99,92,198,10,16,2,8,2,2,18,4,56,57,170,146,170,170,147,73,168,175,113,217,113,113,222,226,207,14,200,7,200,200,198,141,125,200,25,100,25,25,209,50,112,114,73,57,73,73,59,146,154,134,217,67,217,217,95,175,29,195,242,239,242,242,49,249,72,75,227,171,227,227,168,219,42,226,91,113,91,91,185,182,146,52,136,26,136,136,188,13,200,164,154,82,154,154,62,41,190,45,38,152,38,38,11,76,250,141,50,200,50,50,191,100,74,233,176,250,176,176,89,125,106,27,233,131,233,233,242,207,51,120,15,60,15,15,119,30,166,230,213,115,213,213,51,183,186,116,128,58,128,128,244,29,124,153,190,194,190,190,39,97,222,38,205,19,205,205,235,135,228,189,52,208,52,52,137,104,117,122,72,61,72,72,50,144,36,171,255,219,255,255,84,227,143,247,122,245,122,122,141,244,234,244,144,122,144,144,100,61,62,194,95,97,95,95,157,190,160,29,32,128,32,32,61,64,213,103,104,189,104,104,15,208,114,208,26,104,26,26,202,52,44,25,174,130,174,174,183,65,94,201,180,234,180,180,125,117,25,154,84,77,84,84,206,168,229,236,147,118,147,147,127,59,170,13,34,136,34,34,47,68,233,7,100,141,100,100,99,200,18,219,241,227,241,241,42,255,162,191,115,209,115,115,204,230,90,144,18,72,18,18,130,36,93,58,64,29,64,64,122,128,40,64,8,32,8,8,72,16,232,86,195,43,195,195,149,155,123,51,236,151,236,236,223,197,144,150,219,75,219,219,77,171,31,97,161,190,161,161,192,95,131,28,141,14,141,141,145,7,201,245,61,244,61,61,200,122,241,204,151,102,151,151,91,51,0,0,0,0,0,0,0,0,212,54,207,27,207,207,249,131,135,69,43,172,43,43,110,86,179,151,118,197,118,118,225,236,176,100,130,50,130,130,230,25,169,254,214,127,214,214,40,177,119,216,27,108,27,27,195,54,91,193,181,238,181,181,116,119,41,17,175,134,175,175,190,67,223,119,106,181,106,106,29,212,13,186,80,93,80,80,234,160,76,18,69,9,69,69,87,138,24,203,243,235,243,243,56,251,240,157,48,192,48,48,173,96,116,43,239,155,239,239,196,195,195,229,63,252,63,63,218,126,28,146,85,73,85,85,199,170,16,121,162,178,162,162,219,89,101,3,234,143,234,234,233,201,236,15,101,137,101,101,106,202,104,185,186,210,186,186,3,105,147,101,47,188,47,47,74,94,231,78,192,39,192,192,142,157,129,190,222,95,222,222,96,161,108,224,28,112,28,28,252,56,46,187,253,211,253,253,70,231,100,82,77,41,77,77,31,154,224,228,146,114,146,146,118,57,188,143,117,201,117,117,250,234,30,48,6,24,6,6,54,12,152,36,138,18,138,138,174,9,64,249,178,242,178,178,75,121,89,99,230,191,230,230,133,209,54,112,14,56,14,14,126,28,99,248,31,124,31,31,231,62,247,55,98,149,98,98,85,196,163,238,212,119,212,212,58,181,50,41,168,154,168,168,129,77,244,196,150,98,150,150,82,49,58,155,249,195,249,249,98,239,246,102,197,51,197,197,163,151,177,53,37,148,37,37,16,74,32,242,89,121,89,89,171,178,174,84,132,42,132,132,208,21,167,183,114,213,114,114,197,228,221,213,57,228,57,57,236,114,97,90,76,45,76,76,22,152,59,202,94,101,94,94,148,188,133,231,120,253,120,120,159,240,216,221,56,224,56,56,229,112,134,20,140,10,140,140,152,5,178,198,209,99,209,209,23,191,11,65,165,174,165,165,228,87,77,67,226,175,226,226,161,217,248,47,97,153,97,97,78,194,69,241,179,246,179,179,66,123,165,21,33,132,33,33,52,66,214,148,156,74,156,156,8,37,102,240,30,120,30,30,238,60,82,34,67,17,67,67,97,134,252,118,199,59,199,199,177,147,43,179,252,215,252,252,79,229,20,32,4,16,4,4,36,8,8,178,81,89,81,81,227,162,199,188,153,94,153,153,37,47,196,79,109,169,109,109,34,218,57,104,13,52,13,13,101,26,53,131,250,207,250,250,121,233,132,182,223,91,223,223,105,163,155,215,126,229,126,126,169,252,180,61,36,144,36,36,25,72,215,197,59,236,59,59,254,118,61,49,171,150,171,171,154,75,209,62,206,31,206,206,240,129,85,136,17,68,17,17,153,34,137,12,143,6,143,143,131,3,107,74,78,37,78,78,4,156,81,209,183,230,183,183,102,115,96,11,235,139,235,235,224,203,204,253,60,240,60,60,193,120,191,124,129,62,129,129,253,31,254,212,148,106,148,148,64,53,12,235,247,251,247,247,28,243,103,161,185,222,185,185,24,111,95,152,19,76,19,19,139,38,156,125,44,176,44,44,81,88,184,214,211,107,211,211,5,187,92,107,231,187,231,231,140,211,203,87,110,165,110,110,57,220,243,110,196,55,196,196,170,149,15,24,3,12,3,3,27,6,19,138,86,69,86,86,220,172,73,26,68,13,68,68,94,136,158,223,127,225,127,127,160,254,55,33,169,158,169,169,136,79,130,77,42,168,42,42,103,84,109,177,187,214,187,187,10,107,226,70,193,35,193,193,135,159,2,162,83,81,83,83,241,166,139,174,220,87,220,220,114,165,39,88,11,44,11,11,83,22,211,156,157,78,157,157,1,39,193,71,108,173,108,108,43,216,245,149,49,196,49,49,164,98,185,135,116,205,116,116,243,232,9,227,246,255,246,246,21,241,67,10,70,5,70,70,76,140,38,9,172,138,172,172,165,69,151,60,137,30,137,137,181,15,68,160,20,80,20,20,180,40,66,91,225,163,225,225,186,223,78,176,22,88,22,22,166,44,210,205,58,232,58,58,247,116,208,111,105,185,105,105,6,210,45,72,9,36,9,9,65,18,173,167,112,221,112,112,215,224,84,217,182,226,182,182,111,113,183,206,208,103,208,208,30,189,126,59,237,147,237,237,214,199,219,46,204,23,204,204,226,133,87,42,66,21,66,66,104,132,194,180,152,90,152,152,44,45,14,73,164,170,164,164,237,85,136,93,40,160,40,40,117,80,49,218,92,109,92,92,134,184,63,147,248,199,248,248,107,237,164,68,134,34,134,134,194,17,48,120,192,24,96,24,24,216,70,175,5,35,140,35,35,38,145,249,126,198,63,198,198,184,205,111,19,232,135,232,232,251,19,161,76,135,38,135,135,203,109,98,169,184,218,184,184,17,2,5,8,1,4,1,1,9,158,110,66,79,33,79,79,13,108,238,173,54,216,54,54,155,81,4,89,166,162,166,166,255,185,189,222,210,111,210,210,12,247,6,251,245,243,245,245,14,242,128,239,121,249,121,121,150,222,206,95,111,161,111,111,48,63,239,252,145,126,145,145,109,164,7,170,82,85,82,82,248,192,253,39,96,157,96,96,71,101,118,137,188,202,188,188,53,43,205,172,155,86,155,155,55,1,140,4,142,2,142,142,138,91,21,113,163,182,163,163,210,24,60,96,12,48,12,12,108,246,138,255,123,241,123,123,132,106,225,181,53,212,53,53,128,58,105,232,29,116,29,29,245,221,71,83,224,167,224,224,179,179,172,246,215,123,215,215,33,153,237,94,194,47,194,194,156,92,150,109,46,184,46,46,67,150,122,98,75,49,75,75,41,225,33,163,254,223,254,254,93,174,22,130,87,65,87,87,213,42,65,168,21,84,21,21,189,238,182,159,119,193,119,119,232,110,235,165,55,220,55,55,146,215,86,123,229,179,229,229,158,35,217,140,159,70,159,159,19,253,23,211,240,231,240,240,35,148,127,106,74,53,74,74,32,169,149,158,218,79,218,218,68,176,37,250,88,125,88,88,162,143,202,6,201,3,201,201,207,82,141,85,41,164,41,41,124,20,34,80,10,40,10,10,90,127,79,225,177,254,177,177,80,93,26,105,160,186,160,160,201,214,218,127,107,177,107,107,20,23,171,92,133,46,133,133,217,103,115,129,189,206,189,189,60,186,52,210,93,105,93,93,143,32,80,128,16,64,16,16,144,245,3,243,244,247,244,244,7,139,192,22,203,11,203,203,221,124,198,237,62,248,62,62,211,10,17,40,5,20,5,5,45,206,230,31,103,129,103,103,120,213,83,115,228,183,228,228,151,78,187,37,39,156,39,39,2,130,88,50,65,25,65,65,115,11,157,44,139,22,139,139,167,83,1,81,167,166,167,167,246,250,148,207,125,233,125,125,178,55,251,220,149,110,149,149,73,173,159,142,216,71,216,216,86,235,48,139,251,203,251,251,112,193,113,35,238,159,238,238,205,248,145,199,124,237,124,124,187,204,227,23,102,133,102,102,113,167,142,166,221,83,221,221,123,46,75,184,23,92,23,23,175,142,70,2,71,1,71,71,69,33,220,132,158,66,158,158,26,137,197,30,202,15,202,202,212,90,153,117,45,180,45,45,88,99,121,145,191,198,191,191,46,14,27,56,7,28,7,7,63,71,35,1,173,142,173,173,172,180,47,234,90,117,90,90,176,27,181,108,131,54,131,131,239,102,255,133,51,204,51,51,182,198,242,63,99,145,99,99,92,4,10,16,2,8,2,2,18,73,56,57,170,146,170,170,147,226,168,175,113,217,113,113,222,141,207,14,200,7,200,200,198,50,125,200,25,100,25,25,209,146,112,114,73,57,73,73,59,175,154,134,217,67,217,217,95,249,29,195,242,239,242,242,49,219,72,75,227,171,227,227,168,182,42,226,91,113,91,91,185,13,146,52,136,26,136,136,188,41,200,164,154,82,154,154,62,76,190,45,38,152,38,38,11,100,250,141,50,200,50,50,191,125,74,233,176,250,176,176,89,207,106,27,233,131,233,233,242,30,51,120,15,60,15,15,119,183,166,230,213,115,213,213,51,29,186,116,128,58,128,128,244,97,124,153,190,194,190,190,39,135,222,38,205,19,205,205,235,104,228,189,52,208,52,52,137,144,117,122,72,61,72,72,50,227,36,171,255,219,255,255,84,244,143,247,122,245,122,122,141,61,234,244,144,122,144,144,100,190,62,194,95,97,95,95,157,64,160,29,32,128,32,32,61,208,213,103,104,189,104,104,15,52,114,208,26,104,26,26,202,65,44,25,174,130,174,174,183,117,94,201,180,234,180,180,125,168,25,154,84,77,84,84,206,59,229,236,147,118,147,147,127,68,170,13,34,136,34,34,47,200,233,7,100,141,100,100,99,255,18,219,241,227,241,241,42,230,162,191,115,209,115,115,204,36,90,144,18,72,18,18,130,128,93,58,64,29,64,64,122,16,40,64,8,32,8,8,72,155,232,86,195,43,195,195,149,197,123,51,236,151,236,236,223,171,144,150,219,75,219,219,77,95,31,97,161,190,161,161,192,7,131,28,141,14,141,141,145,122,201,245,61,244,61,61,200,51,241,204,151,102,151,151,91,0,0,0,0,0,0,0,0,131,212,54,207,27,207,207,249,86,135,69,43,172,43,43,110,236,179,151,118,197,118,118,225,25,176,100,130,50,130,130,230,177,169,254,214,127,214,214,40,54,119,216,27,108,27,27,195,119,91,193,181,238,181,181,116,67,41,17,175,134,175,175,190,212,223,119,106,181,106,106,29,160,13,186,80,93,80,80,234,138,76,18,69,9,69,69,87,251,24,203,243,235,243,243,56,96,240,157,48,192,48,48,173,195,116,43,239,155,239,239,196,126,195,229,63,252,63,63,218,170,28,146,85,73,85,85,199,89,16,121,162,178,162,162,219,201,101,3,234,143,234,234,233,202,236,15,101,137,101,101,106,105,104,185,186,210,186,186,3,94,147,101,47,188,47,47,74,157,231,78,192,39,192,192,142,161,129,190,222,95,222,222,96,56,108,224,28,112,28,28,252,231,46,187,253,211,253,253,70,154,100,82,77,41,77,77,31,57,224,228,146,114,146,146,118,234,188,143,117,201,117,117,250,12,30,48,6,24,6,6,54,9,152,36,138,18,138,138,174,121,64,249,178,242,178,178,75,209,89,99,230,191,230,230,133,28,54,112,14,56,14,14,126,62,99,248,31,124,31,31,231,196,247,55,98,149,98,98,85,181,163,238,212,119,212,212,58,77,50,41,168,154,168,168,129,49,244,196,150,98,150,150,82,239,58,155,249,195,249,249,98,151,246,102,197,51,197,197,163,74,177,53,37,148,37,37,16,178,32,242,89,121,89,89,171,21,174,84,132,42,132,132,208,228,167,183,114,213,114,114,197,114,221,213,57,228,57,57,236,152,97,90,76,45,76,76,22,188,59,202,94,101,94,94,148,240,133,231,120,253,120,120,159,112,216,221,56,224,56,56,229,5,134,20,140,10,140,140,152,191,178,198,209,99,209,209,23,87,11,65,165,174,165,165,228,217,77,67,226,175,226,226,161,194,248,47,97,153,97,97,78,123,69,241,179,246,179,179,66,66,165,21,33,132,33,33,52,37,214,148,156,74,156,156,8,60,102,240,30,120,30,30,238,134,82,34,67,17,67,67,97,147,252,118,199,59,199,199,177,229,43,179,252,215,252,252,79,8,20,32,4,16,4,4,36,162,8,178,81,89,81,81,227,47,199,188,153,94,153,153,37,218,196,79,109,169,109,109,34,26,57,104,13,52,13,13,101,233,53,131,250,207,250,250,121,163,132,182,223,91,223,223,105,252,155,215,126,229,126,126,169,72,180,61,36,144,36,36,25,118,215,197,59,236,59,59,254,75,61,49,171,150,171,171,154,129,209,62,206,31,206,206,240,34,85,136,17,68,17,17,153,3,137,12,143,6,143,143,131,156,107,74,78,37,78,78,4,115,81,209,183,230,183,183,102,203,96,11,235,139,235,235,224,120,204,253,60,240,60,60,193,31,191,124,129,62,129,129,253,53,254,212,148,106,148,148,64,243,12,235,247,251,247,247,28,111,103,161,185,222,185,185,24,38,95,152,19,76,19,19,139,88,156,125,44,176,44,44,81,187,184,214,211,107,211,211,5,211,92,107,231,187,231,231,140,220,203,87,110,165,110,110,57,149,243,110,196,55,196,196,170,6,15,24,3,12,3,3,27,172,19,138,86,69,86,86,220,136,73,26,68,13,68,68,94,254,158,223,127,225,127,127,160,79,55,33,169,158,169,169,136,84,130,77,42,168,42,42,103,107,109,177,187,214,187,187,10,159,226,70,193,35,193,193,135,166,2,162,83,81,83,83,241,165,139,174,220,87,220,220,114,22,39,88,11,44,11,11,83,39,211,156,157,78,157,157,1,216,193,71,108,173,108,108,43,98,245,149,49,196,49,49,164,232,185,135,116,205,116,116,243,241,9,227,246,255,246,246,21,140,67,10,70,5,70,70,76,69,38,9,172,138,172,172,165,15,151,60,137,30,137,137,181,40,68,160,20,80,20,20,180,223,66,91,225,163,225,225,186,44,78,176,22,88,22,22,166,116,210,205,58,232,58,58,247,210,208,111,105,185,105,105,6,18,45,72,9,36,9,9,65,224,173,167,112,221,112,112,215,113,84,217,182,226,182,182,111,189,183,206,208,103,208,208,30,199,126,59,237,147,237,237,214,133,219,46,204,23,204,204,226,132,87,42,66,21,66,66,104,45,194,180,152,90,152,152,44,85,14,73,164,170,164,164,237,80,136,93,40,160,40,40,117,184,49,218,92,109,92,92,134,237,63,147,248,199,248,248,107,17,164,68,134,34,134,134,194,216,48,120,192,24,96,24,24,38,70,175,5,35,140,35,35,184,145,249,126,198,63,198,198,251,205,111,19,232,135,232,232,203,19,161,76,135,38,135,135,17,109,98,169,184,218,184,184,9,2,5,8,1,4,1,1,13,158,110,66,79,33,79,79,155,108,238,173,54,216,54,54,255,81,4,89,166,162,166,166,12,185,189,222,210,111,210,210,14,247,6,251,245,243,245,245,150,242,128,239,121,249,121,121,48,222,206,95,111,161,111,111,109,63,239,252,145,126,145,145,248,164,7,170,82,85,82,82,71,192,253,39,96,157,96,96,53,101,118,137,188,202,188,188,55,43,205,172,155,86,155,155,138,1,140,4,142,2,142,142,210,91,21,113,163,182,163,163,108,24,60,96,12,48,12,12,132,246,138,255,123,241,123,123,128,106,225,181,53,212,53,53,245,58,105,232,29,116,29,29,179,221,71,83,224,167,224,224,33,179,172,246,215,123,215,215,156,153,237,94,194,47,194,194,67,92,150,109,46,184,46,46,41,150,122,98,75,49,75,75,93,225,33,163,254,223,254,254,213,174,22,130,87,65,87,87,189,42,65,168,21,84,21,21,232,238,182,159,119,193,119,119,146,110,235,165,55,220,55,55,158,215,86,123,229,179,229,229,19,35,217,140,159,70,159,159,35,253,23,211,240,231,240,240,32,148,127,106,74,53,74,74,68,169,149,158,218,79,218,218,162,176,37,250,88,125,88,88,207,143,202,6,201,3,201,201,124,82,141,85,41,164,41,41,90,20,34,80,10,40,10,10,80,127,79,225,177,254,177,177,201,93,26,105,160,186,160,160,20,214,218,127,107,177,107,107,217,23,171,92,133,46,133,133,60,103,115,129,189,206,189,189,143,186,52,210,93,105,93,93,144,32,80,128,16,64,16,16,7,245,3,243,244,247,244,244,221,139,192,22,203,11,203,203,211,124,198,237,62,248,62,62,45,10,17,40,5,20,5,5,120,206,230,31,103,129,103,103,151,213,83,115,228,183,228,228,2,78,187,37,39,156,39,39,115,130,88,50,65,25,65,65,167,11,157,44,139,22,139,139,246,83,1,81,167,166,167,167,178,250,148,207,125,233,125,125,73,55,251,220,149,110,149,149,86,173,159,142,216,71,216,216,112,235,48,139,251,203,251,251,205,193,113,35,238,159,238,238,187,248,145,199,124,237,124,124,113,204,227,23,102,133,102,102,123,167,142,166,221,83,221,221,175,46,75,184,23,92,23,23,69,142,70,2,71,1,71,71,26,33,220,132,158,66,158,158,212,137,197,30,202,15,202,202,88,90,153,117,45,180,45,45,46,99,121,145,191,198,191,191,63,14,27,56,7,28,7,7,172,71,35,1,173,142,173,173,176,180,47,234,90,117,90,90,239,27,181,108,131,54,131,131,182,102,255,133,51,204,51,51,92,198,242,63,99,145,99,99,18,4,10,16,2,8,2,2,147,73,56,57,170,146,170,170,222,226,168,175,113,217,113,113,198,141,207,14,200,7,200,200,209,50,125,200,25,100,25,25,59,146,112,114,73,57,73,73,95,175,154,134,217,67,217,217,49,249,29,195,242,239,242,242,168,219,72,75,227,171,227,227,185,182,42,226,91,113,91,91,188,13,146,52,136,26,136,136,62,41,200,164,154,82,154,154,11,76,190,45,38,152,38,38,191,100,250,141,50,200,50,50,89,125,74,233,176,250,176,176,242,207,106,27,233,131,233,233,119,30,51,120,15,60,15,15,51,183,166,230,213,115,213,213,244,29,186,116,128,58,128,128,39,97,124,153,190,194,190,190,235,135,222,38,205,19,205,205,137,104,228,189,52,208,52,52,50,144,117,122,72,61,72,72,84,227,36,171,255,219,255,255,141,244,143,247,122,245,122,122,100,61,234,244,144,122,144,144,157,190,62,194,95,97,95,95,61,64,160,29,32,128,32,32,15,208,213,103,104,189,104,104,202,52,114,208,26,104,26,26,183,65,44,25,174,130,174,174,125,117,94,201,180,234,180,180,206,168,25,154,84,77,84,84,127,59,229,236,147,118,147,147,47,68,170,13,34,136,34,34,99,200,233,7,100,141,100,100,42,255,18,219,241,227,241,241,204,230,162,191,115,209,115,115,130,36,90,144,18,72,18,18,122,128,93,58,64,29,64,64,72,16,40,64,8,32,8,8,149,155,232,86,195,43,195,195,223,197,123,51,236,151,236,236,77,171,144,150,219,75,219,219,192,95,31,97,161,190,161,161,145,7,131,28,141,14,141,141,200,122,201,245,61,244,61,61,91,51,241,204,151,102,151,151,0,0,0,0,0,0,0,0,249,131,212,54,207,27,207,207,110,86,135,69,43,172,43,43,225,236,179,151,118,197,118,118,230,25,176,100,130,50,130,130,40,177,169,254,214,127,214,214,195,54,119,216,27,108,27,27,116,119,91,193,181,238,181,181,190,67,41,17,175,134,175,175,29,212,223,119,106,181,106,106,234,160,13,186,80,93,80,80,87,138,76,18,69,9,69,69,56,251,24,203,243,235,243,243,173,96,240,157,48,192,48,48,196,195,116,43,239,155,239,239,218,126,195,229,63,252,63,63,199,170,28,146,85,73,85,85,219,89,16,121,162,178,162,162,233,201,101,3,234,143,234,234,106,202,236,15,101,137,101,101,3,105,104,185,186,210,186,186,74,94,147,101,47,188,47,47,142,157,231,78,192,39,192,192,96,161,129,190,222,95,222,222,252,56,108,224,28,112,28,28,70,231,46,187,253,211,253,253,31,154,100,82,77,41,77,77,118,57,224,228,146,114,146,146,250,234,188,143,117,201,117,117,54,12,30,48,6,24,6,6,174,9,152,36,138,18,138,138,75,121,64,249,178,242,178,178,133,209,89,99,230,191,230,230,126,28,54,112,14,56,14,14,231,62,99,248,31,124,31,31,85,196,247,55,98,149,98,98,58,181,163,238,212,119,212,212,129,77,50,41,168,154,168,168,82,49,244,196,150,98,150,150,98,239,58,155,249,195,249,249,163,151,246,102,197,51,197,197,16,74,177,53,37,148,37,37,171,178,32,242,89,121,89,89,208,21,174,84,132,42,132,132,197,228,167,183,114,213,114,114,236,114,221,213,57,228,57,57,22,152,97,90,76,45,76,76,148,188,59,202,94,101,94,94,159,240,133,231,120,253,120,120,229,112,216,221,56,224,56,56,152,5,134,20,140,10,140,140,23,191,178,198,209,99,209,209,228,87,11,65,165,174,165,165,161,217,77,67,226,175,226,226,78,194,248,47,97,153,97,97,66,123,69,241,179,246,179,179,52,66,165,21,33,132,33,33,8,37,214,148,156,74,156,156,238,60,102,240,30,120,30,30,97,134,82,34,67,17,67,67,177,147,252,118,199,59,199,199,79,229,43,179,252,215,252,252,36,8,20,32,4,16,4,4,227,162,8,178,81,89,81,81,37,47,199,188,153,94,153,153,34,218,196,79,109,169,109,109,101,26,57,104,13,52,13,13,121,233,53,131,250,207,250,250,105,163,132,182,223,91,223,223,169,252,155,215,126,229,126,126,25,72,180,61,36,144,36,36,254,118,215,197,59,236,59,59,154,75,61,49,171,150,171,171,240,129,209,62,206,31,206,206,153,34,85,136,17,68,17,17,131,3,137,12,143,6,143,143,4,156,107,74,78,37,78,78,102,115,81,209,183,230,183,183,224,203,96,11,235,139,235,235,193,120,204,253,60,240,60,60,253,31,191,124,129,62,129,129,64,53,254,212,148,106,148,148,28,243,12,235,247,251,247,247,24,111,103,161,185,222,185,185,139,38,95,152,19,76,19,19,81,88,156,125,44,176,44,44,5,187,184,214,211,107,211,211,140,211,92,107,231,187,231,231,57,220,203,87,110,165,110,110,170,149,243,110,196,55,196,196,27,6,15,24,3,12,3,3,220,172,19,138,86,69,86,86,94,136,73,26,68,13,68,68,160,254,158,223,127,225,127,127,136,79,55,33,169,158,169,169,103,84,130,77,42,168,42,42,10,107,109,177,187,214,187,187,135,159,226,70,193,35,193,193,241,166,2,162,83,81,83,83,114,165,139,174,220,87,220,220,83,22,39,88,11,44,11,11,1,39,211,156,157,78,157,157,43,216,193,71,108,173,108,108,164,98,245,149,49,196,49,49,243,232,185,135,116,205,116,116,21,241,9,227,246,255,246,246,76,140,67,10,70,5,70,70,165,69,38,9,172,138,172,172,181,15,151,60,137,30,137,137,180,40,68,160,20,80,20,20,186,223,66,91,225,163,225,225,166,44,78,176,22,88,22,22,247,116,210,205,58,232,58,58,6,210,208,111,105,185,105,105,65,18,45,72,9,36,9,9,215,224,173,167,112,221,112,112,111,113,84,217,182,226,182,182,30,189,183,206,208,103,208,208,214,199,126,59,237,147,237,237,226,133,219,46,204,23,204,204,104,132,87,42,66,21,66,66,44,45,194,180,152,90,152,152,237,85,14,73,164,170,164,164,117,80,136,93,40,160,40,40,134,184,49,218,92,109,92,92,107,237,63,147,248,199,248,248,194,17,164,68,134,34,134,134])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && buffer.buffer === HEAP8.buffer && offset === 0) {
              node.contents = buffer; // this is a subarray of the heap, and we can own it
              node.contentMode = MEMFS.CONTENT_OWNING;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },reconcile:function (src, dst, callback) {
        var total = 0;
        var create = {};
        for (var key in src.files) {
          if (!src.files.hasOwnProperty(key)) continue;
          var e = src.files[key];
          var e2 = dst.files[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create[key] = e;
            total++;
          }
        }
        var remove = {};
        for (var key in dst.files) {
          if (!dst.files.hasOwnProperty(key)) continue;
          var e = dst.files[key];
          var e2 = src.files[key];
          if (!e2) {
            remove[key] = e;
            total++;
          }
        }
        if (!total) {
          // early out
          return callback(null);
        }
        var completed = 0;
        var done = function(err) {
          if (err) return callback(err);
          if (++completed >= total) {
            return callback(null);
          }
        };
        // create a single transaction to handle and IDB reads / writes we'll need to do
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        transaction.onerror = function() { callback(this.error); };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        for (var path in create) {
          if (!create.hasOwnProperty(path)) continue;
          var entry = create[path];
          if (dst.type === 'local') {
            // save file to local
            try {
              if (FS.isDir(entry.mode)) {
                FS.mkdir(path, entry.mode);
              } else if (FS.isFile(entry.mode)) {
                var stream = FS.open(path, 'w+', 0666);
                FS.write(stream, entry.contents, 0, entry.contents.length, 0, true /* canOwn */);
                FS.close(stream);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // save file to IDB
            var req = store.put(entry, path);
            req.onsuccess = function() { done(null); };
            req.onerror = function() { done(this.error); };
          }
        }
        for (var path in remove) {
          if (!remove.hasOwnProperty(path)) continue;
          var entry = remove[path];
          if (dst.type === 'local') {
            // delete file from local
            try {
              if (FS.isDir(entry.mode)) {
                // TODO recursive delete?
                FS.rmdir(path);
              } else if (FS.isFile(entry.mode)) {
                FS.unlink(path);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // delete file from IDB
            var req = store.delete(path);
            req.onsuccess = function() { done(null); };
            req.onerror = function() { done(this.error); };
          }
        }
      },getLocalSet:function (mount, callback) {
        var files = {};
        var isRealDir = function(p) {
          return p !== '.' && p !== '..';
        };
        var toAbsolute = function(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
        var check = FS.readdir(mount.mountpoint)
          .filter(isRealDir)
          .map(toAbsolute(mount.mountpoint));
        while (check.length) {
          var path = check.pop();
          var stat, node;
          try {
            var lookup = FS.lookupPath(path);
            node = lookup.node;
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path)
              .filter(isRealDir)
              .map(toAbsolute(path)));
            files[path] = { mode: stat.mode, timestamp: stat.mtime };
          } else if (FS.isFile(stat.mode)) {
            files[path] = { contents: node.contents, mode: stat.mode, timestamp: stat.mtime };
          } else {
            return callback(new Error('node type not supported'));
          }
        }
        return callback(null, { type: 'local', files: files });
      },getDB:function (name, callback) {
        // look it up in the cache
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        req.onupgradeneeded = function() {
          db = req.result;
          db.createObjectStore(IDBFS.DB_STORE_NAME);
        };
        req.onsuccess = function() {
          db = req.result;
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getRemoteSet:function (mount, callback) {
        var files = {};
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          store.openCursor().onsuccess = function(event) {
            var cursor = event.target.result;
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, files: files });
            }
            files[cursor.key] = cursor.value;
            cursor.continue();
          };
        });
      }};
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.position = position;
          return position;
        }}};
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || { recurse_count: 0 };
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
        // start at the root
        var current = FS.root;
        var current_path = '/';
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
            this.parent = null;
            this.mount = null;
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            FS.hashAddNode(this);
          };
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
          FS.FSNode.prototype = {};
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
        return new FS.FSNode(parent, name, mode, rdev);
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = {};
          // compatibility
          Object.defineProperties(FS.FSStream, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        stream.prototype = FS.FSStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
        var completed = 0;
        var total = FS.mounts.length;
        var done = function(err) {
          if (err) {
            return callback(err);
          }
          if (++completed >= total) {
            callback(null);
          }
        };
        // sync all mounts
        for (var i = 0; i < FS.mounts.length; i++) {
          var mount = FS.mounts[i];
          if (!mount.type.syncfs) {
            done(null);
            continue;
          }
          mount.type.syncfs(mount, populate, done);
        }
      },mount:function (type, opts, mountpoint) {
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
          mountpoint = lookup.path;  // use the absolute path
        }
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        // add to our cached list of mounts
        FS.mounts.push(mount);
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.errnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0);
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
          this.stack = stackTrace();
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
        FS.nameTable = new Array(4096);
        FS.root = FS.createNode(null, '/', 16384 | 0777, 0);
        FS.mount(MEMFS, {}, '/');
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureErrnoError();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          var LazyUint8Array = function() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 0777, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {} : ['binary'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
          var handleMessage = function(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  Module["_strlen"] = _strlen;function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      return _write(stream, s, _strlen(s));
    }
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module.print('exit(' + status + ') called');
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }
  function ___errno_location() {
      return ___errno_state;
    }
  function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }
  function _umask(newMask) {
      // mode_t umask(mode_t cmask);
      // http://pubs.opengroup.org/onlinepubs/7908799/xsh/umask.html
      // NOTE: This value isn't actually used for anything.
      if (_umask.cmask === undefined) _umask.cmask = 0x1FF;  // S_IRWXU | S_IRWXG | S_IRWXO.
      var oldMask = _umask.cmask;
      _umask.cmask = newMask;
      return oldMask;
    }
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var ret = _lseek(stream, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStream(stream);
      stream.eof = false;
      return 0;
    }
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAPU8[(((px)+(i))|0)];
        var y = HEAPU8[(((py)+(i))|0)];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }
  Module["_memcpy"] = _memcpy; 
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  function _msgops_callback_policy(opdata,context){
      return Module["ops_event"](opdata,{},"policy");
    }
  function _msgops_callback_create_privkey(opdata,accountname,protocol){
          Module["ops_event"](opdata,{
            "accountname":Pointer_stringify(accountname),
              "protocol":Pointer_stringify(protocol)
            },"create_privkey");
    }
  function _msgops_callback_is_logged_in(opdata,accountname,protocol,recipient){
          return Module["ops_event"](opdata,{},"is_logged_in");
    }
  function _msgops_callback_inject_message(opdata,accountname,protocol,recipient,message){
          Module["ops_event"](opdata,{
              "message":Pointer_stringify(message)
          },"inject_message");
    }
  function _msgops_callback_update_context_list(opdata){
          Module["ops_event"](opdata,{},"update_context_list");
    }
  function _msgops_callback_new_fingerprint(opdata,userstate,accountname,protocol,username,fingerprint){
          var human = _malloc(45);
          _otrl_privkey_hash_to_human(human, fingerprint);
          Module["ops_event"](opdata,{
              "fingerprint":Pointer_stringify(human)
          },"new_fingerprint");
          _free(human);
    }
  function _msgops_callback_write_fingerprints(opdata){
          Module["ops_event"](opdata,{},"write_fingerprints");
    }
  function _msgops_callback_gone_secure(opdata,context){
          Module["ops_event"](opdata,{},"gone_secure");
    }
  function _msgops_callback_gone_insecure(opdata,context){
          Module["ops_event"](opdata,{},"gone_insecure");
    }
  function _msgops_callback_still_secure(opdata,context,is_reply){
          Module["ops_event"](opdata,{},"still_secure");
    }
  function _msgops_callback_max_message_size(opdata,context){
          return Module["ops_event"](opdata,{},"max_message_size");
    }
  function _msgops_callback_account_name_free(opdata,account,protocol){
          return;
    }
  function _msgops_callback_account_name(opdata,account,protocol){
          return account;
    }
  var Helper={ptr_to_HexString:function (ptr,len){
          var hexDigit = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];
          function hexString(val){
              return hexDigit[(val & 0xF0) >> 4] + hexDigit[val & 0x0F];
          }
          var hex = "";
          for(var i=0; i<len; i++){
              hex = hex + hexString( Helper.unsigned_char( getValue( ptr + i,"i8")));
          }
          return hex;
      },ptr_to_Buffer:function (ptr,len){
          var buf = new Buffer(len);
          for(var i=0; i<len; i++){
              buf.writeInt8(getValue(ptr+i,"i8"),i);
          }
          return buf;
      },ptr_to_ArrayBuffer:function (ptr,len){
          var buf = new ArrayBuffer(len);
          var u8 = new Uint8Array(buf);
          for(var i=0; i<len; i++){
              u8[i]= Helper.unsigned_char( getValue( ptr + i,"i8"));
          }
          return buf;
      },unsigned_char:function ( c ){
          c = c & 0xFF;
          return ( c < 0 ? (0xFF+1)+c : c );
      },unsigned_int32:function ( i ){
          //i must be in the range of a signed 32-bit integer!
          i = i & 0xFFFFFFFF;//truncate so we dont return values larger than an unsigned 32-bit int.
          return ( i < 0 ? (0xFFFFFFFF+1)+i : i );
      },ab2str:function (buf) {
        return String.fromCharCode.apply(null, new Uint16Array(buf));
      },str2ab:function (str) {
        var buf = new ArrayBuffer(str.length*2); // 2 bytes for each char
        var bufView = new Uint16Array(buf);
        for (var i=0, strLen=str.length; i<strLen; i++) {
          bufView[i] = str.charCodeAt(i);
        }
        return buf;
      }};function _msgops_callback_received_symkey(opdata,context,use,usedata,usedatalen,symkey){
          Module["ops_event"](opdata,{
              "use": use,
              "usedata":Helper.ptr_to_ArrayBuffer(usedata,usedatalen),
              "key":Helper.ptr_to_ArrayBuffer(symkey,32)
          },"received_symkey");
    }
  function _msgops_callback_otr_error_message(opdata, context, err_code){
          var msg =["","encryption-error","msg-not-in-private","msg-unreadble","msg-malformed"][err_code];
          var ptr = _malloc(msg.length+1);
          writeStringToMemory(msg,ptr);
          return ptr;
    }
  function _msgops_callback_otr_error_message_free(opdata,err_msg){
          _free(err_msg);
    }
  function _do_smp_request(opdata,context,question){
          var obj = (new Module["ConnContext"](context))["obj"]();
          if(question!=0) obj["question"] = Pointer_stringify(question);
          Module["ops_event"](opdata, obj, "smp_request");
    }
  function _do_smp_complete(opdata,context){
          Module["ops_event"](opdata, (new Module["ConnContext"](context))["obj"](),"smp_complete");
    }
  function _do_smp_failed(opdata,context){
          Module["ops_event"](opdata, (new Module["ConnContext"](context))["obj"](),"smp_failed");
    }
  function _do_smp_error(opdata,context){
          Module["ops_event"](opdata, (new Module["ConnContext"](context))["obj"](),"smp_error");    
    }
  function _do_smp_aborted($opdata,$context){
          Module["ops_event"](opdata, (new Module["ConnContext"](context))["obj"](),"smp_aborted");
    }function _msgops_callback_handle_smp_event(opdata, smp_event,context, progress, question){
       var smpevents = [
        "OTRL_SMPEVENT_NONE",
        "OTRL_SMPEVENT_ERROR",
        "OTRL_SMPEVENT_ABORT",
        "OTRL_SMPEVENT_CHEATED",
        "OTRL_SMPEVENT_ASK_FOR_ANSWER",
        "OTRL_SMPEVENT_ASK_FOR_SECRET",
        "OTRL_SMPEVENT_IN_PROGRESS",
        "OTRL_SMPEVENT_SUCCESS",
        "OTRL_SMPEVENT_FAILURE"];
        switch(smpevents[smp_event]){
          case "OTRL_SMPEVENT_ASK_FOR_SECRET":
              _do_smp_request(opdata,context,0);return;
          case "OTRL_SMPEVENT_ASK_FOR_ANSWER":
              _do_smp_request(opdata,context,question);return;
          case "OTRL_SMPEVENT_IN_PROGRESS":
              return;
          case "OTRL_SMPEVENT_SUCCESS":
              _do_smp_complete(opdata, context);return;
          case "OTRL_SMPEVENT_FAILURE":
              _do_smp_failed(opdata, context);return;
          case "OTRL_SMPEVENT_CHEATED":
          case "OTRL_SMPEVENT_ERROR":
              _do_smp_error(opdata, context);return;//must call otrl_message_abort_smp
          case "OTRL_SMPEVENT_ABORT":
              _do_smp_aborted(opdata, context);return;
        }
    }
  function _msgops_callback_handle_msg_event(opdata,msg_event,context,message,err){
          var error = new Error();
          error.num = err;
          error.message = _gcry_strerror(err);
          Module["ops_event"](opdata,{
              "event":msg_event,
              "message":Pointer_stringify(message),
              "err": (err?error:null)
          },"msg_event");
    }
  function _msgops_callback_create_instag(opdata, accountname, protocol){
          Module["ops_event"](opdata,{
              "accountname":Pointer_stringify(accountname),
              "protocol":Pointer_stringify(protocol)
          },"create_instag");
    }
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      // We use file descriptor numbers and FILE* streams interchangeably.
      return stream;
    }
  function _stat(path, buf, dontResolveLastLink) {
      // http://pubs.opengroup.org/onlinepubs/7908799/xsh/stat.html
      // int stat(const char *path, struct stat *buf);
      // NOTE: dontResolveLastLink is a shortcut for lstat(). It should never be
      //       used in client code.
      path = typeof path !== 'string' ? Pointer_stringify(path) : path;
      try {
        var stat = dontResolveLastLink ? FS.lstat(path) : FS.stat(path);
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode
        HEAP32[(((buf)+(16))>>2)]=stat.nlink
        HEAP32[(((buf)+(20))>>2)]=stat.uid
        HEAP32[(((buf)+(24))>>2)]=stat.gid
        HEAP32[(((buf)+(28))>>2)]=stat.rdev
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size
        HEAP32[(((buf)+(40))>>2)]=4096
        HEAP32[(((buf)+(44))>>2)]=stat.blocks
        HEAP32[(((buf)+(48))>>2)]=Math.floor(stat.atime.getTime() / 1000)
        HEAP32[(((buf)+(52))>>2)]=0
        HEAP32[(((buf)+(56))>>2)]=Math.floor(stat.mtime.getTime() / 1000)
        HEAP32[(((buf)+(60))>>2)]=0
        HEAP32[(((buf)+(64))>>2)]=Math.floor(stat.ctime.getTime() / 1000)
        HEAP32[(((buf)+(68))>>2)]=0
        HEAP32[(((buf)+(72))>>2)]=stat.ino
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fstat(fildes, buf) {
      // int fstat(int fildes, struct stat *buf);
      // http://pubs.opengroup.org/onlinepubs/7908799/xsh/fstat.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      return _stat(stream.path, buf);
    }
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStream(stream);
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop()
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(stream, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }
  function _strdup(ptr) {
      var len = _strlen(ptr);
      var newStr = _malloc(len + 1);
      (_memcpy(newStr, ptr, len)|0);
      HEAP8[(((newStr)+(len))|0)]=0;
      return newStr;
    }
  function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStream(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }function _fgets(s, n, stream) {
      // char *fgets(char *restrict s, int n, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgets.html
      var streamObj = FS.getStream(stream);
      if (!streamObj) return 0;
      if (streamObj.error || streamObj.eof) return 0;
      var byte_;
      for (var i = 0; i < n - 1 && byte_ != 10; i++) {
        byte_ = _fgetc(stream);
        if (byte_ == -1) {
          if (streamObj.error || (streamObj.eof && i == 0)) return 0;
          else if (streamObj.eof) break;
        }
        HEAP8[(((s)+(i))|0)]=byte_
      }
      HEAP8[(((s)+(i))|0)]=0
      return s;
    }
  function _strchr(ptr, chr) {
      ptr--;
      do {
        ptr++;
        var val = HEAP8[(ptr)];
        if (val == chr) return ptr;
      } while (val);
      return 0;
    }
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;
  Module["_memcmp"] = _memcmp;
  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }
  function _strstr(ptr1, ptr2) {
      var check = 0, start;
      do {
        if (!check) {
          start = ptr1;
          check = ptr2;
        }
        var curr1 = HEAP8[((ptr1++)|0)];
        var curr2 = HEAP8[((check++)|0)];
        if (curr2 == 0) return start;
        if (curr2 != curr1) {
          // rewind to one character after start, to find ez in eeez
          ptr1 = start + 1;
          check = 0;
        }
      } while (curr1);
      return 0;
    }
  Module["_strcpy"] = _strcpy;
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16)
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text)
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text)
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j]
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      var get = function() { return HEAP8[(((s)+(index++))|0)]; };
      var unget = function() { index--; };
      return __scanString(format, get, unget, varargs);
    }
  Module["_strncpy"] = _strncpy;
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  Module["_strcat"] = _strcat;
  function _memchr(ptr, chr, num) {
      chr = unSign(chr);
      for (var i = 0; i < num; i++) {
        if (HEAP8[(ptr)] == chr) return ptr;
        ptr++;
      }
      return 0;
    }
  var _llvm_va_start=undefined;
  function _llvm_va_end() {}
  var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  Module["_tolower"] = _tolower; 
  Module["_strncasecmp"] = _strncasecmp; 
  Module["_strcasecmp"] = _strcasecmp;
  function _stpcpy(pdest, psrc) {
      var i = 0;
      do {
        HEAP8[((pdest+i)|0)]=HEAP8[((psrc+i)|0)];
        i ++;
      } while (HEAP8[(((psrc)+(i-1))|0)] != 0);
      return pdest + i - 1;
    }
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }function __parseInt(str, endptr, base, min, max, bits, unsign) {
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      var multiplier = 1;
      if (HEAP8[(str)] == 45) {
        multiplier = -1;
        str++;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            str++;
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      // Get digits.
      var chr;
      var ret = 0;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          ret = ret * finalBase + digit;
          str++;
        }
      }
      // Apply sign.
      ret *= multiplier;
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      // Unsign if needed.
      if (unsign) {
        if (Math.abs(ret) > max) {
          ret = max;
          ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          ret = unSign(ret, bits);
        }
      }
      // Validate range.
      if (ret > max || ret < min) {
        ret = ret > max ? max : min;
        ___setErrNo(ERRNO_CODES.ERANGE);
      }
      if (bits == 64) {
        return ((asm["setTempRet0"]((tempDouble=ret,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)),ret>>>0)|0);
      }
      return ret;
    }function _strtoul(str, endptr, base) {
      return __parseInt(str, endptr, base, 0, 4294967295, 32, true);  // ULONG_MAX.
    }
  function _i32______gpg_err_init_to_void_____(){}
  var BIGINT={};var GCRYPT={};
  function __bigint2mpi(mpi_ptr,bi_num){
          var bi_num_str = BIGINT["bigInt2str"](bi_num,16);
          writeStringToMemory(bi_num_str,__bigint2mpi.buffer);
          //gcry_error_t gcry_mpi_scan (gcry_mpi_t *r_mpi, enum gcry_mpi_format format, const unsigned char *buffer, size_t buflen, size_t *nscanned)
          var err = __gcry_mpi_scan(__bigint2mpi.handle,4,__bigint2mpi.buffer,0,0); //4 == HEX Format
          assert(err===0,"bigint2mpi:"+Pointer_stringify(__gcry_strerror(err)));
          var scanned_mpi_ptr = getValue(__bigint2mpi.handle,"i32");
          assert(scanned_mpi_ptr !==0, "NULL scanned mpi in bigint2mpi()");
          __gcry_mpi_set(mpi_ptr,scanned_mpi_ptr);
          __gcry_mpi_release(scanned_mpi_ptr);
     }
  function __mpi2bigint(mpi_ptr){
       //gcry_error_t gcry_mpi_print (enum gcry_mpi_format format, unsigned char *buffer, size_t buflen, size_t *nwritten, const gcry_mpi_t a)
       var err = __gcry_mpi_print(4,__mpi2bigint.buffer,4096,0,mpi_ptr);// 4 == HEX Format
       assert(err==0,"mpi2bigint"+Pointer_stringify(__gcry_strerror(err)));
       var mpi_str = Pointer_stringify(__mpi2bigint.buffer);
       return BIGINT["str2bigInt"](mpi_str,16);
     }function _override_gcry_mpi_invm(mpi_x,mpi_a,mpi_m){
      // (x**(-1) mod n)
      var bi_a = __mpi2bigint(mpi_a);
      var bi_m = __mpi2bigint(mpi_m);
      var result = BIGINT["inverseMod"](bi_a,bi_m);
      if(result){
          __bigint2mpi(mpi_x,result);
          return 1;//inverse mod calculated
      }else{
          return 0;//no inverse mod exists
      }
    }
  function _override_gcry_mpi_powm(mpi_w,mpi_b,mpi_e,mpi_m){
      //w = b^e mod m
      var bi_base = __mpi2bigint(mpi_b);
      var bi_expo = __mpi2bigint(mpi_e);
      var bi_mod  = __mpi2bigint(mpi_m);
      var result = BIGINT["powMod"](bi_base,bi_expo,bi_mod);
      __bigint2mpi(mpi_w,result);
    }
  function _abort() {
      Module['abort']();
    }
  var ___DEFAULT_POLLMASK=5;function _select(nfds, readfds, writefds, exceptfds, timeout) {
      // readfds are supported,
      // writefds checks socket open status
      // exceptfds not supported
      // timeout is always 0 - fully async
      assert(nfds <= 64, 'nfds must be less than or equal to 64');  // fd sets have 64 bits
      assert(!exceptfds, 'exceptfds not supported');
      var total = 0;
      var srcReadLow = (readfds ? HEAP32[((readfds)>>2)] : 0),
          srcReadHigh = (readfds ? HEAP32[(((readfds)+(4))>>2)] : 0);
      var srcWriteLow = (writefds ? HEAP32[((writefds)>>2)] : 0),
          srcWriteHigh = (writefds ? HEAP32[(((writefds)+(4))>>2)] : 0);
      var srcExceptLow = (exceptfds ? HEAP32[((exceptfds)>>2)] : 0),
          srcExceptHigh = (exceptfds ? HEAP32[(((exceptfds)+(4))>>2)] : 0);
      var dstReadLow = 0,
          dstReadHigh = 0;
      var dstWriteLow = 0,
          dstWriteHigh = 0;
      var dstExceptLow = 0,
          dstExceptHigh = 0;
      var allLow = (readfds ? HEAP32[((readfds)>>2)] : 0) |
                   (writefds ? HEAP32[((writefds)>>2)] : 0) |
                   (exceptfds ? HEAP32[((exceptfds)>>2)] : 0);
      var allHigh = (readfds ? HEAP32[(((readfds)+(4))>>2)] : 0) |
                    (writefds ? HEAP32[(((writefds)+(4))>>2)] : 0) |
                    (exceptfds ? HEAP32[(((exceptfds)+(4))>>2)] : 0);
      function get(fd, low, high, val) {
        return (fd < 32 ? (low & val) : (high & val));
      }
      for (var fd = 0; fd < nfds; fd++) {
        var mask = 1 << (fd % 32);
        if (!(get(fd, allLow, allHigh, mask))) {
          continue;  // index isn't in the set
        }
        var stream = FS.getStream(fd);
        if (!stream) {
          ___setErrNo(ERRNO_CODES.EBADF);
          return -1;
        }
        var flags = ___DEFAULT_POLLMASK;
        if (stream.stream_ops.poll) {
          flags = stream.stream_ops.poll(stream);
        }
        if ((flags & 1) && get(fd, srcReadLow, srcReadHigh, mask)) {
          fd < 32 ? (dstReadLow = dstReadLow | mask) : (dstReadHigh = dstReadHigh | mask);
          total++;
        }
        if ((flags & 4) && get(fd, srcWriteLow, srcWriteHigh, mask)) {
          fd < 32 ? (dstWriteLow = dstWriteLow | mask) : (dstWriteHigh = dstWriteHigh | mask);
          total++;
        }
        if ((flags & 2) && get(fd, srcExceptLow, srcExceptHigh, mask)) {
          fd < 32 ? (dstExceptLow = dstExceptLow | mask) : (dstExceptHigh = dstExceptHigh | mask);
          total++;
        }
      }
      if (readfds) {
        HEAP32[((readfds)>>2)]=dstReadLow;
        HEAP32[(((readfds)+(4))>>2)]=dstReadHigh;
      }
      if (writefds) {
        HEAP32[((writefds)>>2)]=dstWriteLow;
        HEAP32[(((writefds)+(4))>>2)]=dstWriteHigh;
      }
      if (exceptfds) {
        HEAP32[((exceptfds)>>2)]=dstExceptLow;
        HEAP32[(((exceptfds)+(4))>>2)]=dstExceptHigh;
      }
      return total;
    }
  function _wait(stat_loc) {
      // pid_t wait(int *stat_loc);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/wait.html
      // Makes no sense in a single-process environment.
      ___setErrNo(ERRNO_CODES.ECHILD);
      return -1;
    }var _waitpid=_wait;
  var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name__deps:["_inet_pton4_raw","_inet_pton6_raw"],lookup_name:function (name) {
        // If the name is already a valid ipv4 / ipv6 address, don't generate a fake one.
        var res = __inet_pton4_raw(name);
        if (res) {
          return name;
        }
        res = __inet_pton6_raw(name);
        if (res) {
          return name;
        }
        // See if this name is already mapped.
        var addr;
        if (DNS.address_map.addrs[name]) {
          addr = DNS.address_map.addrs[name];
        } else {
          var id = DNS.address_map.id++;
          assert(id < 65535, 'exceeded max address mappings of 65535');
          addr = '172.29.' + (id & 0xff) + '.' + (id & 0xff00);
          DNS.address_map.names[addr] = name;
          DNS.address_map.addrs[name] = addr;
        }
        return addr;
      },lookup_addr:function (addr) {
        if (DNS.address_map.names[addr]) {
          return DNS.address_map.names[addr];
        }
        return null;
      }};
  var Sockets={BUFFER_SIZE:10240,MAX_BUFFER_SIZE:10485760,nextFd:1,fds:{},nextport:1,maxport:65535,peer:null,connections:{},portmap:{},localAddr:4261412874,addrPool:[33554442,50331658,67108874,83886090,100663306,117440522,134217738,150994954,167772170,184549386,201326602,218103818,234881034]};
  function __inet_pton4_raw(str) {
      var b = str.split('.');
      for (var i = 0; i < 4; i++) {
        var tmp = Number(b[i]);
        if (isNaN(tmp)) return null;
        b[i] = tmp;
      }
      return (b[0] | (b[1] << 8) | (b[2] << 16) | (b[3] << 24)) >>> 0;
    }
  function _htons(value) {
      return ((value & 0xff) << 8) + ((value & 0xff00) >> 8);
    }function __inet_pton6_raw(str) {
      var words;
      var w, offset, z, i;
      /* http://home.deds.nl/~aeron/regex/ */
      var valid6regx = /^((?=.*::)(?!.*::.+::)(::)?([\dA-F]{1,4}:(:|\b)|){5}|([\dA-F]{1,4}:){6})((([\dA-F]{1,4}((?!\3)::|:\b|$))|(?!\2\3)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4})$/i
      var parts = [];
      if (!valid6regx.test(str)) {
        return null;
      }
      if (str === "::") {
        return [0, 0, 0, 0, 0, 0, 0, 0];
      }
      // Z placeholder to keep track of zeros when splitting the string on ":"
      if (str.indexOf("::") === 0) {
        str = str.replace("::", "Z:"); // leading zeros case
      } else {
        str = str.replace("::", ":Z:");
      }
      if (str.indexOf(".") > 0) {
        // parse IPv4 embedded stress
        str = str.replace(new RegExp('[.]', 'g'), ":");
        words = str.split(":");
        words[words.length-4] = parseInt(words[words.length-4]) + parseInt(words[words.length-3])*256;
        words[words.length-3] = parseInt(words[words.length-2]) + parseInt(words[words.length-1])*256;
        words = words.slice(0, words.length-2);
      } else {
        words = str.split(":");
      }
      offset = 0; z = 0;
      for (w=0; w < words.length; w++) {
        if (typeof words[w] === 'string') {
          if (words[w] === 'Z') {
            // compressed zeros - write appropriate number of zero words
            for (z = 0; z < (8 - words.length+1); z++) {
              parts[w+z] = 0;
            }
            offset = z-1;
          } else {
            // parse hex to field to 16-bit value and write it in network byte-order
            parts[w+offset] = _htons(parseInt(words[w],16));
          }
        } else {
          // parsed IPv4 words
          parts[w+offset] = words[w];
        }
      }
      return [
        (parts[1] << 16) | parts[0],
        (parts[3] << 16) | parts[2],
        (parts[5] << 16) | parts[4],
        (parts[7] << 16) | parts[6]
      ];
    }function __write_sockaddr(sa, family, addr, port) {
      switch (family) {
        case 2:
          addr = __inet_pton4_raw(addr);
          HEAP16[((sa)>>1)]=family;
          HEAP32[(((sa)+(4))>>2)]=addr;
          HEAP16[(((sa)+(2))>>1)]=_htons(port);
          break;
        case 10:
          addr = __inet_pton6_raw(addr);
          HEAP32[((sa)>>2)]=family;
          HEAP32[(((sa)+(8))>>2)]=addr[0];
          HEAP32[(((sa)+(12))>>2)]=addr[1];
          HEAP32[(((sa)+(16))>>2)]=addr[2];
          HEAP32[(((sa)+(20))>>2)]=addr[3];
          HEAP16[(((sa)+(2))>>1)]=_htons(port);
          break;
        default:
          return { errno: ERRNO_CODES.EAFNOSUPPORT };
      }
      // kind of lame, but let's match _read_sockaddr's interface
      return {};
    }function _accept(fd, addrp, addrlen) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var newsock = sock.sock_ops.accept(sock);
        if (addrp) {
          var res = __write_sockaddr(addr, newsock.family, DNS.lookup_name(newsock.daddr), newsock.dport);
          assert(!res.errno);
        }
        return newsock.stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function __inet_ntop4_raw(addr) {
      return (addr & 0xff) + '.' + ((addr >> 8) & 0xff) + '.' + ((addr >> 16) & 0xff) + '.' + ((addr >> 24) & 0xff)
    }
  var _ntohs=_htons;function __inet_ntop6_raw(ints) {
      //  ref:  http://www.ietf.org/rfc/rfc2373.txt - section 2.5.4
      //  Format for IPv4 compatible and mapped  128-bit IPv6 Addresses
      //  128-bits are split into eight 16-bit words
      //  stored in network byte order (big-endian)
      //  |                80 bits               | 16 |      32 bits        |
      //  +-----------------------------------------------------------------+
      //  |               10 bytes               |  2 |      4 bytes        |
      //  +--------------------------------------+--------------------------+
      //  +               5 words                |  1 |      2 words        |
      //  +--------------------------------------+--------------------------+
      //  |0000..............................0000|0000|    IPv4 ADDRESS     | (compatible)
      //  +--------------------------------------+----+---------------------+
      //  |0000..............................0000|FFFF|    IPv4 ADDRESS     | (mapped)
      //  +--------------------------------------+----+---------------------+
      var str = "";
      var word = 0;
      var longest = 0;
      var lastzero = 0;
      var zstart = 0;
      var len = 0;
      var i = 0;
      var parts = [
        ints[0] & 0xffff,
        (ints[0] >> 16),
        ints[1] & 0xffff,
        (ints[1] >> 16),
        ints[2] & 0xffff,
        (ints[2] >> 16),
        ints[3] & 0xffff,
        (ints[3] >> 16)
      ];
      // Handle IPv4-compatible, IPv4-mapped, loopback and any/unspecified addresses
      var hasipv4 = true;
      var v4part = "";
      // check if the 10 high-order bytes are all zeros (first 5 words)
      for (i = 0; i < 5; i++) {
        if (parts[i] !== 0) { hasipv4 = false; break; }
      }
      if (hasipv4) {
        // low-order 32-bits store an IPv4 address (bytes 13 to 16) (last 2 words)
        v4part = __inet_ntop4_raw(parts[6] | (parts[7] << 16));
        // IPv4-mapped IPv6 address if 16-bit value (bytes 11 and 12) == 0xFFFF (6th word)
        if (parts[5] === -1) {
          str = "::ffff:";
          str += v4part;
          return str;
        }
        // IPv4-compatible IPv6 address if 16-bit value (bytes 11 and 12) == 0x0000 (6th word)
        if (parts[5] === 0) {
          str = "::";
          //special case IPv6 addresses
          if(v4part === "0.0.0.0") v4part = ""; // any/unspecified address
          if(v4part === "0.0.0.1") v4part = "1";// loopback address
          str += v4part;
          return str;
        }
      }
      // Handle all other IPv6 addresses
      // first run to find the longest contiguous zero words
      for (word = 0; word < 8; word++) {
        if (parts[word] === 0) {
          if (word - lastzero > 1) {
            len = 0;
          }
          lastzero = word;
          len++;
        }
        if (len > longest) {
          longest = len;
          zstart = word - longest + 1;
        }
      }
      for (word = 0; word < 8; word++) {
        if (longest > 1) {
          // compress contiguous zeros - to produce "::"
          if (parts[word] === 0 && word >= zstart && word < (zstart + longest) ) {
            if (word === zstart) {
              str += ":";
              if (zstart === 0) str += ":"; //leading zeros case
            }
            continue;
          }
        }
        // converts 16-bit words from big-endian to little-endian before converting to hex string
        str += Number(_ntohs(parts[word] & 0xffff)).toString(16);
        str += word < 7 ? ":" : "";
      }
      return str;
    }function __read_sockaddr(sa, salen) {
      // family / port offsets are common to both sockaddr_in and sockaddr_in6
      var family = HEAP16[((sa)>>1)];
      var port = _ntohs(HEAP16[(((sa)+(2))>>1)]);
      var addr;
      switch (family) {
        case 2:
          if (salen !== 16) {
            return { errno: ERRNO_CODES.EINVAL };
          }
          addr = HEAP32[(((sa)+(4))>>2)];
          addr = __inet_ntop4_raw(addr);
          break;
        case 10:
          if (salen !== 28) {
            return { errno: ERRNO_CODES.EINVAL };
          }
          addr = [
            HEAP32[(((sa)+(8))>>2)],
            HEAP32[(((sa)+(12))>>2)],
            HEAP32[(((sa)+(16))>>2)],
            HEAP32[(((sa)+(20))>>2)]
          ];
          addr = __inet_ntop6_raw(addr);
          break;
        default:
          return { errno: ERRNO_CODES.EAFNOSUPPORT };
      }
      return { family: family, addr: addr, port: port };
    }function _connect(fd, addrp, addrlen) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      var info = __read_sockaddr(addrp, addrlen);
      if (info.errno) {
        ___setErrNo(info.errno);
        return -1;
      }
      var port = info.port;
      var addr = DNS.lookup_addr(info.addr) || info.addr;
      try {
        sock.sock_ops.connect(sock, addr, port);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function _sendmsg(fd, message, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      var iov = HEAP32[(((message)+(8))>>2)];
      var num = HEAP32[(((message)+(12))>>2)];
      // read the address and port to send to
      var addr;
      var port;
      var name = HEAP32[((message)>>2)];
      var namelen = HEAP32[(((message)+(4))>>2)];
      if (name) {
        var info = __read_sockaddr(name, namelen);
        if (info.errno) {
          ___setErrNo(info.errno);
          return -1;
        }
        port = info.port;
        addr = DNS.lookup_addr(info.addr) || info.addr;
      }
      // concatenate scatter-gather arrays into one message buffer
      var total = 0;
      for (var i = 0; i < num; i++) {
        total += HEAP32[(((iov)+((8 * i) + 4))>>2)];
      }
      var view = new Uint8Array(total);
      var offset = 0;
      for (var i = 0; i < num; i++) {
        var iovbase = HEAP32[(((iov)+((8 * i) + 0))>>2)];
        var iovlen = HEAP32[(((iov)+((8 * i) + 4))>>2)];
        for (var j = 0; j < iovlen; j++) {  
          view[offset++] = HEAP8[(((iovbase)+(j))|0)];
        }
      }
      // write the buffer
      try {
        return sock.sock_ops.sendmsg(sock, view, 0, total, addr, port);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  var __inet_pton_raw=undefined;function _recvmsg(fd, message, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      var iov = HEAP32[(((message)+(8))>>2)];
      var num = HEAP32[(((message)+(12))>>2)];
      // get the total amount of data we can read across all arrays
      var total = 0;
      for (var i = 0; i < num; i++) {
        total += HEAP32[(((iov)+((8 * i) + 4))>>2)];
      }
      // try to read total data
      var msg;
      try {
        msg = sock.sock_ops.recvmsg(sock, total);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
      if (!msg) {
        // socket is closed
        return 0;
      }
      // TODO honor flags:
      // MSG_OOB
      // Requests out-of-band data. The significance and semantics of out-of-band data are protocol-specific.
      // MSG_PEEK
      // Peeks at the incoming message.
      // MSG_WAITALL
      // Requests that the function block until the full amount of data requested can be returned. The function may return a smaller amount of data if a signal is caught, if the connection is terminated, if MSG_PEEK was specified, or if an error is pending for the socket.
      // write the source address out
      var name = HEAP32[((message)>>2)];
      if (name) {
        var res = __write_sockaddr(name, sock.family, DNS.lookup_name(msg.addr), msg.port);
        assert(!res.errno);
      }
      // write the buffer out to the scatter-gather arrays
      var bytesRead = 0;
      var bytesRemaining = msg.buffer.byteLength;
      for (var i = 0; bytesRemaining > 0 && i < num; i++) {
        var iovbase = HEAP32[(((iov)+((8 * i) + 0))>>2)];
        var iovlen = HEAP32[(((iov)+((8 * i) + 4))>>2)];
        if (!iovlen) {
          continue;
        }
        var length = Math.min(iovlen, bytesRemaining);
        var buf = msg.buffer.subarray(bytesRead, bytesRead + length);
        HEAPU8.set(buf, iovbase + bytesRead);
        bytesRead += length;
        bytesRemaining -= length;
      }
      // TODO set msghdr.msg_flags
      // MSG_EOR
      // End of record was received (if supported by the protocol).
      // MSG_OOB
      // Out-of-band data was received.
      // MSG_TRUNC
      // Normal data was truncated.
      // MSG_CTRUNC
      return bytesRead;
    }
  function _access(path, amode) {
      // int access(const char *path, int amode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/access.html
      path = Pointer_stringify(path);
      if (amode & ~7) {
        // need a valid mode
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      var node;
      try {
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
      var perms = '';
      if (amode & 4) perms += 'r';
      if (amode & 2) perms += 'w';
      if (amode & 1) perms += 'x';
      if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      }
      return 0;
    }
  function _strtol(str, endptr, base) {
      return __parseInt(str, endptr, base, -2147483648, 2147483647, 32);  // LONG_MIN, LONG_MAX.
    }function _atoi(ptr) {
      return _strtol(ptr, null, 10);
    }
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          for (var i = 0; i < msg.length; i++) {
            HEAP8[(((strerrbuf)+(i))|0)]=msg.charCodeAt(i)
          }
          HEAP8[(((strerrbuf)+(i))|0)]=0
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }
  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }
  function _munmap(start, num) {
      if (!_mmap.mappings) _mmap.mappings = {};
      // TODO: support unmmap'ing parts of allocations
      var info = _mmap.mappings[start];
      if (!info) return 0;
      if (num == info.num) {
        _mmap.mappings[start] = null;
        if (info.allocated) {
          _free(info.malloc);
        }
      }
      return 0;
    }
  function _getgid() {
      // gid_t getgid(void);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/getgid.html
      // We have just one process/group/user, all with ID 0.
      return 0;
    }var _getuid=_getgid;
  var _geteuid=_getgid;
  function _setgid(gid) {
      // int setgid(gid_t gid);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/setgid.html
      // We have just one process/group/user, so it makes no sense to set IDs.
      ___setErrNo(ERRNO_CODES.EPERM);
      return -1;
    }var _setuid=_setgid;
  var _mlock=undefined;
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function _mmap(start, num, prot, flags, stream, offset) {
      /* FIXME: Since mmap is normally implemented at the kernel level,
       * this implementation simply uses malloc underneath the call to
       * mmap.
       */
      var MAP_PRIVATE = 2;
      var ptr;
      var allocated = false;
      if (!_mmap.mappings) _mmap.mappings = {};
      if (stream == -1) {
        ptr = _malloc(num);
        if (!ptr) return -1;
        _memset(ptr, 0, num);
        allocated = true;
      } else {
        var info = FS.getStream(stream);
        if (!info) return -1;
        try {
          var res = FS.mmap(info, HEAPU8, start, num, offset, prot, flags);
          ptr = res.ptr;
          allocated = res.allocated;
        } catch (e) {
          FS.handleFSError(e);
          return -1;
        }
      }
      _mmap.mappings[ptr] = { malloc: ptr, num: num, allocated: allocated };
      return ptr;
    }
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }
  function _iscntrl(chr) {
      return (0 <= chr && chr <= 0x1F) || chr === 0x7F;
    }
  function _override_gcry_mpi_mulpowm(mpi_r,mpi_array_base,mpi_array_exp,mpi_m){
      var indexer = 1;
      var mpi1, mpi2, bi_m,bi_result;
      mpi1 = getValue(mpi_array_base,"i32");
      mpi2 = getValue(mpi_array_exp,"i32");
      bi_m = __mpi2bigint(mpi_m);
      var BE = [];
      var O = [];
      while(mpi1 && mpi2){
          BE.push({"b":__mpi2bigint(mpi1),"e":__mpi2bigint(mpi2)});
          mpi1 = getValue(mpi_array_base+(indexer*4),"i32");
          mpi2 = getValue(mpi_array_exp+ (indexer*4),"i32");
          indexer++;
      }
      if(BE.length){
          BE.forEach(function(be){
              O.push(BIGINT["powMod"](be["b"],be["e"],bi_m));
          });
          bi_result = BIGINT["str2bigInt"]("1",16);
          O.forEach(function(k){
              bi_result = BIGINT["mult"](bi_result,k);
          });
      }
      bi_result = BIGINT["mod"](bi_result,bi_m);
      __bigint2mpi(mpi_r,bi_result);
    }
  function _truncate(path, length) {
      // int truncate(const char *path, off_t length);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/truncate.html
      // NOTE: The path argument may be a string, to simplify ftruncate().
      if (typeof path !== 'string') path = Pointer_stringify(path);
      try {
        FS.truncate(path, length);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _ftruncate(fildes, length) {
      // int ftruncate(int fildes, off_t length);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftruncate.html
      try {
        FS.ftruncate(fildes, length);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  var _getpid=_getgid;
  function _gettimeofday(ptr) {
      var now = Date.now();
      HEAP32[((ptr)>>2)]=Math.floor(now/1000); // seconds
      HEAP32[(((ptr)+(4))>>2)]=Math.floor((now-1000*Math.floor(now/1000))*1000); // microseconds
      return 0;
    }
  function _getrusage(resource, rlp) {
      // int getrusage(int resource, struct rusage *rlp);
      HEAP32[((rlp)>>2)]=1
      HEAP32[(((rlp)+(4))>>2)]=2
      HEAP32[(((rlp)+(8))>>2)]=3
      HEAP32[(((rlp)+(12))>>2)]=4
      return 0;
    }
  function _clock() {
      if (_clock.start === undefined) _clock.start = Date.now();
      return Math.floor((Date.now() - _clock.start) * (1000000/1000));
    }
  function _fcntl(fildes, cmd, varargs, dup2) {
      // int fcntl(int fildes, int cmd, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/fcntl.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      switch (cmd) {
        case 0:
          var arg = HEAP32[((varargs)>>2)];
          if (arg < 0) {
            ___setErrNo(ERRNO_CODES.EINVAL);
            return -1;
          }
          var newStream;
          try {
            newStream = FS.open(stream.path, stream.flags, 0, arg);
          } catch (e) {
            FS.handleFSError(e);
            return -1;
          }
          return newStream.fd;
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4:
          var arg = HEAP32[((varargs)>>2)];
          stream.flags |= arg;
          return 0;
        case 12:
        case 12:
          var arg = HEAP32[((varargs)>>2)];
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2
          return 0;
        case 13:
        case 14:
        case 13:
        case 14:
          // Pretend that the locking is successful.
          return 0;
        case 8:
        case 9:
          // These are for sockets. We don't have them fully implemented yet.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default:
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
      }
      // Should never be reached. Only to silence strict warnings.
      return -1;
    }
  function _srand(seed) {}
  function _rand() {
      return Math.floor(Math.random()*0x80000000);
    }
  var _getppid=_getgid;
  function _ferror(stream) {
      // int ferror(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ferror.html
      stream = FS.getStream(stream);
      return Number(stream && stream.error);
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function ___gxx_personality_v0() {
    }
  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  function ___resumeException(ptr) {
      if (HEAP32[((_llvm_eh_exception.buf)>>2)] == 0) HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr;
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = HEAP32[((_llvm_eh_exception.buf)>>2)];
      if (throwntype == -1) throwntype = HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }
  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Clear type.
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)];
      if (destructor) {
        Runtime.dynCall('vi', destructor, [ptr]);
        HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }
  var _environ=allocate(1, "i32*", ALLOC_STATIC);var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = 'root';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/emscripten';
        ENV['LANG'] = 'en_US.UTF-8';
        ENV['_'] = './this.program';
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        HEAP32[((envPtr)>>2)]=poolPtr
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        for (var j = 0; j < line.length; j++) {
          HEAP8[(((poolPtr)+(j))|0)]=line.charCodeAt(j);
        }
        HEAP8[(((poolPtr)+(j))|0)]=0;
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        var imagePlugin = {};
        imagePlugin['canHandle'] = function(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
            ctx = canvas.getContext('experimental-webgl', contextAttributes);
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (window.scrollX + rect.left);
              y = t.pageY - (window.scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (window.scrollX + rect.left);
            y = event.pageY - (window.scrollY + rect.top);
          }
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
Module["ptr_to_HexString"]=Helper.ptr_to_HexString;Module["ptr_to_Buffer"]=Helper.ptr_to_Buffer;Module["ptr_to_ArrayBuffer"]=Helper.ptr_to_ArrayBuffer;Module["unsigned_char"]=Helper.unsigned_char;Module["unsigned_int32"]=Helper.unsigned_int32;Module["ab2str"]=Helper.ab2str;Module["str2ab"]=Helper.str2ab;
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
__ATINIT__.push({ func: function() {   if(!FS.init.initialized) FS.init();   var devFolder = FS.findObject("/dev") || Module["FS_createFolder"]("/","dev",true,true);   var crypto_object;   if(typeof window !== "undefined" && typeof window.crypto !== "undefined"){       crypto_object = window.crypto;   }else if(typeof require !== "undefined"){       crypto_object = require("crypto");   }else{       crypto_object = Module["crypto"];   }   var randomByte = (function(crypto){       if(!crypto) throw new Error("no source of random data found!");       if(crypto["randomBytes"]) {          return (function(){            return crypto["randomBytes"](1)[0];          });       }else{         return (function(){            var buf = new Uint8Array(1);            crypto["getRandomValues"](buf);            return buf[0];         });       }   })( crypto_object );   Module["FS_createDevice"](devFolder,"random",randomByte);   Module["FS_createDevice"](devFolder,"urandom",randomByte);}});
BIGINT = globalScope["BigInt"] || require("./bigint")
__bigint2mpi.handle = allocate(1,"i32", ALLOC_STATIC);__bigint2mpi.buffer = allocate(4096,"i8", ALLOC_STATIC);Module["bigint2mpi"]=__bigint2mpi;
__mpi2bigint.buffer = allocate(4096, "i8", ALLOC_STATIC);Module["mpi2bigint"]=__mpi2bigint;
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
___buildEnvironment(ENV);
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 409600;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env.___progname|0;var p=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var q=env._stderr|0;var r=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var s=+env.NaN;var t=+env.Infinity;var u=0;var v=0;var w=0;var x=0;var y=0,z=0,A=0,B=0,C=0.0,D=0,E=0,F=0,G=0.0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=global.Math.floor;var S=global.Math.abs;var T=global.Math.sqrt;var U=global.Math.pow;var V=global.Math.cos;var W=global.Math.sin;var X=global.Math.tan;var Y=global.Math.acos;var Z=global.Math.asin;var _=global.Math.atan;var $=global.Math.atan2;var aa=global.Math.exp;var ab=global.Math.log;var ac=global.Math.ceil;var ad=global.Math.imul;var ae=env.abort;var af=env.assert;var ag=env.asmPrintInt;var ah=env.asmPrintFloat;var ai=env.min;var aj=env.invoke_iiiiiiii;var ak=env.invoke_viiiii;var al=env.invoke_i;var am=env.invoke_vi;var an=env.invoke_vii;var ao=env.invoke_iiiiiii;var ap=env.invoke_ii;var aq=env.invoke_iiii;var ar=env.invoke_viii;var as=env.invoke_v;var at=env.invoke_iiiii;var au=env.invoke_viiiiii;var av=env.invoke_iii;var aw=env.invoke_iiiiii;var ax=env.invoke_viiii;var ay=env._lseek;var az=env._rand;var aA=env.__scanString;var aB=env._fclose;var aC=env._select;var aD=env.___cxa_end_catch;var aE=env._strtoul;var aF=env._fflush;var aG=env._msgops_callback_gone_secure;var aH=env._strtol;var aI=env._fputc;var aJ=env._fwrite;var aK=env._do_smp_request;var aL=env._umask;var aM=env._send;var aN=env._fputs;var aO=env.__inet_pton6_raw;var aP=env._setgid;var aQ=env._do_smp_aborted;var aR=env._fstat;var aS=env._msgops_callback_write_fingerprints;var aT=env._msgops_callback_inject_message;var aU=env._read;var aV=env._msgops_callback_create_instag;var aW=env.__inet_ntop6_raw;var aX=env.__mpi2bigint;var aY=env._fileno;var aZ=env._strstr;var a_=env._fsync;var a$=env.___gxx_personality_v0;var a0=env._do_smp_failed;var a1=env._strcmp;var a2=env._memchr;var a3=env._strncmp;var a4=env._snprintf;var a5=env._fgetc;var a6=env._msgops_callback_otr_error_message_free;var a7=env._msgops_callback_handle_smp_event;var a8=env.__getFloat;var a9=env._connect;var ba=env.___cxa_free_exception;var bb=env._fgets;var bc=env._close;var bd=env._msgops_callback_still_secure;var be=env._strchr;var bf=env._clock;var bg=env.___setErrNo;var bh=env._isxdigit;var bi=env._access;var bj=env._exit;var bk=env._sprintf;var bl=env._msgops_callback_update_context_list;var bm=env._munmap;var bn=env._fcntl;var bo=env._ferror;var bp=env.___resumeException;var bq=env.___cxa_is_number_type;var br=env.___cxa_does_inherit;var bs=env._msgops_callback_gone_insecure;var bt=env.___cxa_begin_catch;var bu=env._recv;var bv=env._i32______gpg_err_init_to_void_____;var bw=env._wait;var bx=env.__ZSt18uncaught_exceptionv;var by=env.___cxa_call_unexpected;var bz=env._msgops_callback_otr_error_message;var bA=env._override_gcry_mpi_mulpowm;var bB=env._mmap;var bC=env.__exit;var bD=env._sendmsg;var bE=env._llvm_va_end;var bF=env.__inet_pton4_raw;var bG=env.___cxa_throw;var bH=env._llvm_eh_exception;var bI=env._pread;var bJ=env._fopen;var bK=env._open;var bL=env._override_gcry_mpi_invm;var bM=env._msgops_callback_account_name;var bN=env._sysconf;var bO=env.___cxa_find_matching_catch;var bP=env._strdup;var bQ=env._srand;var bR=env._getgid;var bS=env.__formatString;var bT=env._gettimeofday;var bU=env._atoi;var bV=env._do_smp_error;var bW=env._sbrk;var bX=env.___errno_location;var bY=env._strerror;var bZ=env._getrusage;var b_=env._isspace;var b$=env._msgops_callback_is_logged_in;var b0=env.__parseInt;var b1=env._ftruncate;var b2=env._msgops_callback_received_symkey;var b3=env._sscanf;var b4=env.___assert_fail;var b5=env.__bigint2mpi;var b6=env._fread;var b7=env._accept;var b8=env._abort;var b9=env._fprintf;var ca=env._stpcpy;var cb=env.__read_sockaddr;var cc=env._htons;var cd=env.__reallyNegative;var ce=env.__write_sockaddr;var cf=env.___buildEnvironment;var cg=env._msgops_callback_handle_msg_event;var ch=env._msgops_callback_create_privkey;var ci=env._msgops_callback_policy;var cj=env._fseek;var ck=env._write;var cl=env._recvmsg;var cm=env.___cxa_allocate_exception;var cn=env._do_smp_complete;var co=env._stat;var cp=env._truncate;var cq=env._msgops_callback_account_name_free;var cr=env._getenv;var cs=env._msgops_callback_max_message_size;var ct=env._override_gcry_mpi_powm;var cu=env.__inet_ntop4_raw;var cv=env._pwrite;var cw=env._msgops_callback_new_fingerprint;var cx=env._strerror_r;var cy=env._iscntrl;var cz=env._time;var cA=env._vfprintf;
// EMSCRIPTEN_START_FUNCS
function cQ(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function cR(){return i|0}function cS(a){a=a|0;i=a}function cT(a,b){a=a|0;b=b|0;if((u|0)==0){u=a;v=b}}function cU(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function cV(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function cW(a){a=a|0;H=a}function cX(a){a=a|0;I=a}function cY(a){a=a|0;J=a}function cZ(a){a=a|0;K=a}function c_(a){a=a|0;L=a}function c$(a){a=a|0;M=a}function c0(a){a=a|0;N=a}function c1(a){a=a|0;O=a}function c2(a){a=a|0;P=a}function c3(a){a=a|0;Q=a}function c4(){c[22144]=p+8;c[22146]=r+8;c[22150]=r+8}function c5(){var a=0,b=0;a=i;if((gF(83704)|0)==0){b=c[q>>2]|0;aJ(83672,27,1,b|0)|0;bj(2)}gG(38,(b=i,i=i+8|0,c[b>>2]=0,b)|0)|0;i=b;if((ei(4,0,0)|0)==0){i=a;return}else{bj(1)}}function c6(a){a=a|0;return c[a+4>>2]|0}function c7(a){a=a|0;return c[a>>2]|0}function c8(a){a=a|0;return c[a+8>>2]|0}function c9(a){a=a|0;return c[a+12>>2]|0}function da(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=i;g=db(0)|0;h=c[b>>2]|0;do{if((h|0)==0){j=0}else{b=0;k=h;L13:while(1){L15:do{if((c[k+44>>2]|0)==0){l=c[k+228>>2]|0;if((l|0)==0){m=b;break}n=k+12|0;o=k+16|0;p=k+20|0;q=b;r=l;while(1){l=r+16|0;if((a[c[l>>2]|0]|0)==0){m=q;break L15}if((q|0)==0){s=bJ(e|0,74104)|0;if((s|0)==0){t=17;break L13}else{u=s}}else{u=q}s=c[o>>2]|0;v=c[p>>2]|0;b9(u|0,69208,(w=i,i=i+24|0,c[w>>2]=c[n>>2],c[w+8>>2]=s,c[w+16>>2]=v,w)|0)|0;i=w;v=r+8|0;s=0;do{b9(u|0,66136,(w=i,i=i+8|0,c[w>>2]=d[(c[v>>2]|0)+s|0]|0,w)|0)|0;i=w;s=s+1|0;}while((s|0)<20);s=c[l>>2]|0;b9(u|0,63728,(w=i,i=i+8|0,c[w>>2]=(s|0)==0?123224:s,w)|0)|0;i=w;s=c[r>>2]|0;if((s|0)==0){m=u;break}else{q=u;r=s}}}else{m=b}}while(0);r=c[k>>2]|0;if((r|0)==0){t=22;break}else{b=m;k=r}}if((t|0)==17){x=gE(c[(bX()|0)>>2]|0)|0;i=f;return x|0}else if((t|0)==22){if((m|0)==0){x=g}else{j=m;break}i=f;return x|0}}}while(0);aB(j|0)|0;x=g;i=f;return x|0}function db(a){a=a|0;return dy(a)|0}function dc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=gO(b,3,0,0)|0;d=zd(c)|0;if((d|0)!=0|(c|0)==0){gO(b,3,d,c)|0;aN(d|0,a|0)|0;ze(d);e=db(0)|0;return e|0}else{e=db(32854)|0;return e|0}return 0}function dd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f|0;h=f+8|0;aJ(58984,10,1,a|0)|0;j=gK(g,0,56840,(k=i,i=i+8|0,c[k>>2]=b,k)|0)|0;i=k;do{if((j|0)==0){b=dc(a,c[g>>2]|0)|0;gM(c[g>>2]|0);if((b|0)!=0){l=b;break}b=gK(h,0,83656,(k=i,i=i+8|0,c[k>>2]=d,k)|0)|0;i=k;if((b|0)!=0){l=b;break}b=dc(a,c[h>>2]|0)|0;gM(c[h>>2]|0);if((b|0)!=0){l=b;break}l=dc(a,e)|0}else{l=j}}while(0);aJ(82768,3,1,a|0)|0;i=f;return l|0}function de(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=aL(63)|0;e=bJ(b|0,80928)|0;if((e|0)==0){aL(d|0)|0;f=gE(c[(bX()|0)>>2]|0)|0;return f|0}aJ(80128,10,1,e|0)|0;b=c[a+4>>2]|0;if((b|0)!=0){a=b;do{dd(e,c[a+8>>2]|0,c[a+12>>2]|0,c[a+20>>2]|0)|0;a=c[a>>2]|0;}while((a|0)!=0)}aJ(79208,2,1,e|0)|0;cj(e|0,0,0)|0;aB(e|0)|0;aL(d|0)|0;f=0;return f|0}function df(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=dC(a,c,d)|0;if((e|0)==0){f=0;return f|0}dJ(e);f=de(a,b)|0;return f|0}function dg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=gV(c[a+20>>2]|0,78232,0)|0;if((g|0)==0){h=db(54)|0;return h|0}a=gV(g,b,0)|0;gM(g);if((a|0)==0){h=db(54)|0;return h|0}g=g1(a,1,5)|0;gM(a);if((g|0)==0){h=db(54)|0;return h|0}else{a=hc(4,d,e,f,g)|0;g4(g);h=a;return h|0}return 0}function dh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;c[b>>2]=0;c[d>>2]=0;l=gV(e,78232,0)|0;if((l|0)==0){m=db(54)|0;i=f;return m|0}e=gV(l,77280,0)|0;n=gV(l,76504,0)|0;o=gV(l,75448,0)|0;p=gV(l,74736,0)|0;gM(l);if((e|0)==0|(n|0)==0|(o|0)==0|(p|0)==0){gM(e);gM(n);gM(o);gM(p);m=db(54)|0;i=f;return m|0}l=g1(e,1,5)|0;gM(e);e=g1(n,1,5)|0;gM(n);n=g1(o,1,5)|0;gM(o);o=g1(p,1,5)|0;gM(p);if((l|0)==0|(e|0)==0|(n|0)==0|(o|0)==0){g4(l);g4(e);g4(n);g4(o);m=db(54)|0;i=f;return m|0}c[d>>2]=0;hc(5,0,0,g,l)|0;c[d>>2]=(c[g>>2]|0)+4+(c[d>>2]|0);hc(5,0,0,h,e)|0;c[d>>2]=(c[h>>2]|0)+4+(c[d>>2]|0);hc(5,0,0,j,n)|0;c[d>>2]=(c[j>>2]|0)+4+(c[d>>2]|0);hc(5,0,0,k,o)|0;p=(c[k>>2]|0)+4+(c[d>>2]|0)|0;c[d>>2]=p;q=zd(p)|0;c[b>>2]=q;if((q|0)==0){g4(l);g4(e);g4(n);g4(o);m=db(32854)|0;i=f;return m|0}else{b=c[d>>2]|0;a[q]=(c[g>>2]|0)>>>24&255;a[q+1|0]=(c[g>>2]|0)>>>16&255;a[q+2|0]=(c[g>>2]|0)>>>8&255;a[q+3|0]=c[g>>2]&255;d=q+4|0;p=b-4|0;hc(5,d,p,0,l)|0;d=c[g>>2]|0;a[q+(d+4)|0]=(c[h>>2]|0)>>>24&255;a[q+(d+5)|0]=(c[h>>2]|0)>>>16&255;a[q+(d+6)|0]=(c[h>>2]|0)>>>8&255;a[q+(d+7)|0]=c[h>>2]&255;g=d+8|0;b=q+g|0;r=p-d-4|0;hc(5,b,r,0,e)|0;b=c[h>>2]|0;h=b+g|0;g=r-b|0;a[q+h|0]=(c[j>>2]|0)>>>24&255;a[q+(h+1)|0]=(c[j>>2]|0)>>>16&255;a[q+(h+2)|0]=(c[j>>2]|0)>>>8&255;a[q+(h+3)|0]=c[j>>2]&255;b=h+4|0;h=q+b|0;r=g-4|0;hc(5,h,r,0,n)|0;r=c[j>>2]|0;j=r+b|0;a[q+j|0]=(c[k>>2]|0)>>>24&255;a[q+(j+1)|0]=(c[k>>2]|0)>>>16&255;a[q+(j+2)|0]=(c[k>>2]|0)>>>8&255;a[q+(j+3)|0]=c[k>>2]&255;k=q+(j+4)|0;j=g-8-r|0;hc(5,k,j,0,o)|0;g4(l);g4(e);g4(n);g4(o);m=db(0)|0;i=f;return m|0}return 0}function di(d,e,f,g,h,j,k,l){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;m=i;i=i+16|0;n=m|0;o=m+8|0;p=gK(o,0,73992,(q=i,i=i+56|0,c[q>>2]=e,c[q+8>>2]=f,c[q+16>>2]=g,c[q+24>>2]=h,c[q+32>>2]=j,c[q+40>>2]=k,c[q+48>>2]=l,q)|0)|0;i=q;if((p|0)!=0){r=p;i=m;return r|0}p=dC(d,e,f)|0;if((p|0)!=0){dJ(p)}p=g$(c[o>>2]|0,0,n)|0;do{if((c[n>>2]|0)==8){if((a3(p|0,73512,8)|0)!=0){break}f=d+4|0;e=1;while(1){q=e>>>0<(gW(c[o>>2]|0)|0)>>>0;s=c[o>>2]|0;if(!q){t=108;break}u=gX(s,e)|0;q=g$(u,0,n)|0;if((c[n>>2]|0)!=7){t=91;break}if((a3(q|0,72248,7)|0)!=0){t=91;break}v=gV(u,71808,0)|0;w=gV(u,71496,0)|0;x=gV(u,70880,0)|0;gM(u);if((v|0)==0|(w|0)==0|(x|0)==0){t=93;break}q=g$(v,1,n)|0;if((q|0)==0){t=95;break}y=zd((c[n>>2]|0)+1|0)|0;if((y|0)==0){t=97;break}Ad(y|0,q|0,c[n>>2]|0);a[y+(c[n>>2]|0)|0]=0;gM(v);q=g$(w,1,n)|0;if((q|0)==0){t=99;break}z=zd((c[n>>2]|0)+1|0)|0;if((z|0)==0){t=101;break}Ad(z|0,q|0,c[n>>2]|0);a[z+(c[n>>2]|0)|0]=0;gM(w);q=zd(32)|0;A=q;if((q|0)==0){t=103;break}c[q+8>>2]=y;c[q+12>>2]=z;b[q+16>>1]=0;l=q+20|0;c[l>>2]=x;k=c[f>>2]|0;j=q;c[j>>2]=k;if((k|0)!=0){c[k+4>>2]=j}c[q+4>>2]=f;c[f>>2]=A;if((dh(q+24|0,q+28|0,c[l>>2]|0)|0)==0){e=e+1|0}else{t=107;break}}if((t|0)==95){gM(v);gM(w);gM(x);gM(c[o>>2]|0);r=db(54)|0;i=m;return r|0}else if((t|0)==97){gM(v);gM(w);gM(x);gM(c[o>>2]|0);r=db(32854)|0;i=m;return r|0}else if((t|0)==99){ze(y);gM(w);gM(x);gM(c[o>>2]|0);r=db(54)|0;i=m;return r|0}else if((t|0)==91){gM(u);gM(c[o>>2]|0);r=db(54)|0;i=m;return r|0}else if((t|0)==93){gM(v);gM(w);gM(x);gM(c[o>>2]|0);r=db(54)|0;i=m;return r|0}else if((t|0)==101){ze(y);gM(w);gM(x);gM(c[o>>2]|0);r=db(32854)|0;i=m;return r|0}else if((t|0)==103){ze(y);ze(z);gM(x);gM(c[o>>2]|0);r=db(32854)|0;i=m;return r|0}else if((t|0)==107){gM(c[o>>2]|0);dJ(A);r=db(54)|0;i=m;return r|0}else if((t|0)==108){gM(s);r=db(0)|0;i=m;return r|0}}}while(0);gM(c[o>>2]|0);r=db(54)|0;i=m;return r|0}function dj(a){a=a|0;return c[a+20>>2]|0}function dk(a){a=a|0;return c[a+12>>2]|0}function dl(a){a=a|0;return c[a+16>>2]|0}function dm(a){a=a|0;return c[a+48>>2]|0}function dn(a){a=a|0;return c[a+280>>2]|0}function dp(a){a=a|0;return c[(c[a+296>>2]|0)+52>>2]|0}function dq(b,d){b=b|0;d=d|0;var e=0;a[d]=0;e=c[b+248>>2]|0;if((e|0)==0){return}dA(d,c[e+8>>2]|0);return}function dr(a){a=a|0;var b=0,d=0;b=c[a+248>>2]|0;if((b|0)==0){d=0;return d|0}d=c[b+16>>2]|0;return d|0}function ds(a){a=a|0;return c[a+44>>2]|0}function dt(a){a=a|0;return c[a+40>>2]|0}function du(a){a=a|0;return c[a+24>>2]|0}function dv(a){a=a|0;return c[a+16>>2]|0}function dw(){var a=0;a=zd(96)|0;c[a>>2]=20;c[a+4>>2]=82;c[a+8>>2]=12;c[a+12>>2]=12;c[a+16>>2]=50;c[a+20>>2]=4;c[a+24>>2]=20;c[a+28>>2]=12;c[a+32>>2]=8;c[a+36>>2]=10;c[a+40>>2]=40;c[a+48>>2]=16;c[a+44>>2]=24;c[a+52>>2]=6;c[a+56>>2]=32;c[a+60>>2]=14;c[a+64>>2]=0;c[a+68>>2]=0;c[a+72>>2]=14;c[a+76>>2]=2;c[a+80>>2]=6;c[a+84>>2]=0;c[a+88>>2]=0;c[a+92>>2]=0;return a|0}function dx(a){a=a|0;return(c[(c[a+296>>2]|0)+44>>2]|0)==0|0}function dy(a){a=a|0;return dz(a)|0}function dz(a){a=a|0;var b=0;if((a|0)==0){b=0}else{b=a&65535|536870912}return b|0}function dA(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=e;e=b;b=0;while(1){if((b|0)>=5){break}h=0;while(1){if((h|0)>=4){break}bk(e|0,70520,(j=i,i=i+8|0,c[j>>2]=d[g+((b<<2)+h)|0]|0,j)|0)|0;i=j;e=e+2|0;h=h+1|0}h=e;e=h+1|0;a[h]=32;b=b+1|0}e=e-1|0;a[e]=0;i=f;return}function dB(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+24|0;g=f|0;h=b;b=dC(a,d,e)|0;if((b|0)==0){j=0;k=j;i=f;return k|0}ik(2,g|0,c[b+24>>2]|0,c[b+28>>2]|0);dA(h,g|0);j=h;k=j;i=f;return k|0}function dC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a;a=b;b=d;do{if((a|0)!=0){if((b|0)==0){break}d=c[e+4>>2]|0;while(1){if((d|0)==0){f=173;break}if((a1(c[d+8>>2]|0,a|0)|0)==0){if((a1(c[d+12>>2]|0,b|0)|0)==0){f=170;break}}d=c[d>>2]|0}if((f|0)==173){g=0;h=g;return h|0}else if((f|0)==170){g=d;h=g;return h|0}}}while(0);g=0;h=g;return h|0}function dD(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b;b=dC(a,d,e)|0;if((b|0)==0){g=0;h=g;return h|0}ik(2,f,c[b+24>>2]|0,c[b+28>>2]|0);g=f;h=g;return h|0}function dE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=bJ(b|0,80256)|0;if((d|0)!=0){e=dF(a,d)|0;a=d;aB(a|0)|0;f=e;g=f;return g|0}else{e=gE(c[(bX()|0)>>2]|0)|0;f=e;g=f;return g|0}return 0}function dF(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+96|0;g=f|0;h=f+80|0;j=f+88|0;k=d;d=e;if((d|0)==0){l=dG(0)|0;m=l;i=f;return m|0}dH(k);if((aR(aY(d|0)|0,g|0)|0)!=0){n=gE(c[(bX()|0)>>2]|0)|0;l=n;m=l;i=f;return m|0}e=zd(c[g+36>>2]|0)|0;do{if((e|0)==0){if((c[g+36>>2]|0)<=0){break}l=dG(32854)|0;m=l;i=f;return m|0}}while(0);if((b6(e|0,c[g+36>>2]|0,1,d|0)|0)!=1){n=gE(c[(bX()|0)>>2]|0)|0;ze(e);l=n;m=l;i=f;return m|0}n=gH(j,e,c[g+36>>2]|0,0)|0;ze(e);if((n|0)!=0){l=n;m=l;i=f;return m|0}e=g$(c[j>>2]|0,0,h)|0;do{if((c[h>>2]|0)==8){if((a3(e|0,71824,8)|0)!=0){break}g=1;while(1){if((g|0)>=(gW(c[j>>2]|0)|0)){o=230;break}p=gX(c[j>>2]|0,g)|0;e=g$(p,0,h)|0;if((c[h>>2]|0)!=7){o=209;break}if((a3(e|0,67952,7)|0)!=0){o=209;break}q=gV(p,64984,0)|0;r=gV(p,63192,0)|0;s=gV(p,61480,0)|0;gM(p);if((q|0)==0){o=213;break}if((r|0)==0){o=213;break}if((s|0)==0){o=213;break}e=g$(q,1,h)|0;if((e|0)==0){o=215;break}t=zd((c[h>>2]|0)+1|0)|0;if((t|0)==0){o=217;break}Ad(t|0,e|0,c[h>>2]|0);a[t+(c[h>>2]|0)|0]=0;gM(q);e=g$(r,1,h)|0;if((e|0)==0){o=219;break}u=zd((c[h>>2]|0)+1|0)|0;if((u|0)==0){o=221;break}Ad(u|0,e|0,c[h>>2]|0);a[u+(c[h>>2]|0)|0]=0;gM(r);v=zd(32)|0;if((v|0)==0){o=223;break}c[v+8>>2]=t;c[v+12>>2]=u;b[v+16>>1]=0;c[v+20>>2]=s;c[v>>2]=c[k+4>>2];if((c[v>>2]|0)!=0){c[(c[v>>2]|0)+4>>2]=v}c[v+4>>2]=k+4;c[k+4>>2]=v;n=dI(v+24|0,v+28|0,c[v+20>>2]|0)|0;if((n|0)!=0){o=227;break}g=g+1|0}if((o|0)==209){gM(p);gM(c[j>>2]|0);l=dG(54)|0;m=l;i=f;return m|0}else if((o|0)==215){gM(q);gM(r);gM(s);gM(c[j>>2]|0);l=dG(54)|0;m=l;i=f;return m|0}else if((o|0)==213){gM(q);gM(r);gM(s);gM(c[j>>2]|0);l=dG(54)|0;m=l;i=f;return m|0}else if((o|0)==217){gM(q);gM(r);gM(s);gM(c[j>>2]|0);l=dG(32854)|0;m=l;i=f;return m|0}else if((o|0)==219){ze(t);gM(r);gM(s);gM(c[j>>2]|0);l=dG(54)|0;m=l;i=f;return m|0}else if((o|0)==221){ze(t);gM(r);gM(s);gM(c[j>>2]|0);l=dG(32854)|0;m=l;i=f;return m|0}else if((o|0)==223){ze(t);ze(u);gM(s);gM(c[j>>2]|0);l=dG(32854)|0;m=l;i=f;return m|0}else if((o|0)==227){gM(c[j>>2]|0);dJ(v);l=dG(54)|0;m=l;i=f;return m|0}else if((o|0)==230){gM(c[j>>2]|0);l=dG(0)|0;m=l;i=f;return m|0}}}while(0);gM(c[j>>2]|0);l=dG(54)|0;m=l;i=f;return m|0}function dG(a){a=a|0;return d3(32,a)|0}function dH(a){a=a|0;var b=0;b=a;while(1){if((c[b+4>>2]|0)==0){break}dJ(c[b+4>>2]|0)}return}function dI(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b;b=d;d=5;c[l>>2]=0;c[b>>2]=0;m=gV(e,76744,0)|0;if((m|0)==0){n=dG(54)|0;o=n;i=f;return o|0}e=gV(m,70272,0)|0;p=gV(m,70200,0)|0;q=gV(m,69824,0)|0;r=gV(m,69528,0)|0;gM(m);do{if((e|0)!=0){if((p|0)==0){break}if((q|0)==0){break}if((r|0)==0){break}m=g1(e,1,5)|0;gM(e);s=g1(p,1,5)|0;gM(p);t=g1(q,1,5)|0;gM(q);u=g1(r,1,5)|0;gM(r);do{if((m|0)!=0){if((s|0)==0){break}if((t|0)==0){break}if((u|0)==0){break}c[b>>2]=0;v=d;w=m;hc(v,0,0,g,w)|0;w=b;c[w>>2]=(c[w>>2]|0)+((c[g>>2]|0)+4);w=d;v=s;hc(w,0,0,h,v)|0;v=b;c[v>>2]=(c[v>>2]|0)+((c[h>>2]|0)+4);v=d;w=t;hc(v,0,0,j,w)|0;w=b;c[w>>2]=(c[w>>2]|0)+((c[j>>2]|0)+4);w=d;v=u;hc(w,0,0,k,v)|0;v=b;c[v>>2]=(c[v>>2]|0)+((c[k>>2]|0)+4);c[l>>2]=zd(c[b>>2]|0)|0;if((c[l>>2]|0)==0){g4(m);g4(s);g4(t);g4(u);n=dG(32854)|0;o=n;i=f;return o|0}v=c[l>>2]|0;w=c[b>>2]|0;a[v|0]=(c[g>>2]|0)>>>24&255;a[v+1|0]=(c[g>>2]|0)>>>16&255;a[v+2|0]=(c[g>>2]|0)>>>8&255;a[v+3|0]=c[g>>2]&255;v=v+4|0;w=w-4|0;x=d;y=v;z=w;A=m;hc(x,y,z,0,A)|0;v=v+(c[g>>2]|0)|0;w=w-(c[g>>2]|0)|0;a[v|0]=(c[h>>2]|0)>>>24&255;a[v+1|0]=(c[h>>2]|0)>>>16&255;a[v+2|0]=(c[h>>2]|0)>>>8&255;a[v+3|0]=c[h>>2]&255;v=v+4|0;w=w-4|0;A=d;z=v;y=w;x=s;hc(A,z,y,0,x)|0;v=v+(c[h>>2]|0)|0;w=w-(c[h>>2]|0)|0;a[v|0]=(c[j>>2]|0)>>>24&255;a[v+1|0]=(c[j>>2]|0)>>>16&255;a[v+2|0]=(c[j>>2]|0)>>>8&255;a[v+3|0]=c[j>>2]&255;v=v+4|0;w=w-4|0;x=d;y=v;z=w;A=t;hc(x,y,z,0,A)|0;v=v+(c[j>>2]|0)|0;w=w-(c[j>>2]|0)|0;a[v|0]=(c[k>>2]|0)>>>24&255;a[v+1|0]=(c[k>>2]|0)>>>16&255;a[v+2|0]=(c[k>>2]|0)>>>8&255;a[v+3|0]=c[k>>2]&255;v=v+4|0;w=w-4|0;A=d;z=v;y=w;x=u;hc(A,z,y,0,x)|0;v=v+(c[k>>2]|0)|0;w=w-(c[k>>2]|0)|0;g4(m);g4(s);g4(t);g4(u);n=dG(0)|0;o=n;i=f;return o|0}}while(0);g4(m);g4(s);g4(t);g4(u);n=dG(54)|0;o=n;i=f;return o|0}}while(0);gM(e);gM(p);gM(q);gM(r);n=dG(54)|0;o=n;i=f;return o|0}function dJ(a){a=a|0;var b=0,d=0,e=0;b=a;ze(c[b+8>>2]|0);ze(c[b+12>>2]|0);gM(c[b+20>>2]|0);ze(c[b+24>>2]|0);c[c[b+4>>2]>>2]=c[b>>2];if((c[b>>2]|0)==0){d=b;e=d;ze(e);return}c[(c[b>>2]|0)+4>>2]=c[b+4>>2];d=b;e=d;ze(e);return}function dK(a){a=a|0;var b=0;b=a;while(1){if((c[b+12>>2]|0)==0){break}dL(c[b+12>>2]|0)}return}function dL(a){a=a|0;var b=0;b=a;if((b|0)==0){return}ze(c[b+8>>2]|0);ze(c[b+12>>2]|0);c[c[b+4>>2]>>2]=c[b>>2];if((c[b>>2]|0)!=0){c[(c[b>>2]|0)+4>>2]=c[b+4>>2]}ze(b);return}function dM(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=a;a=b;b=d;d=e;if((dN(f,a,b)|0)==0){e=f;f=a;g=b;dO(e,f,g)|0;g=zd(12)|0;c[g>>2]=bP(a|0)|0;c[g+4>>2]=bP(b|0)|0;c[g+8>>2]=0;c[d>>2]=g;h=dG(0)|0;i=h;return i|0}if((d|0)!=0){c[d>>2]=0}h=dG(32803)|0;i=h;return i|0}function dN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=b;b=d;d=c[a+12>>2]|0;while(1){if((d|0)==0){f=319;break}if((a1(c[d+8>>2]|0,e|0)|0)==0){if((a1(c[d+12>>2]|0,b|0)|0)==0){f=317;break}}d=c[d>>2]|0}if((f|0)==317){g=d;h=g;return h|0}else if((f|0)==319){g=0;h=g;return h|0}return 0}function dO(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;d=dN(e,a,b)|0;if((d|0)!=0){f=0;g=f;return g|0}d=zd(16)|0;if((d|0)==0){f=0;g=f;return g|0}c[d+8>>2]=bP(a|0)|0;c[d+12>>2]=bP(b|0)|0;c[d>>2]=c[e+12>>2];c[e+12>>2]=d;if((c[d>>2]|0)!=0){c[(c[d>>2]|0)+4>>2]=d}c[d+4>>2]=e+12;f=d;g=f;return g|0}function dP(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=c[7798]|0;g=gH(e,f,Ab(c[7798]|0)|0,0)|0;if((g|0)!=0){h=g;j=h;i=b;return j|0}g=h1(d,c[e>>2]|0)|0;gM(c[e>>2]|0);if((g|0)!=0){h=g;j=h;i=b;return j|0}else{c[a+8>>2]=gV(c[d>>2]|0,61480,0)|0;gM(c[d>>2]|0);h=dG(0)|0;j=h;i=b;return j|0}return 0}function dQ(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;if((d|0)!=0){dL(dN(d,c[a>>2]|0,c[a+4>>2]|0)|0)}ze(c[a>>2]|0);ze(c[a+4>>2]|0);gM(c[a+8>>2]|0);ze(a);return}function dR(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;g=dS(d,f)|0;if((g|0)!=0){c[f>>2]=dT(a,b,g)|0;b=g;aB(b|0)|0;h=c[f>>2]|0;j=h;i=e;return j|0}else{h=c[f>>2]|0;j=h;i=e;return j|0}return 0}function dS(a,b){a=a|0;b=b|0;var d=0,e=0;d=b;b=aL(63)|0;e=bJ(a|0,70656)|0;do{if((e|0)==0){if((d|0)==0){break}c[d>>2]=gE(c[(bX()|0)>>2]|0)|0}}while(0);aL(b|0)|0;return e|0}function dT(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;f=a;a=b;b=d;d=a;g=dG(55)|0;if((d|0)==0){h=f;j=a;dQ(h,j);k=g;i=e;return k|0}if((f|0)==0){h=f;j=a;dQ(h,j);k=g;i=e;return k|0}if((b|0)==0){h=f;j=a;dQ(h,j);k=g;i=e;return k|0}b9(b|0,58112,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0)|0;i=l;m=c[f+4>>2]|0;while(1){if((m|0)==0){break}do{if((a1(c[m+8>>2]|0,c[d>>2]|0)|0)!=0){n=364}else{if((a1(c[m+12>>2]|0,c[d+4>>2]|0)|0)!=0){n=364;break}}}while(0);if((n|0)==364){n=0;o=b;p=c[m+8>>2]|0;q=c[m+12>>2]|0;r=c[m+20>>2]|0;dU(o,p,q,r)|0}m=c[m>>2]|0}dU(b,c[d>>2]|0,c[d+4>>2]|0,c[d+8>>2]|0)|0;b9(b|0,55992,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0)|0;i=l;cj(b|0,0,0)|0;g=dF(f,b)|0;h=f;j=a;dQ(h,j);k=g;i=e;return k|0}function dU(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f|0;h=f+8|0;j=a;b9(j|0,73672,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0)|0;i=a;k=gK(g,0,72984,(a=i,i=i+8|0,c[a>>2]=b,a)|0)|0;i=a;b=k;if((b|0)==0){b=d2(j,c[g>>2]|0)|0;gM(c[g>>2]|0)}if((b|0)==0){g=gK(h,0,71936,(a=i,i=i+8|0,c[a>>2]=d,a)|0)|0;i=a;b=g}if((b|0)==0){b=d2(j,c[h>>2]|0)|0;gM(c[h>>2]|0)}if((b|0)!=0){l=j;m=b9(l|0,71616,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0)|0;i=a;n=b;i=f;return n|0}b=d2(j,e)|0;l=j;m=b9(l|0,71616,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0)|0;i=a;n=b;i=f;return n|0}function dV(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+8|0;g=f|0;h=dS(b,g)|0;if((h|0)!=0){c[g>>2]=dW(a,h,d,e)|0;e=h;aB(e|0)|0;j=c[g>>2]|0;k=j;i=f;return k|0}else{j=c[g>>2]|0;k=j;i=f;return k|0}return 0}function dW(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=a;c[g>>2]=0;a=dM(h,d,e,g)|0;if((c[g>>2]|0)==0){j=a;i=f;return j|0}dP(c[g>>2]|0)|0;a=dT(h,c[g>>2]|0,b)|0;j=a;i=f;return j|0}function dX(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=bJ(b|0,80256)|0;if((f|0)!=0){g=dY(a,f,d,e)|0;e=f;aB(e|0)|0;h=g;i=h;return i|0}else{g=gE(c[(bX()|0)>>2]|0)|0;h=g;i=h;return i|0}return 0}function dY(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+1024|0;g=f|0;h=f+1e3|0;j=b;b=c;c=d;d=e;e=1e3;if((b|0)==0){k=dG(0)|0;l=k;i=f;return l|0}L461:while(1){if((bb(g|0,e|0,b|0)|0)==0){break}m=g|0;n=be(m|0,9)|0;if((n|0)==0){continue}a[n]=0;o=n+1|0;n=be(o|0,9)|0;if((n|0)==0){continue}a[n]=0;p=n+1|0;n=be(p|0,9)|0;if((n|0)==0){continue}a[n]=0;q=n+1|0;n=be(q|0,9)|0;do{if((n|0)!=0){a[n]=0;r=n+1|0;s=be(r|0,13)|0;if((s|0)==0){s=be(r|0,10)|0}if((s|0)!=0){a[s]=0;break}else{continue L461}}else{s=be(q|0,13)|0;if((s|0)==0){s=be(q|0,10)|0}if((s|0)!=0){a[s]=0;r=0;break}else{continue L461}}}while(0);if((Ab(q|0)|0)!=40){continue}n=0;t=0;while(1){if((t|0)>=40){break}u=(dZ(a[q+t|0]|0)|0)<<4;v=n;n=v+1|0;a[h+v|0]=u+(dZ(a[q+(t+1)|0]|0)|0)&255;t=t+2|0}ec(eb(d8(j,m,o,p,0,1,0,c,d)|0,h|0,1,0)|0,r)}k=dG(0)|0;l=k;i=f;return l|0}function dZ(a){a=a|0;var b=0,c=0,d=0;b=a;do{if((b<<24>>24|0)>=48){if((b<<24>>24|0)>57){break}c=(b<<24>>24)-48|0;d=c;return d|0}}while(0);do{if((b<<24>>24|0)>=97){if((b<<24>>24|0)>102){break}c=(b<<24>>24)-97+10|0;d=c;return d|0}}while(0);do{if((b<<24>>24|0)>=65){if((b<<24>>24|0)>70){break}c=(b<<24>>24)-65+10|0;d=c;return d|0}}while(0);c=0;d=c;return d|0}function d_(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=bJ(b|0,83248)|0;if((d|0)!=0){e=d$(a,d)|0;a=d;aB(a|0)|0;f=e;g=f;return g|0}else{e=gE(c[(bX()|0)>>2]|0)|0;f=e;g=f;return g|0}return 0}function d$(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=b;if((f|0)==0){g=dG(0)|0;h=g;i=e;return h|0}b=c[a>>2]|0;while(1){if((b|0)==0){break}if((c[b+44>>2]|0)==0){a=c[b+228>>2]|0;while(1){if((a|0)==0){break}j=c[b+16>>2]|0;k=c[b+20>>2]|0;b9(f|0,82136,(l=i,i=i+24|0,c[l>>2]=c[b+12>>2],c[l+8>>2]=j,c[l+16>>2]=k,l)|0)|0;i=l;k=0;while(1){if((k|0)>=20){break}b9(f|0,80440,(l=i,i=i+8|0,c[l>>2]=d[(c[a+8>>2]|0)+k|0]|0,l)|0)|0;i=l;k=k+1|0}if((c[a+16>>2]|0)!=0){m=c[a+16>>2]|0}else{m=123296}b9(f|0,79704,(l=i,i=i+8|0,c[l>>2]=m,l)|0)|0;i=l;a=c[a>>2]|0}}b=c[b>>2]|0}g=dG(0)|0;h=g;i=e;return h|0}function d0(a,b,d,f,g){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+40|0;j=h|0;k=h+8|0;l=h+16|0;m=h+24|0;n=h+32|0;o=a;a=d;d=g;if((e[a+16>>1]|0|0)!=0){p=dG(55)|0;q=p;i=h;return q|0}c[o>>2]=zd(40)|0;if((c[o>>2]|0)==0){p=dG(32854)|0;q=p;i=h;return q|0}c[b>>2]=40;if((d|0)!=0){b=f;f=d;hb(j,5,b,f,0)|0}else{c[j>>2]=g7(0,0)|0}gK(l,0,77760,(f=i,i=i+8|0,c[f>>2]=c[j>>2],f)|0)|0;i=f;g4(c[j>>2]|0);h_(k,c[l>>2]|0,c[a+20>>2]|0)|0;gM(c[l>>2]|0);l=gV(c[k>>2]|0,76744,0)|0;gM(c[k>>2]|0);k=gV(l,76024,0)|0;a=gV(l,75024,0)|0;gM(l);l=g1(k,1,5)|0;gM(k);k=g1(a,1,5)|0;gM(a);hc(5,0,0,m,l)|0;hc(5,0,0,n,k)|0;Ae(c[o>>2]|0,0,40);hc(5,(c[o>>2]|0)+(20-(c[m>>2]|0))|0,c[m>>2]|0,0,l)|0;hc(5,(c[o>>2]|0)+20+(20-(c[n>>2]|0))|0,c[n>>2]|0,0,k)|0;g4(l);g4(k);p=dG(0)|0;q=p;i=h;return q|0}function d1(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+40|0;j=h|0;k=h+8|0;l=h+16|0;m=h+24|0;n=h+32|0;o=a;a=e;e=f;f=g;do{if((d&65535|0)==0){if((b|0)!=40){break}if((f|0)!=0){g=e;p=f;hb(j,5,g,p,0)|0}else{c[j>>2]=g7(0,0)|0}p=c[j>>2]|0;gK(m,0,77760,(g=i,i=i+8|0,c[g>>2]=p,g)|0)|0;i=g;g4(c[j>>2]|0);p=o;hb(k,5,p,20,0)|0;p=o+20|0;hb(l,5,p,20,0)|0;p=c[k>>2]|0;q=c[l>>2]|0;gK(n,0,74320,(g=i,i=i+16|0,c[g>>2]=p,c[g+8>>2]=q,g)|0)|0;i=g;g4(c[k>>2]|0);g4(c[l>>2]|0);g=h$(c[n>>2]|0,c[m>>2]|0,a)|0;gM(c[m>>2]|0);gM(c[n>>2]|0);r=g;s=r;i=h;return s|0}}while(0);r=dG(55)|0;s=r;i=h;return s|0}function d2(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a;a=b;b=gO(a,3,0,0)|0;f=zd(b)|0;do{if((f|0)==0){if(b>>>0<=0){break}g=dG(32854)|0;h=g;i=d;return h|0}}while(0);gO(a,3,f,b)|0;b9(e|0,70976,(e=i,i=i+8|0,c[e>>2]=f,e)|0)|0;i=e;ze(f);g=dG(0)|0;h=g;i=d;return h|0}function d3(a,b){a=a|0;b=b|0;return d4(a,b)|0}function d4(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function d5(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;a=b;do{if((d|0)!=0){b=c[d+24>>2]|0;if((b|0)==0){e=0;break}f=a;if((f|0)==4){e=c[b+32>>2]|0;break}else if((f|0)==2){e=c[b+36>>2]|0;break}else if((f|0)==3){e=c[b+28>>2]|0;break}else{e=0;break}}else{e=0}}while(0);return e|0}function d6(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a;a=b;if((b|0)==0){d=a;e=d;return e|0}f=c[b+24>>2]|0;b=f;while(1){if((b|0)!=0){g=(c[b+24>>2]|0)==(f|0)}else{g=0}if(!g){break}h=0;i=0;L613:do{if((c[a+48>>2]|0)==(c[b+48>>2]|0)){h=0;j=536}else{do{if((c[b+48>>2]|0)!=1){if((c[a+48>>2]|0)==0){if((c[b+48>>2]|0)==2){break}}break L613}}while(0);h=1;j=536}}while(0);do{if((j|0)==536){j=0;k=d7(c[a+248>>2]|0)|0;if((k|0)==(d7(c[b+248>>2]|0)|0)){i=0}else{if((d7(c[b+248>>2]|0)|0)==0){break}i=1}do{if((h|0)!=0){j=547}else{if((i|0)!=0){j=547;break}if((h|0)!=0){break}if((i|0)!=0){break}if((c[(c[b+8>>2]|0)+580>>2]|0)>=(c[(c[a+8>>2]|0)+580>>2]|0)){j=547}}}while(0);if((j|0)==547){j=0;a=b}}}while(0);b=c[b>>2]|0}d=a;e=d;return e|0}function d7(b){b=b|0;var d=0,e=0;d=b;do{if((d|0)!=0){if((c[d+16>>2]|0)==0){e=0;break}e=(a[c[d+16>>2]|0]|0)!=0}else{e=0}}while(0);return e&1|0}function d8(a,b,d,e,f,g,h,i,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;k=a;a=b;b=d;d=e;e=f;f=g;g=h;h=i;i=j;j=1;l=1;m=1;if((g|0)!=0){c[g>>2]=0}do{if((a|0)!=0){if((b|0)==0){break}if((d|0)==0){break}n=k|0;L657:while(1){if((c[n>>2]|0)==0){break}o=a1(c[(c[n>>2]|0)+12>>2]|0,a|0)|0;j=o;if((o|0)>0){p=577;break}if((j|0)==0){o=a1(c[(c[n>>2]|0)+16>>2]|0,b|0)|0;l=o;if((o|0)>0){p=577;break}}do{if((j|0)==0){if((l|0)!=0){break}o=a1(c[(c[n>>2]|0)+20>>2]|0,d|0)|0;m=o;if((o|0)>0){p=577;break L657}}}while(0);do{if((j|0)==0){if((l|0)!=0){break}if((m|0)!=0){break}if(e>>>0<256){p=577;break L657}if((c[(c[n>>2]|0)+44>>2]|0)>>>0>=e>>>0){p=577;break L657}}}while(0);n=c[n>>2]|0}do{if((j|0)==0){if((l|0)!=0){break}if((m|0)!=0){break}if((c[n>>2]|0)==0){break}if(e>>>0>=256){if((e|0)!=(c[(c[n>>2]|0)+44>>2]|0)){break}}do{if(e>>>0<256){if((e|0)==0){break}o=e;if((o|0)==1){q=d6(c[n>>2]|0)|0;r=q;return r|0}else if((o|0)==2|(o|0)==3|(o|0)==4){q=d5(c[n>>2]|0,e)|0;r=q;return r|0}else{q=0;r=q;return r|0}}}while(0);q=c[n>>2]|0;r=q;return r|0}}while(0);if((f|0)==0){q=0;r=q;return r|0}o=go(k,b,d)|0;if((g|0)!=0){c[g>>2]=1}s=d9(a,b,d)|0;c[s>>2]=c[n>>2];if((c[n>>2]|0)!=0){c[(c[n>>2]|0)+4>>2]=s}c[n>>2]=s;c[s+4>>2]=n;if((h|0)!=0){cF[h&31](i,c[n>>2]|0)}if((o|0)!=0){c[s+40>>2]=c[o+16>>2]}if(e>>>0>=256){p=604}else{if((e|0)==0){p=604}}if((p|0)==604){c[s+44>>2]=e}if(e>>>0>=256){c[s+24>>2]=d8(k,a,b,d,0,1,0,h,i)|0}if((e|0)==0){c[s+36>>2]=s;c[s+28>>2]=s;c[s+32>>2]=s}q=c[n>>2]|0;r=q;return r|0}}while(0);q=0;r=q;return r|0}function d9(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=zd(300)|0;if((e|0)!=0){}else{b4(67752,80096,130,86376);return 0}c[e+12>>2]=bP(a|0)|0;c[e+16>>2]=bP(b|0)|0;c[e+20>>2]=bP(d|0)|0;c[e+48>>2]=0;fy(e);d=zd(56)|0;if((d|0)!=0){}else{b4(64800,80096,140,86376);return 0}fT(d);c[e+296>>2]=d;c[e+40>>2]=0;c[e+44>>2]=0;c[e+236>>2]=0;c[e+240>>2]=e;c[e+228>>2]=0;c[e+232>>2]=0;c[e+248>>2]=0;Ae(e+252|0,0,20);c[e+272>>2]=0;c[e+280>>2]=0;c[e+284>>2]=0;c[e+288>>2]=0;c[e+292>>2]=0;c[e+8>>2]=gk()|0;if((c[e+8>>2]|0)!=0){d=1;b=d&1;d=e;b=d|0;c[b>>2]=0;b=e;d=e;a=d+24|0;c[a>>2]=b;b=e;a=b+28|0;c[a>>2]=0;a=e;b=a+32|0;c[b>>2]=0;b=e;a=b+36|0;c[a>>2]=0;a=e;return a|0}b4(63040,80096,158,86376);return 0}function ea(a,b){a=a|0;b=b|0;var d=0;d=a;a=c[d+24>>2]|0;if((b|0)!=0){c[a+32>>2]=d}else{c[a+28>>2]=d}c[a+36>>2]=d;return}function eb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=a;a=b;b=d;d=e;if((d|0)!=0){c[d>>2]=0}do{if((f|0)!=0){if((c[f+24>>2]|0)==0){break}f=c[f+24>>2]|0;e=c[f+228>>2]|0;while(1){if((e|0)==0){break}if((Af(c[e+8>>2]|0,a|0,20)|0)==0){g=640;break}e=c[e>>2]|0}if((g|0)==640){h=e;i=h;return i|0}if((b|0)==0){h=0;i=h;return i|0}if((d|0)!=0){c[d>>2]=1}e=zd(20)|0;if((e|0)!=0){}else{b4(69192,80096,387,86320);return 0}c[e+8>>2]=zd(20)|0;if((c[e+8>>2]|0)!=0){}else{b4(71640,80096,389,86320);return 0}Ad(c[e+8>>2]|0,a|0,20);c[e+12>>2]=f;c[e+16>>2]=0;c[e>>2]=c[f+228>>2];if((c[e>>2]|0)!=0){c[(c[e>>2]|0)+4>>2]=e}c[f+228>>2]=e;c[e+4>>2]=f+228;h=e;i=h;return i|0}}while(0);h=0;i=h;return i|0}function ec(a,b){a=a|0;b=b|0;var d=0,e=0;d=a;a=b;if((d|0)==0){return}ze(c[d+16>>2]|0);if((a|0)!=0){e=bP(a|0)|0}else{e=0}c[d+16>>2]=e;return}function ed(a){a=a|0;var b=0;b=a;c[b+48>>2]=2;fz(b+52|0);c[b+248>>2]=0;Ae(b+252|0,0,20);c[b+272>>2]=0;c[b+280>>2]=0;fV(c[b+296>>2]|0);gl(c[b+8>>2]|0);return}function ee(a){a=a|0;var b=0;b=a;ed(b);c[b+48>>2]=0;return}function ef(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;a=b;b=c[d+12>>2]|0;if((d|0)==(b+228|0)){do{if((c[b+48>>2]|0)==0){if((a|0)==0){break}e=b;eg(e)|0}}while(0);return}if((c[b+48>>2]|0)!=0){f=676}else{if((c[b+248>>2]|0)!=(d|0)){f=676}}if((f|0)==676){ze(c[d+8>>2]|0);ze(c[d+16>>2]|0);c[c[d+4>>2]>>2]=c[d>>2];if((c[d>>2]|0)!=0){c[(c[d>>2]|0)+4>>2]=c[d+4>>2]}ze(d);do{if((c[b+48>>2]|0)==0){if((c[b+228>>2]|0)!=0){break}if((a|0)==0){break}d=b;eg(d)|0}}while(0)}return}function eg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=a;if((c[b+48>>2]|0)!=0){d=1;e=d;return e|0}do{if((c[b+44>>2]|0)==0){a=b;while(1){if((a|0)!=0){f=(c[a+24>>2]|0)==(c[b+24>>2]|0)}else{f=0}if(!f){break}if((c[b+48>>2]|0)!=0){g=695;break}a=c[a>>2]|0}if((g|0)==695){d=1;e=d;return e|0}a=c[b>>2]|0;while(1){if((a|0)!=0){h=(c[a+24>>2]|0)==(c[b+24>>2]|0)}else{h=0}if(!h){g=706;break}if((eg(a)|0)!=0){break}a=c[b>>2]|0}if((g|0)==706){break}d=1;e=d;return e|0}}while(0);ee(b);while(1){if((c[b+228>>2]|0)==0){break}ef(c[b+228>>2]|0,0)}ze(c[b+12>>2]|0);ze(c[b+16>>2]|0);ze(c[b+20>>2]|0);ze(c[b+296>>2]|0);c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+296>>2]=0;do{if((c[b+288>>2]|0)!=0){if((c[b+292>>2]|0)==0){break}cE[c[b+292>>2]&127](c[b+288>>2]|0);c[b+288>>2]=0}}while(0);c[c[b+4>>2]>>2]=c[b>>2];if((c[b>>2]|0)!=0){c[(c[b>>2]|0)+4>>2]=c[b+4>>2]}ze(b);d=0;e=d;return e|0}function eh(a){a=a|0;var b=0;b=a;a=c[b>>2]|0;while(1){if((a|0)==0){break}ee(a);a=c[a>>2]|0}while(1){if((c[b>>2]|0)==0){break}eg(c[b>>2]|0)|0}return}function ei(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=a;a=b;b=d;do{if((f|0)==4){if(a>>>0>0){break}d=f<<16|a<<8|b;if((c[30624]|0)==0){g=734}else{if((c[30624]|0)>>>0>d>>>0){g=734}}if((g|0)==734){c[30624]=d}eX();eI();fS();h=ej(0)|0;j=h;i=e;return j|0}}while(0);b9(c[q>>2]|0,65240,(g=i,i=i+48|0,c[g>>2]=f,c[g+8>>2]=a,c[g+16>>2]=b,c[g+24>>2]=4,c[g+32>>2]=0,c[g+40>>2]=0,g)|0)|0;i=g;h=ej(55)|0;j=h;i=e;return j|0}function ej(a){a=a|0;return eA(32,a)|0}function ek(){return 78720}function el(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;f=b;b=d;d=70984;g=b&2;h=b&4;j=zd(8)|0;k=j;if((b&1|0)!=0){a[k]=63;k=k+1|0}if((g|0)!=0){l=745}else{if((h|0)!=0){l=745}}if((l|0)==745){a[k]=118;k=k+1|0;if((g|0)!=0){a[k]=50;k=k+1|0}if((h|0)!=0){a[k]=51;k=k+1|0}a[k]=63;k=k+1|0}a[k]=0;k=Ab(d|0)|0;h=k+(Ab(j|0)|0)|0;k=zd(h+(Ab(f|0)|0)-3|0)|0;if((k|0)!=0){h=k;g=d;d=j;l=f;bk(h|0,g|0,(g=i,i=i+16|0,c[g>>2]=d,c[g+8>>2]=l,g)|0)|0;i=g;ze(j);m=k;n=m;i=e;return n|0}else{ze(j);m=0;n=m;i=e;return n|0}return 0}function em(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=c;c=0;e=aZ(b|0,67520)|0;e=e+4|0;do{if((e|0)!=0){if((a[e]|0)!=63){break}c=1;e=e+1|0}}while(0);do{if((e|0)!=0){if((a[e]|0)!=118){break}e=e+1|0;while(1){if((a[e]|0)!=0){f=(a[e]|0)!=63}else{f=0}if(!f){break}b=a[e]|0;if((b|0)==50){c=c|2}else if((b|0)==51){c=c|4}e=e+1|0}}}while(0);do{if((d&4|0)!=0){if((c&4|0)==0){break}g=3;h=g;return h|0}}while(0);do{if((d&2|0)!=0){if((c&2|0)==0){break}g=2;h=g;return h|0}}while(0);do{if((d&1|0)!=0){if((c&1|0)==0){break}g=1;h=g;return h|0}}while(0);g=0;h=g;return h|0}function en(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=d;d=e;e=f;f=0;c[g>>2]=0;c[d>>2]=0;h=aZ(b|0,64704)|0;if((h|0)==0){i=0;j=i;return j|0}b=h+16|0;while(1){k=1;l=0;while(1){if((l|0)>=8){break}if((a[b+l|0]|0)!=32){if((a[b+l|0]|0)!=9){m=793;break}}l=l+1|0}if((m|0)==793){m=0;k=0}if((k|0)==0){break}if((a3(b|0,62920,8)|0)==0){f=f|1}if((a3(b|0,61368,8)|0)==0){f=f|2}if((a3(b|0,59688,8)|0)==0){f=f|4}b=b+8|0}c[g>>2]=h;c[d>>2]=b;do{if((e&4|0)!=0){if((f&4|0)==0){break}i=3;j=i;return j|0}}while(0);do{if((e&2|0)!=0){if((f&2|0)==0){break}i=2;j=i;return j|0}}while(0);do{if((e&1|0)!=0){if((f&1|0)==0){break}i=1;j=i;return j|0}}while(0);i=0;j=i;return j|0}function eo(b){b=b|0;var c=0,d=0,e=0;c=b;b=aZ(c|0,67520)|0;L986:do{if((b|0)!=0){do{if((a3(b|0,57864,8)|0)!=0){if((a3(b|0,55816,8)|0)==0){d=828;break}if((a3(b|0,83056,5)|0)==0){e=2;break L986}if((a3(b|0,81848,5)|0)==0){e=2;break L986}if((a3(b|0,80328,9)|0)==0){e=7;break L986}if((a3(b|0,79528,9)|0)==0){e=8;break L986}if((a3(b|0,78592,11)|0)!=0){break}else{e=9;break L986}}else{d=828}}while(0);L1010:do{if((d|0)==828){switch(a[b+8|0]|0){case 67:{e=3;break L986;break};case 75:{e=4;break L986;break};case 82:{e=5;break L986;break};case 83:{e=6;break L986;break};case 68:{e=8;break L986;break};default:{break L1010}}}}while(0);e=10}else{if((aZ(c|0,64704)|0)!=0){e=1;break}else{e=0;break}}}while(0);return e|0}function ep(a){a=a|0;var b=0,c=0;b=aZ(a|0,67520)|0;do{if((b|0)!=0){if((a3(b|0,57864,8)|0)==0){c=3;break}if((a3(b|0,55816,8)|0)==0){c=2;break}if((a3(b|0,77616,8)|0)!=0){c=0;break}else{c=1;break}}else{c=0}}while(0);return c|0}function eq(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=b;b=e;e=ej(0)|0;g=a;a=0;h=0;do{if((g|0)!=0){if((a3(g|0,57864,8)|0)!=0){i=860;break}if((Ab(g|0)|0)>>>0<21){break}a=zd(9)|0;h=a;j=eE(a,g+9|0,12)|0;if(j>>>0<4){break}c[f>>2]=(d[a|0]|0)<<24|(d[a+1|0]|0)<<16|(d[a+2|0]|0)<<8|(d[a+3|0]|0);a=a+4|0;j=j-4|0;if(j>>>0<4){break}c[b>>2]=(d[a|0]|0)<<24|(d[a+1|0]|0)<<16|(d[a+2|0]|0)<<8|(d[a+3|0]|0);a=a+4|0;j=j-4|0;ze(h);k=ej(0)|0;l=k;return l|0}else{i=860}}while(0);e=ej(55)|0;k=e;l=k;return l|0}function er(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;i=i+8|0;k=j|0;l=b;b=d;d=e;e=f;f=g;g=h;h=Ab(d|0)|0;m=h+1+(fv(e)|0)|0;n=0;o=(c[b+8>>2]|0)+308|0;p=(c[(c[b+8>>2]|0)+564>>2]|0)*20|0;q=0;r=0;s=5;t=c[b+280>>2]|0;do{if((c[b+48>>2]|0)==1){if((c[(c[b+8>>2]|0)+12>>2]|0)==0){break}u=jo(h+1|0)|0;if((u|0)==0){v=ej(32854)|0;w=v;i=j;return w|0}x=u;y=d;Ag(x|0,y|0)|0;c[l>>2]=0;if((t|0)==2){z=1}else{z=(t|0)==3}y=((t|0)==3?8:0)+3+(z?1:0)+20+m+4+p+20|0;x=s;A=c[(c[b+8>>2]|0)+36>>2]|0;hc(x,0,0,k,A)|0;y=y+((c[k>>2]|0)+4)|0;n=zd(y)|0;r=jo(m)|0;do{if((n|0)!=0){if((r|0)==0){break}Ad(r|0,u|0,h|0);a[r+h|0]=0;fw(r+h+1|0,e);A=n;x=y;if((t|0)==1){Ad(A|0,76648,3)}else{if((t|0)==2){Ad(A|0,75976,3)}else{Ad(A|0,74976,3)}}A=A+3|0;x=x-3|0;if((t|0)==3){a[A|0]=(c[b+40>>2]|0)>>>24&255;a[A+1|0]=(c[b+40>>2]|0)>>>16&255;a[A+2|0]=(c[b+40>>2]|0)>>>8&255;a[A+3|0]=c[b+40>>2]&255;A=A+4|0;x=x-4|0;a[A|0]=(c[b+44>>2]|0)>>>24&255;a[A+1|0]=(c[b+44>>2]|0)>>>16&255;a[A+2|0]=(c[b+44>>2]|0)>>>8&255;a[A+3|0]=c[b+44>>2]&255;A=A+4|0;x=x-4|0}if((t|0)==2){B=904}else{if((t|0)==3){B=904}}if((B|0)==904){a[A|0]=f;A=A+1|0;x=x-1|0}a[A|0]=((c[(c[b+8>>2]|0)+24>>2]|0)-1|0)>>>24&255;a[A+1|0]=((c[(c[b+8>>2]|0)+24>>2]|0)-1|0)>>>16&255;a[A+2|0]=((c[(c[b+8>>2]|0)+24>>2]|0)-1|0)>>>8&255;a[A+3|0]=(c[(c[b+8>>2]|0)+24>>2]|0)-1&255;A=A+4|0;x=x-4|0;a[A|0]=(c[(c[b+8>>2]|0)+12>>2]|0)>>>24&255;a[A+1|0]=(c[(c[b+8>>2]|0)+12>>2]|0)>>>16&255;a[A+2|0]=(c[(c[b+8>>2]|0)+12>>2]|0)>>>8&255;a[A+3|0]=c[(c[b+8>>2]|0)+12>>2]&255;A=A+4|0;x=x-4|0;a[A|0]=(c[k>>2]|0)>>>24&255;a[A+1|0]=(c[k>>2]|0)>>>16&255;a[A+2|0]=(c[k>>2]|0)>>>8&255;a[A+3|0]=c[k>>2]&255;A=A+4|0;x=x-4|0;C=s;D=A;E=x;F=c[(c[b+8>>2]|0)+36>>2]|0;hc(C,D,E,0,F)|0;A=A+(c[k>>2]|0)|0;x=x-(c[k>>2]|0)|0;eT(o|0);Ad(A|0,o|0,8);A=A+8|0;x=x-8|0;a[A|0]=m>>>24&255;a[A+1|0]=m>>>16&255;a[A+2|0]=m>>>8&255;a[A+3|0]=m&255;A=A+4|0;x=x-4|0;F=hN(c[o+32>>2]|0,4,0,0)|0;do{if((F|0)==0){F=hM(c[o+32>>2]|0,o|0,16)|0;if((F|0)!=0){break}F=hT(c[o+32>>2]|0,A,m,r,m)|0;if((F|0)!=0){break}A=A+m|0;x=x-m|0;ig(c[o+40>>2]|0);ii(c[o+40>>2]|0,n,A-n|0);Ad(A|0,ij(c[o+40>>2]|0,2)|0,20);A=A+20|0;x=x-20|0;a[A|0]=p>>>24&255;a[A+1|0]=p>>>16&255;a[A+2|0]=p>>>8&255;a[A+3|0]=p&255;A=A+4|0;x=x-4|0;if(p>>>0>0){Ad(A|0,c[(c[b+8>>2]|0)+568>>2]|0,p|0);A=A+p|0;x=x-p|0;ze(c[(c[b+8>>2]|0)+568>>2]|0);c[(c[b+8>>2]|0)+568>>2]=0;c[(c[b+8>>2]|0)+564>>2]=0}if((x|0)==0){}else{b4(74192,73632,600,86272);return 0}E=(((y+2|0)>>>0)/3|0)<<2;q=zd(E+7|0)|0;if((q|0)==0){F=ej(32854)|0;break}Ad(q|0,72416,5);D=q+5|0;C=n;G=y;eC(D,C,G)|0;a[q+(E+5)|0]=46;a[q+(E+6)|0]=0;ze(n);jy(r);c[l>>2]=q;jy(c[(c[b+8>>2]|0)+584>>2]|0);c[(c[b+8>>2]|0)+584>>2]=0;c[(c[b+8>>2]|0)+588>>2]=0;if(m>>>0>0){E=jo(h+1|0)|0;c[(c[b+8>>2]|0)+584>>2]=E;if((c[(c[b+8>>2]|0)+584>>2]|0)!=0){E=c[(c[b+8>>2]|0)+584>>2]|0;G=u;Ag(E|0,G|0)|0}}jy(u);if((g|0)!=0){Ad(g|0,o+96|0,32)}v=ej(0)|0;w=v;i=j;return w|0}}while(0);ze(n);jy(r);jy(u);c[l>>2]=0;v=F;w=v;i=j;return w|0}}while(0);ze(n);jy(r);jy(u);v=ej(32854)|0;w=v;i=j;return w|0}}while(0);v=ej(70)|0;w=v;i=j;return w|0}function es(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=c;c=0;if((e|0)!=0){a[e]=0}f=aZ(b|0,72416)|0;L1145:do{if((f|0)!=0){b=be(f|0,46)|0;if((b|0)!=0){g=b-f|0}else{g=Ab(f|0)|0}f=f+5|0;g=g-5|0;b=(((g+4-1|0)>>>0)/4|0)*3|0;c=zd(b)|0;do{if((c|0)==0){if(b>>>0<=0){break}h=ej(32854)|0;i=h;return i|0}}while(0);b=eE(c,f,g)|0;j=c;k=b;if(k>>>0<3){break}l=a[j+1|0]|0;if(k>>>0<3){break}do{if((d[j|0]|0|0)==0){if((d[j+2|0]|0|0)!=3){break}do{if((d[j+1|0]|0|0)!=1){if((d[j+1|0]|0|0)==2){break}if((d[j+1|0]|0|0)==3){break}break L1145}}while(0);j=j+3|0;k=k-3|0;if((l&255|0)==3){if(k>>>0<8){break L1145}j=j+8|0;k=k-8|0}if((l&255|0)==2){m=979}else{if((l&255|0)==3){m=979}}if((m|0)==979){if(k>>>0<1){break L1145}if((e|0)!=0){a[e]=a[j|0]|0}j=j+1|0;k=k-1|0}ze(c);h=ej(0)|0;i=h;return i|0}}while(0)}}while(0);ze(c);h=ej(55)|0;i=h;return i|0}function et(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;k=i;i=i+40|0;l=k|0;m=k+8|0;n=k+16|0;o=b;b=e;e=f;f=h;h=j;j=0;c[l>>2]=0;p=0;q=0;c[o>>2]=0;c[b>>2]=0;if((f|0)!=0){a[f]=0}r=aZ(g|0,72416)|0;L1207:do{if((r|0)!=0){g=be(r|0,46)|0;if((g|0)!=0){s=g-r|0}else{s=Ab(r|0)|0}r=r+5|0;s=s-5|0;g=(((s+4-1|0)>>>0)/4|0)*3|0;j=zd(g)|0;do{if((j|0)==0){if(g>>>0<=0){break}t=ej(32854)|0;break L1207}}while(0);g=eE(j,r,s)|0;u=j;v=g;w=u;if(v>>>0<3){x=1133;break}y=a[u+1|0]|0;if(v>>>0<3){x=1133;break}do{if((d[u|0]|0|0)==0){if((d[u+2|0]|0|0)!=3){break}do{if((d[u+1|0]|0|0)!=1){if((d[u+1|0]|0|0)==2){break}if((d[u+1|0]|0|0)==3){break}x=1133;break L1207}}while(0);u=u+3|0;v=v-3|0;if((y&255|0)==3){if(v>>>0<8){x=1133;break L1207}u=u+8|0;v=v-8|0}if((y&255|0)==2){x=1028}else{if((y&255|0)==3){x=1028}}if((x|0)==1028){if(v>>>0<1){x=1133;break L1207}if((f|0)!=0){a[f]=a[u|0]|0}u=u+1|0;v=v-1|0}if(v>>>0<4){x=1133;break L1207}z=(d[u|0]|0)<<24|(d[u+1|0]|0)<<16|(d[u+2|0]|0)<<8|(d[u+3|0]|0);u=u+4|0;v=v-4|0;if(v>>>0<4){x=1133;break L1207}A=(d[u|0]|0)<<24|(d[u+1|0]|0)<<16|(d[u+2|0]|0)<<8|(d[u+3|0]|0);u=u+4|0;v=v-4|0;if(v>>>0<4){x=1133;break L1207}B=(d[u|0]|0)<<24|(d[u+1|0]|0)<<16|(d[u+2|0]|0)<<8|(d[u+3|0]|0);u=u+4|0;v=v-4|0;if((B|0)!=0){if(v>>>0<B>>>0){x=1133;break L1207}C=u;D=B;hb(l,5,C,D,0)|0}else{c[l>>2]=g7(0,0)|0}u=u+B|0;v=v-B|0;if(v>>>0<8){x=1133;break L1207}Ad(m|0,u|0,8);u=u+8|0;v=v-8|0;if(v>>>0<4){x=1133;break L1207}B=(d[u|0]|0)<<24|(d[u+1|0]|0)<<16|(d[u+2|0]|0)<<8|(d[u+3|0]|0);u=u+4|0;v=v-4|0;if(v>>>0<B>>>0){x=1133;break L1207}p=zd(B+1|0)|0;if((p|0)==0){t=ej(32854)|0;break L1207}Ad(p|0,u|0,B|0);a[p+B|0]=0;u=u+B|0;v=v-B|0;D=u;if(v>>>0<20){x=1133;break L1207}Ad(n|0,u|0,20);u=u+20|0;v=v-20|0;if(v>>>0<4){x=1133;break L1207}C=(d[u|0]|0)<<24|(d[u+1|0]|0)<<16|(d[u+2|0]|0)<<8|(d[u+3|0]|0);u=u+4|0;v=v-4|0;if(v>>>0<C>>>0){x=1133;break L1207}u=u+C|0;v=v-C|0;if((v|0)!=0){x=1133;break L1207}L1332:do{if((c[(c[e+8>>2]|0)+12>>2]|0)==0){x=1101}else{if((z|0)!=(c[(c[e+8>>2]|0)+12>>2]|0)){if((z|0)!=((c[(c[e+8>>2]|0)+12>>2]|0)-1|0)){x=1101;break}}if((A|0)!=(c[(c[e+8>>2]|0)+24>>2]|0)){if((A|0)!=((c[(c[e+8>>2]|0)+24>>2]|0)-1|0)){x=1101;break}}if((z|0)==0){x=1101;break}if((A|0)==0){x=1101;break}do{if((z|0)==((c[(c[e+8>>2]|0)+12>>2]|0)-1|0)){if((c[(c[e+8>>2]|0)+20>>2]|0)!=0){break}break L1332}}while(0);C=(c[e+8>>2]|0)+52+((c[(c[e+8>>2]|0)+24>>2]|0)-A<<8)+((c[(c[e+8>>2]|0)+12>>2]|0)-z<<7)|0;ig(c[C+68>>2]|0);ii(c[C+68>>2]|0,w,D-w|0);if((Af(n|0,ij(c[C+68>>2]|0,2)|0,20)|0)!=0){break}c[C+92>>2]=1;if((eU(m|0,C+16|0)|0)<=0){break}Ad(C+16|0,m|0,8);t=hN(c[C+36>>2]|0,4,0,0)|0;if((t|0)!=0){break L1207}t=hM(c[C+36>>2]|0,C+16|0,16)|0;if((t|0)!=0){break L1207}t=hU(c[C+36>>2]|0,p,B,0,0)|0;if((t|0)!=0){break L1207}if((h|0)!=0){Ad(h|0,C+96|0,32)}do{if((A|0)==(c[(c[e+8>>2]|0)+24>>2]|0)){t=eu(e)|0;if((t|0)!=0){break L1207}else{break}}}while(0);do{if((z|0)==(c[(c[e+8>>2]|0)+12>>2]|0)){t=ev(e,c[l>>2]|0)|0;if((t|0)!=0){break L1207}else{break}}}while(0);g4(c[l>>2]|0);c[o>>2]=p;q=p;while(1){if(q>>>0<(p+B|0)>>>0){E=(d[q]|0|0)!=0}else{E=0}if(!E){break}q=q+1|0}if(q>>>0<(p+B|0)>>>0){q=q+1|0}c[b>>2]=ft(q,p+B-q|0)|0;ze(j);F=ej(0)|0;G=F;i=k;return G|0}}while(0);t=ej(70)|0;break L1207}}while(0);x=1133}else{x=1133}}while(0);if((x|0)==1133){t=ej(55)|0}g4(c[l>>2]|0);ze(p);ze(j);F=t;G=F;i=k;return G|0}function eu(a){a=a|0;var b=0,d=0,e=0,f=0;b=a;eL((c[b+8>>2]|0)+40|0);Ad((c[b+8>>2]|0)+40|0,(c[b+8>>2]|0)+28|0,12);a=ez(b,(c[b+8>>2]|0)+308|0,(c[b+8>>2]|0)+436|0)|0;if((a|0)!=0){d=a;e=d;return e|0}eQ((c[b+8>>2]|0)+308|0);eQ((c[b+8>>2]|0)+436|0);Ad((c[b+8>>2]|0)+308|0,(c[b+8>>2]|0)+52|0,128);Ad((c[b+8>>2]|0)+436|0,(c[b+8>>2]|0)+180|0,128);eM(5,(c[b+8>>2]|0)+28|0)|0;f=(c[b+8>>2]|0)+24|0;c[f>>2]=(c[f>>2]|0)+1;do{if((c[(c[b+8>>2]|0)+16>>2]|0)!=0){a=eO((c[b+8>>2]|0)+52|0,(c[b+8>>2]|0)+28|0,c[(c[b+8>>2]|0)+16>>2]|0)|0;if((a|0)==0){break}d=a;e=d;return e|0}else{eP((c[b+8>>2]|0)+52|0)}}while(0);do{if((c[(c[b+8>>2]|0)+20>>2]|0)!=0){a=eO((c[b+8>>2]|0)+180|0,(c[b+8>>2]|0)+28|0,c[(c[b+8>>2]|0)+20>>2]|0)|0;if((a|0)==0){break}d=a;e=d;return e|0}else{eP((c[b+8>>2]|0)+180|0)}}while(0);d=ej(0)|0;e=d;return e|0}function ev(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;g4(c[(c[d+8>>2]|0)+20>>2]|0);c[(c[d+8>>2]|0)+20>>2]=c[(c[d+8>>2]|0)+16>>2];a=ez(d,(c[d+8>>2]|0)+180|0,(c[d+8>>2]|0)+436|0)|0;if((a|0)!=0){e=a;f=e;return f|0}eQ((c[d+8>>2]|0)+180|0);eQ((c[d+8>>2]|0)+436|0);Ad((c[d+8>>2]|0)+180|0,(c[d+8>>2]|0)+52|0,128);Ad((c[d+8>>2]|0)+436|0,(c[d+8>>2]|0)+308|0,128);g=g5(b)|0;c[(c[d+8>>2]|0)+16>>2]=g;g=(c[d+8>>2]|0)+12|0;c[g>>2]=(c[g>>2]|0)+1;a=eO((c[d+8>>2]|0)+52|0,(c[d+8>>2]|0)+28|0,c[(c[d+8>>2]|0)+16>>2]|0)|0;if((a|0)!=0){e=a;f=e;return f|0}a=eO((c[d+8>>2]|0)+308|0,(c[d+8>>2]|0)+40|0,c[(c[d+8>>2]|0)+16>>2]|0)|0;if((a|0)!=0){e=a;f=e;return f|0}else{e=ej(0)|0;f=e;return f|0}return 0}function ew(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=i;i=i+32|0;j=h|0;k=h+8|0;l=h+16|0;m=h+24|0;n=d;d=f;f=g;g=1;b[j>>1]=0;b[k>>1]=0;c[l>>2]=0;c[m>>2]=0;o=aZ(f|0,71872)|0;do{if((o|0)!=0){p=o;b3(p|0,71552,(q=i,i=i+32|0,c[q>>2]=k,c[q+8>>2]=j,c[q+16>>2]=l,c[q+24>>2]=m,q)|0)|0;i=q}else{p=aZ(f|0,70944)|0;o=p;if((p|0)!=0){p=o;b3(p|0,70600,(q=i,i=i+32|0,c[q>>2]=k,c[q+8>>2]=j,c[q+16>>2]=l,c[q+24>>2]=m,q)|0)|0;i=q;break}else{ze(c[c[d+8>>2]>>2]|0);c[c[d+8>>2]>>2]=0;c[(c[d+8>>2]|0)+4>>2]=0;b[(c[d+8>>2]|0)+8>>1]=0;b[(c[d+8>>2]|0)+10>>1]=0;g=0;r=g;s=r;i=h;return s|0}}}while(0);do{if((e[k>>1]|0|0)>0){if((e[j>>1]|0|0)<=0){break}if((e[k>>1]|0|0)>(e[j>>1]|0|0)){break}if((c[l>>2]|0)<=0){break}if((c[m>>2]|0)<=0){break}if((c[l>>2]|0)>=(c[m>>2]|0)){break}if((e[k>>1]|0|0)==1){q=(c[m>>2]|0)-(c[l>>2]|0)-1|0;f=q+1|0;ze(c[c[d+8>>2]>>2]|0);c[c[d+8>>2]>>2]=0;if(f>>>0>=1){p=zd(f)|0;c[c[d+8>>2]>>2]=p}if((c[c[d+8>>2]>>2]|0)!=0){Ad(c[c[d+8>>2]>>2]|0,o+(c[l>>2]|0)|0,q|0);c[(c[d+8>>2]|0)+4>>2]=q;a[(c[c[d+8>>2]>>2]|0)+(c[(c[d+8>>2]|0)+4>>2]|0)|0]=0;b[(c[d+8>>2]|0)+8>>1]=b[j>>1]|0;b[(c[d+8>>2]|0)+10>>1]=b[k>>1]|0}else{c[(c[d+8>>2]|0)+4>>2]=0;b[(c[d+8>>2]|0)+8>>1]=0;b[(c[d+8>>2]|0)+10>>1]=0}}else{do{if((e[j>>1]|0|0)==(e[(c[d+8>>2]|0)+8>>1]|0|0)){if((e[k>>1]|0|0)!=((e[(c[d+8>>2]|0)+10>>1]|0)+1|0)){t=1196;break}q=(c[m>>2]|0)-(c[l>>2]|0)-1|0;p=0;f=(c[(c[d+8>>2]|0)+4>>2]|0)+q+1|0;if(f>>>0>(c[(c[d+8>>2]|0)+4>>2]|0)>>>0){p=zg(c[c[d+8>>2]>>2]|0,f)|0}if((p|0)!=0){c[c[d+8>>2]>>2]=p;Ad((c[c[d+8>>2]>>2]|0)+(c[(c[d+8>>2]|0)+4>>2]|0)|0,o+(c[l>>2]|0)|0,q|0);p=(c[d+8>>2]|0)+4|0;c[p>>2]=(c[p>>2]|0)+q;a[(c[c[d+8>>2]>>2]|0)+(c[(c[d+8>>2]|0)+4>>2]|0)|0]=0;b[(c[d+8>>2]|0)+10>>1]=b[k>>1]|0}else{ze(c[c[d+8>>2]>>2]|0);c[c[d+8>>2]>>2]=0;c[(c[d+8>>2]|0)+4>>2]=0;b[(c[d+8>>2]|0)+8>>1]=0;b[(c[d+8>>2]|0)+10>>1]=0}}else{t=1196}}while(0);if((t|0)==1196){ze(c[c[d+8>>2]>>2]|0);c[c[d+8>>2]>>2]=0;c[(c[d+8>>2]|0)+4>>2]=0;b[(c[d+8>>2]|0)+8>>1]=0;b[(c[d+8>>2]|0)+10>>1]=0}}}}while(0);do{if((e[(c[d+8>>2]|0)+8>>1]|0|0)>0){if((e[(c[d+8>>2]|0)+8>>1]|0|0)!=(e[(c[d+8>>2]|0)+10>>1]|0|0)){break}c[n>>2]=c[c[d+8>>2]>>2];c[c[d+8>>2]>>2]=0;c[(c[d+8>>2]|0)+4>>2]=0;b[(c[d+8>>2]|0)+8>>1]=0;b[(c[d+8>>2]|0)+10>>1]=0;g=2}}while(0);r=g;s=r;i=h;return s|0}function ex(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;h=i;j=b;b=d;d=e;e=f;f=g;g=0;k=0;l=0;m=Ab(f|0)|0;n=(c[e+280>>2]|0)==3?37:19;o=zd(b<<2)|0;if((o|0)==0){p=ej(32854)|0;q=p;i=h;return q|0}k=1;while(1){if((k&65535|0)>(b|0)){r=1230;break}if((m-l|0)<(j-n|0)){g=m-l|0}else{g=j-n|0}s=zd(g+1|0)|0;if((s|0)==0){r=1214;break}Ah(s|0,f|0,g|0)|0;a[s+g|0]=0;t=zd(g+n+1|0)|0;if((t|0)==0){r=1220;break}if((c[e+188>>2]|0)!=3){u=t;v=g+n|0;w=k&65535;x=b;y=s;a4(u|0,v|0,70224,(z=i,i=i+24|0,c[z>>2]=w,c[z+8>>2]=x,c[z+16>>2]=y,z)|0)|0;i=z}else{y=t;x=g+n|0;w=c[e+40>>2]|0;v=c[e+44>>2]|0;u=k&65535;A=b;B=s;a4(y|0,x|0,69904,(z=i,i=i+40|0,c[z>>2]=w,c[z+8>>2]=v,c[z+16>>2]=u,c[z+24>>2]=A,c[z+32>>2]=B,z)|0)|0;i=z}a[t+(g+n)|0]=0;c[o+((k&65535)-1<<2)>>2]=t;ze(s);l=l+g|0;f=f+g|0;k=k+1&65535}if((r|0)==1214){C=0;while(1){if((C|0)>=((k&65535)-1|0)){break}g=C;C=g+1|0;ze(c[o+(g<<2)>>2]|0)}ze(o);p=ej(32854)|0;q=p;i=h;return q|0}else if((r|0)==1220){C=0;while(1){if((C|0)>=((k&65535)-1|0)){break}g=C;C=g+1|0;ze(c[o+(g<<2)>>2]|0)}ze(o);ze(s);p=ej(32854)|0;q=p;i=h;return q|0}else if((r|0)==1230){c[d>>2]=o;p=ej(0)|0;q=p;i=h;return q|0}return 0}function ey(a,b){a=a|0;b=b|0;var d=0;d=b;b=c[a>>2]|0;if((b|0)==0){return}a=0;while(1){if((a|0)>=(d&65535|0)){break}if((c[b+(a<<2)>>2]|0)!=0){ze(c[b+(a<<2)>>2]|0)}a=a+1|0}ze(b);return}function ez(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a;a=b;b=d;d=(c[a+92>>2]|0)+(c[a+64>>2]|0)+(c[b+92>>2]|0)+(c[b+64>>2]|0)|0;if((d|0)==0){f=ej(0)|0;g=f;return g|0}h=zg(c[(c[e+8>>2]|0)+568>>2]|0,((c[(c[e+8>>2]|0)+564>>2]|0)+d|0)*20|0)|0;if((h|0)==0){f=ej(32854)|0;g=f;return g|0}if((c[a+92>>2]|0)!=0){Ad(h+((c[(c[e+8>>2]|0)+564>>2]|0)*20|0)|0,a+72|0,20);d=(c[e+8>>2]|0)+564|0;c[d>>2]=(c[d>>2]|0)+1}if((c[a+64>>2]|0)!=0){Ad(h+((c[(c[e+8>>2]|0)+564>>2]|0)*20|0)|0,a+44|0,20);a=(c[e+8>>2]|0)+564|0;c[a>>2]=(c[a>>2]|0)+1}if((c[b+92>>2]|0)!=0){Ad(h+((c[(c[e+8>>2]|0)+564>>2]|0)*20|0)|0,b+72|0,20);a=(c[e+8>>2]|0)+564|0;c[a>>2]=(c[a>>2]|0)+1}if((c[b+64>>2]|0)!=0){Ad(h+((c[(c[e+8>>2]|0)+564>>2]|0)*20|0)|0,b+44|0,20);b=(c[e+8>>2]|0)+564|0;c[b>>2]=(c[b>>2]|0)+1}c[(c[e+8>>2]|0)+568>>2]=h;f=ej(0)|0;g=f;return g|0}function eA(a,b){a=a|0;b=b|0;return eB(a,b)|0}function eB(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function eC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a;a=b;b=c;c=0;while(1){if(b>>>0<=2){break}eD(d,a,3);d=d+4|0;c=c+4|0;a=a+3|0;b=b-3|0}if(b>>>0<=0){e=c;return e|0}eD(d,a,b);c=c+4|0;e=c;return e|0}function eD(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;b=c;c=e;e=a[b|0]|0;if(c>>>0>1){g=d[b+1|0]|0}else{g=0}h=g&255;if(c>>>0>2){i=d[b+2|0]|0}else{i=0}b=i&255;a[f|0]=a[50408+((e&255)>>2)|0]|0;a[f+1|0]=a[50408+((e&3)<<4|(h&240)>>4)|0]|0;if(c>>>0>1){j=a[50408+((h&15)<<2|(b&192)>>6)|0]|0}else{j=61}a[f+2|0]=j&255;if(c>>>0>2){k=a[50408+(b&63)|0]|0;l=k&255;m=f;n=m+3|0;a[n]=l;return}else{k=61;l=k&255;m=f;n=m+3|0;a[n]=l;return}}function eE(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+8|0;f=e|0;g=b;b=c;c=d;d=0;h=0;L1584:while(1){if(c>>>0<=0){break}j=a[b]|0;b=b+1|0;c=c-1|0;do{if((j<<24>>24|0)>=43){if((j<<24>>24|0)>122){break}if((j<<24>>24|0)==61){d=d+(eF(g,f|0,h)|0)|0;c=0}else{k=a[50320+((j<<24>>24)-43)|0]|0;if((k&255|0)==36){continue L1584}l=h;h=l+1|0;a[f+l|0]=(k&255)-62&255;if((h|0)==4){k=eF(g,f|0,h)|0;g=g+k|0;d=d+k|0;h=0}}continue L1584}}while(0)}i=e;return d|0}function eF(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=b;b=c;c=d;d=0;f=0;if(c>>>0>0){f=a[b|0]<<2&255}if(c>>>0>1){a[e|0]=(f&255|a[b+1|0]>>4)&255;d=1;f=a[b+1|0]<<4&255}if(c>>>0>2){a[e+1|0]=(f&255|a[b+2|0]>>2)&255;d=2;f=a[b+2|0]<<6&255}if(c>>>0<=3){g=d;return g|0}a[e+2|0]=(f&255|a[b+3|0])&255;d=3;g=d;return g|0}function eG(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=c;c=(((d+2|0)>>>0)/3|0)<<2;e=zd(c+7|0)|0;if((e|0)==0){f=0;g=f;return g|0}else{Ad(e|0,60040,5);h=e+5|0;i=b;b=d;eC(h,i,b)|0;a[e+(c+5)|0]=46;a[e+(c+6)|0]=0;f=e;g=f;return g|0}return 0}function eH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b;b=d;d=aZ(a|0,60040)|0;if((d|0)==0){f=-2;g=f;return g|0}a=be(d|0,46)|0;if((a|0)==0){f=-2;g=f;return g|0}h=a-d|0;d=d+5|0;h=h-5|0;a=(((h+4-1|0)>>>0)/4|0)*3|0;i=zd(a)|0;do{if((i|0)==0){if(a>>>0<=0){break}f=-1;g=f;return g|0}}while(0);a=eE(i,d,h)|0;c[e>>2]=i;c[b>>2]=a;f=0;g=f;return g|0}function eI(){hb(123912,4,c[26400]|0,0,0)|0;hb(123920,4,c[26402]|0,0,0)|0;c[30976]=g2(1536)|0;hj(c[30976]|0,c[30978]|0,2);return}function eJ(a){a=a|0;var b=0;b=a;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}function eK(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;c[d>>2]=c[a>>2];c[d+4>>2]=g5(c[a+4>>2]|0)|0;c[d+8>>2]=g5(c[a+8>>2]|0)|0;return}function eL(a){a=a|0;var b=0;b=a;g4(c[b+4>>2]|0);g4(c[b+8>>2]|0);c[b+4>>2]=0;c[b+8>>2]=0;return}function eM(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=a;a=b;b=0;c[e>>2]=0;if((f|0)!=5){g=eN(55)|0;h=g;i=d;return h|0}else{b=i9(40,1)|0;j=b;hb(e,5,j,40,0)|0;jy(b);c[a>>2]=f;c[a+4>>2]=c[e>>2];c[a+8>>2]=g2(1536)|0;hr(c[a+8>>2]|0,c[30980]|0,c[e>>2]|0,c[30978]|0);g=eN(0)|0;h=g;i=d;return h|0}return 0}function eN(a){a=a|0;return eV(32,a)|0}function eO(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+8|0;g=f|0;h=b;b=d;d=e;e=eN(0)|0;eP(h);if((c[b>>2]|0)!=5){j=eN(55)|0;k=j;i=f;return k|0}l=g2(1536)|0;hr(l,d,c[b+4>>2]|0,c[30978]|0);hc(5,0,0,g,l)|0;m=jo((c[g>>2]|0)+5|0)|0;if((m|0)==0){g4(l);j=eN(32854)|0;k=j;i=f;return k|0}a[m+1|0]=(c[g>>2]|0)>>>24&255;a[m+2|0]=(c[g>>2]|0)>>>16&255;a[m+3|0]=(c[g>>2]|0)>>>8&255;a[m+4|0]=c[g>>2]&255;hc(5,m+5|0,c[g>>2]|0,0,l)|0;g4(l);l=jo(20)|0;if((l|0)==0){jy(m);j=eN(32854)|0;k=j;i=f;return k|0}if((g9(c[b+8>>2]|0,d)|0)>0){n=1;o=2}else{n=2;o=1}a[m|0]=n;ik(2,l,m,(c[g>>2]|0)+5|0);e=hH(h+32|0,7,6,1)|0;do{if((e|0)==0){e=hK(c[h+32>>2]|0,l,16)|0;if((e|0)!=0){break}ik(2,h+44|0,l,16);e=ib(h+40|0,2,2)|0;if((e|0)!=0){break}e=iu(c[h+40>>2]|0,h+44|0,20)|0;if((e|0)!=0){break}a[m|0]=o;ik(2,l,m,(c[g>>2]|0)+5|0);e=hH(h+36|0,7,6,1)|0;if((e|0)!=0){break}e=hK(c[h+36>>2]|0,l,16)|0;if((e|0)!=0){break}ik(2,h+72|0,l,16);e=ib(h+68|0,2,2)|0;if((e|0)!=0){break}e=iu(c[h+68>>2]|0,h+72|0,20)|0;if((e|0)!=0){break}a[m|0]=-1;ik(8,h+96|0,m,(c[g>>2]|0)+5|0);jy(m);jy(l);j=eN(0)|0;k=j;i=f;return k|0}}while(0);eQ(h);jy(m);jy(l);j=e;k=j;i=f;return k|0}function eP(a){a=a|0;var b=0;b=a;c[b+32>>2]=0;c[b+40>>2]=0;c[b+36>>2]=0;c[b+68>>2]=0;Ae(b|0,0,16);Ae(b+16|0,0,16);Ae(b+44|0,0,20);Ae(b+72|0,0,20);c[b+64>>2]=0;c[b+92>>2]=0;Ae(b+96|0,0,32);return}function eQ(a){a=a|0;var b=0;b=a;hJ(c[b+32>>2]|0);hJ(c[b+36>>2]|0);ic(c[b+40>>2]|0);ic(c[b+68>>2]|0);eP(b);return}function eR(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;n=i;i=i+24|0;o=n|0;p=n+8|0;q=b;b=d;d=e;e=f;f=g;g=h;h=j;j=k;k=l;l=m;m=eN(0)|0;c[f>>2]=0;c[g>>2]=0;c[h>>2]=0;c[j>>2]=0;c[k>>2]=0;c[l>>2]=0;Ae(p|0,0,16);if((c[q>>2]|0)!=5){r=eN(55)|0;s=r;i=n;return s|0}do{if((ha(b,2)|0)>=0){if((g9(b,c[30976]|0)|0)>0){break}t=g2(1536)|0;hr(t,b,c[q+4>>2]|0,c[30978]|0);u=t;hc(5,0,0,o,u)|0;u=jo((c[o>>2]|0)+5|0)|0;if((u|0)==0){g4(t);r=eN(32854)|0;s=r;i=n;return s|0}a[u+1|0]=(c[o>>2]|0)>>>24&255;a[u+2|0]=(c[o>>2]|0)>>>16&255;a[u+3|0]=(c[o>>2]|0)>>>8&255;a[u+4|0]=c[o>>2]&255;v=u+5|0;w=c[o>>2]|0;x=t;hc(5,v,w,0,x)|0;g4(t);t=jo(32)|0;if((t|0)==0){jy(u);r=eN(32854)|0;s=r;i=n;return s|0}a[u|0]=0;ik(8,t,u,(c[o>>2]|0)+5|0);Ad(d|0,t|0,8);c[e>>2]=8;a[u|0]=1;ik(8,t,u,(c[o>>2]|0)+5|0);m=hH(f,7,6,1)|0;do{if((m|0)==0){m=hK(c[f>>2]|0,t,16)|0;if((m|0)!=0){break}m=hM(c[f>>2]|0,p|0,16)|0;if((m|0)!=0){break}m=hH(g,7,6,1)|0;if((m|0)!=0){break}m=hK(c[g>>2]|0,t+16|0,16)|0;if((m|0)!=0){break}m=hM(c[g>>2]|0,p|0,16)|0;if((m|0)!=0){break}a[u|0]=2;ik(8,t,u,(c[o>>2]|0)+5|0);m=ib(h,8,2)|0;if((m|0)!=0){break}m=iu(c[h>>2]|0,t,32)|0;if((m|0)!=0){break}a[u|0]=3;ik(8,t,u,(c[o>>2]|0)+5|0);m=ib(k,8,2)|0;if((m|0)!=0){break}m=iu(c[k>>2]|0,t,32)|0;if((m|0)!=0){break}a[u|0]=4;ik(8,t,u,(c[o>>2]|0)+5|0);m=ib(j,8,2)|0;if((m|0)!=0){break}m=iu(c[j>>2]|0,t,32)|0;if((m|0)!=0){break}a[u|0]=5;ik(8,t,u,(c[o>>2]|0)+5|0);m=ib(l,8,2)|0;if((m|0)!=0){break}m=iu(c[l>>2]|0,t,32)|0;if((m|0)!=0){break}jy(u);jy(t);r=eN(0)|0;s=r;i=n;return s|0}}while(0);hJ(c[f>>2]|0);hJ(c[g>>2]|0);ic(c[h>>2]|0);ic(c[j>>2]|0);ic(c[k>>2]|0);ic(c[l>>2]|0);c[f>>2]=0;c[g>>2]=0;c[h>>2]=0;c[j>>2]=0;c[k>>2]=0;c[l>>2]=0;jy(u);jy(t);r=m;s=r;i=n;return s|0}}while(0);r=eN(55)|0;s=r;i=n;return s|0}function eS(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+8|0;j=h|0;k=b;b=d;d=e;e=f;f=g;if((c[k>>2]|0)!=5){l=eN(55)|0;m=l;i=h;return m|0}do{if((ha(b,2)|0)>=0){if((g9(b,c[30976]|0)|0)>0){break}g=g2(1536)|0;hr(g,b,c[k+4>>2]|0,c[30978]|0);n=g;hc(5,0,0,j,n)|0;n=jo((c[j>>2]|0)+5|0)|0;if((n|0)==0){g4(g);l=eN(32854)|0;m=l;i=h;return m|0}a[n+1|0]=(c[j>>2]|0)>>>24&255;a[n+2|0]=(c[j>>2]|0)>>>16&255;a[n+3|0]=(c[j>>2]|0)>>>8&255;a[n+4|0]=c[j>>2]&255;o=n+5|0;p=c[j>>2]|0;q=g;hc(5,o,p,0,q)|0;g4(g);g=jo(20)|0;if((g|0)==0){jy(n);l=eN(32854)|0;m=l;i=h;return m|0}a[n|0]=0;ik(2,g,n,(c[j>>2]|0)+5|0);Ad(d|0,g|0,20);c[e>>2]=20;if((g9(c[k+8>>2]|0,b)|0)>0){c[f>>2]=1}else{c[f>>2]=0}jy(g);jy(n);l=eN(0)|0;m=l;i=h;return m|0}}while(0);l=eN(55)|0;m=l;i=h;return m|0}function eT(b){b=b|0;var c=0,d=0,e=0,f=0;c=b;b=8;while(1){if((b|0)==0){d=1458;break}e=c+(b-1)|0;f=(a[e]|0)+1&255;a[e]=f;if(f<<24>>24!=0){break}b=b-1|0}if((d|0)==1458){return}return}function eU(a,b){a=a|0;b=b|0;var c=0,e=0,f=0,g=0,h=0;c=a;a=b;b=0;while(1){if((b|0)>=8){e=1465;break}f=(d[c+b|0]|0)-(d[a+b|0]|0)|0;if((f|0)!=0){e=1462;break}b=b+1|0}if((e|0)==1462){g=f;h=g;return h|0}else if((e|0)==1465){g=0;h=g;return h|0}return 0}function eV(a,b){a=a|0;b=b|0;return eW(a,b)|0}function eW(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function eX(){c[30692]=8;if((c[30692]|0)>>>0<4){c[30692]=4}jh(14,14,18,38,42);return}function eY(a){a=a|0;var b=0,d=0,e=0;b=a;a=b;a=a+(c[30692]|0)|0;if(a>>>0<b>>>0){d=0;e=d;return e|0}b=zd(a)|0;if((b|0)==0){d=0;e=d;return e|0}else{c[b>>2]=a;d=b+(c[30692]|0)|0;e=d;return e|0}return 0}function eZ(a){a=a|0;return 1}function e_(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=a;a=b;if((d|0)==0){e=eY(a)|0;f=e;return f|0}if((a|0)==0){e$(d);e=0;f=e;return f|0}b=d+(-(c[30692]|0)|0)|0;d=c[b>>2]|0;g=a;g=g+(c[30692]|0)|0;if(g>>>0<a>>>0){e=0;f=e;return f|0}do{if(g>>>0<d>>>0){a=b+g|0;h=d-g|0;Ae(a|0,-1|0,h|0);Ae(a|0,-86|0,h|0);Ae(a|0,85,h|0);Ae(a|0,0,h|0);i=b}else{i=zg(b,g)|0;if((i|0)!=0){break}e=0;f=e;return f|0}}while(0);c[i>>2]=g;e=i+(c[30692]|0)|0;f=e;return f|0}function e$(a){a=a|0;var b=0;b=a+(-(c[30692]|0)|0)|0;a=c[b>>2]|0;Ae(b|0,-1|0,a|0);Ae(b|0,-86|0,a|0);Ae(b|0,85,a|0);Ae(b|0,0,a|0);ze(b);return}function e0(a){a=a|0;ze(a);return}function e1(a,b,d,e,f,g,h,j,k,l,m,n,o,p){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;q=i;i=i+24|0;r=q|0;s=q+8|0;t=q+16|0;u=a;a=b;b=d;d=e;e=f;f=g;g=h;h=j;j=k;k=l;l=m;m=n;n=o;o=p;p=0;v=118;c[s>>2]=0;w=0;c[t>>2]=0;if((k|0)!=0){c[k>>2]=0}x=e2(0)|0;if((m|0)!=0){c[m>>2]=0}L1855:do{if((d|0)!=0){if((e|0)==0){y=1518;break}if((f|0)==0){y=1518;break}if((h|0)==0){y=1518;break}if((k|0)==0){y=1518;break}p=d8(u,f,d,e,g,1,s,n,o)|0;do{if((c[s>>2]|0)!=0){if((c[a+16>>2]|0)==0){break}cE[c[a+16>>2]&127](b)}}while(0);if((c[p+40>>2]|0)==0){e3(u,a,b,d,e,p)}if((m|0)!=0){c[m>>2]=p}if((c[a>>2]|0)!=0){v=cN[c[a>>2]&63](b,p)|0}if((v&7|0)==0){x=e2(0)|0;break}if((eo(h)|0)==2){z=el(d,v)|0;if((z|0)!=0){c[k>>2]=z}c[p+284>>2]=1;x=e2(0)|0;break}z=c[p+48>>2]|0;do{if((z|0)==0){if((v&8|0)!=0){if((c[a+76>>2]|0)!=0){A=c[a+76>>2]|0;B=e2(0)|0;cC[A&15](b,1,p,0,B)}B=jo((Ab(h|0)|0)+1|0)|0;c[(c[p+8>>2]|0)+584>>2]=B;if((c[(c[p+8>>2]|0)+584>>2]|0)!=0){B=el(d,v)|0;A=c[(c[p+8>>2]|0)+584>>2]|0;C=h;Ag(A|0,C|0)|0;C=cz(0)|0;c[(c[p+8>>2]|0)+576>>2]=C;ea(p,1);c[(c[p+8>>2]|0)+588>>2]=2;if((B|0)==0){x=e2(32854)|0;break L1855}c[k>>2]=B;c[p+284>>2]=1}}else{do{if((v&16|0)!=0){if((c[p+284>>2]|0)==2){break}B=Ab(h|0)|0;C=16;A=(v&1|0)!=0?8:0;D=(v&2|0)!=0?8:0;E=(v&4|0)!=0?8:0;F=zd(B+C+A+D+E+1|0)|0;if((F|0)!=0){G=F;H=h;Ag(G|0,H|0)|0;H=F+B|0;Ag(H|0,83600)|0;if((A|0)!=0){H=F+B+C|0;Ag(H|0,82688)|0}if((D|0)!=0){H=F+B+C+A|0;Ag(H|0,73480)|0}if((E|0)!=0){E=F+B+C+A+D|0;Ag(E|0,68960)|0}c[k>>2]=F;c[p+284>>2]=1}}}while(0)}}else if((z|0)==2){if((c[a+76>>2]|0)!=0){F=c[a+76>>2]|0;E=e2(0)|0;cC[F&15](b,3,p,0,E)}c[k>>2]=bP(123232)|0;if((c[k>>2]|0)!=0){break}else{x=e2(32854)|0;break L1855}}else if((z|0)==1){if((c[a+84>>2]|0)!=0){cC[c[a+84>>2]&15](b,p,0,t,h);if((c[t>>2]|0)!=0){w=1}}if((w|0)!=0){I=er(r,p,c[t>>2]|0,j,0,0)|0;if((c[a+88>>2]|0)!=0){cJ[c[a+88>>2]&127](b,p,c[t>>2]|0);c[t>>2]=0}}else{I=er(r,p,h,j,0,0)|0}if((I|0)!=0){if((c[a+76>>2]|0)!=0){E=c[a+76>>2]|0;F=e2(0)|0;cC[E&15](b,2,p,0,F)}do{if((c[a+56>>2]|0)!=0){F=cI[c[a+56>>2]&63](b,p,1)|0;c[k>>2]=zd((Ab(F|0)|0)+13|0)|0;if((c[k>>2]|0)!=0){E=c[k>>2]|0;Ag(E|0,65840)|0;E=c[k>>2]|0;D=F;Ai(E|0,D|0)|0}if((c[a+60>>2]|0)!=0){cF[c[a+60>>2]&31](b,F)}if((c[k>>2]|0)!=0){break}else{x=e2(32854)|0;break L1855}}}while(0)}else{F=cz(0)|0;c[(c[p+8>>2]|0)+576>>2]=F;ea(p,1);c[k>>2]=c[r>>2]}}}while(0)}else{y=1518}}while(0);if((y|0)==1518){x=e2(55)|0}if((l|0)==0){J=x;K=J;i=q;return K|0}do{if((x|0)==0){if((k|0)==0){break}if((c[k>>2]|0)==0){break}if((p|0)!=0){x=e4(a,0,p,c[k>>2]|0,l,k)|0}}}while(0);J=x;K=J;i=q;return K|0}function e2(a){a=a|0;return fp(32,a)|0}function e3(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=a;a=b;b=d;d=e;e=f;f=g;g=go(h,d,e)|0;do{if((g|0)==0){if((c[a+80>>2]|0)==0){break}cJ[c[a+80>>2]&127](b,d,e);g=go(h,d,e)|0}}while(0);do{if((g|0)!=0){if((c[g+16>>2]|0)>>>0<256){break}c[f+40>>2]=c[g+16>>2];return}}while(0);c[f+40>>2]=gu()|0;return}function e4(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+8|0;j=h|0;k=a;a=b;b=d;d=e;e=f;f=g;g=0;do{if((d|0)!=0){if((c[k+12>>2]|0)==0){break}if((c[k+40>>2]|0)!=0){g=cN[c[k+40>>2]&63](a,b)|0}l=Ab(d|0)|0;do{if((g|0)!=0){if((l|0)<=(g|0)){m=1628;break}n=((l-1|0)/(g-((c[b+280>>2]|0)==3?37:19)|0)|0)+1|0;o=ex(g,n,j,b,d)|0;if((o|0)!=0){p=o;q=p;i=h;return q|0}if((e|0)==2){c[f>>2]=bP(c[c[j>>2]>>2]|0)|0}else{cC[c[k+12>>2]&15](a,c[b+16>>2]|0,c[b+20>>2]|0,c[b+12>>2]|0,c[c[j>>2]>>2]|0)}o=1;while(1){if((o|0)>=(n-1|0)){break}cC[c[k+12>>2]&15](a,c[b+16>>2]|0,c[b+20>>2]|0,c[b+12>>2]|0,c[(c[j>>2]|0)+(o<<2)>>2]|0);o=o+1|0}if((e|0)==3){c[f>>2]=bP(c[(c[j>>2]|0)+(n-1<<2)>>2]|0)|0}else{cC[c[k+12>>2]&15](a,c[b+16>>2]|0,c[b+20>>2]|0,c[b+12>>2]|0,c[(c[j>>2]|0)+(n-1<<2)>>2]|0)}ey(j,n&65535)}else{m=1628}}while(0);if((m|0)==1628){if((e|0)==1){cC[c[k+12>>2]&15](a,c[b+16>>2]|0,c[b+20>>2]|0,c[b+12>>2]|0,d)}else{c[f>>2]=bP(d|0)|0}}}}while(0);p=e2(0)|0;q=p;i=h;return q|0}function e5(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;e6(a,b,c,d,0,e,f,1);return}function e6(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;l=i;i=i+80|0;m=l|0;n=l+8|0;o=l+16|0;p=l+48|0;q=l+72|0;r=b;b=d;d=e;e=f;f=g;g=h;h=j;j=k;c[m>>2]=0;c[q>>2]=0;do{if((e|0)!=0){if((c[e+48>>2]|0)!=1){break}k=r;s=p|0;t=c[e+16>>2]|0;u=c[e+20>>2]|0;dD(k,s,t,u)|0;u=(c[e+272>>2]|0)+41+h|0;t=zd(u)|0;a[t|0]=1;if((j|0)!=0){Ad(t+1|0,p|0,20);Ad(t+21|0,c[(c[e+248>>2]|0)+8>>2]|0,20)}else{Ad(t+1|0,c[(c[e+248>>2]|0)+8>>2]|0,20);Ad(t+21|0,p|0,20)}Ad(t+41|0,e+252|0,c[e+272>>2]|0);Ad(t+41+(c[e+272>>2]|0)|0,g|0,h|0);ik(8,o|0,t,u);ze(t);if((j|0)!=0){t=c[e+296>>2]|0;u=o|0;f$(t,u,32,m,n)|0}else{u=c[e+296>>2]|0;t=o|0;f9(u,t,32,m,n)|0}do{if((f|0)!=0){t=Ab(f|0)|0;u=zd(t+1+(c[n>>2]|0)|0)|0;if((u|0)!=0){s=u;k=f;Ag(s|0,k|0)|0;Ad(u+t+1|0,c[m>>2]|0,c[n>>2]|0);ze(c[m>>2]|0);c[m>>2]=u;c[n>>2]=(c[n>>2]|0)+(t+1);break}ze(c[m>>2]|0);i=l;return}}while(0);if((j|0)!=0){v=(f|0)!=0?7:2}else{v=3}t=fs(v&65535,c[n>>2]&65535,c[m>>2]|0)|0;u=er(q,e,123232,t,1,0)|0;if((u|0)==0){u=e4(b,d,e,c[q>>2]|0,1,0)|0;c[(c[e+296>>2]|0)+44>>2]=(j|0)!=0?1:2}ze(c[q>>2]|0);fu(t);ze(c[m>>2]|0);i=l;return}}while(0);i=l;return}function e7(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;e6(a,b,c,d,e,f,g,1);return}function e8(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;e6(a,b,c,d,0,e,f,0);return}function e9(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;a=i;i=i+8|0;f=a|0;g=e;e=fs(6,0,123232)|0;c[f>>2]=0;c[(c[g+296>>2]|0)+44>>2]=0;h=er(f,g,123232,e,1,0)|0;if((h|0)!=0){j=c[f>>2]|0;ze(j);k=e;fu(k);i=a;return}h=e4(b,d,g,c[f>>2]|0,1,0)|0;j=c[f>>2]|0;ze(j);k=e;fu(k);i=a;return}function fa(b,f,g,h,j,k,l,m,n,o,p,q){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0;r=i;i=i+176|0;s=r|0;t=r+8|0;u=r+16|0;v=r+48|0;w=r+56|0;x=r+64|0;y=r+72|0;z=r+80|0;A=r+88|0;B=r+96|0;C=r+104|0;D=r+112|0;E=r+120|0;F=r+128|0;G=r+136|0;H=r+144|0;I=r+152|0;J=r+160|0;K=r+168|0;L=b;b=f;f=g;g=h;h=j;j=k;k=l;l=m;m=n;n=o;o=p;p=q;c[s>>2]=0;q=118;M=0;c[t>>2]=0;N=0;c[v>>2]=0;c[w>>2]=0;do{if((g|0)!=0){if((h|0)==0){break}if((j|0)==0){break}if((k|0)==0){break}if((l|0)==0){break}c[l>>2]=0;if((m|0)!=0){c[m>>2]=0}if((n|0)!=0){c[n>>2]=0}O=d8(L,j,g,h,0,1,s,o,p)|0;P=O;do{if((c[s>>2]|0)!=0){if((c[b+16>>2]|0)==0){break}cE[c[b+16>>2]&127](f)}}while(0);Q=d8(L,j,g,h,1,0,0,o,p)|0;if((c[P+40>>2]|0)==0){e3(L,b,f,g,h,P)}if((c[b>>2]|0)!=0){q=cN[c[b>>2]&63](f,P)|0}if((q&7|0)==0){R=0;S=R;i=r;return S|0}N=aZ(k|0,62048)|0;if((N|0)!=0){do{if((aZ(k|0,60576)|0)!=0){T=N;b3(T|0,58816,(T=i,i=i+16|0,c[T>>2]=w,c[T+8>>2]=v,T)|0)|0;i=T;do{if((c[v>>2]|0)!=0){if((c[P+40>>2]|0)==(c[v>>2]|0)){break}if((c[b+76>>2]|0)!=0){T=c[b+76>>2]|0;U=e2(0)|0;cC[T&15](f,15,O,0,U)}R=1;S=R;i=r;return S|0}}while(0);if((c[w>>2]|0)>>>0>=256){P=d8(L,j,g,h,c[w>>2]|0,1,s,o,p)|0;break}else{fb(b,f,P);R=1;S=R;i=r;return S|0}}}while(0);U=ew(t,P,k)|0;if((U|0)==1){R=1;S=R;i=r;return S|0}else if((U|0)==2){M=1;k=c[t>>2]|0;N=aZ(k|0,62048)|0}}U=eo(k)|0;T=ep(k)|0;if((q&16|0)!=0){if((U|0)!=0){c[P+284>>2]=3}else{if((c[P+284>>2]|0)==1){c[P+284>>2]=2}}}if((T|0)==3){if((q&4|0)!=0){V=1712}}else{V=1712}do{if((V|0)==1712){if((T|0)==2){if((q&2|0)==0){break}}if((T|0)==1){if((q&1|0)==0){break}}L2129:do{if((T|0)==3){W=e2(55)|0;if((N|0)!=0){W=eq(N,w,v)|0}L2134:do{if((W|0)==0){do{if((U|0)==3){if((c[v>>2]|0)==0){V=1724;break}if((c[P+40>>2]|0)==(c[v>>2]|0)){V=1724}}else{V=1724}}while(0);do{if((V|0)==1724){if((U|0)!=3){if((c[P+40>>2]|0)!=(c[v>>2]|0)){break}}if((c[w>>2]|0)>>>0>=256){P=d8(L,j,g,h,c[w>>2]|0,1,s,o,p)|0}break L2134}}while(0);if((c[b+76>>2]|0)!=0){X=c[b+76>>2]|0;Y=e2(0)|0;cC[X&15](f,15,O,0,Y)}R=1;S=R;i=r;return S|0}}while(0);do{if((W|0)==0){if((c[w>>2]|0)>>>0<256){break}if((c[s>>2]|0)!=0){c[P+188>>2]=3;c[P+280>>2]=3;if((c[s>>2]|0)!=0){c[P+48>>2]=c[O+48>>2]}do{if((U|0)==4){fO(O+52|0,P+52|0)}else{if((U|0)==3){break}R=1;S=R;i=r;return S|0}}while(0);if((c[b+16>>2]|0)!=0){cE[c[b+16>>2]&127](f)}}else{if((O|0)!=(P|0)){do{if((U|0)==4){if((c[O+52>>2]|0)!=1){break}if((c[P+52>>2]|0)==1){break}c[P+48>>2]=c[O+48>>2];c[P+188>>2]=3;c[P+280>>2]=3;fO(O+52|0,P+52|0)}}while(0)}}break L2129}}while(0);fb(b,f,P);R=1;S=R;i=r;return S|0}}while(0);if((n|0)!=0){c[n>>2]=P}Y=cz(0)|0;c[(c[P+8>>2]|0)+580>>2]=Y;ea(P,0);c[u>>2]=0;c[u+4>>2]=L;c[u+16>>2]=P;c[u+8>>2]=b;c[u+12>>2]=f;c[u+20>>2]=-1;c[u+24>>2]=l;switch(U|0){case 2:{if((c[P+48>>2]|0)==1){Z=(c[P+8>>2]|0)+40|0;_=(c[(c[P+8>>2]|0)+24>>2]|0)-1|0}else{Z=0;_=0}Y=em(k,q)|0;if((Y|0)==3){W=fA(P+52|0,3)|0;X=b;$=f;aa=W;ab=P;ac=L;fc(X,$,aa,ab,ac)|0}else if((Y|0)==2){W=fA(P+52|0,2)|0;fc(b,f,W,P,L)|0}else if((Y|0)==1){ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0;if((ad|0)==0){if((c[b+4>>2]|0)!=0){cJ[c[b+4>>2]&127](f,c[P+16>>2]|0,c[P+20>>2]|0);ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0}}if((ad|0)!=0){W=fK(P+52|0,Z,_,ad)|0;Y=b;ac=f;ab=W;aa=P;$=L;fc(Y,ac,ab,aa,$)|0}}if((c[u+20>>2]|0)==-1){c[u+20>>2]=1}break};case 6:{W=fJ(P+52|0,N,z,26,u)|0;if((W|0)!=0){V=1803}else{if((c[z>>2]|0)!=0){V=1803}}if((V|0)==1803){$=b;aa=f;ab=W;ac=P;Y=L;fc($,aa,ab,ac,Y)|0;fe(u)}if((c[u+20>>2]|0)==-1){c[u+20>>2]=1}break};case 7:{if((c[P+48>>2]|0)==1){Z=(c[P+8>>2]|0)+40|0;_=(c[(c[P+8>>2]|0)+24>>2]|0)-1|0}else{Z=0;_=0}ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0;if((ad|0)==0){if((c[b+4>>2]|0)!=0){cJ[c[b+4>>2]&127](f,c[P+16>>2]|0,c[P+20>>2]|0);ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0}}if((ad|0)!=0){W=fM(P+52|0,k,z,ad,Z,_,26,u)|0;if((W|0)!=0){V=1817}else{if((c[z>>2]|0)!=0){V=1817}}if((V|0)==1817){Y=b;ac=f;ab=W;aa=P;$=L;fc(Y,ac,ab,aa,$)|0;fe(u)}}if((c[u+20>>2]|0)==-1){c[u+20>>2]=1}break};case 3:{W=fC(P+52|0,N,T)|0;fc(b,f,W,P,L)|0;if((c[u+20>>2]|0)==-1){c[u+20>>2]=1}break};case 4:{ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0;if((ad|0)==0){if((c[b+4>>2]|0)!=0){cJ[c[b+4>>2]&127](f,c[P+16>>2]|0,c[P+20>>2]|0);ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0}}if((ad|0)!=0){W=fE(P+52|0,N,z,ad)|0;if((W|0)!=0){V=1784}else{if((c[z>>2]|0)!=0){V=1784}}if((V|0)==1784){$=b;aa=f;ab=W;ac=P;Y=L;fc($,aa,ab,ac,Y)|0}}if((c[u+20>>2]|0)==-1){c[u+20>>2]=1}break};case 5:{ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0;if((ad|0)==0){if((c[b+4>>2]|0)!=0){cJ[c[b+4>>2]&127](f,c[P+16>>2]|0,c[P+20>>2]|0);ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0}}if((ad|0)!=0){W=fG(P+52|0,N,z,ad,26,u)|0;if((W|0)!=0){V=1796}else{if((c[z>>2]|0)!=0){V=1796}}if((V|0)==1796){Y=b;ac=f;ab=W;aa=P;$=L;fc(Y,ac,ab,aa,$)|0;fe(u)}}if((c[u+20>>2]|0)==-1){c[u+20>>2]=1}break};case 8:{$=c[P+48>>2]|0;do{if(($|0)==0|($|0)==2){ae=es(k,C)|0;if((a[C]&1|0)!=0){c[u+20>>2]=1;break}do{if((Q|0)!=0){if((Q|0)==(P|0)){V=1831;break}if((c[Q+48>>2]|0)!=1){V=1831;break}if((c[b+76>>2]|0)!=0){aa=c[b+76>>2]|0;ab=e2(0)|0;cC[aa&15](f,15,O,0,ab)}}else{V=1831}}while(0);if((V|0)==1831){if((c[b+76>>2]|0)!=0){ab=c[b+76>>2]|0;aa=e2(0)|0;cC[ab&15](f,7,P,0,aa)}}c[u+20>>2]=1}else if(($|0)==1){aa=jo(32)|0;ae=et(B,A,P,k,C,aa)|0;if((ae|0)!=0){ab=(ff(ae)|0)==70|0;if((a[C]&1|0)!=0){c[u+20>>2]=1;break}if((ab|0)!=0){if((c[b+76>>2]|0)!=0){ac=c[b+76>>2]|0;Y=e2(0)|0;cC[ac&15](f,8,P,0,Y)}}else{if((c[b+76>>2]|0)!=0){Y=c[b+76>>2]|0;ac=e2(0)|0;cC[Y&15](f,9,P,0,ac)}}do{if((c[b+12>>2]|0)!=0){if((c[b+56>>2]|0)==0){break}ac=cI[c[b+56>>2]&63](f,P,(ab|0)!=0?3:4)|0;if((ac|0)!=0){Y=zd((Ab(ac|0)|0)+13|0)|0;if((Y|0)!=0){X=Y;Ag(X|0,65840)|0;X=Y;af=ac;Ai(X|0,af|0)|0;cC[c[b+12>>2]&15](f,g,h,j,Y);ze(Y)}}if((c[b+60>>2]|0)!=0){cF[c[b+60>>2]&31](f,ac)}}}while(0);c[u+20>>2]=1;break}if((fx(c[A>>2]|0,1)|0)!=0){ed(P)}ab=fx(c[A>>2]|0,8)|0;do{if((ab|0)!=0){if((c[30624]|0)>>>0<262144){break}do{if((c[b+52>>2]|0)!=0){if((e[ab+2>>1]|0)<4){break}ac=c[ab+4>>2]|0;cM[c[b+52>>2]&7](f,P,d[ac|0]<<24|d[ac+1|0]<<16|d[ac+2|0]<<8|d[ac+3|0],ac+4|0,(e[ab+2>>1]|0)-4|0,aa)}}while(0)}}while(0);jy(aa);aa=0;ac=c[(c[P+296>>2]|0)+44>>2]|0;ab=fx(c[A>>2]|0,7)|0;if((ab|0)!=0){do{if((ac|0)==0){if((e[ab+2>>1]|0)<=0){V=1877;break}Y=c[ab+4>>2]|0;af=a2(Y|0,0,(e[ab+2>>1]|0)-1|0)|0;if((af|0)!=0){ag=af-Y+1|0}else{ag=e[ab+2>>1]|0}af=ag;X=c[P+296>>2]|0;ah=(c[ab+4>>2]|0)+af|0;ai=(e[ab+2>>1]|0)-af|0;f4(X,ah,ai,1)|0;if((c[(c[P+296>>2]|0)+52>>2]|0)!=-2){if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,4,P,25,Y)}}else{if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,3,P,0,0)}c[(c[P+296>>2]|0)+44>>2]=0;c[(c[P+296>>2]|0)+52>>2]=0}}else{V=1877}}while(0);if((V|0)==1877){if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,1,P,0,0)}}}ab=fx(c[A>>2]|0,2)|0;if((ab|0)!=0){if((ac|0)==0){aa=c[P+296>>2]|0;Y=c[ab+4>>2]|0;ai=e[ab+2>>1]|0;f4(aa,Y,ai,0)|0;if((c[(c[P+296>>2]|0)+52>>2]|0)!=-2){if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,5,P,25,0)}}else{if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,3,P,0,0)}c[(c[P+296>>2]|0)+44>>2]=0;c[(c[P+296>>2]|0)+52>>2]=0}}else{if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,1,P,0,0)}}}ab=fx(c[A>>2]|0,3)|0;if((ab|0)!=0){if((ac|0)==1){ai=c[P+296>>2]|0;Y=c[ab+4>>2]|0;aa=e[ab+2>>1]|0;gb(ai,Y,aa,D,E)|0;if((c[(c[P+296>>2]|0)+52>>2]|0)!=-2){aa=fs(4,c[E>>2]&65535,c[D>>2]|0)|0;ae=er(F,P,123232,aa,1,0)|0;if((ae|0)==0){ae=e4(b,f,P,c[F>>2]|0,1,0)|0}ze(c[F>>2]|0);fu(aa);if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,6,P,60,0)}c[(c[P+296>>2]|0)+44>>2]=3}else{if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,3,P,0,0)}c[(c[P+296>>2]|0)+44>>2]=0;c[(c[P+296>>2]|0)+52>>2]=0}ze(c[D>>2]|0)}else{if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,1,P,0,0)}}}ab=fx(c[A>>2]|0,4)|0;if((ab|0)!=0){if((ac|0)==2){ae=ge(c[P+296>>2]|0,c[ab+4>>2]|0,e[ab+2>>1]|0,G,H)|0;if((c[(c[P+296>>2]|0)+48>>2]|0)==0){fg(b,f,P,(ae|0)==(e2(0)|0)|0)}if((c[(c[P+296>>2]|0)+52>>2]|0)!=-2){aa=fs(5,c[H>>2]&65535,c[G>>2]|0)|0;ae=er(I,P,123232,aa,1,0)|0;if((ae|0)==0){ae=e4(b,f,P,c[I>>2]|0,1,0)|0}ze(c[I>>2]|0);fu(aa);if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,(c[(c[P+296>>2]|0)+52>>2]|0)==1?7:8,P,100,0)}c[(c[P+296>>2]|0)+44>>2]=0}else{if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,3,P,0,0)}c[(c[P+296>>2]|0)+44>>2]=0;c[(c[P+296>>2]|0)+52>>2]=0}ze(c[G>>2]|0)}else{if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,1,P,0,0)}}}ab=fx(c[A>>2]|0,5)|0;if((ab|0)!=0){if((ac|0)==3){ae=gg(c[P+296>>2]|0,c[ab+4>>2]|0,e[ab+2>>1]|0)|0;fg(b,f,P,(ae|0)==(e2(0)|0)|0);if((c[(c[P+296>>2]|0)+52>>2]|0)!=-2){if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,(c[(c[P+296>>2]|0)+52>>2]|0)==1?7:8,P,100,0)}c[(c[P+296>>2]|0)+44>>2]=0}else{if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,3,P,0,0)}c[(c[P+296>>2]|0)+44>>2]=0;c[(c[P+296>>2]|0)+52>>2]=0}}else{if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,1,P,0,0)}}}ab=fx(c[A>>2]|0,6)|0;if((ab|0)!=0){c[(c[P+296>>2]|0)+44>>2]=0;if((c[b+72>>2]|0)!=0){cC[c[b+72>>2]&15](f,2,P,0,0)}}if((a[c[B>>2]|0]|0)==0){if((c[b+76>>2]|0)!=0){aa=c[b+76>>2]|0;Y=e2(0)|0;cC[aa&15](f,10,P,0,Y)}c[u+20>>2]=1}else{do{if((c[u+20>>2]|0)!=1){if((c[(c[P+8>>2]|0)+12>>2]|0)>>>0<=0){break}Y=cz(0)|0;if((c[(c[P+8>>2]|0)+576>>2]|0)<(Y-60|0)){ae=er(J,P,123232,0,1,0)|0;if((ae|0)==0){if((c[b+12>>2]|0)!=0){cC[c[b+12>>2]&15](f,g,h,j,c[J>>2]|0)}ze(c[J>>2]|0);c[(c[P+8>>2]|0)+576>>2]=Y;ea(P,1);if((c[b+76>>2]|0)!=0){Y=c[b+76>>2]|0;aa=e2(0)|0;cC[Y&15](f,11,P,0,aa)}}}}}while(0)}if((m|0)!=0){c[m>>2]=c[A>>2]}else{fu(c[A>>2]|0)}if((c[u+20>>2]|0)!=1){c[K>>2]=0;c[l>>2]=c[B>>2];c[u+20>>2]=0;if((c[b+84>>2]|0)!=0){cC[c[b+84>>2]&15](f,P,1,K,c[B>>2]|0);if((c[K>>2]|0)!=0){ze(c[B>>2]|0);c[B>>2]=0;c[l>>2]=bP(c[K>>2]|0)|0;if((c[b+88>>2]|0)!=0){cJ[c[b+88>>2]&127](f,P,c[K>>2]|0)}}}}else{ze(c[B>>2]|0)}}}while(0);break};case 9:{if((q&64|0)!=0){$=el(c[P+16>>2]|0,q)|0;do{if(($|0)!=0){if((c[b+12>>2]|0)==0){break}cC[c[b+12>>2]&15](f,c[P+16>>2]|0,c[P+20>>2]|0,c[P+12>>2]|0,$)}}while(0);ze($)}if((c[P+48>>2]|0)==1){c[(c[P+8>>2]|0)+588>>2]=1}if((c[b+76>>2]|0)!=0){ab=aZ(k|0,65840)|0;if((ab|0)!=0){ab=ab+12|0;if((a[ab]|0)==32){ab=ab+1|0}ac=c[b+76>>2]|0;aa=e2(0)|0;cC[ac&15](f,12,P,ab,aa);c[u+20>>2]=1}else{ab=k}}break};case 1:{ab=en(k,x,y,q)|0;do{if((c[x>>2]|0)!=0){if((c[y>>2]|0)==0){break}aa=Ab(c[y>>2]|0)|0;ac=bP(k|0)|0;if((ac|0)!=0){Ad(ac+((c[x>>2]|0)-k)|0,ac+((c[y>>2]|0)-k)|0,aa+1|0);c[l>>2]=ac;c[u+20>>2]=0}}}while(0);do{if((ab|0)!=0){if((c[P+48>>2]|0)==1){break}if((q&32|0)==0){break}$=ab;if(($|0)==3){W=fA(P+52|0,3)|0;ac=b;aa=f;Y=W;ai=P;ah=L;fc(ac,aa,Y,ai,ah)|0}else if(($|0)==2){W=fA(P+52|0,2)|0;fc(b,f,W,P,L)|0}else if(($|0)==1){ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0;if((ad|0)==0){if((c[b+4>>2]|0)!=0){cJ[c[b+4>>2]&127](f,c[P+16>>2]|0,c[P+20>>2]|0);ad=dC(L,c[P+16>>2]|0,c[P+20>>2]|0)|0}}if((ad|0)!=0){W=fK(P+52|0,0,0,ad)|0;$=b;ah=f;ai=W;Y=P;aa=L;fc($,ah,ai,Y,aa)|0}}}}while(0);V=2013;break};case 0:{V=2013;break};case 10:{if((c[b+76>>2]|0)!=0){ab=c[b+76>>2]|0;aa=e2(0)|0;cC[ab&15](f,14,P,0,aa)}if((c[u+20>>2]|0)==-1){c[u+20>>2]=1}break};default:{}}if((V|0)==2013){if((c[Q+48>>2]|0)!=0){V=2015}else{if((q&8|0)!=0){V=2015}}if((V|0)==2015){if((c[l>>2]|0)!=0){aj=c[l>>2]|0}else{aj=k}if((c[b+76>>2]|0)!=0){aa=c[b+76>>2]|0;ab=e2(0)|0;cC[aa&15](f,13,P,aj,ab);ze(c[l>>2]|0);c[l>>2]=0;c[u+20>>2]=1}}}if((M|0)!=0){ze(c[t>>2]|0)}if((c[u+20>>2]|0)==-1){c[u+20>>2]=0}R=c[u+20>>2]|0;S=R;i=r;return S|0}}while(0);R=1;S=R;i=r;return S|0}}while(0);R=0;S=R;i=r;return S|0}function fb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a;a=b;b=d;if((c[e+76>>2]|0)!=0){d=c[e+76>>2]|0;f=e2(0)|0;cC[d&15](a,9,b,0,f)}if((c[e+12>>2]|0)==0){return}if((c[e+56>>2]|0)==0){return}f=cI[c[e+56>>2]&63](a,b,4)|0;if((f|0)!=0){d=zd((Ab(f|0)|0)+13|0)|0;if((d|0)!=0){g=d;Ag(g|0,65840)|0;g=d;h=f;Ai(g|0,h|0)|0;cC[c[e+12>>2]&15](a,c[b+16>>2]|0,c[b+20>>2]|0,c[b+12>>2]|0,d);ze(d)}if((c[e+60>>2]|0)!=0){cF[c[e+60>>2]&31](a,f)}}return}function fc(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b;b=d;d=e;e=f;f=g;if((d|0)!=0){if((c[h+76>>2]|0)!=0){cC[c[h+76>>2]&15](b,4,e,0,d)}i=d;return i|0}g=c[e+220>>2]|0;do{if((g|0)!=0){if((a[g]|0)==0){break}j=h;k=b;l=e;m=g;e4(j,k,l,m,1,0)|0;m=cz(0)|0;if((e|0)!=(c[e+24>>2]|0)){n=2063}else{if((c[e+188>>2]|0)!=3){n=2063}}if((n|0)==2063){c[(c[e+8>>2]|0)+576>>2]=m;ea(e,1)}do{if((e|0)==(c[e+24>>2]|0)){if((c[e+52>>2]|0)!=1){break}if((c[e+188>>2]|0)!=3){break}c[e+224>>2]=m;do{if((c[f+16>>2]|0)==0){if((h|0)==0){break}if((c[h+92>>2]|0)==0){break}cF[c[h+92>>2]&31](b,70);c[f+16>>2]=1}}while(0)}}while(0)}}while(0);i=d;return i|0}function fd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+8|0;e=d|0;f=a;a=b;b=e2(0)|0;g=0;c[e>>2]=0;h=c[(c[a+16>>2]|0)+48>>2]|0;j=c[(c[a+16>>2]|0)+248>>2]|0;if((g9(c[f+80>>2]|0,c[f+16>>2]|0)|0)==0){if((c[(c[a+8>>2]|0)+76>>2]|0)!=0){f=c[(c[a+8>>2]|0)+76>>2]|0;k=c[a+12>>2]|0;l=c[a+16>>2]|0;m=e2(0)|0;cC[f&15](k,5,l,0,m)}c[a+20>>2]=1;n=e2(0)|0;o=n;i=d;return o|0}g=eb(c[a+16>>2]|0,(c[a+16>>2]|0)+164|0,1,e)|0;if((c[e>>2]|0)!=0){if((c[(c[a+8>>2]|0)+20>>2]|0)!=0){cM[c[(c[a+8>>2]|0)+20>>2]&7](c[a+12>>2]|0,c[a+4>>2]|0,c[(c[a+16>>2]|0)+16>>2]|0,c[(c[a+16>>2]|0)+20>>2]|0,c[(c[a+16>>2]|0)+12>>2]|0,(c[a+16>>2]|0)+164|0)}if((c[(c[a+8>>2]|0)+24>>2]|0)!=0){cE[c[(c[a+8>>2]|0)+24>>2]&127](c[a+12>>2]|0)}}do{if((c[(c[a+16>>2]|0)+48>>2]|0)==1){if((j|0)!=(g|0)){break}if(((c[(c[(c[a+16>>2]|0)+8>>2]|0)+24>>2]|0)-1|0)!=(c[(c[a+16>>2]|0)+72>>2]|0)){break}if((g9(c[(c[(c[a+16>>2]|0)+8>>2]|0)+48>>2]|0,c[(c[a+16>>2]|0)+68>>2]|0)|0)!=0){break}do{if((c[(c[(c[a+16>>2]|0)+8>>2]|0)+12>>2]|0)>>>0>0){if((c[(c[(c[a+16>>2]|0)+8>>2]|0)+12>>2]|0)!=(c[(c[a+16>>2]|0)+136>>2]|0)){p=2097;break}if((g9(c[(c[(c[a+16>>2]|0)+8>>2]|0)+16>>2]|0,c[(c[a+16>>2]|0)+132>>2]|0)|0)!=0){p=2097}}else{p=2097}}while(0);if((p|0)==2097){if((c[(c[(c[a+16>>2]|0)+8>>2]|0)+12>>2]|0)>>>0<=1){break}if(((c[(c[(c[a+16>>2]|0)+8>>2]|0)+12>>2]|0)-1|0)!=(c[(c[a+16>>2]|0)+136>>2]|0)){break}if((c[(c[(c[a+16>>2]|0)+8>>2]|0)+20>>2]|0)==0){break}if((g9(c[(c[(c[a+16>>2]|0)+8>>2]|0)+20>>2]|0,c[(c[a+16>>2]|0)+132>>2]|0)|0)!=0){break}}if((c[(c[a+8>>2]|0)+36>>2]|0)!=0){cJ[c[(c[a+8>>2]|0)+36>>2]&127](c[a+12>>2]|0,c[a+16>>2]|0,c[(c[a+16>>2]|0)+184>>2]|0)}c[a+20>>2]=1;n=e2(0)|0;o=n;i=d;return o|0}}while(0);Ad((c[a+16>>2]|0)+252|0,(c[a+16>>2]|0)+192|0,20);c[(c[a+16>>2]|0)+272>>2]=c[(c[a+16>>2]|0)+212>>2];c[(c[a+16>>2]|0)+276>>2]=c[(c[a+16>>2]|0)+216>>2];c[(c[a+16>>2]|0)+280>>2]=c[(c[a+16>>2]|0)+188>>2];c[(c[(c[a+16>>2]|0)+8>>2]|0)+12>>2]=c[(c[a+16>>2]|0)+136>>2];g4(c[(c[(c[a+16>>2]|0)+8>>2]|0)+16>>2]|0);g4(c[(c[(c[a+16>>2]|0)+8>>2]|0)+20>>2]|0);e=g5(c[(c[a+16>>2]|0)+132>>2]|0)|0;c[(c[(c[a+16>>2]|0)+8>>2]|0)+16>>2]=e;c[(c[(c[a+16>>2]|0)+8>>2]|0)+20>>2]=0;if(((c[(c[(c[a+16>>2]|0)+8>>2]|0)+24>>2]|0)-1|0)!=(c[(c[a+16>>2]|0)+72>>2]|0)){p=2106}else{if((g9(c[(c[(c[a+16>>2]|0)+8>>2]|0)+48>>2]|0,c[(c[a+16>>2]|0)+68>>2]|0)|0)!=0){p=2106}}if((p|0)==2106){eL((c[(c[a+16>>2]|0)+8>>2]|0)+28|0);eL((c[(c[a+16>>2]|0)+8>>2]|0)+40|0);eK((c[(c[a+16>>2]|0)+8>>2]|0)+40|0,(c[a+16>>2]|0)+60|0);e=c[(c[(c[a+16>>2]|0)+8>>2]|0)+40>>2]|0;m=(c[(c[a+16>>2]|0)+8>>2]|0)+28|0;eM(e,m)|0;c[(c[(c[a+16>>2]|0)+8>>2]|0)+24>>2]=(c[(c[a+16>>2]|0)+72>>2]|0)+1}eQ((c[(c[a+16>>2]|0)+8>>2]|0)+52|0);b=eO((c[(c[a+16>>2]|0)+8>>2]|0)+52|0,(c[(c[a+16>>2]|0)+8>>2]|0)+28|0,c[(c[(c[a+16>>2]|0)+8>>2]|0)+16>>2]|0)|0;if((b|0)!=0){n=b;o=n;i=d;return o|0}eQ((c[(c[a+16>>2]|0)+8>>2]|0)+308|0);b=eO((c[(c[a+16>>2]|0)+8>>2]|0)+308|0,(c[(c[a+16>>2]|0)+8>>2]|0)+40|0,c[(c[(c[a+16>>2]|0)+8>>2]|0)+16>>2]|0)|0;if((b|0)!=0){n=b;o=n;i=d;return o|0}b=(c[(c[a+16>>2]|0)+8>>2]|0)+572|0;c[b>>2]=(c[b>>2]|0)+1;c[(c[a+16>>2]|0)+248>>2]=g;c[(c[a+16>>2]|0)+48>>2]=1;if((c[(c[a+8>>2]|0)+16>>2]|0)!=0){cE[c[(c[a+8>>2]|0)+16>>2]&127](c[a+12>>2]|0)}do{if((h|0)==1){if((j|0)!=(g|0)){p=2118;break}if((c[(c[a+8>>2]|0)+36>>2]|0)!=0){cJ[c[(c[a+8>>2]|0)+36>>2]&127](c[a+12>>2]|0,c[a+16>>2]|0,c[(c[a+16>>2]|0)+184>>2]|0)}}else{p=2118}}while(0);if((p|0)==2118){if((c[(c[a+8>>2]|0)+28>>2]|0)!=0){cF[c[(c[a+8>>2]|0)+28>>2]&31](c[a+12>>2]|0,c[a+16>>2]|0)}}c[a>>2]=1;n=fn(0)|0;o=n;i=d;return o|0}function fe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+8|0;d=b|0;e=a;if((c[e>>2]|0)==0){i=b;return}a=cz(0)|0;if((c[(c[(c[e+16>>2]|0)+8>>2]|0)+584>>2]|0)==0){i=b;return}if((c[(c[(c[e+16>>2]|0)+8>>2]|0)+588>>2]|0)==0){i=b;return}if((c[(c[(c[e+16>>2]|0)+8>>2]|0)+576>>2]|0)<(a-60|0)){i=b;return}f=(c[(c[(c[e+16>>2]|0)+8>>2]|0)+588>>2]|0)==1|0;if((f|0)!=0){g=1;if((c[(c[e+8>>2]|0)+64>>2]|0)!=0){h=cN[c[(c[e+8>>2]|0)+64>>2]&63](c[e+12>>2]|0,c[e+16>>2]|0)|0}else{h=0}j=h;if((j|0)==0){j=83584;g=0}h=Ab(c[(c[(c[e+16>>2]|0)+8>>2]|0)+584>>2]|0)|0;k=zd(h+(Ab(j|0)|0)+2|0)|0;if((k|0)==0){i=b;return}h=k;l=j;Ag(h|0,l|0)|0;l=k;Ai(l|0,82640)|0;l=k;h=c[(c[(c[e+16>>2]|0)+8>>2]|0)+584>>2]|0;Ai(l|0,h|0)|0;if((g|0)!=0){cF[c[(c[e+8>>2]|0)+68>>2]&31](c[e+12>>2]|0,j)}}else{k=c[(c[(c[e+16>>2]|0)+8>>2]|0)+584>>2]|0}j=er(d,c[e+16>>2]|0,k,0,0,0)|0;if((f|0)!=0){ze(k)}if((j|0)==0){j=c[e+8>>2]|0;k=c[e+12>>2]|0;g=c[e+16>>2]|0;h=c[d>>2]|0;e4(j,k,g,h,1,0)|0;ze(c[d>>2]|0);c[(c[(c[e+16>>2]|0)+8>>2]|0)+576>>2]=a;ea(c[e+16>>2]|0,1);if((f|0)!=0){if((c[(c[e+8>>2]|0)+76>>2]|0)!=0){f=c[(c[e+8>>2]|0)+76>>2]|0;a=c[e+12>>2]|0;d=c[e+16>>2]|0;h=e2(0)|0;cC[f&15](a,6,d,0,h)}}c[e+20>>2]=1}i=b;return}function ff(a){a=a|0;return a&65535|0}function fg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=a;ec(c[d+248>>2]|0,(e|0)!=0?56640:123232);if((c[f+24>>2]|0)==0){return}cE[c[f+24>>2]&127](b);return}function fh(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=a;a=d8(h,f,d,e,g,0,0,0,0)|0;if((a|0)!=0){fi(h,b,c,a);return}else{return}}function fi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;a=i;i=i+8|0;f=a|0;g=b;b=d;d=e;if((d|0)==0){i=a;return}do{if((c[d+48>>2]|0)==1){if((c[(c[d+8>>2]|0)+12>>2]|0)>>>0<=0){break}if((c[g+8>>2]|0)==0){break}if((cL[c[g+8>>2]&31](b,c[d+16>>2]|0,c[d+20>>2]|0,c[d+12>>2]|0)|0)!=1){break}if((c[g+12>>2]|0)!=0){c[f>>2]=0;e=fs(1,0,0)|0;if((er(f,d,123232,e,1,0)|0)==0){cC[c[g+12>>2]&15](b,c[d+16>>2]|0,c[d+20>>2]|0,c[d+12>>2]|0,c[f>>2]|0)}ze(c[f>>2]|0);fu(e)}}}while(0);ee(d);if((c[g+16>>2]|0)==0){i=a;return}cE[c[g+16>>2]&127](b);i=a;return}function fj(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=a;a=b;b=d;d=e;e=f;f=g;do{if((f|0)!=0){if((d|0)==0){break}if((e|0)==0){break}g=d8(h,f,d,e,0,0,0,0,0)|0;if((g|0)==0){return}i=g;while(1){if((i|0)!=0){j=(c[i+24>>2]|0)==(c[g+24>>2]|0)}else{j=0}if(!j){break}fi(h,a,b,i);i=c[i>>2]|0}return}}while(0);return}function fk(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0;b=i;i=i+8|0;l=b|0;m=d;d=e;e=f;f=g;g=h;h=j;j=k;do{if((e|0)!=0){if(h>>>0>0){if((g|0)==0){break}}do{if((c[e+48>>2]|0)==1){if((c[(c[e+8>>2]|0)+12>>2]|0)>>>0<=0){break}k=zd(h+4|0)|0;c[l>>2]=0;a[k|0]=f>>>24&255;a[k+1|0]=f>>>16&255;a[k+2|0]=f>>>8&255;a[k+3|0]=f&255;if(h>>>0>0){Ad(k+4|0,g|0,h|0)}n=fs(8,h+4&65535,k)|0;ze(k);k=er(l,e,123232,n,1,j)|0;do{if((k|0)==0){if((c[m+12>>2]|0)==0){break}cC[c[m+12>>2]&15](d,c[e+16>>2]|0,c[e+20>>2]|0,c[e+12>>2]|0,c[l>>2]|0)}}while(0);ze(c[l>>2]|0);fu(n);o=k;p=o;i=b;return p|0}}while(0);o=e2(55)|0;p=o;i=b;return p|0}}while(0);o=e2(55)|0;p=o;i=b;return p|0}function fl(a){a=a|0;return 70}function fm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;d=(cz(0)|0)-60|0;f=0;if((e|0)==0){return}g=c[e>>2]|0;while(1){if((g|0)==0){break}do{if((c[g+24>>2]|0)==(g|0)){if((c[g+52>>2]|0)!=1){break}if((c[g+188>>2]|0)!=3){break}if((c[g+224>>2]|0)<=0){break}if((c[g+224>>2]|0)<(d|0)){fz(g+52|0)}else{f=1}}}while(0);g=c[g>>2]|0}if((f|0)!=0){return}if((a|0)==0){return}if((c[a+92>>2]|0)==0){return}cF[c[a+92>>2]&31](b,0);c[e+16>>2]=0;return}function fn(a){a=a|0;return fo(0,a)|0}function fo(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function fp(a,b){a=a|0;b=b|0;return fo(a,b)|0}function fq(){var a=0,b=0,d=0;a=zd(20)|0;if((a|0)!=0){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;b=a;d=b;return d|0}else{b=0;d=b;return d|0}return 0}function fr(a){a=a|0;var b=0;b=a;eh(b);dH(b);dK(b);gn(b);ze(b);return}function fs(d,f,g){d=d|0;f=f|0;g=g|0;var h=0;h=f;f=zd(12)|0;if((f|0)!=0){}else{b4(81712,82400,32,86256);return 0}b[f>>1]=d;b[f+2>>1]=h;c[f+4>>2]=zd((h&65535)+1|0)|0;if((c[f+4>>2]|0)!=0){}else{b4(73280,82400,36,86256);return 0}Ad(c[f+4>>2]|0,g|0,h&65535|0);a[(c[f+4>>2]|0)+(e[f+2>>1]|0)|0]=0;c[f+8>>2]=0;return f|0}function ft(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+8|0;f=e|0;g=a;a=b;c[f>>2]=0;b=f;while(1){if(a>>>0<4){h=2275;break}j=((d[g|0]|0)<<8)+(d[g+1|0]|0)&65535;k=((d[g+2|0]|0)<<8)+(d[g+3|0]|0)&65535;g=g+4|0;a=a-4|0;if(a>>>0<(k&65535)>>>0){break}c[b>>2]=fs(j,k,g)|0;g=g+(k&65535)|0;a=a-(k&65535)|0;b=(c[b>>2]|0)+8|0}if((h|0)==2275){l=c[f>>2]|0;i=e;return l|0}l=c[f>>2]|0;i=e;return l|0}function fu(a){a=a|0;var b=0;b=a;while(1){if((b|0)==0){break}a=c[b+8>>2]|0;ze(c[b+4>>2]|0);ze(b);b=a}return}function fv(a){a=a|0;var b=0;b=a;a=0;while(1){if((b|0)==0){break}a=a+((e[b+2>>1]|0)+4)|0;b=c[b+8>>2]|0}return a|0}function fw(b,d){b=b|0;d=d|0;var f=0;f=b;b=d;while(1){if((b|0)==0){break}a[f|0]=(e[b>>1]|0)>>8&255;a[f+1|0]=(e[b>>1]|0)&255;a[f+2|0]=(e[b+2>>1]|0)>>8&255;a[f+3|0]=(e[b+2>>1]|0)&255;f=f+4|0;Ad(f|0,c[b+4>>2]|0,e[b+2>>1]|0|0);f=f+(e[b+2>>1]|0)|0;b=c[b+8>>2]|0}return}function fx(a,b){a=a|0;b=b|0;var d=0,f=0,g=0,h=0;d=a;a=b;while(1){if((d|0)==0){f=2294;break}if((e[d>>1]|0|0)==(a&65535|0)){f=2292;break}d=c[d+8>>2]|0}if((f|0)==2294){g=0;h=g;return h|0}else if((f|0)==2292){g=d;h=g;return h|0}return 0}function fy(a){a=a|0;var b=0;b=a;a=b+52|0;c[a>>2]=0;eJ(a+8|0);c[a+20>>2]=0;c[a+24>>2]=0;c[a+28>>2]=0;Ae(a+32|0,0,16);Ae(a+48|0,0,32);c[a+80>>2]=0;c[a+84>>2]=0;c[a+88>>2]=0;c[a+92>>2]=0;c[a+96>>2]=0;c[a+100>>2]=0;c[a+104>>2]=0;c[a+108>>2]=0;Ae(a+112|0,0,20);c[a+132>>2]=0;c[a+136>>2]=0;Ae(a+140|0,0,20);c[a+160>>2]=0;c[a+168>>2]=0;c[a+172>>2]=0;c[a+4>>2]=b;return}function fz(a){a=a|0;var b=0;b=a;c[b>>2]=0;eL(b+8|0);c[b+20>>2]=0;ze(c[b+24>>2]|0);c[b+24>>2]=0;c[b+28>>2]=0;Ae(b+32|0,0,16);Ae(b+48|0,0,32);g4(c[b+80>>2]|0);c[b+80>>2]=0;c[b+84>>2]=0;hJ(c[b+88>>2]|0);hJ(c[b+92>>2]|0);ic(c[b+96>>2]|0);ic(c[b+100>>2]|0);ic(c[b+104>>2]|0);ic(c[b+108>>2]|0);c[b+88>>2]=0;c[b+92>>2]=0;c[b+96>>2]=0;c[b+100>>2]=0;c[b+104>>2]=0;c[b+108>>2]=0;Ae(b+112|0,0,20);c[b+132>>2]=0;c[b+136>>2]=0;Ae(b+140|0,0,20);c[b+160>>2]=0;ze(c[b+168>>2]|0);c[b+168>>2]=0;c[b+172>>2]=0;return}function fA(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=b;b=d;d=fB(0)|0;c[g>>2]=0;fz(j);c[j+132>>2]=1;c[j+136>>2]=b;c[(c[j+4>>2]|0)+280>>2]=b;eM(5,j+8|0)|0;c[j+20>>2]=1;i6(j+32|0,16,1);hc(5,0,0,f,c[j+16>>2]|0)|0;c[j+24>>2]=zd((c[f>>2]|0)+4|0)|0;do{if((c[j+24>>2]|0)==0){k=2335}else{c[j+28>>2]=(c[f>>2]|0)+4;b=c[j+24>>2]|0;l=c[j+28>>2]|0;a[b|0]=(c[f>>2]|0)>>>24&255;a[b+1|0]=(c[f>>2]|0)>>>16&255;a[b+2|0]=(c[f>>2]|0)>>>8&255;a[b+3|0]=c[f>>2]&255;b=b+4|0;l=l-4|0;m=b;n=l;o=c[j+16>>2]|0;hc(5,m,n,0,o)|0;b=b+(c[f>>2]|0)|0;l=l-(c[f>>2]|0)|0;if((l|0)==0){}else{b4(79752,82168,172,86352);return 0}ik(8,j+48|0,c[j+24>>2]|0,c[j+28>>2]|0);d=hH(g,7,6,1)|0;if((d|0)!=0){break}d=hK(c[g>>2]|0,j+32|0,16)|0;if((d|0)!=0){break}Ae(h|0,0,16);d=hM(c[g>>2]|0,h|0,16)|0;if((d|0)!=0){break}d=hT(c[g>>2]|0,c[j+24>>2]|0,c[j+28>>2]|0,0,0)|0;if((d|0)!=0){break}hJ(c[g>>2]|0);c[g>>2]=0;l=((c[j+136>>2]|0)==3?8:0)+7+(c[j+28>>2]|0)+36|0;b=zd(l)|0;if((b|0)==0){k=2335;break}o=b;n=l;a[b|0]=0;a[b+1|0]=c[j+136>>2]&255;a[b+2|0]=2;b=b+3|0;l=l-3|0;if((c[j+136>>2]|0)==3){a[b|0]=(c[(c[j+4>>2]|0)+40>>2]|0)>>>24&255;a[b+1|0]=(c[(c[j+4>>2]|0)+40>>2]|0)>>>16&255;a[b+2|0]=(c[(c[j+4>>2]|0)+40>>2]|0)>>>8&255;a[b+3|0]=c[(c[j+4>>2]|0)+40>>2]&255;b=b+4|0;l=l-4|0;a[b|0]=(c[(c[j+4>>2]|0)+44>>2]|0)>>>24&255;a[b+1|0]=(c[(c[j+4>>2]|0)+44>>2]|0)>>>16&255;a[b+2|0]=(c[(c[j+4>>2]|0)+44>>2]|0)>>>8&255;a[b+3|0]=c[(c[j+4>>2]|0)+44>>2]&255;b=b+4|0;l=l-4|0}a[b|0]=(c[j+28>>2]|0)>>>24&255;a[b+1|0]=(c[j+28>>2]|0)>>>16&255;a[b+2|0]=(c[j+28>>2]|0)>>>8&255;a[b+3|0]=c[j+28>>2]&255;b=b+4|0;l=l-4|0;Ad(b|0,c[j+24>>2]|0,c[j+28>>2]|0);b=b+(c[j+28>>2]|0)|0;l=l-(c[j+28>>2]|0)|0;a[b|0]=0;a[b+1|0]=0;a[b+2|0]=0;a[b+3|0]=32;b=b+4|0;l=l-4|0;Ad(b|0,j+48|0,32);b=b+32|0;l=l-32|0;if((l|0)==0){}else{b4(79752,82168,228,86352);return 0}c[j+168>>2]=eG(o,n)|0;ze(o);if((c[j+168>>2]|0)==0){k=2335;break}c[j>>2]=1;p=d;q=p;i=e;return q|0}}while(0);if((k|0)==2335){d=fB(32854)|0}fz(j);hJ(c[g>>2]|0);p=d;q=p;i=e;return q|0}function fB(a){a=a|0;return fR(32,a)|0}function fC(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+48|0;g=f|0;h=f+8|0;j=f+40|0;k=a;a=e;e=fB(0)|0;c[g>>2]=0;l=0;m=0;n=(c[(c[k+4>>2]|0)+24>>2]|0)==(c[k+4>>2]|0)|0;o=eH(b,g,j)|0;L2960:do{if((o|0)==-1){p=2406}else{L2963:do{if((o|0)!=-2){l=c[g>>2]|0;b=c[j>>2]|0;c[k+136>>2]=a;c[(c[k+4>>2]|0)+280>>2]=a;if(b>>>0<3){break}do{if((d[l|0]|0|0)==0){if((d[l+2|0]|0|0)!=2){break}do{if((d[l+1|0]|0|0)!=1){if((d[l+1|0]|0|0)==2){break}if((d[l+1|0]|0|0)==3){break}break L2963}}while(0);l=l+3|0;b=b-3|0;if((a|0)==3){if(b>>>0<8){break L2963}l=l+8|0;b=b-8|0}if(b>>>0<4){break L2963}q=(d[l|0]|0)<<24|(d[l+1|0]|0)<<16|(d[l+2|0]|0)<<8|(d[l+3|0]|0);l=l+4|0;b=b-4|0;if(b>>>0<q>>>0){break L2963}m=zd(q)|0;do{if((m|0)==0){if(q>>>0<=0){break}p=2406;break L2960}}while(0);Ad(m|0,l|0,q|0);l=l+q|0;b=b-q|0;if(b>>>0<4){break L2963}r=(d[l|0]|0)<<24|(d[l+1|0]|0)<<16|(d[l+2|0]|0)<<8|(d[l+3|0]|0);l=l+4|0;b=b-4|0;if((r|0)!=32){break L2963}if(b>>>0<32){break L2963}Ad(h|0,l|0,32);l=l+32|0;b=b-32|0;if((b|0)!=0){break L2963}ze(c[g>>2]|0);c[g>>2]=0;L3024:do{switch(c[k>>2]|0){case 2:{ze(c[k+24>>2]|0);c[k+24>>2]=m;m=0;c[k+28>>2]=q;Ad(k+48|0,h|0,32);break};case 1:{do{if((n|0)!=0){p=2399}else{if((Af(k+48|0,h|0,32)|0)<=0){p=2399;break}ze(m);m=0}}while(0);do{if((p|0)==2399){fz(k);c[k+136>>2]=a;r=k+8|0;eM(5,r)|0;c[k+20>>2]=1;c[k+24>>2]=m;m=0;c[k+28>>2]=q;Ad(k+48|0,h|0,32);e=fD(k)|0;if((e|0)!=0){break L2960}else{c[k>>2]=2;break}}}while(0);break};case 0:case 3:case 4:{fz(k);c[k+136>>2]=a;eM(5,k+8|0)|0;c[k+20>>2]=1;c[k+24>>2]=m;m=0;c[k+28>>2]=q;Ad(k+48|0,h|0,32);e=fD(k)|0;if((e|0)!=0){break L2960}else{c[k>>2]=2;break L3024}break};default:{}}}while(0);s=e;t=s;i=f;return t|0}}while(0)}}while(0);e=fB(55)|0}}while(0);if((p|0)==2406){e=fB(32854)|0}ze(c[g>>2]|0);ze(m);s=e;t=s;i=f;return t|0}function fD(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+8|0;e=d|0;f=b;b=fB(0)|0;hc(5,0,0,e,c[f+16>>2]|0)|0;g=((c[f+136>>2]|0)==3?8:0)+7+(c[e>>2]|0)|0;h=zd(g)|0;do{if((h|0)!=0){j=h;k=g;a[j|0]=0;a[j+1|0]=c[f+136>>2]&255;a[j+2|0]=10;j=j+3|0;k=k-3|0;if((c[f+136>>2]|0)==3){a[j|0]=(c[(c[f+4>>2]|0)+40>>2]|0)>>>24&255;a[j+1|0]=(c[(c[f+4>>2]|0)+40>>2]|0)>>>16&255;a[j+2|0]=(c[(c[f+4>>2]|0)+40>>2]|0)>>>8&255;a[j+3|0]=c[(c[f+4>>2]|0)+40>>2]&255;j=j+4|0;k=k-4|0;a[j|0]=(c[(c[f+4>>2]|0)+44>>2]|0)>>>24&255;a[j+1|0]=(c[(c[f+4>>2]|0)+44>>2]|0)>>>16&255;a[j+2|0]=(c[(c[f+4>>2]|0)+44>>2]|0)>>>8&255;a[j+3|0]=c[(c[f+4>>2]|0)+44>>2]&255;j=j+4|0;k=k-4|0}a[j|0]=(c[e>>2]|0)>>>24&255;a[j+1|0]=(c[e>>2]|0)>>>16&255;a[j+2|0]=(c[e>>2]|0)>>>8&255;a[j+3|0]=c[e>>2]&255;j=j+4|0;k=k-4|0;l=j;m=k;n=c[f+16>>2]|0;hc(5,l,m,0,n)|0;j=j+(c[e>>2]|0)|0;k=k-(c[e>>2]|0)|0;if((k|0)==0){}else{b4(79752,82168,277,86504);return 0}ze(c[f+168>>2]|0);c[f+168>>2]=eG(h,g)|0;ze(h);if((c[f+168>>2]|0)==0){break}o=b;p=o;i=d;return p|0}}while(0);b=fB(32854)|0;o=b;p=o;i=d;return p|0}function fE(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+24|0;h=g|0;j=g+8|0;k=g+16|0;l=a;a=b;b=e;e=f;f=fB(0)|0;c[h>>2]=0;m=0;c[k>>2]=0;c[b>>2]=0;n=ep(a)|0;o=eH(a,h,j)|0;L3075:do{if((o|0)==-1){f=fB(32854)|0}else{L3079:do{if((o|0)!=-2){m=c[h>>2]|0;a=c[j>>2]|0;if(a>>>0<3){break}do{if((d[m|0]|0|0)==0){if((d[m+2|0]|0|0)!=10){break}do{if((d[m+1|0]|0|0)!=1){if((d[m+1|0]|0|0)==2){break}if((d[m+1|0]|0|0)==3){break}break L3079}}while(0);m=m+3|0;a=a-3|0;if((n|0)==3){if(a>>>0<8){break L3079}m=m+8|0;a=a-8|0}if(a>>>0<4){break L3079}p=(d[m|0]|0)<<24|(d[m+1|0]|0)<<16|(d[m+2|0]|0)<<8|(d[m+3|0]|0);m=m+4|0;a=a-4|0;if((p|0)!=0){if(a>>>0<p>>>0){break L3079}q=m;r=p;hb(k,5,q,r,0)|0}else{c[k>>2]=g7(0,0)|0}m=m+p|0;a=a-p|0;if((a|0)!=0){break L3079}ze(c[h>>2]|0);c[h>>2]=0;L3127:do{switch(c[l>>2]|0){case 1:{if((n|0)!=(c[l+136>>2]|0)){break L3075}g4(c[l+80>>2]|0);c[l+80>>2]=c[k>>2];c[k>>2]=0;f=eR(l+8|0,c[l+80>>2]|0,l+140|0,l+160|0,l+88|0,l+92|0,l+96|0,l+100|0,l+104|0,l+108|0)|0;if((f|0)!=0){break L3075}f=fF(l,e)|0;if((f|0)!=0){break L3075}else{c[b>>2]=1;c[l>>2]=3;break L3127}break};case 0:case 2:case 4:{c[b>>2]=0;break};case 3:{if((g9(c[k>>2]|0,c[l+80>>2]|0)|0)==0){c[b>>2]=1}else{c[b>>2]=0}break};default:{}}}while(0);g4(c[k>>2]|0);s=f;t=s;i=g;return t|0}}while(0)}}while(0);f=fB(55)|0}}while(0);ze(c[h>>2]|0);g4(c[k>>2]|0);s=f;t=s;i=g;return t|0}function fF(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+16|0;f=e|0;g=e+8|0;h=b;b=fB(0)|0;j=0;c[f>>2]=0;b=fQ(f,g,c[h+96>>2]|0,c[h+88>>2]|0,c[h+16>>2]|0,c[h+80>>2]|0,d,c[h+20>>2]|0)|0;if((b|0)==0){d=((c[h+136>>2]|0)==3?8:0)+27+(c[g>>2]|0)+20|0;j=zd(d)|0;do{if((j|0)!=0){k=j;l=d;a[k|0]=0;a[k+1|0]=c[h+136>>2]&255;a[k+2|0]=17;k=k+3|0;l=l-3|0;if((c[h+136>>2]|0)==3){a[k|0]=(c[(c[h+4>>2]|0)+40>>2]|0)>>>24&255;a[k+1|0]=(c[(c[h+4>>2]|0)+40>>2]|0)>>>16&255;a[k+2|0]=(c[(c[h+4>>2]|0)+40>>2]|0)>>>8&255;a[k+3|0]=c[(c[h+4>>2]|0)+40>>2]&255;k=k+4|0;l=l-4|0;a[k|0]=(c[(c[h+4>>2]|0)+44>>2]|0)>>>24&255;a[k+1|0]=(c[(c[h+4>>2]|0)+44>>2]|0)>>>16&255;a[k+2|0]=(c[(c[h+4>>2]|0)+44>>2]|0)>>>8&255;a[k+3|0]=c[(c[h+4>>2]|0)+44>>2]&255;k=k+4|0;l=l-4|0}a[k|0]=0;a[k+1|0]=0;a[k+2|0]=0;a[k+3|0]=16;k=k+4|0;l=l-4|0;Ad(k|0,h+32|0,16);k=k+16|0;l=l-16|0;m=k;a[k|0]=(c[g>>2]|0)>>>24&255;a[k+1|0]=(c[g>>2]|0)>>>16&255;a[k+2|0]=(c[g>>2]|0)>>>8&255;a[k+3|0]=c[g>>2]&255;k=k+4|0;l=l-4|0;Ad(k|0,c[f>>2]|0,c[g>>2]|0);k=k+(c[g>>2]|0)|0;l=l-(c[g>>2]|0)|0;ze(c[f>>2]|0);c[f>>2]=0;ig(c[h+104>>2]|0);ii(c[h+104>>2]|0,m,k-m|0);Ad(k|0,ij(c[h+104>>2]|0,8)|0,20);k=k+20|0;l=l-20|0;if((l|0)==0){}else{b4(79752,82168,695,86472);return 0}ze(c[h+168>>2]|0);c[h+168>>2]=eG(j,d)|0;if((c[h+168>>2]|0)==0){break}ze(j);j=0;n=b;o=n;i=e;return o|0}}while(0);b=fB(32854)|0}ze(j);ze(c[f>>2]|0);n=b;o=n;i=e;return o|0}function fG(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;k=i;i=i+80|0;l=k|0;m=k+8|0;n=k+16|0;o=k+24|0;p=k+32|0;q=k+48|0;r=b;b=f;f=g;g=h;h=j;j=fB(0)|0;c[l>>2]=0;s=0;t=0;c[n>>2]=0;c[o>>2]=0;c[b>>2]=0;u=eH(e,l,m)|0;L3181:do{if((u|0)==-1){v=2623}else{L3184:do{if((u|0)!=-2){s=c[l>>2]|0;e=c[m>>2]|0;if(e>>>0<3){break}w=a[s+1|0]|0;if(e>>>0<3){break}do{if((d[s|0]|0|0)==0){if((d[s+2|0]|0|0)!=17){break}do{if((d[s+1|0]|0|0)!=1){if((d[s+1|0]|0|0)==2){break}if((d[s+1|0]|0|0)==3){break}break L3184}}while(0);s=s+3|0;e=e-3|0;if((w&255|0)==3){if(e>>>0<8){break L3184}s=s+8|0;e=e-8|0}if(e>>>0<4){break L3184}x=(d[s|0]|0)<<24|(d[s+1|0]|0)<<16|(d[s+2|0]|0)<<8|(d[s+3|0]|0);s=s+4|0;e=e-4|0;if((x|0)!=16){break L3184}if(e>>>0<x>>>0){break L3184}Ad(r+32|0,s|0,x|0);s=s+x|0;e=e-x|0;x=s;if(e>>>0<4){break L3184}y=(d[s|0]|0)<<24|(d[s+1|0]|0)<<16|(d[s+2|0]|0)<<8|(d[s+3|0]|0);s=s+4|0;e=e-4|0;if(e>>>0<y>>>0){break L3184}s=s+y|0;e=e-y|0;y=s;if(e>>>0<20){break L3184}z=s;s=s+20|0;e=e-20|0;if((e|0)!=0){break L3184}switch(c[r>>2]|0){case 0:case 1:case 3:case 4:{c[b>>2]=0;ze(c[l>>2]|0);c[l>>2]=0;break};case 2:{t=zd(c[r+28>>2]|0)|0;do{if((c[r+28>>2]|0)!=0){if((t|0)!=0){break}v=2623;break L3181}}while(0);j=hH(n,7,6,1)|0;if((j|0)!=0){break L3181}j=hK(c[n>>2]|0,r+32|0,16)|0;if((j|0)!=0){break L3181}Ae(p|0,0,16);j=hM(c[n>>2]|0,p|0,16)|0;if((j|0)!=0){break L3181}j=hU(c[n>>2]|0,t,c[r+28>>2]|0,c[r+24>>2]|0,c[r+28>>2]|0)|0;if((j|0)!=0){break L3181}hJ(c[n>>2]|0);c[n>>2]=0;ik(8,q|0,t,c[r+28>>2]|0);if((Af(q|0,r+48|0,32)|0)!=0){j=fB(0)|0;break L3181}s=t;e=c[r+28>>2]|0;if(e>>>0<4){break L3184}A=(d[s|0]|0)<<24|(d[s+1|0]|0)<<16|(d[s+2|0]|0)<<8|(d[s+3|0]|0);s=s+4|0;e=e-4|0;if((A|0)!=0){if(e>>>0<A>>>0){break L3184}B=s;C=A;hb(o,5,B,C,0)|0}else{c[o>>2]=g7(0,0)|0}s=s+A|0;e=e-A|0;ze(t);t=0;if((e|0)!=0){break L3184}g4(c[r+80>>2]|0);c[r+80>>2]=c[o>>2];c[o>>2]=0;j=eR(r+8|0,c[r+80>>2]|0,r+140|0,r+160|0,r+88|0,r+92|0,r+96|0,r+100|0,r+104|0,r+108|0)|0;if((j|0)!=0){break L3181}ig(c[r+104>>2]|0);ii(c[r+104>>2]|0,x,y-x|0);if((Af(z|0,ij(c[r+104>>2]|0,8)|0,20)|0)!=0){break L3184}j=fH(r+112|0,r+84|0,x+4|0,y-x-4|0,c[r+96>>2]|0,c[r+88>>2]|0,c[r+16>>2]|0,c[r+80>>2]|0)|0;if((j|0)!=0){break L3181}x=0;y=0;z=0;ze(c[l>>2]|0);c[l>>2]=0;j=fI(r,f)|0;if((j|0)!=0){break L3181}c[r+164>>2]=1;if((g|0)!=0){j=cN[g&63](r,h)|0}c[b>>2]=1;c[r+20>>2]=0;c[r>>2]=0;break};default:{}}D=j;E=D;i=k;return E|0}}while(0)}}while(0);j=fB(55)|0}}while(0);if((v|0)==2623){j=fB(32854)|0}ze(c[l>>2]|0);ze(t);hJ(c[n>>2]|0);g4(c[o>>2]|0);D=j;E=D;i=k;return E|0}function fH(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;m=i;i=i+88|0;n=m|0;o=m+8|0;p=m+16|0;q=m+48|0;r=m+56|0;s=m+64|0;t=m+72|0;u=m+80|0;v=b;b=e;e=f;f=g;g=h;h=k;k=l;l=fB(0)|0;w=0;x=0;c[u>>2]=0;l=hU(j,e,f,0,0)|0;L3319:do{if((l|0)==0){x=e;j=f;do{if(j>>>0>=2){y=((d[x|0]|0)<<8)+(d[x+1|0]|0)&65535;x=x+2|0;j=j-2|0;if((y&65535|0)!=0){break}z=x;if(j>>>0<4){break}A=(d[x|0]|0)<<24|(d[x+1|0]|0)<<16|(d[x+2|0]|0)<<8|(d[x+3|0]|0);x=x+4|0;j=j-4|0;if((A|0)!=0){if(j>>>0<A>>>0){break}B=x;C=A;hb(q,5,B,C,0)|0}else{c[q>>2]=g7(0,0)|0}x=x+A|0;j=j-A|0;if(j>>>0<4){break}A=(d[x|0]|0)<<24|(d[x+1|0]|0)<<16|(d[x+2|0]|0)<<8|(d[x+3|0]|0);x=x+4|0;j=j-4|0;if((A|0)!=0){if(j>>>0<A>>>0){break}C=x;B=A;hb(r,5,C,B,0)|0}else{c[r>>2]=g7(0,0)|0}x=x+A|0;j=j-A|0;if(j>>>0<4){break}A=(d[x|0]|0)<<24|(d[x+1|0]|0)<<16|(d[x+2|0]|0)<<8|(d[x+3|0]|0);x=x+4|0;j=j-4|0;if((A|0)!=0){if(j>>>0<A>>>0){break}B=x;C=A;hb(s,5,B,C,0)|0}else{c[s>>2]=g7(0,0)|0}x=x+A|0;j=j-A|0;if(j>>>0<4){break}A=(d[x|0]|0)<<24|(d[x+1|0]|0)<<16|(d[x+2|0]|0)<<8|(d[x+3|0]|0);x=x+4|0;j=j-4|0;if((A|0)!=0){if(j>>>0<A>>>0){break}C=x;B=A;hb(t,5,C,B,0)|0}else{c[t>>2]=g7(0,0)|0}x=x+A|0;j=j-A|0;A=x;ik(2,v,z,A-z|0);B=c[q>>2]|0;C=c[r>>2]|0;D=c[s>>2]|0;E=c[t>>2]|0;gK(u,0,68592,(F=i,i=i+32|0,c[F>>2]=B,c[F+8>>2]=C,c[F+16>>2]=D,c[F+24>>2]=E,F)|0)|0;i=F;g4(c[q>>2]|0);g4(c[r>>2]|0);g4(c[s>>2]|0);g4(c[t>>2]|0);if(j>>>0<4){break}F=(d[x|0]|0)<<24|(d[x+1|0]|0)<<16|(d[x+2|0]|0)<<8|(d[x+3|0]|0);x=x+4|0;j=j-4|0;if((F|0)==0){break}E=x;D=j;C=h;hc(5,0,0,n,C)|0;C=k;hc(5,0,0,o,C)|0;C=(c[n>>2]|0)+8+(c[o>>2]|0)+2+(A-z)+4|0;w=zd(C)|0;if((w|0)==0){l=fB(32854)|0;break L3319}x=w;j=C;a[x|0]=(c[o>>2]|0)>>>24&255;a[x+1|0]=(c[o>>2]|0)>>>16&255;a[x+2|0]=(c[o>>2]|0)>>>8&255;a[x+3|0]=c[o>>2]&255;x=x+4|0;j=j-4|0;B=x;G=j;H=k;hc(5,B,G,0,H)|0;x=x+(c[o>>2]|0)|0;j=j-(c[o>>2]|0)|0;a[x|0]=(c[n>>2]|0)>>>24&255;a[x+1|0]=(c[n>>2]|0)>>>16&255;a[x+2|0]=(c[n>>2]|0)>>>8&255;a[x+3|0]=c[n>>2]&255;x=x+4|0;j=j-4|0;H=x;G=j;B=h;hc(5,H,G,0,B)|0;x=x+(c[n>>2]|0)|0;j=j-(c[n>>2]|0)|0;a[x|0]=(y&65535)>>8&255;a[x+1|0]=y&65535&255;x=x+2|0;j=j-2|0;Ad(x|0,z|0,A-z|0);x=x+(A-z)|0;j=j-(A-z)|0;a[x|0]=F>>>24&255;a[x+1|0]=F>>>16&255;a[x+2|0]=F>>>8&255;a[x+3|0]=F&255;x=x+4|0;j=j-4|0;if((j|0)==0){}else{b4(79752,82168,604,86528);return 0}ig(g);ii(g,w,C);Ad(p|0,ij(g,8)|0,32);ze(w);w=0;l=d1(E,D,y,c[u>>2]|0,p|0,32)|0;if((l|0)!=0){break L3319}gM(c[u>>2]|0);c[u>>2]=0;c[b>>2]=F;I=l;J=I;i=m;return J|0}}while(0);l=fB(55)|0}}while(0);ze(w);gM(c[u>>2]|0);I=l;J=I;i=m;return J|0}function fI(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+16|0;f=e|0;g=e+8|0;h=b;b=fB(0)|0;j=0;c[f>>2]=0;b=fQ(f,g,c[h+100>>2]|0,c[h+92>>2]|0,c[h+16>>2]|0,c[h+80>>2]|0,d,c[h+20>>2]|0)|0;if((b|0)==0){d=((c[h+136>>2]|0)==3?8:0)+7+(c[g>>2]|0)+20|0;j=zd(d)|0;do{if((j|0)!=0){k=j;l=d;a[k|0]=0;a[k+1|0]=c[h+136>>2]&255;a[k+2|0]=18;k=k+3|0;l=l-3|0;if((c[h+136>>2]|0)==3){a[k|0]=(c[(c[h+4>>2]|0)+40>>2]|0)>>>24&255;a[k+1|0]=(c[(c[h+4>>2]|0)+40>>2]|0)>>>16&255;a[k+2|0]=(c[(c[h+4>>2]|0)+40>>2]|0)>>>8&255;a[k+3|0]=c[(c[h+4>>2]|0)+40>>2]&255;k=k+4|0;l=l-4|0;a[k|0]=(c[(c[h+4>>2]|0)+44>>2]|0)>>>24&255;a[k+1|0]=(c[(c[h+4>>2]|0)+44>>2]|0)>>>16&255;a[k+2|0]=(c[(c[h+4>>2]|0)+44>>2]|0)>>>8&255;a[k+3|0]=c[(c[h+4>>2]|0)+44>>2]&255;k=k+4|0;l=l-4|0}m=k;a[k|0]=(c[g>>2]|0)>>>24&255;a[k+1|0]=(c[g>>2]|0)>>>16&255;a[k+2|0]=(c[g>>2]|0)>>>8&255;a[k+3|0]=c[g>>2]&255;k=k+4|0;l=l-4|0;Ad(k|0,c[f>>2]|0,c[g>>2]|0);k=k+(c[g>>2]|0)|0;l=l-(c[g>>2]|0)|0;ze(c[f>>2]|0);c[f>>2]=0;ig(c[h+108>>2]|0);ii(c[h+108>>2]|0,m,k-m|0);Ad(k|0,ij(c[h+108>>2]|0,8)|0,20);k=k+20|0;l=l-20|0;if((l|0)==0){}else{b4(79752,82168,768,86440);return 0}ze(c[h+168>>2]|0);c[h+168>>2]=eG(j,d)|0;if((c[h+168>>2]|0)==0){break}ze(j);j=0;n=b;o=n;i=e;return o|0}}while(0);b=fB(32854)|0}ze(j);ze(c[f>>2]|0);n=b;o=n;i=e;return o|0}function fJ(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+16|0;k=j|0;l=j+8|0;m=b;b=f;f=g;g=h;h=fB(0)|0;c[k>>2]=0;n=0;c[b>>2]=0;o=eH(e,k,l)|0;L3465:do{if((o|0)==-1){h=fB(32854)|0}else{L3469:do{if((o|0)!=-2){n=c[k>>2]|0;e=c[l>>2]|0;if(e>>>0<3){break}p=a[n+1|0]|0;if(e>>>0<3){break}do{if((d[n|0]|0|0)==0){if((d[n+2|0]|0|0)!=18){break}do{if((d[n+1|0]|0|0)!=1){if((d[n+1|0]|0|0)==2){break}if((d[n+1|0]|0|0)==3){break}break L3469}}while(0);n=n+3|0;e=e-3|0;if((p&255|0)==3){if(e>>>0<8){break L3469}n=n+8|0;e=e-8|0}q=n;if(e>>>0<4){break L3469}r=(d[n|0]|0)<<24|(d[n+1|0]|0)<<16|(d[n+2|0]|0)<<8|(d[n+3|0]|0);n=n+4|0;e=e-4|0;if(e>>>0<r>>>0){break L3469}n=n+r|0;e=e-r|0;r=n;if(e>>>0<20){break L3469}s=n;n=n+20|0;e=e-20|0;if((e|0)!=0){break L3469}switch(c[m>>2]|0){case 0:case 1:case 2:case 4:{c[b>>2]=0;ze(c[k>>2]|0);c[k>>2]=0;break};case 3:{ig(c[m+108>>2]|0);ii(c[m+108>>2]|0,q,r-q|0);if((Af(s|0,ij(c[m+108>>2]|0,8)|0,20)|0)!=0){break L3469}h=fH(m+112|0,m+84|0,q+4|0,r-q-4|0,c[m+100>>2]|0,c[m+92>>2]|0,c[m+16>>2]|0,c[m+80>>2]|0)|0;if((h|0)!=0){break L3465}q=0;r=0;s=0;ze(c[k>>2]|0);c[k>>2]=0;c[m+164>>2]=0;if((f|0)!=0){h=cN[f&63](m,g)|0}ze(c[m+168>>2]|0);c[m+168>>2]=0;c[b>>2]=0;c[m+20>>2]=0;c[m>>2]=0;break};default:{}}t=h;u=t;i=j;return u|0}}while(0)}}while(0);h=fB(55)|0}}while(0);ze(c[k>>2]|0);t=h;u=t;i=j;return u|0}function fK(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=a;a=b;b=fB(0)|0;fz(f);c[f+132>>2]=1;c[f+136>>2]=1;if((a|0)!=0){eK(f+8|0,a);c[f+20>>2]=d}else{d=f+8|0;eM(5,d)|0;c[f+20>>2]=1}b=fL(f,0,e)|0;if((b|0)!=0){g=b;return g|0}c[f>>2]=4;g=b;return g|0}function fL(b,d,f){b=b|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+48|0;h=g|0;j=g+8|0;k=g+16|0;l=g+24|0;m=b;b=f;f=fB(0)|0;n=0;o=0;c[h>>2]=0;if((e[b+16>>1]|0|0)!=0){p=fN(55)|0;q=p;i=g;return q|0}hc(5,0,0,j,c[m+16>>2]|0)|0;r=(c[b+28>>2]|0)+12+(c[j>>2]|0)+40|0;n=zd(r)|0;do{if((n|0)==0){s=2839}else{o=n;t=r;Ad(o|0,73064,3);o=o+3|0;t=t-3|0;a[o|0]=d;o=o+1|0;t=t-1|0;Ad(o|0,c[b+24>>2]|0,c[b+28>>2]|0);o=o+(c[b+28>>2]|0)|0;t=t-(c[b+28>>2]|0)|0;a[o|0]=(c[m+20>>2]|0)>>>24&255;a[o+1|0]=(c[m+20>>2]|0)>>>16&255;a[o+2|0]=(c[m+20>>2]|0)>>>8&255;a[o+3|0]=c[m+20>>2]&255;o=o+4|0;t=t-4|0;a[o|0]=(c[j>>2]|0)>>>24&255;a[o+1|0]=(c[j>>2]|0)>>>16&255;a[o+2|0]=(c[j>>2]|0)>>>8&255;a[o+3|0]=c[j>>2]&255;o=o+4|0;t=t-4|0;u=o;v=t;w=c[m+16>>2]|0;hc(5,u,v,0,w)|0;o=o+(c[j>>2]|0)|0;t=t-(c[j>>2]|0)|0;ik(2,l|0,n,o-n|0);f=d0(h,k,b,l|0,20)|0;if((f|0)!=0){break}if((c[k>>2]|0)!=40){f=fB(55)|0;break}Ad(o|0,c[h>>2]|0,40);o=o+40|0;t=t-40|0;ze(c[h>>2]|0);c[h>>2]=0;if((t|0)==0){}else{b4(79752,82168,1235,86408);return 0}ze(c[m+168>>2]|0);c[m+168>>2]=eG(n,r)|0;if((c[m+168>>2]|0)==0){s=2839;break}ze(n);n=0;p=f;q=p;i=g;return q|0}}while(0);if((s|0)==2839){f=fB(32854)|0}ze(n);ze(c[h>>2]|0);p=f;q=p;i=g;return q|0}function fM(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;m=i;i=i+112|0;n=m|0;o=m+8|0;p=m+32|0;q=m+56|0;r=m+64|0;s=m+72|0;t=m+80|0;u=m+88|0;v=m+96|0;w=m+104|0;x=b;b=f;f=g;g=h;h=j;j=k;k=l;l=fB(0)|0;c[n>>2]=0;y=0;c[u>>2]=0;c[v>>2]=0;c[b>>2]=0;z=eH(e,n,w)|0;L3581:do{if((z|0)==-1){l=fB(32854)|0}else{do{if((z|0)!=-2){y=c[n>>2]|0;e=c[w>>2]|0;if(e>>>0<3){break}if((Af(y|0,73064,3)|0)!=0){break}y=y+3|0;e=e-3|0;if(e>>>0<1){break}A=a[y|0]|0;y=y+1|0;e=e-1|0;B=y;if(e>>>0<4){break}C=(d[y|0]|0)<<24|(d[y+1|0]|0)<<16|(d[y+2|0]|0)<<8|(d[y+3|0]|0);y=y+4|0;e=e-4|0;if((C|0)!=0){if(e>>>0<C>>>0){break}D=y;E=C;hb(q,5,D,E,0)|0}else{c[q>>2]=g7(0,0)|0}y=y+C|0;e=e-C|0;if(e>>>0<4){break}C=(d[y|0]|0)<<24|(d[y+1|0]|0)<<16|(d[y+2|0]|0)<<8|(d[y+3|0]|0);y=y+4|0;e=e-4|0;if((C|0)!=0){if(e>>>0<C>>>0){break}E=y;D=C;hb(r,5,E,D,0)|0}else{c[r>>2]=g7(0,0)|0}y=y+C|0;e=e-C|0;if(e>>>0<4){break}C=(d[y|0]|0)<<24|(d[y+1|0]|0)<<16|(d[y+2|0]|0)<<8|(d[y+3|0]|0);y=y+4|0;e=e-4|0;if((C|0)!=0){if(e>>>0<C>>>0){break}D=y;E=C;hb(s,5,D,E,0)|0}else{c[s>>2]=g7(0,0)|0}y=y+C|0;e=e-C|0;if(e>>>0<4){break}C=(d[y|0]|0)<<24|(d[y+1|0]|0)<<16|(d[y+2|0]|0)<<8|(d[y+3|0]|0);y=y+4|0;e=e-4|0;if((C|0)!=0){if(e>>>0<C>>>0){break}E=y;D=C;hb(t,5,E,D,0)|0}else{c[t>>2]=g7(0,0)|0}y=y+C|0;e=e-C|0;ik(2,o|0,B,y-B|0);B=c[q>>2]|0;C=c[r>>2]|0;D=c[s>>2]|0;E=c[t>>2]|0;gK(v,0,68592,(F=i,i=i+32|0,c[F>>2]=B,c[F+8>>2]=C,c[F+16>>2]=D,c[F+24>>2]=E,F)|0)|0;i=F;g4(c[q>>2]|0);g4(c[r>>2]|0);g4(c[s>>2]|0);g4(c[t>>2]|0);if(e>>>0<4){break}F=(d[y|0]|0)<<24|(d[y+1|0]|0)<<16|(d[y+2|0]|0)<<8|(d[y+3|0]|0);y=y+4|0;e=e-4|0;if((F|0)==0){break}if(e>>>0<4){break}E=(d[y|0]|0)<<24|(d[y+1|0]|0)<<16|(d[y+2|0]|0)<<8|(d[y+3|0]|0);y=y+4|0;e=e-4|0;if((E|0)!=0){if(e>>>0<E>>>0){break}D=y;C=E;hb(u,5,D,C,0)|0}else{c[u>>2]=g7(0,0)|0}y=y+E|0;e=e-E|0;if((e|0)!=40){break}ik(2,p|0,c[n>>2]|0,y-(c[n>>2]|0)|0);l=d1(y,e,0,c[v>>2]|0,p|0,20)|0;if((l|0)!=0){break L3581}gM(c[v>>2]|0);c[v>>2]=0;ze(c[n>>2]|0);c[n>>2]=0;do{if((c[x>>2]|0)!=4){if((A&255|0)!=1){break}l=fN(0)|0;break L3581}}while(0);if((c[x>>2]|0)!=4){fz(x)}c[x+84>>2]=F;g4(c[x+80>>2]|0);c[x+80>>2]=c[u>>2];c[u>>2]=0;Ad(x+112|0,o|0,20);do{if((A&255|0)==1){c[b>>2]=0}else{if((g|0)!=0){eK(x+8|0,g);c[x+20>>2]=h}else{if((c[x+20>>2]|0)==0){e=x+8|0;eM(5,e)|0;c[x+20>>2]=1}}l=fL(x,1,f)|0;if((l|0)!=0){break L3581}else{c[b>>2]=1;break}}}while(0);l=eS(x+8|0,c[x+80>>2]|0,x+140|0,x+160|0,x+164|0)|0;if((l|0)!=0){break L3581}c[x+136>>2]=1;if((j|0)!=0){l=cN[j&63](x,k)|0}c[x+20>>2]=0;c[x>>2]=0;G=l;H=G;i=m;return H|0}}while(0);l=fB(55)|0}}while(0);ze(c[n>>2]|0);gM(c[v>>2]|0);g4(c[u>>2]|0);G=l;H=G;i=m;return H|0}function fN(a){a=a|0;return fP(0,a)|0}function fO(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=c[d>>2]|0;if(!((b|0)==1|(b|0)==3)){return}eL(a+8|0);c[a+132>>2]=c[d+132>>2];eK(a+8|0,d+8|0);c[a+20>>2]=c[d+20>>2];Ad(a+32|0,d+32|0,16);if((c[a+24>>2]|0)!=0){ze(c[a+24>>2]|0)}c[a+24>>2]=zd(c[d+28>>2]|0)|0;Ad(c[a+24>>2]|0,c[d+24>>2]|0,c[d+28>>2]|0);Ad(a+48|0,d+48|0,32);c[a>>2]=1;return}function fP(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function fQ(b,d,f,g,h,j,k,l){b=b|0;d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;m=i;i=i+64|0;n=m|0;o=m+8|0;p=m+16|0;q=m+48|0;r=m+56|0;s=b;b=d;d=f;f=g;g=h;h=j;j=k;k=l;l=fB(0)|0;t=0;u=0;c[q>>2]=0;hc(5,0,0,n,g)|0;hc(5,0,0,o,h)|0;v=(c[n>>2]|0)+8+(c[o>>2]|0)+2+(c[j+28>>2]|0)+4|0;t=zd(v)|0;do{if((t|0)==0){w=3012}else{u=t;x=v;a[u|0]=(c[n>>2]|0)>>>24&255;a[u+1|0]=(c[n>>2]|0)>>>16&255;a[u+2|0]=(c[n>>2]|0)>>>8&255;a[u+3|0]=c[n>>2]&255;u=u+4|0;x=x-4|0;y=u;z=x;A=g;hc(5,y,z,0,A)|0;u=u+(c[n>>2]|0)|0;x=x-(c[n>>2]|0)|0;a[u|0]=(c[o>>2]|0)>>>24&255;a[u+1|0]=(c[o>>2]|0)>>>16&255;a[u+2|0]=(c[o>>2]|0)>>>8&255;a[u+3|0]=c[o>>2]&255;u=u+4|0;x=x-4|0;A=u;z=x;y=h;hc(5,A,z,0,y)|0;u=u+(c[o>>2]|0)|0;x=x-(c[o>>2]|0)|0;a[u|0]=(e[j+16>>1]|0)>>8&255;a[u+1|0]=(e[j+16>>1]|0)&255;u=u+2|0;x=x-2|0;Ad(u|0,c[j+24>>2]|0,c[j+28>>2]|0);u=u+(c[j+28>>2]|0)|0;x=x-(c[j+28>>2]|0)|0;a[u|0]=k>>>24&255;a[u+1|0]=k>>>16&255;a[u+2|0]=k>>>8&255;a[u+3|0]=k&255;u=u+4|0;x=x-4|0;if((x|0)==0){}else{b4(79752,82168,465,86552);return 0}ig(d);ii(d,t,v);Ad(p|0,ij(d,8)|0,32);ze(t);t=0;l=d0(q,r,j,p|0,32)|0;if((l|0)!=0){break}v=(c[j+28>>2]|0)+6+(c[r>>2]|0)|0;t=zd(v)|0;if((t|0)==0){w=3012;break}u=t;x=v;a[u|0]=(e[j+16>>1]|0)>>8&255;a[u+1|0]=(e[j+16>>1]|0)&255;u=u+2|0;x=x-2|0;Ad(u|0,c[j+24>>2]|0,c[j+28>>2]|0);u=u+(c[j+28>>2]|0)|0;x=x-(c[j+28>>2]|0)|0;a[u|0]=k>>>24&255;a[u+1|0]=k>>>16&255;a[u+2|0]=k>>>8&255;a[u+3|0]=k&255;u=u+4|0;x=x-4|0;Ad(u|0,c[q>>2]|0,c[r>>2]|0);u=u+(c[r>>2]|0)|0;x=x-(c[r>>2]|0)|0;ze(c[q>>2]|0);c[q>>2]=0;if((x|0)==0){}else{b4(79752,82168,501,86552);return 0}l=hT(f,t,v,0,0)|0;if((l|0)!=0){break}c[s>>2]=t;t=0;c[b>>2]=v;B=l;C=B;i=m;return C|0}}while(0);if((w|0)==3012){l=fB(32854)|0}ze(t);ze(c[q>>2]|0);B=l;C=B;i=m;return C|0}function fR(a,b){a=a|0;b=b|0;return fP(a,b)|0}function fS(){gF(0)|0;hb(123888,4,c[26252]|0,0,0)|0;hb(123872,4,c[26250]|0,0,0)|0;hb(123896,4,c[26254]|0,0,0)|0;c[30970]=g2(1536)|0;hj(c[30970]|0,c[30972]|0,2);return}function fT(a){a=a|0;var b=0;b=a;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[b+32>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;c[b+52>>2]=0;return}function fU(a){a=a|0;var b=0;b=a;fV(b);c[b>>2]=g2(1536)|0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=g5(c[30974]|0)|0;c[b+16>>2]=g2(1536)|0;c[b+20>>2]=g2(1536)|0;c[b+24>>2]=g2(1536)|0;c[b+28>>2]=g2(1536)|0;c[b+32>>2]=g2(1536)|0;c[b+36>>2]=g2(1536)|0;c[b+40>>2]=g2(1536)|0;c[b+48>>2]=0;c[b+52>>2]=0;return}function fV(a){a=a|0;var b=0;b=a;g4(c[b>>2]|0);g4(c[b+4>>2]|0);g4(c[b+8>>2]|0);g4(c[b+12>>2]|0);g4(c[b+16>>2]|0);g4(c[b+20>>2]|0);g4(c[b+24>>2]|0);g4(c[b+28>>2]|0);g4(c[b+32>>2]|0);g4(c[b+36>>2]|0);g4(c[b+40>>2]|0);fT(b);return}function fW(a){a=a|0;var b=0;b=zd(24)|0;c[b>>2]=g2(1536)|0;c[b+4>>2]=0;c[b+8>>2]=g2(1536)|0;c[b+12>>2]=g2(1536)|0;c[b+16>>2]=0;c[b+20>>2]=g2(1536)|0;c[a>>2]=b;return}function fX(a){a=a|0;var b=0;b=zd(44)|0;c[b>>2]=g2(1536)|0;c[b+4>>2]=0;c[b+8>>2]=g2(1536)|0;c[b+12>>2]=g2(1536)|0;c[b+16>>2]=0;c[b+20>>2]=g2(1536)|0;c[b+24>>2]=g2(1536)|0;c[b+28>>2]=g2(1536)|0;c[b+32>>2]=0;c[b+36>>2]=g2(1536)|0;c[b+40>>2]=g2(1536)|0;c[a>>2]=b;return}function fY(a){a=a|0;var b=0;b=zd(32)|0;c[b>>2]=g2(1536)|0;c[b+4>>2]=g2(1536)|0;c[b+8>>2]=0;c[b+12>>2]=g2(1536)|0;c[b+16>>2]=g2(1536)|0;c[b+20>>2]=g2(1536)|0;c[b+24>>2]=0;c[b+28>>2]=g2(1536)|0;c[a>>2]=b;return}function fZ(a){a=a|0;var b=0;b=zd(12)|0;c[b>>2]=g2(1536)|0;c[b+4>>2]=0;c[b+8>>2]=g2(1536)|0;c[a>>2]=b;return}function f_(a,b){a=a|0;b=b|0;var d=0,e=0;d=a;a=b;b=c[d>>2]|0;e=0;while(1){if((e|0)>=(a|0)){break}g4(c[b+(e<<2)>>2]|0);e=e+1|0}ze(b);c[d>>2]=0;return}function f$(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=a;a=e;e=f;c[h>>2]=0;c[a>>2]=0;c[e>>2]=0;hb(h,5,b,d,0)|0;if((c[k+12>>2]|0)==0){fU(k)}g6(c[k>>2]|0,c[h>>2]|0)|0;g4(c[h>>2]|0);c[k+48>>2]=0;fW(j);c[k+4>>2]=f0()|0;c[k+8>>2]=f0()|0;hr(c[c[j>>2]>>2]|0,c[k+12>>2]|0,c[k+4>>2]|0,c[30972]|0);f1((c[j>>2]|0)+4|0,(c[j>>2]|0)+8|0,c[k+12>>2]|0,c[k+4>>2]|0,1)|0;hr(c[(c[j>>2]|0)+12>>2]|0,c[k+12>>2]|0,c[k+8>>2]|0,c[30972]|0);f1((c[j>>2]|0)+16|0,(c[j>>2]|0)+20|0,c[k+12>>2]|0,c[k+8>>2]|0,2)|0;f2(a,e,6,c[j>>2]|0)|0;f_(j,6);c[k+52>>2]=0;k=f3(0)|0;i=g;return k|0}function f0(){var a=0,b=0,d=0;a=i;i=i+8|0;b=a|0;d=0;c[b>>2]=0;d=i9(192,1)|0;hb(b,5,d,192,0)|0;jy(d);i=a;return c[b>>2]|0}function f1(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=a;a=f0()|0;h=g2(1536)|0;hr(h,d,a,c[30972]|0);gh(g,f,h,0)|0;hn(h,e,c[g>>2]|0,c[30968]|0);hk(c[b>>2]|0,a,h,c[30968]|0);g4(h);g4(a);return f3(0)|0}function f2(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=b;b=d;d=e;e=f;f=0;h=zd(d<<2)|0;i=zd(d<<2)|0;j=0;while(1){if(j>>>0>=d>>>0){break}hd(5,i+(j<<2)|0,h+(j<<2)|0,c[e+(j<<2)>>2]|0)|0;f=f+(c[h+(j<<2)>>2]|0)|0;j=j+1|0}c[b>>2]=(d+1<<2)+f;c[g>>2]=zd(c[b>>2]|0)|0;b=c[g>>2]|0;g=f;a[b|0]=d>>>24&255;a[b+1|0]=d>>>16&255;a[b+2|0]=d>>>8&255;a[b+3|0]=d&255;b=b+4|0;g=g-4|0;j=0;while(1){if(j>>>0>=d>>>0){break}f=c[h+(j<<2)>>2]|0;a[b|0]=f>>>24&255;a[b+1|0]=f>>>16&255;a[b+2|0]=f>>>8&255;a[b+3|0]=f&255;b=b+4|0;g=g-4|0;e=0;while(1){if(e>>>0>=f>>>0){break}a[b+e|0]=a[(c[i+(j<<2)>>2]|0)+e|0]|0;e=e+1|0}b=b+f|0;g=g-f|0;jy(c[i+(j<<2)>>2]|0);j=j+1|0}ze(i);ze(h);return f3(0)|0}function f3(a){a=a|0;return gi(32,a)|0}function f4(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+8|0;g=f|0;h=a;if((c[h+12>>2]|0)==0){fU(h)}c[h+48>>2]=e;c[h+52>>2]=-2;e=f5(g,6,b,d)|0;if((e|0)!=(f3(0)|0)){j=e;k=j;i=f;return k|0}do{if((f6(c[c[g>>2]>>2]|0)|0)==0){if((f7(c[(c[g>>2]|0)+8>>2]|0)|0)!=0){break}if((f6(c[(c[g>>2]|0)+12>>2]|0)|0)!=0){break}if((f7(c[(c[g>>2]|0)+20>>2]|0)|0)!=0){break}e=c[h+24>>2]|0;d=c[(c[g>>2]|0)+12>>2]|0;g6(e,d)|0;do{if((f8(c[(c[g>>2]|0)+4>>2]|0,c[(c[g>>2]|0)+8>>2]|0,c[h+12>>2]|0,c[c[g>>2]>>2]|0,1)|0)==0){if((f8(c[(c[g>>2]|0)+16>>2]|0,c[(c[g>>2]|0)+20>>2]|0,c[h+12>>2]|0,c[(c[g>>2]|0)+12>>2]|0,2)|0)!=0){break}c[h+4>>2]=f0()|0;c[h+8>>2]=f0()|0;hr(c[h+16>>2]|0,c[c[g>>2]>>2]|0,c[h+4>>2]|0,c[30972]|0);hr(c[h+20>>2]|0,c[(c[g>>2]|0)+12>>2]|0,c[h+8>>2]|0,c[30972]|0);c[h+52>>2]=0;f_(g,6);j=f3(0)|0;k=j;i=f;return k|0}}while(0);f_(g,6);j=f3(55)|0;k=j;i=f;return k|0}}while(0);f_(g,6);j=f3(55)|0;k=j;i=f;return k|0}function f5(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=a;a=f;f=0;h=e;c[g>>2]=0;do{if(a>>>0>=4){f=(d[h|0]|0)<<24|(d[h+1|0]|0)<<16|(d[h+2|0]|0)<<8|(d[h+3|0]|0);h=h+4|0;a=a-4|0;if((f|0)!=(b|0)){break}c[g>>2]=zd(f<<2)|0;i=0;while(1){if(i>>>0>=f>>>0){break}c[(c[g>>2]|0)+(i<<2)>>2]=0;i=i+1|0}i=0;while(1){if(i>>>0>=f>>>0){j=3103;break}if(a>>>0<4){j=3090;break}e=(d[h|0]|0)<<24|(d[h+1|0]|0)<<16|(d[h+2|0]|0)<<8|(d[h+3|0]|0);h=h+4|0;a=a-4|0;if((e|0)!=0){if(a>>>0<e>>>0){j=3096;break}k=(c[g>>2]|0)+(i<<2)|0;l=h;m=e;hb(k,5,l,m,0)|0}else{m=g7(0,0)|0;c[(c[g>>2]|0)+(i<<2)>>2]=m}h=h+e|0;a=a-e|0;i=i+1|0}if((j|0)==3090){break}else if((j|0)==3096){break}else if((j|0)==3103){n=f3(0)|0;o=n;return o|0}}}while(0);if((c[g>>2]|0)!=0){i=0;while(1){if(i>>>0>=f>>>0){break}g4(c[(c[g>>2]|0)+(i<<2)>>2]|0);i=i+1|0}ze(c[g>>2]|0);c[g>>2]=0}n=f3(55)|0;o=n;return o|0}function f6(a){a=a|0;var b=0,d=0,e=0;b=a;do{if((ha(b,2)|0)>=0){if((g9(b,c[30970]|0)|0)>0){break}d=0;e=d;return e|0}}while(0);d=1;e=d;return e|0}function f7(a){a=a|0;var b=0,d=0,e=0;b=a;do{if((ha(b,1)|0)>=0){if((g9(b,c[30968]|0)|0)>=0){break}d=0;e=d;return e|0}}while(0);d=1;e=d;return e|0}function f8(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+8|0;h=g|0;j=a;a=g2(1536)|0;k=g2(1536)|0;l=g2(1536)|0;c[h>>2]=0;hr(a,d,b,c[30972]|0);hr(k,e,j,c[30972]|0);hn(l,a,k,c[30972]|0);gh(h,f,l,0)|0;f=g9(c[h>>2]|0,j)|0;g4(a);g4(k);g4(l);g4(c[h>>2]|0);i=g;return f|0}function f9(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=a;a=e;e=f;c[j>>2]=0;c[a>>2]=0;c[e>>2]=0;hb(j,5,b,d,0)|0;g6(c[k>>2]|0,c[j>>2]|0)|0;g4(c[j>>2]|0);fX(h);hr(c[c[h>>2]>>2]|0,c[k+12>>2]|0,c[k+4>>2]|0,c[30972]|0);f1((c[h>>2]|0)+4|0,(c[h>>2]|0)+8|0,c[k+12>>2]|0,c[k+4>>2]|0,3)|0;hr(c[(c[h>>2]|0)+12>>2]|0,c[k+12>>2]|0,c[k+8>>2]|0,c[30972]|0);f1((c[h>>2]|0)+16|0,(c[h>>2]|0)+20|0,c[k+12>>2]|0,c[k+8>>2]|0,4)|0;j=f0()|0;d=g2(1536)|0;b=g2(1536)|0;hr(c[k+28>>2]|0,c[k+20>>2]|0,j,c[30972]|0);g6(c[(c[h>>2]|0)+24>>2]|0,c[k+28>>2]|0)|0;hr(d,c[k+12>>2]|0,j,c[30972]|0);hr(b,c[k+16>>2]|0,c[k>>2]|0,c[30972]|0);hn(c[k+32>>2]|0,d,b,c[30972]|0);g6(c[(c[h>>2]|0)+28>>2]|0,c[k+32>>2]|0)|0;ga((c[h>>2]|0)+32|0,(c[h>>2]|0)+36|0,(c[h>>2]|0)+40|0,k,j,5)|0;f2(a,e,11,c[h>>2]|0)|0;g4(j);g4(d);g4(b);f_(h,11);h=f3(0)|0;i=g;return h|0}function ga(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=a;a=e;e=f0()|0;i=f0()|0;j=g2(1536)|0;k=g2(1536)|0;hr(j,c[a+12>>2]|0,e,c[30972]|0);hr(k,c[a+16>>2]|0,i,c[30972]|0);hn(k,j,k,c[30972]|0);hr(j,c[a+20>>2]|0,e,c[30972]|0);gh(h,g,j,k)|0;hn(j,f,c[h>>2]|0,c[30968]|0);hk(c[b>>2]|0,e,j,c[30968]|0);hn(j,c[a>>2]|0,c[h>>2]|0,c[30968]|0);hk(c[d>>2]|0,i,j,c[30968]|0);g4(e);g4(i);g4(j);g4(k);return f3(0)|0}function gb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=a;a=e;e=f;c[a>>2]=0;c[e>>2]=0;c[k+52>>2]=-2;f=f5(h,11,b,d)|0;if((f|0)!=(f3(0)|0)){l=f;m=l;i=g;return m|0}do{if((f6(c[c[h>>2]>>2]|0)|0)==0){if((f6(c[(c[h>>2]|0)+12>>2]|0)|0)!=0){break}if((f6(c[(c[h>>2]|0)+24>>2]|0)|0)!=0){break}if((f6(c[(c[h>>2]|0)+28>>2]|0)|0)!=0){break}if((f7(c[(c[h>>2]|0)+8>>2]|0)|0)!=0){break}if((f7(c[(c[h>>2]|0)+20>>2]|0)|0)!=0){break}if((f7(c[(c[h>>2]|0)+36>>2]|0)|0)!=0){break}if((f7(c[(c[h>>2]|0)+40>>2]|0)|0)!=0){break}fY(j);f=c[k+24>>2]|0;d=c[(c[h>>2]|0)+12>>2]|0;g6(f,d)|0;do{if((f8(c[(c[h>>2]|0)+4>>2]|0,c[(c[h>>2]|0)+8>>2]|0,c[k+12>>2]|0,c[c[h>>2]>>2]|0,3)|0)==0){if((f8(c[(c[h>>2]|0)+16>>2]|0,c[(c[h>>2]|0)+20>>2]|0,c[k+12>>2]|0,c[(c[h>>2]|0)+12>>2]|0,4)|0)!=0){break}hr(c[k+16>>2]|0,c[c[h>>2]>>2]|0,c[k+4>>2]|0,c[30972]|0);hr(c[k+20>>2]|0,c[(c[h>>2]|0)+12>>2]|0,c[k+8>>2]|0,c[30972]|0);if((gc(c[(c[h>>2]|0)+32>>2]|0,c[(c[h>>2]|0)+36>>2]|0,c[(c[h>>2]|0)+40>>2]|0,c[(c[h>>2]|0)+24>>2]|0,c[(c[h>>2]|0)+28>>2]|0,k,5)|0)!=0){f_(h,11);f_(j,8);l=f3(55)|0;m=l;i=g;return m|0}else{d=f0()|0;f=g2(1536)|0;b=g2(1536)|0;hr(c[k+28>>2]|0,c[k+20>>2]|0,d,c[30972]|0);n=c[c[j>>2]>>2]|0;o=c[k+28>>2]|0;g6(n,o)|0;hr(f,c[k+12>>2]|0,d,c[30972]|0);hr(b,c[k+16>>2]|0,c[k>>2]|0,c[30972]|0);hn(c[k+32>>2]|0,f,b,c[30972]|0);o=c[(c[j>>2]|0)+4>>2]|0;n=c[k+32>>2]|0;g6(o,n)|0;n=(c[j>>2]|0)+8|0;o=(c[j>>2]|0)+12|0;p=(c[j>>2]|0)+16|0;q=k;r=d;ga(n,o,p,q,r,6)|0;r=g2(1536)|0;q=r;p=c[(c[h>>2]|0)+24>>2]|0;o=c[30972]|0;ht(q,p,o)|0;hn(c[k+36>>2]|0,c[k+28>>2]|0,r,c[30972]|0);o=r;p=c[(c[h>>2]|0)+28>>2]|0;q=c[30972]|0;ht(o,p,q)|0;hn(c[k+40>>2]|0,c[k+32>>2]|0,r,c[30972]|0);hr(c[(c[j>>2]|0)+20>>2]|0,c[k+40>>2]|0,c[k+8>>2]|0,c[30972]|0);q=(c[j>>2]|0)+24|0;p=(c[j>>2]|0)+28|0;o=k;gd(q,p,o,7)|0;o=a;p=e;q=c[j>>2]|0;f2(o,p,8,q)|0;f_(h,11);f_(j,8);g4(d);g4(f);g4(b);g4(r);c[k+52>>2]=0;l=f3(0)|0;m=l;i=g;return m|0}}}while(0);f_(h,11);f_(j,8);l=f3(55)|0;m=l;i=g;return m|0}}while(0);f_(h,11);l=f3(55)|0;m=l;i=g;return m|0}function gc(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=j|0;l=a;a=b;b=g;g=g2(1536)|0;m=g2(1536)|0;n=g2(1536)|0;c[k>>2]=0;hr(m,c[b+20>>2]|0,a,c[30972]|0);hr(n,e,l,c[30972]|0);hn(g,m,n,c[30972]|0);hr(m,c[b+12>>2]|0,a,c[30972]|0);hr(n,c[b+16>>2]|0,d,c[30972]|0);hn(m,m,n,c[30972]|0);hr(n,f,l,c[30972]|0);hn(m,n,m,c[30972]|0);gh(k,h,g,m)|0;h=g9(l,c[k>>2]|0)|0;g4(g);g4(m);g4(n);g4(c[k>>2]|0);i=j;return h|0}function gd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a;a=d;d=f0()|0;g=g2(1536)|0;h=g2(1536)|0;hr(g,c[a+12>>2]|0,d,c[30972]|0);hr(h,c[a+40>>2]|0,d,c[30972]|0);gh(f,e,g,h)|0;hn(g,c[a+8>>2]|0,c[f>>2]|0,c[30968]|0);hk(c[b>>2]|0,d,g,c[30968]|0);g4(d);g4(g);g4(h);return f3(0)|0}function ge(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=a;a=e;e=f;f=f5(h,8,b,d)|0;c[a>>2]=0;c[e>>2]=0;c[k+52>>2]=-2;if((f|0)!=(f3(0)|0)){l=f;m=l;i=g;return m|0}fZ(j);do{if((f6(c[c[h>>2]>>2]|0)|0)==0){if((f6(c[(c[h>>2]|0)+4>>2]|0)|0)!=0){break}if((f6(c[(c[h>>2]|0)+20>>2]|0)|0)!=0){break}if((f7(c[(c[h>>2]|0)+12>>2]|0)|0)!=0){break}if((f7(c[(c[h>>2]|0)+16>>2]|0)|0)!=0){break}if((f7(c[(c[h>>2]|0)+28>>2]|0)|0)!=0){break}if((gc(c[(c[h>>2]|0)+8>>2]|0,c[(c[h>>2]|0)+12>>2]|0,c[(c[h>>2]|0)+16>>2]|0,c[c[h>>2]>>2]|0,c[(c[h>>2]|0)+4>>2]|0,k,6)|0)!=0){f_(h,8);f_(j,3);l=f3(55)|0;m=l;i=g;return m|0}f=g2(1536)|0;d=f;b=c[k+28>>2]|0;n=c[30972]|0;ht(d,b,n)|0;hn(c[k+36>>2]|0,c[c[h>>2]>>2]|0,f,c[30972]|0);n=f;b=c[k+32>>2]|0;d=c[30972]|0;ht(n,b,d)|0;hn(c[k+40>>2]|0,c[(c[h>>2]|0)+4>>2]|0,f,c[30972]|0);if((gf(c[(c[h>>2]|0)+24>>2]|0,c[(c[h>>2]|0)+28>>2]|0,c[(c[h>>2]|0)+20>>2]|0,k,7)|0)!=0){f_(h,8);f_(j,3);g4(f);l=f3(55)|0;m=l;i=g;return m|0}hr(c[c[j>>2]>>2]|0,c[k+40>>2]|0,c[k+8>>2]|0,c[30972]|0);d=(c[j>>2]|0)+4|0;b=(c[j>>2]|0)+8|0;n=k;gd(d,b,n,8)|0;n=a;b=e;d=c[j>>2]|0;f2(n,b,3,d)|0;d=g2(1536)|0;hr(d,c[(c[h>>2]|0)+20>>2]|0,c[k+8>>2]|0,c[30972]|0);b=g9(d,c[k+36>>2]|0)|0;f_(h,8);f_(j,3);g4(d);g4(f);c[k+52>>2]=(b|0)!=0?-1:1;if((b|0)!=0){l=f3(55)|0;m=l;i=g;return m|0}else{l=f3(0)|0;m=l;i=g;return m|0}}}while(0);f_(h,8);f_(j,3);l=f3(55)|0;m=l;i=g;return m|0}function gf(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+8|0;h=g|0;j=a;a=b;b=e;e=g2(1536)|0;k=g2(1536)|0;l=g2(1536)|0;c[h>>2]=0;hr(k,c[b+12>>2]|0,a,c[30972]|0);hr(l,c[b+24>>2]|0,j,c[30972]|0);hn(e,k,l,c[30972]|0);hr(l,c[b+40>>2]|0,a,c[30972]|0);hr(k,d,j,c[30972]|0);hn(k,l,k,c[30972]|0);gh(h,f,e,k)|0;f=g9(j,c[h>>2]|0)|0;g4(e);g4(k);g4(l);g4(c[h>>2]|0);i=g;return f|0}function gg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;g=a;a=f5(f,3,b,d)|0;c[g+52>>2]=-2;if((a|0)!=(f3(0)|0)){h=a;j=h;i=e;return j|0}do{if((f6(c[c[f>>2]>>2]|0)|0)==0){if((f7(c[(c[f>>2]|0)+8>>2]|0)|0)!=0){break}if((gf(c[(c[f>>2]|0)+4>>2]|0,c[(c[f>>2]|0)+8>>2]|0,c[c[f>>2]>>2]|0,g,8)|0)!=0){f_(f,3);h=f3(55)|0;j=h;i=e;return j|0}a=g2(1536)|0;hr(a,c[c[f>>2]>>2]|0,c[g+8>>2]|0,c[30972]|0);d=g9(a,c[g+36>>2]|0)|0;g4(a);f_(f,3);c[g+52>>2]=(d|0)!=0?-1:1;if((d|0)!=0){h=f3(55)|0;j=h;i=e;return j|0}else{h=f3(0)|0;j=h;i=e;return j|0}}}while(0);f_(f,3);h=f3(55)|0;j=h;i=e;return j|0}function gh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+64|0;h=g|0;j=g+32|0;k=g+40|0;l=g+48|0;m=g+56|0;n=f;hd(5,l,j,e)|0;e=(c[j>>2]|0)+5|0;if((n|0)!=0){f=n;hd(5,m,k,f)|0;e=e+((c[k>>2]|0)+4)|0}else{c[k>>2]=0}f=zd(e)|0;a[f|0]=d&255;a[f+1|0]=(c[j>>2]|0)>>>24&255;a[f+2|0]=(c[j>>2]|0)>>>16&255;a[f+3|0]=(c[j>>2]|0)>>>8&255;a[f+4|0]=c[j>>2]&255;Ad(f+5|0,c[l>>2]|0,c[j>>2]|0);if((n|0)!=0){a[f+((c[j>>2]|0)+5)|0]=(c[k>>2]|0)>>>24&255;a[f+((c[j>>2]|0)+6)|0]=(c[k>>2]|0)>>>16&255;a[f+((c[j>>2]|0)+7)|0]=(c[k>>2]|0)>>>8&255;a[f+((c[j>>2]|0)+8)|0]=c[k>>2]&255;Ad(f+9+(c[j>>2]|0)|0,c[m>>2]|0,c[k>>2]|0)}ik(8,h|0,f,e);hb(b,5,h|0,32,0)|0;ze(f);f=0;jy(c[l>>2]|0);if((n|0)==0){o=f3(0)|0;i=g;return o|0}jy(c[m>>2]|0);o=f3(0)|0;i=g;return o|0}function gi(a,b){a=a|0;b=b|0;return gj(a,b)|0}function gj(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function gk(){var a=0;a=zd(592)|0;if((a|0)!=0){}else{b4(75040,81136,36,86296);return 0}c[a>>2]=0;c[a+4>>2]=0;b[a+8>>1]=0;b[a+10>>1]=0;c[a+564>>2]=0;c[a+568>>2]=0;c[a+572>>2]=0;c[a+576>>2]=0;c[a+584>>2]=0;c[a+580>>2]=0;c[a+588>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;c[a+24>>2]=0;c[a+28>>2]=0;c[a+32>>2]=0;c[a+36>>2]=0;c[a+40>>2]=0;c[a+44>>2]=0;c[a+48>>2]=0;eP(a+52|0);eP(a+180|0);eP(a+308|0);eP(a+436|0);return a|0}function gl(a){a=a|0;var d=0;d=a;ze(c[d>>2]|0);c[d>>2]=0;c[d+4>>2]=0;b[d+8>>1]=0;b[d+10>>1]=0;c[d+564>>2]=0;ze(c[d+568>>2]|0);c[d+568>>2]=0;jy(c[d+584>>2]|0);c[d+584>>2]=0;c[d+588>>2]=0;c[d+12>>2]=0;g4(c[d+16>>2]|0);c[d+16>>2]=0;g4(c[d+20>>2]|0);c[d+20>>2]=0;c[d+24>>2]=0;eL(d+28|0);eL(d+40|0);eQ(d+52|0);eQ(d+180|0);eQ(d+308|0);eQ(d+436|0);return}function gm(a){a=a|0;var b=0;b=a;if((b|0)==0){return}if((c[b+8>>2]|0)!=0){ze(c[b+8>>2]|0)}if((c[b+12>>2]|0)!=0){ze(c[b+12>>2]|0)}c[c[b+4>>2]>>2]=c[b>>2];if((c[b>>2]|0)!=0){c[(c[b>>2]|0)+4>>2]=c[b+4>>2]}ze(b);return}function gn(a){a=a|0;var b=0;b=a;while(1){if((c[b+8>>2]|0)==0){break}gm(c[b+8>>2]|0)}return}function go(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=b;b=d;d=c[a+8>>2]|0;while(1){if((d|0)==0){f=3240;break}if((a1(c[d+8>>2]|0,e|0)|0)==0){if((a1(c[d+12>>2]|0,b|0)|0)==0){f=3237;break}}d=c[d>>2]|0}if((f|0)==3240){g=0;h=g;return h|0}else if((f|0)==3237){g=d;h=g;return h|0}return 0}function gp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=bJ(b|0,74728)|0;if((d|0)!=0){b=gq(a,d)|0;a=d;aB(a|0)|0;e=b;f=e;return f|0}else{e=gE(c[(bX()|0)>>2]|0)|0;f=e;return f|0}return 0}function gq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+1008|0;f=e|0;g=e+1e3|0;h=b;b=d;if((b|0)==0){j=gr(0)|0;k=j;i=e;return k|0}d=1e3;while(1){if((bb(f|0,d|0,b|0)|0)==0){l=3271;break}c[g>>2]=0;m=zd(20)|0;if((m|0)==0){l=3255;break}n=f|0;o=be(n|0,9)|0;if((o|0)==0){ze(m);continue}a[o]=0;o=o+1|0;c[m+8>>2]=zd(o-n|0)|0;Ad(c[m+8>>2]|0,n|0,o-n|0);n=o;o=be(n|0,9)|0;if((o|0)==0){ze(m);continue}a[o]=0;o=o+1|0;c[m+12>>2]=zd(o-n|0)|0;Ad(c[m+12>>2]|0,n|0,o-n|0);n=o;o=be(n|0,13)|0;if((o|0)==0){o=be(n|0,10)|0}if((o|0)==0){ze(m);continue}a[o]=0;o=o+1|0;if((Ab(n|0)|0)!=8){ze(m);continue}b3(n|0,81096,(n=i,i=i+8|0,c[n>>2]=g,n)|0)|0;i=n;if((c[g>>2]|0)>>>0<256){ze(m);continue}c[m+16>>2]=c[g>>2];c[m>>2]=c[h+8>>2];if((c[m>>2]|0)!=0){c[(c[m>>2]|0)+4>>2]=m}c[m+4>>2]=h+8;c[h+8>>2]=m}if((l|0)==3271){j=gr(0)|0;k=j;i=e;return k|0}else if((l|0)==3255){j=gr(32854)|0;k=j;i=e;return k|0}return 0}function gr(a){a=a|0;return gx(32,a)|0}function gs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=bJ(b|0,72288)|0;if((f|0)!=0){b=gt(a,f,d,e)|0;e=f;aB(e|0)|0;g=b;h=g;return h|0}else{g=gE(c[(bX()|0)>>2]|0)|0;h=g;return h|0}return 0}function gt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=a;a=b;b=d;d=e;do{if((b|0)!=0){if((d|0)==0){break}e=zd(20)|0;c[e+8>>2]=bP(b|0)|0;c[e+12>>2]=bP(d|0)|0;c[e+16>>2]=gu()|0;c[e>>2]=c[f+8>>2];if((c[e>>2]|0)!=0){c[(c[e>>2]|0)+4>>2]=e}c[e+4>>2]=f+8;c[f+8>>2]=e;e=f;g=a;gv(e,g)|0;h=gr(0)|0;i=h;return i|0}}while(0);h=gr(0)|0;i=h;return i|0}function gu(){var a=0,b=0;a=0;while(1){if(a>>>0>=256){break}b=i8(4,1)|0;a=c[b>>2]|0;jy(b)}return a|0}function gv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=b;b9(e|0,68240,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0)|0;i=b;f=c[a+8>>2]|0;while(1){if((f|0)==0){break}a=c[f+12>>2]|0;g=c[f+16>>2]|0;b9(e|0,65368,(b=i,i=i+24|0,c[b>>2]=c[f+8>>2],c[b+8>>2]=a,c[b+16>>2]=g,b)|0)|0;i=b;f=c[f>>2]|0}f=gr(0)|0;i=d;return f|0}function gw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=bJ(b|0,72288)|0;if((d|0)!=0){b=gv(a,d)|0;a=d;aB(a|0)|0;e=b;f=e;return f|0}else{e=gE(c[(bX()|0)>>2]|0)|0;f=e;return f|0}return 0}function gx(a,b){a=a|0;b=b|0;return gy(a,b)|0}function gy(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function gz(a){a=a|0;return tA(a)|0}function gA(a){a=a|0;return tB(a)|0}function gB(a){a=a|0;return tC(a)|0}function gC(a){a=a|0;return tD(a)|0}function gD(a,b){a=a|0;b=b|0;return tE(a,b)|0}function gE(a){a=a|0;return tG(a)|0}function gF(a){a=a|0;return tt(a)|0}function gG(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=e|0;c[f>>2]=b;c[f+4>>2]=0;f=tv(a,e|0)|0;i=d;return f|0}function gH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return uZ(a,b,c,d)|0}function gI(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return uV(a,b,c,d,e)|0}function gJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return vj(a,b,c,d)|0}function gK(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g|0;c[h>>2]=e;c[h+4>>2]=0;h=vh(a,b,d,g|0)|0;i=f;return h|0}function gL(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return vi(a,b,c,d)|0}function gM(a){a=a|0;u_(a);return}function gN(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return uX(a,b,c,d)|0}function gO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return vk(a,b,c,d)|0}function gP(a){a=a|0;uT(a);return}function gQ(a,b){a=a|0;b=b|0;return u$(a,b)|0}function gR(a){a=a|0;return u0(a)|0}function gS(a,b){a=a|0;b=b|0;uf(73688,169,87336);return 0}function gT(a,b){a=a|0;b=b|0;return u2(a,b)|0}function gU(a,b){a=a|0;b=b|0;return u3(a,b)|0}function gV(a,b,c){a=a|0;b=b|0;c=c|0;return u4(a,b,c)|0}function gW(a){a=a|0;return u6(a)|0}function gX(a,b){a=a|0;b=b|0;return u7(a,b)|0}function gY(a){a=a|0;return u8(a)|0}function gZ(a){a=a|0;return vd(a)|0}function g_(a){a=a|0;return ve(a)|0}function g$(a,b,c){a=a|0;b=b|0;c=c|0;return u9(a,b,c)|0}function g0(a,b){a=a|0;b=b|0;return vb(a,b)|0}function g1(a,b,c){a=a|0;b=b|0;c=c|0;return vc(a,b,c)|0}function g2(a){a=a|0;return sl(a)|0}function g3(a){a=a|0;return sm(a)|0}function g4(a){a=a|0;sn(a);return}function g5(a){a=a|0;return sc(a)|0}function g6(a,b){a=a|0;b=b|0;return se(a,b)|0}function g7(a,b){a=a|0;b=b|0;return sf(a,b)|0}function g8(a,b){a=a|0;b=b|0;sk(a,b);return}function g9(a,b){a=a|0;b=b|0;return q0(a,b)|0}function ha(a,b){a=a|0;b=b|0;return q$(a,b)|0}function hb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return rA(a,b,c,d,e)|0}function hc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return rE(a,b,c,d,e)|0}function hd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return rG(a,b,c,d)|0}function he(a){a=a|0;ru(a);return}function hf(a,b,c){a=a|0;b=b|0;c=c|0;qL(a,b,c);return}function hg(a,b,c){a=a|0;b=b|0;c=c|0;qK(a,b,c);return}function hh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;qO(a,b,c,d);return}function hi(a,b,c){a=a|0;b=b|0;c=c|0;qN(a,b,c);return}function hj(a,b,c){a=a|0;b=b|0;c=c|0;qM(a,b,c);return}function hk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;qP(a,b,c,d);return}function hl(a,b,c){a=a|0;b=b|0;c=c|0;ro(a,b,c);return}function hm(a,b,c){a=a|0;b=b|0;c=c|0;rm(a,b,c);return}function hn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;rp(a,b,c,d);return}function ho(a,b,c){a=a|0;b=b|0;c=c|0;rn(a,b,c);return}function hp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;q9(a,b,c,d,e);return}function hq(a,b,c){a=a|0;b=b|0;c=c|0;rh(a,b,c);return}function hr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;rq(a,b,c,d);return}function hs(a,b,c){a=a|0;b=b|0;c=c|0;return ra(a,b,c)|0}function ht(a,b,c){a=a|0;b=b|0;c=c|0;return rg(a,b,c)|0}function hu(a){a=a|0;return qR(a)|0}function hv(a,b){a=a|0;b=b|0;return qS(a,b)|0}function hw(a,b){a=a|0;b=b|0;qT(a,b);return}function hx(a,b){a=a|0;b=b|0;qW(a,b);return}function hy(a,b){a=a|0;b=b|0;qU(a,b);return}function hz(a,b){a=a|0;b=b|0;qV(a,b);return}function hA(a,b,c){a=a|0;b=b|0;c=c|0;qY(a,b,c);return}function hB(a,b,c){a=a|0;b=b|0;c=c|0;q_(a,b,c);return}function hC(a,b,c){a=a|0;b=b|0;c=c|0;return sa(a,b,c)|0}function hD(a,b){a=a|0;b=b|0;return sb(a,b)|0}function hE(a,b){a=a|0;b=b|0;sp(a,b);return}function hF(a,b){a=a|0;b=b|0;sr(a,b);return}function hG(a,b){a=a|0;b=b|0;return ss(a,b)|0}function hH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a;if((tr()|0)!=0){g=kR(f,b,d,e)|0;h=g;return h|0}else{c[f>>2]=0;g=hI(176)|0;h=g;return h|0}return 0}function hI(a){a=a|0;return jH(1,a)|0}function hJ(a){a=a|0;kW(a);return}function hK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((tr()|0)!=0){d=k$(a,b,c)|0;e=d;return e|0}else{d=hI(176)|0;e=d;return e|0}return 0}function hL(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((tr()|0)!=0){d=k1(a,b,c)|0;e=d;return e|0}else{d=hI(176)|0;e=d;return e|0}return 0}function hM(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((tr()|0)!=0){d=k3(a,b,c)|0;e=d;return e|0}else{d=hI(176)|0;e=d;return e|0}return 0}function hN(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if((tr()|0)!=0){e=k4(a,b,c,d)|0;f=e;return f|0}else{e=hI(176)|0;f=e;return f|0}return 0}function hO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return k9(a,b,c,d)|0}function hP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if((tr()|0)!=0){e=la(a,b,c,d)|0;f=e;return f|0}else{e=hI(176)|0;f=e;return f|0}return 0}function hQ(a){a=a|0;return kP(a)|0}function hR(a){a=a|0;return kK(a)|0}function hS(a){a=a|0;return kO(a)|0}function hT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b;b=c;if((tr()|0)!=0){g=kX(a,f,b,d,e)|0;h=g;return h|0}if((f|0)!=0){Ae(f|0,66,b|0)}g=hI(176)|0;h=g;return h|0}function hU(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;if((tr()|0)!=0){f=kZ(a,b,c,d,e)|0;g=f;return g|0}else{f=hI(176)|0;g=f;return g|0}return 0}function hV(a){a=a|0;return le(a)|0}function hW(a){a=a|0;return lf(a)|0}function hX(a,b){a=a|0;b=b|0;return lh(a,b)|0}function hY(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;if((tr()|0)!=0){f=nD(e,b,d)|0;g=f;return g|0}else{c[e>>2]=0;f=hI(176)|0;g=f;return g|0}return 0}function hZ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;if((tr()|0)!=0){f=nN(e,b,d)|0;g=f;return g|0}else{c[e>>2]=0;f=hI(176)|0;g=f;return g|0}return 0}function h_(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;if((tr()|0)!=0){f=nS(e,b,d)|0;g=f;return g|0}else{c[e>>2]=0;f=hI(176)|0;g=f;return g|0}return 0}function h$(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((tr()|0)!=0){d=nU(a,b,c)|0;e=d;return e|0}else{d=hI(176)|0;e=d;return e|0}return 0}function h0(a){a=a|0;var b=0,c=0;if((tr()|0)!=0){b=nX(a)|0;c=b;return c|0}else{b=hI(176)|0;c=b;return c|0}return 0}function h1(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;if((tr()|0)!=0){e=nZ(d,b)|0;f=e;return f|0}else{c[d>>2]=0;e=hI(176)|0;f=e;return f|0}return 0}function h2(a,b,c){a=a|0;b=b|0;c=c|0;return n2(a,b,c)|0}function h3(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if((tr()|0)!=0){e=n4(a,b,c,d)|0;f=e;return f|0}else{e=hI(176)|0;f=e;return f|0}return 0}function h4(a){a=a|0;return nB(a)|0}function h5(a){a=a|0;return ny(a)|0}function h6(a){a=a|0;var b=0,c=0;if((tr()|0)!=0){b=nG(a)|0;c=b;return c|0}else{b=0;c=b;return c|0}return 0}function h7(a,b){a=a|0;b=b|0;var c=0,d=0;if((tr()|0)!=0){c=n$(a,b)|0;d=c;return d|0}else{c=0;d=c;return d|0}return 0}function h8(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((tr()|0)!=0){d=n0(a,b,c)|0;e=d;return e|0}else{d=0;e=d;return e|0}return 0}function h9(a,b){a=a|0;b=b|0;var c=0,d=0;if((tr()|0)!=0){c=n1(a,b)|0;d=c;return d|0}else{c=0;d=c;return d|0}return 0}function ia(a,b){a=a|0;b=b|0;return od(a,b)|0}function ib(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;if((tr()|0)!=0){f=mi(e,b,d)|0;g=f;return g|0}else{c[e>>2]=0;f=hI(176)|0;g=f;return g|0}return 0}function ic(a){a=a|0;mq(a);return}function id(a,b){a=a|0;b=b|0;var c=0,d=0;if((tr()|0)!=0){c=mk(a,b)|0;d=c;return d|0}else{c=hI(176)|0;d=c;return d|0}return 0}function ie(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;if((tr()|0)!=0){e=mm(d,b)|0;f=e;return f|0}else{c[d>>2]=0;e=hI(176)|0;f=e;return f|0}return 0}function ig(a){a=a|0;mo(a);return}function ih(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if((tr()|0)!=0){e=mt(a,b,c,d)|0;f=e;return f|0}else{e=hI(176)|0;f=e;return f|0}return 0}function ii(a,b,c){a=a|0;b=b|0;c=c|0;if((tr()|0)!=0){ms(a,b,c);return}else{return}}function ij(a,b){a=a|0;b=b|0;return mB(a,b)|0}function ik(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((tr()|0)==0){tb(73688,843,87424,0,80840)}mE(a,b,c,d);return}function il(a){a=a|0;var b=0,c=0;if((tr()|0)!=0){b=mG(a)|0;c=b;return c|0}else{tb(73688,854,87448,0,72192);b=0;c=b;return c|0}return 0}function im(a){a=a|0;return mI(a)|0}function io(a,b){a=a|0;b=b|0;var c=0,d=0;if((tr()|0)!=0){c=mP(a,b)|0;d=c;return d|0}else{c=0;d=c;return d|0}return 0}function ip(a){a=a|0;return mO(a)|0}function iq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if((tr()|0)!=0){e=mM(a,b,c,d)|0;f=e;return f|0}else{e=hI(176)|0;f=e;return f|0}return 0}function ir(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return mJ(a,b,c,d)|0}function is(a){a=a|0;return mg(a)|0}function it(a){a=a|0;return mc(a)|0}function iu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((tr()|0)!=0){d=mw(a,b,c)|0;e=d;return e|0}else{d=hI(176)|0;e=d;return e|0}return 0}function iv(a,b){a=a|0;b=b|0;mA(a,b);return}function iw(a,b){a=a|0;b=b|0;return mQ(a,b)|0}function ix(a){a=a|0;return jI(a)|0}function iy(a){a=a|0;jK(a);return}function iz(a,b){a=a|0;b=b|0;return jM(a,b)|0}function iA(a){a=a|0;return jO(a)|0}function iB(a){a=a|0;jX(a);return}function iC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return jP(a,b,c,d)|0}function iD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return jR(a,b,c,d)|0}function iE(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return jS(a,b,c,d,e)|0}function iF(a,b,c){a=a|0;b=b|0;c=c|0;return jT(a,b,c)|0}function iG(a,b,c){a=a|0;b=b|0;c=c|0;return jU(a,b,c)|0}function iH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g|0;c[h>>2]=e;c[h+4>>2]=0;jY(a,b,d,g|0);i=f;return}function iI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;jY(a,b,c,d);return}function iJ(a,b,c){a=a|0;b=b|0;c=c|0;return j_(a,b,c)|0}function iK(a){a=a|0;j$(a);return}function iL(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return j0(a,b,c,d)|0}function iM(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return j1(a,b,c,d,e)|0}function iN(a,b){a=a|0;b=b|0;return j3(a,b)|0}function iO(a){a=a|0;return j6(a)|0}function iP(a,b){a=a|0;b=b|0;return j7(a,b)|0}function iQ(a,b,c){a=a|0;b=b|0;c=c|0;return j9(a,b,c)|0}function iR(a,b,c){a=a|0;b=b|0;c=c|0;return ka(a,b,c)|0}function iS(a){a=a|0;j4(a);return}function iT(a){a=a|0;j5(a);return}function iU(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return kf(a,b,c,d,e)|0}function iV(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return kh(a,b,c,d,e)|0}function iW(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return kb(a,b,c,d,e)|0}function iX(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return kc(a,b,c,d,e)|0}function iY(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return kd(a,b,c,d)|0}function iZ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ke(a,b,c,d)|0}function i_(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return kl(a,b,c,d,e,f,g)|0}function i$(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return kq(a,b,c,d,e,f,g)|0}function i0(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ks(a,b,c,d,e,f,g)|0}function i1(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return kt(a,b,c,d,e,f,g)|0}function i2(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=nB(b)|0;if((a[e]|0)!=0){c[d>>2]=e;f=0;g=f;return g|0}else{f=i3(4)|0;g=f;return g|0}return 0}function i3(a){a=a|0;return jG(32,a)|0}function i4(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=ny(a)|0;if((d|0)!=0){c[b>>2]=d;e=0;f=e;return f|0}else{e=i3(4)|0;f=e;return f|0}return 0}function i5(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return l5(a,b,c,d,e,f,g,h,i)|0}function i6(a,b,c){a=a|0;b=b|0;c=c|0;if((tr()|0)==0){tb(73688,1230,87352,1,80840);s7()}sI(a,b,c);return}function i7(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((tr()|0)!=0){d=sE(a,b,c)|0;e=d;return e|0}else{d=hI(176)|0;e=d;return e|0}return 0}function i8(a,b){a=a|0;b=b|0;if((tr()|0)==0){tb(73688,1250,87400,1,80840);s7()}return sF(a,b)|0}function i9(a,b){a=a|0;b=b|0;if((tr()|0)==0){tb(73688,1263,87368,1,80840);s7()}return sH(a,b)|0}function ja(a,b,c){a=a|0;b=b|0;c=c|0;so(a,b,c);return}function jb(a,b){a=a|0;b=b|0;if((tr()|0)==0){tb(73688,1283,87472,1,80840);s7()}sM(a,b);return}function jc(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return nd(a,b,c,d,e,f,g,h)|0}function jd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ni(a,b,c,d)|0}function je(a){a=a|0;nj(a);return}function jf(a,b){a=a|0;b=b|0;return ng(a,b)|0}function jg(a,b){a=a|0;b=b|0;t$(a,b);return}function jh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;tH(a,b,c,d,e);return}function ji(a,b){a=a|0;b=b|0;tI(a,b);return}function jj(a,b){a=a|0;b=b|0;t7(a,b);return}function jk(a,b){a=a|0;b=b|0;ua(a,b);return}function jl(a){a=a|0;t5(a);return}function jm(a){a=a|0;return tJ(a)|0}function jn(a,b){a=a|0;b=b|0;return tR(a,b)|0}function jo(a){a=a|0;return tL(a)|0}function jp(a,b){a=a|0;b=b|0;return tS(a,b)|0}function jq(a,b){a=a|0;b=b|0;return tP(a,b)|0}function jr(a){a=a|0;return tT(a)|0}function js(a){a=a|0;return tU(a)|0}function jt(a,b){a=a|0;b=b|0;return tX(a,b)|0}function ju(a){a=a|0;return tW(a)|0}function jv(a,b){a=a|0;b=b|0;return tY(a,b)|0}function jw(a,b){a=a|0;b=b|0;return tV(a,b)|0}function jx(a){a=a|0;return tZ(a)|0}function jy(a){a=a|0;tQ(a);return}function jz(a){a=a|0;return tM(a)|0}function jA(a,b,c){a=a|0;b=b|0;c=c|0;return kG(a,0,b,c)|0}function jB(a){a=a|0;kJ(a);return}function jC(a,b,c){a=a|0;b=b|0;c=c|0;return nv(a,0,b,c)|0}function jD(a){a=a|0;nx(a);return}function jE(a,b,c){a=a|0;b=b|0;c=c|0;return l8(a,0,b,c)|0}function jF(a){a=a|0;mb(a);return}function jG(a,b){a=a|0;b=b|0;return jH(a,b)|0}function jH(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function jI(a){a=a|0;var b=0,d=0,e=0,f=0;if((s5()|0)!=0){b=jJ(60)|0;d=b;return d|0}e=tJ(8)|0;if((e|0)!=0){c[e>>2]=0;c[e+4>>2]=0;c[a>>2]=e;f=0}else{f=tG(c[(bX()|0)>>2]|0)|0}b=f;d=b;return d|0}function jJ(a){a=a|0;return kF(1,a)|0}function jK(a){a=a|0;var b=0;b=a;if((b|0)==0){return}jL(b);tQ(c[b>>2]|0);tQ(b);return}function jL(a){a=a|0;var b=0;b=a;a=0;while(1){if(a>>>0>=(c[b+4>>2]|0)>>>0){break}if((c[(c[b>>2]|0)+(a*12|0)+8>>2]&1|0)!=0){sn(c[(c[b>>2]|0)+(a*12|0)+4>>2]|0);tQ(c[(c[b>>2]|0)+(a*12|0)>>2]|0)}a=a+1|0}return}function jM(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=a;a=b;c[e>>2]=0;if((s5()|0)!=0){g=jJ(60)|0;h=g;i=d;return h|0}b=tJ(8)|0;do{if((b|0)!=0){j=jN(c[a>>2]|0,c[a+4>>2]|0,e)|0;if((j|0)!=0){break}else{c[b+4>>2]=c[a+4>>2];c[b>>2]=c[e>>2];c[f>>2]=b;break}}else{j=tG(c[(bX()|0)>>2]|0)|0}}while(0);if((j|0)!=0){tQ(b)}g=j;h=g;i=d;return h|0}function jN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a;a=b;b=d;d=tJ(a*12|0)|0;do{if((d|0)!=0){Ae(d|0,0,a*12|0|0);f=0;g=0;while(1){if(g>>>0>=a>>>0){break}h=tT(c[e+(g*12|0)>>2]|0)|0;i=sc(c[e+(g*12|0)+4>>2]|0)|0;if((h|0)==0){j=3726;break}if((i|0)==0){j=3726;break}c[d+(g*12|0)+8>>2]=1;c[d+(g*12|0)>>2]=h;c[d+(g*12|0)+4>>2]=i;g=g+1|0}if((j|0)==3726){f=tG(c[(bX()|0)>>2]|0)|0;sn(i);tQ(h)}if((f|0)!=0){break}else{c[b>>2]=d;f=0;break}}else{f=tG(c[(bX()|0)>>2]|0)|0}}while(0);if((f|0)==0){k=f;return k|0}if((d|0)!=0){g=0;while(1){if(g>>>0>=a>>>0){break}sn(c[d+(g*12|0)+4>>2]|0);tQ(c[d+(g*12|0)>>2]|0);g=g+1|0}tQ(d)}k=f;return k|0}function jO(a){a=a|0;return c[a+4>>2]|0}function jP(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=a;a=b;b=d;d=e;e=0;g=0;if((s5()|0)!=0){h=jJ(60)|0;i=h;return i|0}L4586:do{if((a&-4|0)!=0){j=jQ(45)|0}else{L4588:do{if((a&2|0)!=0){a=a|1;e=tT(b)|0;g=sc(d)|0;do{if((e|0)!=0){if((g|0)==0){break}break L4588}}while(0);j=tG(c[(bX()|0)>>2]|0)|0;break L4586}}while(0);k=0;while(1){if(k>>>0>=(c[f+4>>2]|0)>>>0){break}if((a1(b|0,c[(c[f>>2]|0)+(k*12|0)>>2]|0)|0)==0){l=3756;break}k=k+1|0}if(k>>>0<(c[f+4>>2]|0)>>>0){if((c[(c[f>>2]|0)+(k*12|0)+8>>2]&1|0)!=0){sn(c[(c[f>>2]|0)+(k*12|0)+4>>2]|0);tQ(c[(c[f>>2]|0)+(k*12|0)>>2]|0)}}else{l=tP(c[f>>2]|0,((c[f+4>>2]|0)+1|0)*12|0)|0;if((l|0)==0){j=tG(c[(bX()|0)>>2]|0)|0;break}if((c[f>>2]|0)!=(l|0)){c[f>>2]=l}l=f+4|0;c[l>>2]=(c[l>>2]|0)+1}if((e|0)!=0){m=e}else{m=b}c[(c[f>>2]|0)+(k*12|0)>>2]=m;if((g|0)!=0){n=g}else{n=d}c[(c[f>>2]|0)+(k*12|0)+4>>2]=n;c[(c[f>>2]|0)+(k*12|0)+8>>2]=a;j=0}}while(0);if((j|0)!=0){sn(g);tQ(e)}h=j;i=h;return i|0}function jQ(a){a=a|0;return kE(32,a)|0}function jR(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=a;a=b;b=d;d=e;if((s5()|0)!=0){g=jJ(60)|0;h=g;return h|0}L4636:do{if((a&-3|0)!=0){i=jQ(45)|0}else{e=0;while(1){if(e>>>0>=(c[f+4>>2]|0)>>>0){break}if((a1(b|0,c[(c[f>>2]|0)+(e*12|0)>>2]|0)|0)==0){j=3789;break}e=e+1|0}if((e|0)==(c[f+4>>2]|0)){i=jQ(27)|0;break}do{if((a&2|0)!=0){k=sc(c[(c[f>>2]|0)+(e*12|0)+4>>2]|0)|0;if((k|0)!=0){break}else{i=tG(c[(bX()|0)>>2]|0)|0;break L4636}}else{k=c[(c[f>>2]|0)+(e*12|0)+4>>2]|0}}while(0);c[d>>2]=k;i=0}}while(0);g=i;h=g;return h|0}function jS(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=a;a=b;b=d;d=e;e=f;f=0;h=0;if((s5()|0)!=0){i=jJ(60)|0;j=i;return j|0}L4664:do{if((a&-3|0)!=0){k=jQ(45)|0}else{if(b>>>0>=(c[g+4>>2]|0)>>>0){k=jQ(45)|0;break}if((a&2|0)!=0){do{if((d|0)!=0){f=tT(c[(c[g>>2]|0)+(b*12|0)>>2]|0)|0;if((f|0)!=0){break}else{k=tG(c[(bX()|0)>>2]|0)|0;break L4664}}}while(0);do{if((e|0)!=0){h=sc(c[(c[g>>2]|0)+(b*12|0)+4>>2]|0)|0;if((h|0)!=0){break}else{k=tG(c[(bX()|0)>>2]|0)|0;break L4664}}}while(0)}if((d|0)!=0){if((f|0)!=0){l=f}else{l=c[(c[g>>2]|0)+(b*12|0)>>2]|0}c[d>>2]=l}if((e|0)!=0){if((h|0)!=0){m=h}else{m=c[(c[g>>2]|0)+(b*12|0)+4>>2]|0}c[e>>2]=m}k=0}}while(0);if((k|0)!=0){sn(h);tQ(f)}i=k;j=i;return j|0}function jT(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+24|0;g=f|0;h=f+8|0;j=f+16|0;k=b;b=d;d=e;e=1;l=0;m=0;n=0;if((s5()|0)!=0){o=jJ(60)|0;p=o;i=f;return p|0}q=0;if((d|0)!=0){while(1){if((c[d+(q<<2)>>2]|0)==0){break}e=e+((Ab(c[d+(q<<2)>>2]|0)|0)+2)|0;q=q+1|0}}r=q;if((r|0)==0){e=e+2|0}s=jO(k)|0;q=0;while(1){if(q>>>0>=s>>>0){break}n=jS(k,0,q,h,0)|0;if((n|0)!=0){t=3849;break}e=e+((Ab(c[h>>2]|0)|0)+5)|0;q=q+1|0}do{if((n|0)==0){l=tJ(e)|0;if((l|0)==0){n=tG(c[(bX()|0)>>2]|0)|0;break}a[l]=0;e=0;if((r|0)!=0){q=0;while(1){if(q>>>0>=r>>>0){break}u=bk(l+e|0,80088,(v=i,i=i+8|0,c[v>>2]=c[d+(q<<2)>>2],v)|0)|0;i=v;e=e+u|0;q=q+1|0}}else{u=bk(l+e|0,71800,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0)|0;i=v;e=e+u|0}m=tJ(s+1<<2)|0;if((m|0)==0){n=tG(c[(bX()|0)>>2]|0)|0;break}q=0;while(1){if(q>>>0>=s>>>0){break}n=jS(k,0,q,h,j)|0;if((n|0)!=0){t=3868;break}u=bk(l+e|0,67912,(v=i,i=i+8|0,c[v>>2]=c[h>>2],v)|0)|0;i=v;e=e+u|0;c[m+(q<<2)>>2]=(c[k>>2]|0)+(q*12|0)+4;q=q+1|0}if((n|0)!=0){break}if((r|0)!=0){q=0;while(1){if(q>>>0>=r>>>0){break}u=bk(l+e|0,64976,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0)|0;i=v;e=e+u|0;q=q+1|0}}else{u=bk(l+e|0,64976,(v=i,i=i+1|0,i=i+7&-8,c[v>>2]=0,v)|0)|0;i=v;e=e+u|0}n=vi(g,0,l,m)|0;if((n|0)!=0){break}else{c[b>>2]=c[g>>2];break}}}while(0);tQ(l);tQ(m);o=n;p=o;i=f;return p|0}function jU(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+16|0;g=f|0;h=f+8|0;j=b;b=d;d=e;c[g>>2]=0;e=b;k=0;l=0;m=0;n=0;if((s5()|0)!=0){o=jJ(60)|0;p=o;i=f;return p|0}do{if((d|0)!=0){q=0;while(1){if((c[d+(q<<2)>>2]|0)==0){break}r=u9(e,0,h)|0;s=c[h>>2]|0;if((s|0)!=(Ab(c[d+(q<<2)>>2]|0)|0)){t=3894;break}if((a3(r|0,c[d+(q<<2)>>2]|0,c[h>>2]|0)|0)!=0){t=3894;break}if((c[d+(q+1<<2)>>2]|0)==0){t=3896;break}k=u7(e,1)|0;if((k|0)==0){t=3898;break}if((e|0)!=(b|0)){u_(e)}e=k;k=0;q=q+1|0}if((t|0)==3894){n=jQ(83)|0}else if((t|0)!=3896)if((t|0)==3898){n=jQ(83)|0}if((n|0)!=0){break}if((q|0)!=0){u=1}else{u=0}t=3911}else{u=0;t=3911}}while(0);do{if((t|0)==3911){n=jI(g)|0;if((n|0)!=0){break}if((e|0)!=0){v=(u6(e)|0)-u|0}else{v=0}q=0;while(1){if(q>>>0>=v>>>0){break}k=u7(e,q+u|0)|0;if((k|0)==0){t=3919;break}r=u9(k,0,h)|0;l=tJ((c[h>>2]|0)+1|0)|0;if((l|0)==0){t=3921;break}d=l;s=r;w=c[h>>2]|0;Ac(d|0,s|0,w)|0;a[l+(c[h>>2]|0)|0]=0;m=vc(k,1,0)|0;if((m|0)==0){t=3923;break}n=jP(c[g>>2]|0,1,l,m)|0;if((n|0)!=0){t=3925;break}l=0;m=0;u_(k);k=0;q=q+1|0}if((t|0)!=3925)if((t|0)==3919){n=jQ(83)|0}else if((t|0)==3921){n=tG(c[(bX()|0)>>2]|0)|0}else if((t|0)==3923){n=jQ(83)|0}if((n|0)!=0){break}else{c[j>>2]=c[g>>2];break}}}while(0);if((e|0)!=(b|0)){u_(e)}u_(k);sn(m);tQ(l);if((n|0)!=0){jK(c[g>>2]|0)}o=n;p=o;i=f;return p|0}function jV(a,b){a=a|0;b=b|0;jW(a,b);return}function jW(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+32|0;e=d|0;f=d+8|0;g=d+16|0;h=d+24|0;j=a;a=b;if((a|0)==0){i=d;return}if((s5()|0)!=0){i=d;return}c[e>>2]=0;b=jO(a)|0;k=0;while(1){if(k>>>0>=b>>>0){break}l=jS(a,0,k,g,h)|0;if((l|0)!=0){m=3947;break}l=rG(4,e,f,c[h>>2]|0)|0;if((l|0)!=0){m=3949;break}if((j|0)!=0){n=j}else{n=123264}l=c[g>>2]|0;o=c[e>>2]|0;un(71624,(p=i,i=i+32|0,c[p>>2]=n,c[p+8>>2]=(j|0)!=0?70664:123264,c[p+16>>2]=l,c[p+24>>2]=o,p)|0);i=p;tQ(c[e>>2]|0);c[e>>2]=0;k=k+1|0}if((m|0)==3949){uj(71952,(p=i,i=i+1|0,i=i+7&-8,c[p>>2]=0,p)|0);i=p}else if((m|0)==3947){uj(71952,(p=i,i=i+1|0,i=i+7&-8,c[p>>2]=0,p)|0);i=p}tQ(c[e>>2]|0);i=d;return}function jX(a){a=a|0;var b=0;b=a;jL(b);tQ(c[b>>2]|0);c[b>>2]=0;c[b+4>>2]=0;return}function jY(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=a;a=b;b=d;d=e;Ae(f|0,0,16);if((s5()|0)!=0){return}do{if((a|0)==0){g=3965}else{if((a|0)==1){g=3965;break}ug(63128,61560,888,88424)}}while(0);do{if((b|0)==0){g=3969}else{if((b|0)==0){g=3969;break}ug(59976,61560,889,88424)}}while(0);c[f>>2]=a;c[f+4>>2]=b;g=a;if((g|0)==1){a=b;if((a|0)==0){e=d;c[f+8>>2]=(y=c[e+4>>2]|0,c[e+4>>2]=y+8,c[(c[e>>2]|0)+y>>2]|0);e=d;c[f+12>>2]=(y=c[e+4>>2]|0,c[e+4>>2]=y+8,c[(c[e>>2]|0)+y>>2]|0)}else if((a|0)==1){a=d;c[f+8>>2]=(y=c[a+4>>2]|0,c[a+4>>2]=y+8,c[(c[a>>2]|0)+y>>2]|0);a=d;c[f+12>>2]=(y=c[a+4>>2]|0,c[a+4>>2]=y+8,c[(c[a>>2]|0)+y>>2]|0)}return}else if((g|0)==0){g=b;if((g|0)==1){b=d;c[f+8>>2]=(y=c[b+4>>2]|0,c[b+4>>2]=y+8,c[(c[b>>2]|0)+y>>2]|0);b=d;c[f+12>>2]=(y=c[b+4>>2]|0,c[b+4>>2]=y+8,c[(c[b>>2]|0)+y>>2]|0)}else if((g|0)==0){g=d;c[f+8>>2]=(y=c[g+4>>2]|0,c[g+4>>2]=y+8,c[(c[g>>2]|0)+y>>2]|0);g=d;c[f+12>>2]=(y=c[g+4>>2]|0,c[g+4>>2]=y+8,c[(c[g>>2]|0)+y>>2]|0)}return}else{return}}function jZ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g|0;c[h>>2]=e;c[h+4>>2]=0;jY(a,b,d,g|0);i=f;return}function j_(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+8|0;f=e|0;g=a;a=b;b=d;c[g>>2]=0;c[f>>2]=0;if((s5()|0)!=0){h=jJ(60)|0;j=h;i=e;return j|0}d=nC(a)|0;do{if((d|0)!=0){k=ob(a,f)|0;if((k|0)!=0){break}l=tJ(16)|0;if((l|0)!=0){c[l>>2]=a;c[l+4>>2]=d;c[l+8>>2]=b;c[l+12>>2]=c[f>>2];c[g>>2]=l;break}else{k=tG(c[(bX()|0)>>2]|0)|0;break}}else{k=jQ(4)|0}}while(0);if((k|0)!=0){oc(c[f>>2]|0)}h=k;j=h;i=e;return j|0}function j$(a){a=a|0;var b=0;b=a;if((b|0)==0){return}oc(c[b+12>>2]|0);tQ(b);return}function j0(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;b=i;i=i+8|0;f=b|0;g=a;a=d;if((s5()|0)!=0){h=jJ(60)|0;j=h;i=b;return j|0}d=tJ(8)|0;do{if((d|0)!=0){k=jM(f,e)|0;if((k|0)!=0){break}else{c[d>>2]=c[f>>2];c[d+4>>2]=a;c[g>>2]=d;break}}else{k=tG(c[(bX()|0)>>2]|0)|0}}while(0);if((k|0)!=0){tQ(d)}h=k;j=h;i=b;return j|0}function j1(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=i;i=i+40|0;h=g|0;j=g+8|0;k=g+16|0;l=g+24|0;m=g+32|0;n=b;c[h>>2]=d;d=e;e=f;if((s5()|0)!=0){o=jJ(60)|0;p=o;i=g;return p|0}c[l>>2]=0;c[m>>2]=0;f=0;b=0;q=0;r=0;c[j>>2]=0;c[k>>2]=0;s=0;t=tJ(8)|0;do{if((t|0)!=0){f=tJ(8)|0;if((f|0)==0){u=tG(c[(bX()|0)>>2]|0)|0;break}b=tJ(8)|0;if((b|0)==0){u=tG(c[(bX()|0)>>2]|0)|0;break}v=22;if((d|0)!=0){w=0;while(1){if(w>>>0>=2){break}if((c[n>>2]|0)==(c[55432+(w*12|0)>>2]|0)){v=v+6|0}w=w+1|0}}q=tJ(v)|0;if((q|0)==0){u=tG(c[(bX()|0)>>2]|0)|0;break}a[q]=0;x=q;Ai(x|0,58232)|0;if((d|0)!=0){w=0;while(1){if(w>>>0>=2){break}if((c[n>>2]|0)==(c[55432+(w*12|0)>>2]|0)){x=q;Ai(x|0,56e3)|0}w=w+1|0}}v=q;Ai(v|0,83256)|0;v=2;if((d|0)!=0){w=0;while(1){if(w>>>0>=2){break}if((c[n>>2]|0)==(c[55432+(w*12|0)>>2]|0)){v=v+2|0}w=w+1|0}}r=tJ(v<<2)|0;if((r|0)==0){u=tG(c[(bX()|0)>>2]|0)|0;break}c[r>>2]=n+4;c[r+4>>2]=h;if((d|0)!=0){x=2;w=0;while(1){if(w>>>0>=2){break}if((c[n>>2]|0)==(c[55432+(w*12|0)>>2]|0)){y=x;x=y+1|0;c[r+(y<<2)>>2]=55436+(w*12|0);y=x;x=y+1|0;c[r+(y<<2)>>2]=d+(c[55440+(w*12|0)>>2]|0)}w=w+1|0}}u=vi(j,0,q,r)|0;if((u|0)!=0){break}u=nZ(k,c[j>>2]|0)|0;if((u|0)!=0){break}s=u4(c[k>>2]|0,82176,0)|0;if((s|0)==0){u=jQ(63)|0;break}u=j2(82176,c[n+4>>2]|0,s,l)|0;if((u|0)!=0){break}u_(s);s=u4(c[k>>2]|0,80448,0)|0;if((s|0)==0){u=jQ(63)|0;break}u=j2(80448,c[n+4>>2]|0,s,m)|0;if((u|0)!=0){break}else{c[f+4>>2]=0;c[f>>2]=c[l>>2];c[b+4>>2]=1;c[b>>2]=c[m>>2];c[t+4>>2]=f;c[t>>2]=b;c[e>>2]=t;break}}else{u=tG(c[(bX()|0)>>2]|0)|0}}while(0);tQ(q);tQ(r);u_(c[j>>2]|0);u_(c[k>>2]|0);u_(s);if((u|0)!=0){jK(c[l>>2]|0);jK(c[m>>2]|0);tQ(f);tQ(b);tQ(t)}o=u;p=o;i=g;return p|0}function j2(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=d;d=e;e=f;f=0;l=0;m=0;n=0;c[j>>2]=0;o=u9(d,0,h)|0;do{if((o|0)!=0){if((a3(b|0,o|0,c[h>>2]|0)|0)!=0){p=4084;break}l=u4(d,k,0)|0;if((l|0)==0){q=jQ(83)|0;break}r=u6(l)|0;r=r-1|0;q=jI(j)|0;if((q|0)!=0){break}s=0;while(1){if(s>>>0>=r>>>0){break}f=u7(l,s+1|0)|0;if((f|0)==0){p=4092;break}o=u9(f,0,h)|0;if((o|0)==0){p=4094;break}n=vc(f,1,5)|0;if((n|0)==0){p=4096;break}m=tJ((c[h>>2]|0)+1|0)|0;if((m|0)==0){p=4098;break}Ah(m|0,o|0,c[h>>2]|0)|0;a[m+(c[h>>2]|0)|0]=0;q=jP(c[j>>2]|0,1,m,n)|0;if((q|0)!=0){p=4100;break}u_(f);f=0;m=0;n=0;s=s+1|0}if((p|0)==4092){q=jQ(83)|0}else if((p|0)==4094){q=jQ(83)|0}else if((p|0)==4096){q=jQ(63)|0}else if((p|0)==4098){q=tG(c[(bX()|0)>>2]|0)|0}if((q|0)!=0){break}else{c[e>>2]=c[j>>2];break}}else{p=4084}}while(0);if((p|0)==4084){q=jQ(83)|0}if((q|0)==0){t=l;u_(t);u=q;i=g;return u|0}jK(c[j>>2]|0);sn(n);tQ(m);u_(f);t=l;u_(t);u=q;i=g;return u|0}function j3(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;if((s5()|0)!=0){e=0;f=e;return f|0}a=b;if((a|0)==1){g=c[d>>2]|0}else if((a|0)==0){g=c[d+4>>2]|0}else{g=0}e=g;f=e;return f|0}function j4(a){a=a|0;var b=0;b=a;if((b|0)==0){return}if((c[b>>2]|0)!=0){a=0;while(1){if(a>>>0>=(c[(c[b>>2]|0)+4>>2]|0)>>>0){break}if((c[(c[c[b>>2]>>2]|0)+(a*12|0)+4>>2]|0)!=0){sn(c[(c[c[b>>2]>>2]|0)+(a*12|0)+4>>2]|0)}if((c[(c[c[b>>2]>>2]|0)+(a*12|0)>>2]|0)!=0){tQ(c[(c[c[b>>2]>>2]|0)+(a*12|0)>>2]|0)}a=a+1|0}tQ(c[c[b>>2]>>2]|0);tQ(c[b>>2]|0)}tQ(b);return}function j5(a){a=a|0;var b=0;b=a;if((b|0)==0){return}j4(c[b+4>>2]|0);j4(c[b>>2]|0);tQ(b);return}function j6(a){a=a|0;var b=0,d=0;if((s5()|0)!=0){b=0;d=b;return d|0}else{b=c[a>>2]|0;d=b;return d|0}return 0}function j7(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+8|0;e=d|0;f=b;if((s5()|0)!=0){g=jJ(60)|0;h=g;i=d;return h|0}c[e>>2]=0;b=j8(c[55424+(c[f+4>>2]<<2)>>2]|0,0,0,c[a+4>>2]|0,c[f>>2]|0,e)|0;if((b|0)==0){b=nX(c[e>>2]|0)|0}u_(c[e>>2]|0);g=jQ(b)|0;h=g;i=d;return h|0}function j8(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+8|0;k=j|0;l=b;b=d;d=e;e=f;f=g;g=h;h=0;c[k>>2]=0;m=0;n=jO(f)|0;h=tJ(n<<1<<2)|0;do{if((h|0)!=0){o=0;while(1){if(o>>>0>=n>>>0){break}c[h+(o<<1<<2)>>2]=(c[f>>2]|0)+(o*12|0);c[h+((o<<1)+1<<2)>>2]=(c[f>>2]|0)+(o*12|0)+4;o=o+1|0}if((e|0)!=0){p=(Ab(e|0)|0)+2|0}else{p=0}q=((b|0)!=0?7:0)+3+p+(Ab(l|0)|0)|0;o=0;while(1){if(o>>>0>=n>>>0){break}q=q+6|0;o=o+1|0}if((b|0)!=0){o=0;while(1){if(o>>>0>=1){break}if((d&c[55456+(o<<3)>>2]|0)!=0){q=q+((Ab(c[55460+(o<<3)>>2]|0)|0)+1)|0}o=o+1|0}}m=tJ(q)|0;if((m|0)==0){r=tG(c[(bX()|0)>>2]|0)|0;break}a[m]=0;Ai(m|0,71800)|0;Ai(m|0,l|0)|0;if((b|0)!=0){s=m;Ai(s|0,74352)|0;o=0;while(1){if(o>>>0>=1){break}if((d&c[55456+(o<<3)>>2]|0)!=0){s=m;Ai(s|0,73704)|0;s=m;t=c[55460+(o<<3)>>2]|0;Ai(s|0,t|0)|0}o=o+1|0}Ai(m|0,64976)|0}if((e|0)!=0){q=m;Ai(q|0,71800)|0;q=m;t=e;Ai(q|0,t|0)|0}o=0;while(1){if(o>>>0>=n>>>0){break}Ai(m|0,56e3)|0;o=o+1|0}if((e|0)!=0){o=m;Ai(o|0,64976)|0}Ai(m|0,64976)|0;r=vi(k,0,m,h)|0;if((r|0)!=0){break}else{c[g>>2]=c[k>>2];break}}else{r=tG(c[(bX()|0)>>2]|0)|0}}while(0);tQ(m);tQ(h);if((r|0)==0){u=r;i=j;return u|0}u_(c[k>>2]|0);u=r;i=j;return u|0}function j9(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;g=b;b=d;if((s5()|0)!=0){h=jJ(60)|0;j=h;i=e;return j|0}c[f>>2]=0;d=j8(c[55424+(c[g+4>>2]<<2)>>2]|0,0,0,c[a+4>>2]|0,c[g>>2]|0,f)|0;do{if((d|0)==0){g=nG(c[f>>2]|0)|0;if((g|0)!=0){c[b>>2]=g;break}else{d=jQ(4)|0;break}}}while(0);u_(c[f>>2]|0);h=d;j=h;i=e;return j|0}function ka(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;g=b;if((s5()|0)!=0){h=jJ(60)|0;j=h;i=e;return j|0}c[f>>2]=0;b=j8(c[55424+(c[g+4>>2]<<2)>>2]|0,0,0,c[a+4>>2]|0,c[g>>2]|0,f)|0;do{if((b|0)==0){if((n$(c[f>>2]|0,d)|0)!=0){b=0;break}else{b=jQ(65)|0;break}}}while(0);u_(c[f>>2]|0);h=b;j=h;i=e;return j|0}function kb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+40|0;h=g|0;j=g+8|0;k=g+16|0;l=g+24|0;m=g+32|0;n=a;a=b;b=d;d=e;e=f;if((s5()|0)!=0){o=jJ(60)|0;p=o;i=g;return p|0}c[h>>2]=0;c[k>>2]=0;c[l>>2]=0;c[j>>2]=0;c[m>>2]=0;do{if((c[b+4>>2]|0)!=1){q=jQ(125)|0}else{q=j8(c[55424+(c[b+4>>2]<<2)>>2]|0,0,0,c[n+4>>2]|0,c[b>>2]|0,m)|0;if((q|0)!=0){break}q=jI(j)|0;if((q|0)!=0){break}q=jP(c[j>>2]|0,0,79712,d)|0;if((q|0)!=0){break}q=j8(78704,1,a,c[n+4>>2]|0,c[j>>2]|0,k)|0;if((q|0)!=0){break}q=nD(l,c[k>>2]|0,c[m>>2]|0)|0;if((q|0)!=0){break}q=j2(77792,c[n+4>>2]|0,c[l>>2]|0,h)|0;if((q|0)!=0){break}else{c[e>>2]=c[h>>2];break}}}while(0);u_(c[k>>2]|0);u_(c[l>>2]|0);u_(c[m>>2]|0);jK(c[j>>2]|0);o=q;p=o;i=g;return p|0}function kc(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+24|0;h=g|0;j=g+8|0;k=g+16|0;l=a;a=b;b=d;d=e;e=f;if((s5()|0)!=0){m=jJ(60)|0;n=m;i=g;return n|0}c[h>>2]=0;c[j>>2]=0;f=0;c[k>>2]=0;do{if((c[b+4>>2]|0)!=0){o=jQ(125)|0}else{o=j8(c[55424+(c[b+4>>2]<<2)>>2]|0,0,0,c[l+4>>2]|0,c[b>>2]|0,k)|0;if((o|0)!=0){break}o=j8(77792,1,a,c[l+4>>2]|0,e,h)|0;if((o|0)!=0){break}o=nN(j,c[h>>2]|0,c[k>>2]|0)|0;if((o|0)!=0){break}f=u4(c[j>>2]|0,79712,0)|0;if((f|0)==0){o=jQ(1)|0;break}p=vc(f,1,5)|0;if((p|0)!=0){c[d>>2]=p;break}else{o=jQ(1)|0;break}}}while(0);u_(c[h>>2]|0);u_(c[j>>2]|0);u_(f);u_(c[k>>2]|0);m=jQ(o)|0;n=m;i=g;return n|0}function kd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+40|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=f+32|0;m=a;a=b;b=d;d=e;if((s5()|0)!=0){n=jJ(60)|0;o=n;i=f;return o|0}c[g>>2]=0;c[h>>2]=0;c[j>>2]=0;c[k>>2]=0;c[l>>2]=0;do{if((c[a+4>>2]|0)!=0){p=jQ(125)|0}else{p=j8(c[55424+(c[a+4>>2]<<2)>>2]|0,0,0,c[m+4>>2]|0,c[a>>2]|0,l)|0;if((p|0)!=0){break}p=jI(h)|0;if((p|0)!=0){break}p=jP(c[h>>2]|0,0,79712,b)|0;if((p|0)!=0){break}p=j8(78704,1,0,0,c[h>>2]|0,j)|0;if((p|0)!=0){break}p=nS(k,c[j>>2]|0,c[l>>2]|0)|0;if((p|0)!=0){break}p=j2(76824,c[m+4>>2]|0,c[k>>2]|0,g)|0;if((p|0)!=0){break}else{c[d>>2]=c[g>>2];break}}}while(0);u_(c[j>>2]|0);u_(c[k>>2]|0);u_(c[l>>2]|0);jK(c[h>>2]|0);n=jQ(p)|0;o=n;i=f;return o|0}function ke(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=a;a=b;b=d;d=e;if((s5()|0)!=0){m=jJ(60)|0;n=m;i=f;return n|0}c[g>>2]=0;c[h>>2]=0;c[j>>2]=0;c[k>>2]=0;e=j8(80448,0,0,c[l+4>>2]|0,c[a>>2]|0,k)|0;do{if((e|0)==0){if((c[a+4>>2]|0)!=1){e=jQ(125)|0;break}e=j8(76824,1,0,c[l+4>>2]|0,d,g)|0;if((e|0)!=0){break}e=jI(h)|0;if((e|0)!=0){break}e=jP(c[h>>2]|0,0,79712,b)|0;if((e|0)!=0){break}e=j8(78704,1,0,0,c[h>>2]|0,j)|0;if((e|0)!=0){break}else{e=nU(c[g>>2]|0,c[j>>2]|0,c[k>>2]|0)|0;break}}}while(0);u_(c[g>>2]|0);u_(c[j>>2]|0);u_(c[k>>2]|0);jK(c[h>>2]|0);m=jQ(e)|0;n=m;i=f;return n|0}function kf(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;if((s5()|0)!=0){f=jJ(60)|0;g=f;return g|0}else{f=kg(a,0,b,c,d,e)|0;g=f;return g|0}return 0}function kg(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+24|0;j=h|0;k=a;a=b;b=d;d=e;e=f;f=g;g=j;c[g>>2]=c[13866];c[g+4>>2]=c[13867];c[g+8>>2]=c[13868];c[g+12>>2]=c[13869];c[g+16>>2]=c[13870];c[g+20>>2]=c[13871];g=2;l=0;while(1){if(l>>>0>=g>>>0){break}if((c[j+(l*12|0)>>2]|0)==(k|0)){m=4314;break}l=l+1|0}if((l|0)==(g|0)){n=jQ(27)|0;o=n;i=h;return o|0}n=0;g=a;if((g|0)==0){if((c[j+(l*12|0)+4>>2]|0)!=0){n=cL[c[j+(l*12|0)+4>>2]&31](b,d,e,f)|0}}else if((g|0)==1){if((c[j+(l*12|0)+8>>2]|0)!=0){n=cL[c[j+(l*12|0)+8>>2]&31](b,d,e,f)|0}}else{n=jQ(45)|0}o=n;i=h;return o|0}function kh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;if((s5()|0)!=0){f=jJ(60)|0;g=f;return g|0}else{f=kg(a,1,b,c,d,e)|0;g=f;return g|0}return 0}function ki(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b;b=d;d=e;if((s5()|0)!=0){i=f;return}e=sl(0)|0;sf(e,256)|0;j=0;k=sc(h)|0;while(1){if((q$(k,0)|0)==0){break}j=j+1|0;q9(k,0,k,e,0)}se(k,h)|0;h=sl(0)|0;l=0;while(1){if(l>>>0<j>>>0){m=l>>>0<d>>>0}else{m=0}if(!m){break}rh(h,k,e);sg(h,g)|0;q9(k,0,k,e,0);a[b+(d-l-1)|0]=c[g>>2]&255;l=l+1|0}while(1){if(l>>>0>=d>>>0){break}a[b+(d-l-1)|0]=0;l=l+1|0}sn(e);sn(h);sn(k);i=f;return}function kj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a;if((s5()|0)!=0){f=jJ(60)|0;g=f;return g|0}a=(((qR(e)|0)+7|0)>>>0)/8|0;h=tJ(a)|0;if((h|0)!=0){ki(e,h,a);c[b>>2]=h;c[d>>2]=a;i=0}else{i=tG(c[(bX()|0)>>2]|0)|0}f=i;g=f;return g|0}function kk(a,b,c){a=a|0;b=b|0;c=c|0;var e=0,f=0,g=0,h=0;e=a;a=b;b=c;if((s5()|0)!=0){return}c=sl(0)|0;sf(c,1)|0;f=sl(0)|0;sf(f,0)|0;g=sl(0)|0;h=0;while(1){if(h>>>0>=b>>>0){break}rm(g,c,d[a+(b-h-1)|0]|0);qL(f,f,g);rm(c,c,256);h=h+1|0}sn(g);sn(c);se(e,f)|0;sn(f);return}function kl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+72|0;j=d|0;k=d+16|0;l=d+24|0;m=d+32|0;n=d+40|0;o=d+48|0;p=d+56|0;q=d+64|0;r=a;a=e;e=f;f=g;g=h;if((s5()|0)!=0){s=jJ(60)|0;t=s;i=d;return t|0}c[m>>2]=0;c[n>>2]=0;h=0;c[q>>2]=0;c[o>>2]=0;c[k>>2]=0;u=km(b)|0;do{if((u|0)!=0){if((c[e+4>>2]|0)!=1){v=jQ(125)|0;break}v=kn(r,e,a,u,q)|0;if((v|0)!=0){break}jZ(j,1,0,(b=i,i=i+16|0,c[b>>2]=k,c[b+8>>2]=l,b)|0);i=b;v=kf(c[u+4>>2]|0,0,c[q>>2]|0,f,j)|0;if((v|0)!=0){break}h=sm(0)|0;kk(h,c[k>>2]|0,c[l>>2]|0);v=kb(r,0,e,h,m)|0;if((v|0)!=0){break}v=ko(c[m>>2]|0,n)|0;if((v|0)!=0){break}v=kj(c[n>>2]|0,o,p)|0;if((v|0)!=0){break}else{v=kp(g,c[o>>2]|0,c[p>>2]|0)|0;break}}else{v=jQ(23)|0}}while(0);jK(c[m>>2]|0);sn(c[n>>2]|0);sn(h);tQ(c[q>>2]|0);tQ(c[o>>2]|0);tQ(c[k>>2]|0);s=v;t=s;i=d;return t|0}function km(a){a=a|0;var b=0,d=0,e=0,f=0;b=a;a=0;while(1){if(a>>>0>=2){break}if((b|0)==(c[55392+(a<<4)>>2]|0)){d=4399;break}a=a+1|0}if((a|0)==2){e=0;f=e;return f|0}else{e=55392+(a<<4)|0;f=e;return f|0}return 0}function kn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;h=e;e=i;i=i+16|0;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];c[e+8>>2]=c[h+8>>2];c[e+12>>2]=c[h+12>>2];h=f;f=tJ(c[e+12>>2]|0)|0;do{if((f|0)!=0){j=cL[c[e+8>>2]&31](a,b,d,f)|0;if((j|0)!=0){break}else{c[h>>2]=f;break}}else{j=tG(c[(bX()|0)>>2]|0)|0}}while(0);if((j|0)==0){k=j;i=g;return k|0}ze(f);k=j;i=g;return k|0}function ko(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+8|0;e=d|0;f=a;a=b;do{if((jO(f)|0)!=1){g=jQ(70)|0}else{g=jS(f,2,0,0,e)|0;if((g|0)!=0){break}else{c[a>>2]=c[e>>2];break}}}while(0);i=d;return g|0}function kp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a;a=b;b=d;if((c[e>>2]|0)!=1){ug(75064,61560,949,88376);return 0}d=0;f=c[e+4>>2]|0;if((f|0)==0){if((c[c[e+8>>2]>>2]|0)!=0){g=tP(c[c[e+8>>2]>>2]|0,(c[c[e+12>>2]>>2]|0)+b|0)|0;if((g|0)!=0){if((c[c[e+8>>2]>>2]|0)!=(g|0)){c[c[e+8>>2]>>2]=g}h=g+(c[c[e+12>>2]>>2]|0)|0;i=a;j=b;Ac(h|0,i|0,j)|0;j=c[e+12>>2]|0;c[j>>2]=(c[j>>2]|0)+b}else{d=tG(c[(bX()|0)>>2]|0)|0}}else{if((tM(a)|0)!=0){g=tL(b)|0}else{g=tJ(b)|0}if((g|0)!=0){j=g;i=a;h=b;Ac(j|0,i|0,h)|0;c[c[e+8>>2]>>2]=g;c[c[e+12>>2]>>2]=b}else{d=tG(c[(bX()|0)>>2]|0)|0}}k=d;return k|0}else if((f|0)==1){d=cI[c[e+8>>2]&63](c[e+12>>2]|0,a,b)|0;k=d;return k|0}else{k=d;return k|0}return 0}function kq(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=d|0;k=d+16|0;l=d+24|0;m=d+32|0;n=d+40|0;o=d+48|0;p=d+56|0;q=d+64|0;r=d+72|0;s=a;a=e;e=f;f=g;g=h;if((s5()|0)!=0){t=jJ(60)|0;u=t;i=d;return u|0}c[k>>2]=0;h=0;c[n>>2]=0;c[p>>2]=0;c[o>>2]=0;c[l>>2]=0;c[q>>2]=0;v=km(b)|0;do{if((v|0)!=0){if((c[e+4>>2]|0)!=0){w=jQ(125)|0;break}w=kr(f,q,r)|0;if((w|0)!=0){break}h=sm(0)|0;kk(h,c[q>>2]|0,c[r>>2]|0);w=of(c[s>>2]|0,p,0)|0;if((w|0)!=0){break}if((Ab(c[p>>2]|0)|0)!=1){w=jQ(70)|0;break}w=jI(k)|0;if((w|0)!=0){break}w=jP(c[k>>2]|0,3,c[p>>2]|0,h)|0;if((w|0)!=0){break}w=kc(s,0,e,n,c[k>>2]|0)|0;if((w|0)!=0){break}w=kj(c[n>>2]|0,l,m)|0;if((w|0)!=0){break}w=kn(s,e,a,v,o)|0;if((w|0)!=0){break}b=c[m>>2]|0;jZ(j,0,0,(x=i,i=i+16|0,c[x>>2]=c[l>>2],c[x+8>>2]=b,x)|0);i=x;w=kh(c[v+4>>2]|0,0,c[o>>2]|0,j,g)|0;if((w|0)!=0){break}else{break}}else{w=jQ(23)|0}}while(0);jK(c[k>>2]|0);sn(h);sn(c[n>>2]|0);ze(c[p>>2]|0);tQ(c[o>>2]|0);tQ(c[l>>2]|0);tQ(c[q>>2]|0);t=w;u=t;i=d;return u|0}function kr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+1032|0;f=e|0;g=e+1024|0;h=a;a=b;b=d;d=0;j=0;while(1){c[g>>2]=1024;k=kv(h,j,f|0,g)|0;if((k|0)!=0){l=4479;break}if((c[g>>2]|0)==0){l=4486;break}m=tP(d,j+(c[g>>2]|0)|0)|0;if((m|0)==0){l=4482;break}if((d|0)!=(m|0)){d=m}m=d+j|0;n=f;o=c[g>>2]|0;Ac(m|0,n|0,o)|0;j=j+(c[g>>2]|0)|0}if((l|0)!=4486)if((l|0)==4482){k=tG(c[(bX()|0)>>2]|0)|0}if((k|0)==0){c[b>>2]=j;c[a>>2]=d}if((k|0)==0){p=k;i=e;return p|0}tQ(d);p=k;i=e;return p|0}function ks(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;d=i;i=i+72|0;j=d|0;k=d+16|0;l=d+24|0;m=d+32|0;n=d+40|0;o=d+48|0;p=d+56|0;q=d+64|0;r=a;a=e;e=f;f=g;g=h;if((s5()|0)!=0){s=jJ(60)|0;t=s;i=d;return t|0}c[k>>2]=0;c[q>>2]=0;c[n>>2]=0;c[o>>2]=0;h=0;c[l>>2]=0;do{if((c[e+4>>2]|0)!=0){u=jQ(125)|0}else{v=km(b)|0;if((v|0)==0){u=jQ(24)|0;break}u=kn(r,e,a,v,n)|0;if((u|0)!=0){break}jZ(j,1,0,(w=i,i=i+16|0,c[w>>2]=l,c[w+8>>2]=m,w)|0);i=w;u=kf(c[v+4>>2]|0,0,c[n>>2]|0,f,j)|0;if((u|0)!=0){break}h=sl(0)|0;kk(h,c[l>>2]|0,c[m>>2]|0);u=kd(r,e,h,k)|0;if((u|0)!=0){break}u=ko(c[k>>2]|0,q)|0;if((u|0)!=0){break}u=kj(c[q>>2]|0,o,p)|0;if((u|0)!=0){break}else{u=kp(g,c[o>>2]|0,c[p>>2]|0)|0;break}}}while(0);jK(c[k>>2]|0);sn(c[q>>2]|0);sn(h);tQ(c[n>>2]|0);tQ(c[o>>2]|0);tQ(c[l>>2]|0);s=u;t=s;i=d;return t|0}function kt(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+72|0;j=d|0;k=d+16|0;l=d+24|0;m=d+32|0;n=d+40|0;o=d+48|0;p=d+56|0;q=d+64|0;r=a;a=e;e=f;f=g;g=h;if((s5()|0)!=0){s=jJ(60)|0;t=s;i=d;return t|0}h=0;c[o>>2]=0;c[k>>2]=0;u=0;c[n>>2]=0;c[l>>2]=0;c[p>>2]=0;do{if((c[e+4>>2]|0)!=1){v=jQ(125)|0}else{w=km(b)|0;if((w|0)==0){v=jQ(24)|0;break}v=kn(r,e,a,w,n)|0;if((v|0)!=0){break}jZ(j,1,0,(x=i,i=i+16|0,c[x>>2]=l,c[x+8>>2]=m,x)|0);i=x;v=kf(c[w+4>>2]|0,0,c[n>>2]|0,f,j)|0;if((v|0)!=0){break}u=sl(0)|0;kk(u,c[l>>2]|0,c[m>>2]|0);v=kr(g,p,q)|0;if((v|0)!=0){break}h=sl(0)|0;kk(h,c[p>>2]|0,c[q>>2]|0);v=of(c[r>>2]|0,0,o)|0;if((v|0)!=0){break}if((Ab(c[o>>2]|0)|0)!=1){v=jQ(70)|0;break}v=jI(k)|0;if((v|0)!=0){break}v=jP(c[k>>2]|0,3,c[o>>2]|0,h)|0;if((v|0)!=0){break}else{sn(h);h=0;v=ke(r,e,u,c[k>>2]|0)|0;break}}}while(0);jK(c[k>>2]|0);sn(h);sn(u);ze(c[o>>2]|0);tQ(c[n>>2]|0);tQ(c[l>>2]|0);tQ(c[p>>2]|0);s=v;t=s;i=d;return t|0}function ku(){var a=0;if((s5()|0)!=0){a=60}else{a=0}return a|0}function kv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a;a=b;b=d;d=e;if((c[f>>2]|0)!=0){ug(76040,61560,1009,88400);return 0}e=0;g=c[f+4>>2]|0;if((g|0)==1){e=cI[c[f+8>>2]&63](c[f+12>>2]|0,b,d)|0;h=e;return h|0}else if((g|0)==0){g=(c[f+12>>2]|0)-a|0;i=c[d>>2]|0;if(i>>>0>g>>>0){j=g}else{j=i}i=b;b=(c[f+8>>2]|0)+a|0;a=j;Ac(i|0,b|0,a)|0;c[d>>2]=j;e=0;h=e;return h|0}else{h=e;return h|0}return 0}function kw(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;d=i;i=i+8|0;f=d|0;g=j9(a,b,f)|0;if((g|0)!=0){h=g;i=d;return h|0}else{c[e>>2]=c[f>>2];h=g;i=d;return h|0}return 0}function kx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=e;e=j9(a,b,g)|0;if((e|0)!=0){j=e;i=f;return j|0}else{c[g>>2]=(((c[g>>2]|0)+7|0)>>>0)/8|0;c[h>>2]=c[d>>2];c[h+4>>2]=c[g>>2];j=e;i=f;return j|0}return 0}function ky(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;g=b|0;h=b+8|0;j=f;f=0;c[g>>2]=0;k=kr(e,g,h)|0;do{if((k|0)==0){e=((c[d>>2]|0)>>>0)/8|0;if((c[h>>2]|0)>>>0>(e-11|0)>>>0){k=jQ(66)|0;break}f=tJ(e-1|0)|0;if((f|0)!=0){l=e-(c[h>>2]|0)-3|0;kD(f+1|0,l,1);a[f|0]=2;a[f+(l+1)|0]=0;m=f+l+2|0;l=c[g>>2]|0;n=c[h>>2]|0;Ac(m|0,l|0,n)|0;k=kp(j,f,e-1|0)|0;break}else{k=tG(c[(bX()|0)>>2]|0)|0;break}}}while(0);tQ(f);tQ(c[g>>2]|0);i=b;return k|0}function kz(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;a=i;i=i+16|0;g=a|0;h=a+8|0;j=f;f=0;c[g>>2]=0;k=kr(e,g,h)|0;L5644:do{if((k|0)==0){e=((c[b>>2]|0)>>>0)/8|0;l=0;while(1){if(l>>>0<(c[h>>2]|0)>>>0){m=(d[(c[g>>2]|0)+l|0]|0|0)!=0}else{m=0}if(!m){break}l=l+1|0}do{if((c[h>>2]|0)>>>0>=10){if((c[h>>2]|0)!=(e-1|0)){break}if((d[c[g>>2]|0]|0|0)!=2){break}if(l>>>0>=(c[h>>2]|0)>>>0){break}if((l-1|0)>>>0<8){break}l=l+1|0;f=tJ((c[h>>2]|0)-l|0)|0;if((f|0)!=0){n=f;o=(c[g>>2]|0)+l|0;p=(c[h>>2]|0)-l|0;Ac(n|0,o|0,p)|0;k=kp(j,f,(c[h>>2]|0)-l|0)|0;break L5644}else{k=tG(c[(bX()|0)>>2]|0)|0;break L5644}}}while(0);k=jQ(152)|0}}while(0);tQ(f);tQ(c[g>>2]|0);i=a;return k|0}function kA(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;b=i;i=i+120|0;g=b|0;h=b+8|0;j=b+112|0;k=e;e=f;f=d;d=0;c[g>>2]=0;l=0;m=0;n=mi(g,c[f>>2]|0,0)|0;do{if((n|0)==0){c[j>>2]=100;n=mJ(c[f>>2]|0,10,h|0,j)|0;if((n|0)!=0){break}o=mI(c[f>>2]|0)|0;n=kB(k,12,c[g>>2]|0)|0;if((n|0)!=0){break}p=mB(c[g>>2]|0,0)|0;q=(c[j>>2]|0)+o|0;m=tJ(q)|0;if((m|0)==0){n=tG(c[(bX()|0)>>2]|0)|0;break}r=0;while(1){if(r>>>0>=(c[j>>2]|0)>>>0){break}a[m+r|0]=a[h+r|0]|0;r=r+1|0}r=0;while(1){if(r>>>0>=o>>>0){break}a[m+((c[j>>2]|0)+r)|0]=a[p+r|0]|0;r=r+1|0}if((c[f+4>>2]|0)>>>0<(q+11|0)>>>0){n=jQ(66)|0;break}p=(c[f+4>>2]|0)-q-3|0;l=tJ(p)|0;if((l|0)==0){n=tG(c[(bX()|0)>>2]|0)|0;break}r=0;while(1){if(r>>>0>=p>>>0){break}a[l+r|0]=-1;r=r+1|0}o=p+q+3|0;d=tJ(o)|0;if((d|0)==0){n=tG(c[(bX()|0)>>2]|0)|0;break}a[d|0]=0;a[d+1|0]=1;r=0;while(1){if(r>>>0>=p>>>0){break}a[d+(r+2)|0]=a[l+r|0]|0;r=r+1|0}a[d+(p+2)|0]=0;r=0;while(1){if(r>>>0>=q>>>0){break}a[d+(p+3+r)|0]=a[m+r|0]|0;r=r+1|0}n=kp(e,d,o)|0}}while(0);mq(c[g>>2]|0);tQ(d);tQ(l);tQ(m);i=b;return n|0}function kB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+1032|0;f=e|0;g=e+1024|0;h=a;a=b;b=d;d=0;while(1){c[g>>2]=1024;j=kv(h,d,f|0,g)|0;if((j|0)!=0){k=4635;break}if((c[g>>2]|0)==0){k=4640;break}j=cI[a&63](b,f|0,c[g>>2]|0)|0;if((j|0)!=0){k=4638;break}d=d+(c[g>>2]|0)|0}if((k|0)==4635){l=j;i=e;return l|0}else if((k|0)==4640){l=j;i=e;return l|0}else if((k|0)==4638){l=j;i=e;return l|0}return 0}function kC(a,b,c){a=a|0;b=b|0;c=c|0;ms(a,b,c);return 0}function kD(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;b=c;c=d;d=0;while(1){if(d>>>0>=b>>>0){break}a[e+d|0]=0;d=d+1|0}do{f=0;d=0;while(1){if(d>>>0>=b>>>0){break}if((a[e+d|0]|0)==0){f=f+1|0}d=d+1|0}if((f|0)!=0){g=f+((f>>>0)/128|0)|0;h=sH(g,c)|0;i=0;d=0;while(1){do{if((f|0)!=0){if(d>>>0>=b>>>0){j=0;break}j=i>>>0<g>>>0}else{j=0}}while(0);if(!j){break}if((a[e+d|0]|0)==0){while(1){if(i>>>0<g>>>0){k=(a[h+i|0]|0)!=0^1}else{k=0}if(!k){break}i=i+1|0}if(i>>>0>=g>>>0){l=4672;break}m=i;i=m+1|0;a[e+d|0]=a[h+m|0]|0;f=f-1|0}d=d+1|0}if((l|0)==4672){l=0}tQ(h)}}while((f|0)!=0);return}function kE(a,b){a=a|0;b=b|0;return kF(a,b)|0}function kF(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function kG(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;g=f|0;h=b;b=0;if((s5()|0)!=0){j=kH(60)|0;k=j;i=f;return k|0}sW(123144)|0;if((h|0)!=0){l=h}else{l=122920}b=uq(123152,0,a,l,g)|0;sX(123144)|0;if((b|0)==0){c[e>>2]=c[g>>2];c[d>>2]=c[(c[g>>2]|0)+24>>2]}j=kI(b)|0;k=j;i=f;return k|0}function kH(a){a=a|0;return lA(1,a)|0}function kI(a){a=a|0;return lz(32,a)|0}function kJ(a){a=a|0;sW(123144)|0;uu(a);sX(123144)|0;return}function kK(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+8|0;d=b|0;e=a;c[d>>2]=0;if((e|0)==0){f=0;g=f;i=b;return g|0}sW(123144)|0;if((c[30776]|0)==0){kL();c[30776]=1}sX(123144)|0;sW(123144)|0;if((kM(e,d,0)|0)==0){a=kN(e)|0;if((a|0)!=0){c[d>>2]=c[a+24>>2];uu(a)}}sX(123144)|0;f=c[d>>2]|0;g=f;i=b;return g|0}function kL(){var a=0,b=0,d=0,e=0;a=0;b=0;while(1){if((a|0)!=0){d=0}else{d=(c[49992+(b<<4)>>2]|0)!=0}if(!d){break}if((c[(c[49992+(b<<4)>>2]|0)+24>>2]|0)==0){c[(c[49992+(b<<4)>>2]|0)+24>>2]=14}if((c[(c[49992+(b<<4)>>2]|0)+28>>2]|0)==0){c[(c[49992+(b<<4)>>2]|0)+28>>2]=56}if((c[(c[49992+(b<<4)>>2]|0)+32>>2]|0)==0){c[(c[49992+(b<<4)>>2]|0)+32>>2]=86}if((c[(c[49992+(b<<4)>>2]|0)+36>>2]|0)==0){c[(c[49992+(b<<4)>>2]|0)+36>>2]=2}if((c[(c[49992+(b<<4)>>2]|0)+40>>2]|0)==0){c[(c[49992+(b<<4)>>2]|0)+40>>2]=8}do{if((s5()|0)!=0){if((c[50004+(b<<4)>>2]|0)!=0){e=4732;break}}else{e=4732}}while(0);if((e|0)==4732){e=0;a=uq(123152,c[5e4+(b<<4)>>2]|0,c[49992+(b<<4)>>2]|0,c[49996+(b<<4)>>2]|0,0)|0}b=b+1|0}if((a|0)!=0){uf(71480,330,87808)}else{return}}function kM(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;a=b;b=d;d=0;do{if((e|0)!=0){if((a3(e|0,76032,4)|0)!=0){if((a3(e|0,75032,4)|0)!=0){break}}e=e+4|0}}while(0);f=lw(e)|0;if((f|0)==0){g=d;return g|0}h=c[f+8>>2]|0;i=0;while(1){if((c[(c[h+8>>2]|0)+(i<<3)>>2]|0)!=0){j=(d|0)!=0^1}else{j=0}if(!j){break}if((Al(e|0,c[(c[h+8>>2]|0)+(i<<3)>>2]|0)|0)==0){if((a|0)!=0){c[a>>2]=c[f+24>>2]}if((b|0)!=0){k=b;l=(c[h+8>>2]|0)+(i<<3)|0;c[k>>2]=c[l>>2];c[k+4>>2]=c[l+4>>2]}d=1}i=i+1|0}uu(f);g=d;return g|0}function kN(a){a=a|0;return ut(c[30788]|0,a,24)|0}function kO(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+8|0;d=b|0;e=a;a=0;f=0;if((e|0)==0){g=0;h=g;i=b;return h|0}sW(123144)|0;a=kM(e,0,d)|0;if((a|0)!=0){f=c[d+4>>2]|0}sX(123144)|0;g=f;h=g;i=b;return h|0}function kP(a){a=a|0;return kQ(a)|0}function kQ(a){a=a|0;var b=0,d=0,e=0,f=0;sW(123144)|0;if((c[30776]|0)==0){kL();c[30776]=1}sX(123144)|0;sW(123144)|0;b=us(c[30788]|0,a)|0;if((b|0)!=0){d=c[c[b+8>>2]>>2]|0;uu(b);e=sX(123144)|0;f=d;return f|0}else{d=76752;e=sX(123144)|0;f=d;return f|0}return 0}function kR(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=a;a=b;b=d;d=e;e=d&1;g=0;h=0;i=0;j=0;k=0;sL();sW(123144)|0;if((c[30776]|0)==0){kL();c[30776]=1}sX(123144)|0;sW(123144)|0;i=us(c[30788]|0,a)|0;if((i|0)!=0){if((c[i+16>>2]&1|0)!=0){k=12}else{g=c[i+8>>2]|0;h=c[i+12>>2]|0}}else{k=12}sX(123144)|0;do{if((k|0)==0){if((d&-16|0)==0){if((d&0|0)==0){break}}k=12}}while(0);if((k|0)==0){switch(b|0){case 4:{if((c[g+36>>2]|0)==2){l=4800}else{if((c[g+40>>2]|0)==8){l=4800}}if((l|0)==4800){k=71}break};case 1:case 3:case 2:case 5:case 6:case 7:{if((c[g+28>>2]|0)==56){l=4796}else{if((c[g+32>>2]|0)==86){l=4796}}if((l|0)==4796){k=71}break};case 0:{if((s5()|0)!=0){l=4804}else{if((t_(0)|0)==0){l=4804}}if((l|0)==4804){k=71}break};default:{k=71}}}if((k|0)==0){l=(c[g+20>>2]<<1)+144-16+15|0;if((e|0)!=0){j=tS(1,l)|0}else{j=tR(1,l)|0}if((j|0)!=0){m=0;if((j&15|0)!=0){m=16-(j&15)|0;j=j+m|0}c[j>>2]=(e|0)!=0?1183944770:604576100;c[j+4>>2]=l-m;c[j+8>>2]=m;c[j+12>>2]=g;c[j+16>>2]=h;c[j+20>>2]=i;c[j+24>>2]=a;c[j+48>>2]=b;c[j+52>>2]=d;d=a;if((d|0)==7|(d|0)==8|(d|0)==9){c[j+28>>2]=10;c[j+32>>2]=8;c[j+36>>2]=2;c[j+40>>2]=6;c[j+44>>2]=4}}else{k=y$()|0}}if((k|0)!=0){if((i|0)!=0){sW(123144)|0;uu(i);sX(123144)|0}}if((k|0)!=0){n=0;o=f;c[o>>2]=n;p=k;q=kI(p)|0;return q|0}else{n=j;o=f;c[o>>2]=n;p=k;q=kI(p)|0;return q|0}return 0}function kS(a,b,c){a=a|0;b=b|0;c=c|0;uf(71480,259,87624);return}function kT(a,b,c){a=a|0;b=b|0;c=c|0;uf(71480,269,87688);return}function kU(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;uf(71480,281,87600);return}function kV(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;uf(71480,293,87664);return}function kW(b){b=b|0;var d=0,e=0,f=0;d=b;if((d|0)==0){return}do{if((c[d>>2]|0)!=1183944770){if((c[d>>2]|0)==604576100){break}t8(63,65920)}}while(0);c[d>>2]=0;sW(123144)|0;uu(c[d+20>>2]|0);sX(123144)|0;b=c[d+8>>2]|0;e=d;f=c[d+4>>2]|0;while(1){if((f|0)==0){break}a[e]=0;e=e+1|0;f=f-1|0}tQ(d+(-b|0)|0);return}function kX(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=a;a=b;b=c;c=d;if((c|0)!=0){g=kY(f,a,b,c,e)|0}else{g=kY(f,a,b,a,b)|0}do{if((g|0)!=0){if((a|0)==0){break}Ae(a|0,66,b|0)}}while(0);return kI(g)|0}function kY(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;h=a;a=b;b=d;d=e;e=f;switch(c[h+48>>2]|0){case 3:{j=lr(h,a,b,d,e)|0;k=j;i=g;return k|0};case 0:{do{if((s5()|0)!=0){l=4867}else{if((t_(0)|0)==0){l=4867;break}if((d|0)!=(a|0)){Ad(a|0,d|0,e|0)}j=0}}while(0);if((l|0)==4867){tb(71480,1738,87832,0,80400);j=71}k=j;i=g;return k|0};case 2:{j=ls(h,a,b,d,e)|0;k=j;i=g;return k|0};case 1:{j=lq(h,a,b,d,e)|0;k=j;i=g;return k|0};case 6:{j=lp(h,a,b,d,e)|0;k=j;i=g;return k|0};case 4:{cP[c[(c[h+12>>2]|0)+36>>2]&15](h+128|0,a,d,e);j=0;k=j;i=g;return k|0};case 7:{j=lu(h,a,b,d,e)|0;k=j;i=g;return k|0};case 5:{j=lt(h,a,b,d,e)|0;k=j;i=g;return k|0};default:{uk(77720,(k=i,i=i+8|0,c[k>>2]=c[h+48>>2],k)|0);i=k;return 0}}return 0}function kZ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=a;a=b;b=c;c=d;if((c|0)!=0){g=k_(f,a,b,c,e)|0;h=g;i=kI(h)|0;return i|0}else{g=k_(f,a,b,a,b)|0;h=g;i=kI(h)|0;return i|0}return 0}function k_(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;h=a;a=b;b=d;d=e;e=f;switch(c[h+48>>2]|0){case 4:{cP[c[(c[h+12>>2]|0)+40>>2]&15](h+128|0,a,d,e);j=0;k=j;i=g;return k|0};case 0:{do{if((s5()|0)!=0){l=4898}else{if((t_(0)|0)==0){l=4898;break}if((d|0)!=(a|0)){Ad(a|0,d|0,e|0)}j=0}}while(0);if((l|0)==4898){tb(71480,1830,87848,0,80400);j=71}k=j;i=g;return k|0};case 7:{j=lo(h,a,b,d,e)|0;k=j;i=g;return k|0};case 3:{j=lk(h,a,b,d,e)|0;k=j;i=g;return k|0};case 2:{j=ll(h,a,b,d,e)|0;k=j;i=g;return k|0};case 5:{j=lm(h,a,b,d,e)|0;k=j;i=g;return k|0};case 1:{j=lj(h,a,b,d,e)|0;k=j;i=g;return k|0};case 6:{j=ln(h,a,b,d,e)|0;k=j;i=g;return k|0};default:{uk(79640,(k=i,i=i+8|0,c[k>>2]=c[h+48>>2],k)|0);i=k;return 0}}return 0}function k$(a,b,c){a=a|0;b=b|0;c=c|0;return k0(a,b,c)|0}function k0(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a;a=cI[c[(c[e+12>>2]|0)+24>>2]&63](e+128|0,b,d)|0;if((a|0)!=0){d=e+56|0;c[d>>2]=c[d>>2]&-2;f=a;g=kI(f)|0;return g|0}else{d=e+128+(c[(c[e+12>>2]|0)+20>>2]|0)|0;b=e+128|0;h=c[(c[e+12>>2]|0)+20>>2]|0;Ac(d|0,b|0,h)|0;h=e+56|0;c[h>>2]=c[h>>2]&-2|1;f=a;g=kI(f)|0;return g|0}return 0}function k1(a,b,c){a=a|0;b=b|0;c=c|0;k2(a,b,c);return 0}function k2(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=a;a=b;b=d;Ae(f+64|0,0,c[(c[f+12>>2]|0)+12>>2]|0);if((a|0)==0){d=f+56|0;c[d>>2]=c[d>>2]&-3;g=f;h=g+112|0;c[h>>2]=0;i=e;return}if((b|0)!=(c[(c[f+12>>2]|0)+12>>2]|0)){d=c[(c[f+12>>2]|0)+12>>2]|0;uh(83184,(j=i,i=i+16|0,c[j>>2]=b,c[j+8>>2]=d,j)|0);i=j;tb(71480,920,87792,0,82008)}if(b>>>0>(c[(c[f+12>>2]|0)+12>>2]|0)>>>0){b=c[(c[f+12>>2]|0)+12>>2]|0}j=f+64|0;d=a;a=b;Ac(j|0,d|0,a)|0;a=f+56|0;c[a>>2]=c[a>>2]&-3|2;g=f;h=g+112|0;c[h>>2]=0;i=e;return}function k3(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a;a=b;b=d;do{if((a|0)!=0){if((b|0)!=(c[(c[e+12>>2]|0)+12>>2]|0)){f=4934;break}d=e+80|0;g=a;h=c[(c[e+12>>2]|0)+12>>2]|0;Ac(d|0,g|0,h)|0;c[e+112>>2]=0}else{f=4934}}while(0);if((f|0)==4934){do{if((a|0)!=0){if((b|0)==0){break}i=kH(45)|0;j=i;return j|0}}while(0);Ae(e+80|0,0,c[(c[e+12>>2]|0)+12>>2]|0);c[e+112>>2]=0}i=0;j=i;return j|0}function k4(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;b=e;e=f;f=0;L6095:do{switch(d|0){case 2:{k2(g,b,e);break};case 12:{do{if((g|0)==0){if((b|0)==0){break}if((e|0)!=4){break}k7(c[b>>2]|0);break L6095}}while(0);h=kI(12)|0;i=h;return i|0};case 42:{if((e|0)!=0){if((c[g+52>>2]&4|0)!=0){f=72}else{j=g+52|0;c[j>>2]=c[j>>2]|8}}else{j=g+52|0;c[j>>2]=c[j>>2]&-9}break};case 4:{k5(g);break};case 3:{k6(g);break};case 43:{f=k8(k3(g,b,e)|0)|0;break};case 41:{if((e|0)!=0){if((c[g+52>>2]&8|0)!=0){f=72}else{j=g+52|0;c[j>>2]=c[j>>2]|4}}else{j=g+52|0;c[j>>2]=c[j>>2]&-5}break};case 1:{f=k0(g,b,e)|0;break};case 62:{if(e>>>0<((c[(c[g+12>>2]|0)+12>>2]|0)+1|0)>>>0){f=66}else{j=b;k=c[g+112>>2]|0;if((k|0)==0){k=c[(c[g+12>>2]|0)+12>>2]|0}if(k>>>0>(c[(c[g+12>>2]|0)+12>>2]|0)>>>0){ug(79104,71480,2e3,88352);return 0}l=j;j=l+1|0;a[l]=k&255;l=g+64+(c[(c[g+12>>2]|0)+12>>2]|0)+(-k|0)|0;while(1){m=k;k=m-1|0;if((m|0)==0){break}m=l;l=m+1|0;n=j;j=n+1|0;a[n]=a[m]|0}}break};case 61:{if((c[(c[g+16>>2]|0)+4>>2]|0)!=0){f=cL[c[(c[g+16>>2]|0)+4>>2]&31](g+128|0,1,0,0)|0}else{f=60}break};default:{f=61}}}while(0);h=kI(f)|0;i=h;return i|0}function k5(a){a=a|0;var b=0,d=0,e=0;b=a;a=b+128|0;d=b+128+(c[(c[b+12>>2]|0)+20>>2]|0)|0;e=c[(c[b+12>>2]|0)+20>>2]|0;Ac(a|0,d|0,e)|0;Ae(b+56|0,0,4);Ae(b+64|0,0,c[(c[b+12>>2]|0)+12>>2]|0);Ae(b+96|0,0,c[(c[b+12>>2]|0)+12>>2]|0);Ae(b+80|0,0,c[(c[b+12>>2]|0)+12>>2]|0);return}function k6(a){a=a|0;var b=0,d=0,e=0;b=a;if((c[b+52>>2]&2|0)==0){return}if((c[b+112>>2]|0)==0){return}Ad(b+64+(c[b+112>>2]|0)|0,b+64|0,(c[(c[b+12>>2]|0)+12>>2]|0)-(c[b+112>>2]|0)|0);a=b+64|0;d=b+96+(c[(c[b+12>>2]|0)+12>>2]|0)+(-(c[b+112>>2]|0)|0)|0;e=c[b+112>>2]|0;Ac(a|0,d|0,e)|0;c[b+112>>2]=0;return}function k7(a){a=a|0;var b=0,d=0;sW(123144)|0;if((c[30776]|0)==0){kL();c[30776]=1}sX(123144)|0;sW(123144)|0;b=us(c[30788]|0,a)|0;if((b|0)==0){d=sX(123144)|0;return}if((c[b+16>>2]&1|0)==0){a=b+16|0;c[a>>2]=c[a>>2]|1}uu(b);d=sX(123144)|0;return}function k8(a){a=a|0;return a&65535|0}function k9(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=0;d=61;return kI(d)|0}function la(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=a;a=d;d=e;e=0;g=b;if((g|0)==6){do{if((a|0)!=0){h=5015}else{if((d|0)==0){h=5015;break}i=lb(f)|0;do{if(i>>>0>0){if(i>>>0>512){h=5019;break}c[d>>2]=(i>>>0)/8|0}else{h=5019}}while(0);if((h|0)==5019){e=12}}}while(0);if((h|0)==5015){e=12}}else if((g|0)==7){do{if((a|0)!=0){h=5024}else{if((d|0)==0){h=5024;break}i=lc(f)|0;do{if(i>>>0>0){if(i>>>0>=1e4){h=5028;break}c[d>>2]=i}else{h=5028}}while(0);if((h|0)==5028){e=12}}}while(0);if((h|0)==5024){e=12}}else if((g|0)==8){do{if((a|0)!=0){h=5033}else{if((d|0)!=0){h=5033;break}e=ld(f)|0}}while(0);if((h|0)==5033){e=45}}else{e=61}return kI(e)|0}function lb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;a=0;sW(123144)|0;if((c[30776]|0)==0){kL();c[30776]=1}sX(123144)|0;sW(123144)|0;e=us(c[30788]|0,d)|0;if((e|0)==0){f=sX(123144)|0;g=a;i=b;return g|0}a=c[(c[e+8>>2]|0)+16>>2]|0;if((a|0)==0){ul(55936,(h=i,i=i+8|0,c[h>>2]=d,h)|0);i=h;return 0}uu(e);f=sX(123144)|0;g=a;i=b;return g|0}function lc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;a=0;sW(123144)|0;if((c[30776]|0)==0){kL();c[30776]=1}sX(123144)|0;sW(123144)|0;e=us(c[30788]|0,d)|0;if((e|0)==0){f=sX(123144)|0;g=a;i=b;return g|0}a=c[(c[e+8>>2]|0)+12>>2]|0;if((a|0)==0){ul(58040,(h=i,i=i+8|0,c[h>>2]=d,h)|0);i=h;return 0}uu(e);f=sX(123144)|0;g=a;i=b;return g|0}function ld(a){a=a|0;var b=0,d=0,e=0,f=0;b=0;sW(123144)|0;if((c[30776]|0)==0){kL();c[30776]=1}sX(123144)|0;sW(123144)|0;d=us(c[30788]|0,a)|0;if((d|0)==0){b=12;e=sX(123144)|0;f=b;return f|0}if((c[d+16>>2]&1|0)!=0){b=12}uu(d);e=sX(123144)|0;f=b;return f|0}function le(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;if((la(a,6,0,d)|0)!=0){c[d>>2]=0}i=b;return c[d>>2]|0}function lf(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;if((la(a,7,0,d)|0)!=0){c[d>>2]=0}i=b;return c[d>>2]|0}function lg(){sW(123144)|0;if((c[30776]|0)==0){kL();c[30776]=1}sX(123144)|0;return 0}function lh(a,b){a=a|0;b=b|0;var d=0;d=0;sW(123144)|0;d=ux(c[30788]|0,a,b)|0;sX(123144)|0;return d|0}function li(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a;a=b;b=d;d=0;f=0;g=0;sW(123144)|0;if((c[30776]|0)==0){kL();c[30776]=1}sX(123144)|0;sW(123144)|0;d=us(c[30788]|0,e)|0;do{if((d|0)!=0){if((c[d+16>>2]&1|0)!=0){break}f=c[d+12>>2]|0}}while(0);sX(123144)|0;do{if((f|0)!=0){if((c[f>>2]|0)==0){h=5094;break}g=cI[c[f>>2]&63](e,a,b)|0}else{h=5094}}while(0);if((h|0)==5094){g=12;if((b|0)!=0){a=b;b=e;do{if((d|0)!=0){if((c[d+16>>2]&1|0)!=0){h=5098;break}i=62992}else{h=5098}}while(0);if((h|0)==5098){i=(d|0)!=0?61448:59816}cP[a&15](67704,b,64760,i)}}if((d|0)==0){j=g;k=kH(j)|0;return k|0}sW(123144)|0;uu(d);sX(123144)|0;j=g;k=kH(j)|0;return k|0}function lj(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=a;a=b;b=e;e=f;f=c[(c[g+12>>2]|0)+12>>2]|0;if(d>>>0<e>>>0){h=200;i=h;return i|0}if(((e>>>0)%(f>>>0)|0|0)!=0){h=139;i=h;return i|0}d=(e>>>0)/((c[(c[g+12>>2]|0)+12>>2]|0)>>>0)|0;e=0;while(1){if(e>>>0>=d>>>0){break}cJ[c[(c[g+12>>2]|0)+32>>2]&127](g+128|0,a,b);b=b+f|0;a=a+f|0;e=e+1|0}h=0;i=h;return i|0}function lk(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=b;b=e;e=g;g=h;h=c[(c[i+12>>2]|0)+12>>2]|0;j=(g>>>0)/(h>>>0)|0;if(f>>>0<g>>>0){k=200;l=k;return l|0}do{if(((g>>>0)%((c[(c[i+12>>2]|0)+12>>2]|0)>>>0)|0|0)!=0){if(g>>>0>(c[(c[i+12>>2]|0)+12>>2]|0)>>>0){if((c[i+52>>2]&4|0)!=0){break}}k=139;l=k;return l|0}}while(0);do{if((c[i+52>>2]&4|0)!=0){if(g>>>0<=h>>>0){break}j=j-1|0;if(((g>>>0)%(h>>>0)|0|0)==0){j=j-1|0}f=i+96|0;m=i+64|0;n=h;Ac(f|0,m|0,n)|0}}while(0);if((c[i+40>>2]|0)!=0){cC[c[i+40>>2]&15](i+128|0,i+64|0,b,e,j);e=e+(ad(j,h)|0)|0;b=b+(ad(j,h)|0)|0}else{n=0;while(1){if(n>>>0>=j>>>0){break}m=i+96|0;f=e;o=h;Ac(m|0,f|0,o)|0;cJ[c[(c[i+12>>2]|0)+32>>2]&127](i+128|0,b,e);p=i+64|0;q=0;while(1){if(q>>>0>=h>>>0){break}o=p;p=o+1|0;f=b+q|0;a[f]=((d[f]|0)^(d[o]|0))&255;q=q+1|0}o=i+64|0;f=i+96|0;m=h;Ac(o|0,f|0,m)|0;e=e+(c[(c[i+12>>2]|0)+12>>2]|0)|0;b=b+(c[(c[i+12>>2]|0)+12>>2]|0)|0;n=n+1|0}}do{if((c[i+52>>2]&4|0)!=0){if(g>>>0<=h>>>0){break}if(((g>>>0)%(h>>>0)|0|0)==0){r=h}else{r=(g>>>0)%(h>>>0)|0}n=i+96|0;j=i+64|0;m=h;Ac(n|0,j|0,m)|0;m=i+64|0;j=e+h|0;n=r;Ac(m|0,j|0,n)|0;cJ[c[(c[i+12>>2]|0)+32>>2]&127](i+128|0,b,e);p=i+64|0;q=0;while(1){if((q|0)>=(r|0)){break}n=p;p=n+1|0;j=b+q|0;a[j]=((d[j]|0)^(d[n]|0))&255;q=q+1|0}n=b+h|0;j=b;m=r;Ac(n|0,j|0,m)|0;q=r;while(1){if(q>>>0>=h>>>0){break}a[i+64+q|0]=a[b+q|0]|0;q=q+1|0}cJ[c[(c[i+12>>2]|0)+32>>2]&127](i+128|0,b,i+64|0);p=i+96|0;q=0;while(1){if(q>>>0>=h>>>0){break}m=p;p=m+1|0;j=b+q|0;a[j]=((d[j]|0)^(d[m]|0))&255;q=q+1|0}}}while(0);k=0;l=k;return l|0}function ll(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;i=b;b=e;e=g;g=h;h=c[(c[i+12>>2]|0)+12>>2]|0;j=h+h|0;if(f>>>0<g>>>0){k=200;l=k;return l|0}if(g>>>0<=(c[i+112>>2]|0)>>>0){m=i+64+h+(-(c[i+112>>2]|0)|0)|0;while(1){if((g|0)==0){break}f=e;e=f+1|0;n=d[f]|0;f=b;b=f+1|0;a[f]=((d[m]|0)^n)&255;f=m;m=f+1|0;a[f]=n&255;g=g-1|0;f=i+112|0;c[f>>2]=(c[f>>2]|0)-1}k=0;l=k;return l|0}if((c[i+112>>2]|0)!=0){g=g-(c[i+112>>2]|0)|0;m=i+64+h+(-(c[i+112>>2]|0)|0)|0;while(1){if((c[i+112>>2]|0)==0){break}f=e;e=f+1|0;n=d[f]|0;f=b;b=f+1|0;a[f]=((d[m]|0)^n)&255;f=m;m=f+1|0;a[f]=n&255;f=i+112|0;c[f>>2]=(c[f>>2]|0)-1}}do{if(g>>>0>=j>>>0){if((c[i+32>>2]|0)==0){o=5181;break}f=(g>>>0)/(h>>>0)|0;cC[c[i+32>>2]&15](i+128|0,i+64|0,b,e,f);b=b+(ad(f,h)|0)|0;e=e+(ad(f,h)|0)|0;g=g-(ad(f,h)|0)|0}else{o=5181}}while(0);if((o|0)==5181){while(1){if(g>>>0<j>>>0){break}cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);m=i+64|0;p=0;while(1){if(p>>>0>=h>>>0){break}o=e;e=o+1|0;n=d[o]|0;o=b;b=o+1|0;a[o]=((d[m]|0)^n)&255;o=m;m=o+1|0;a[o]=n&255;p=p+1|0}g=g-h|0}}if(g>>>0>=h>>>0){j=i+96|0;o=i+64|0;f=h;Ac(j|0,o|0,f)|0;cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);m=i+64|0;p=0;while(1){if(p>>>0>=h>>>0){break}f=e;e=f+1|0;n=d[f]|0;f=b;b=f+1|0;a[f]=((d[m]|0)^n)&255;f=m;m=f+1|0;a[f]=n&255;p=p+1|0}g=g-h|0}if((g|0)!=0){p=i+96|0;f=i+64|0;o=h;Ac(p|0,f|0,o)|0;cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);c[i+112>>2]=h;h=i+112|0;c[h>>2]=(c[h>>2]|0)-g;m=i+64|0;while(1){if((g|0)==0){break}i=e;e=i+1|0;n=d[i]|0;i=b;b=i+1|0;a[i]=((d[m]|0)^n)&255;i=m;m=i+1|0;a[i]=n&255;g=g-1|0}}k=0;l=k;return l|0}function lm(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=b;b=e;e=g;g=h;h=c[(c[i+12>>2]|0)+12>>2]|0;if(f>>>0<g>>>0){j=200;k=j;return k|0}if(g>>>0<=(c[i+112>>2]|0)>>>0){l=i+64+h+(-(c[i+112>>2]|0)|0)|0;while(1){if((g|0)==0){break}f=l;l=f+1|0;m=e;e=m+1|0;n=b;b=n+1|0;a[n]=((d[f]|0)^(d[m]|0))&255;g=g-1|0;m=i+112|0;c[m>>2]=(c[m>>2]|0)-1}j=0;k=j;return k|0}if((c[i+112>>2]|0)!=0){g=g-(c[i+112>>2]|0)|0;l=i+64+h+(-(c[i+112>>2]|0)|0)|0;while(1){if((c[i+112>>2]|0)==0){break}m=l;l=m+1|0;f=e;e=f+1|0;n=b;b=n+1|0;a[n]=((d[m]|0)^(d[f]|0))&255;f=i+112|0;c[f>>2]=(c[f>>2]|0)-1}}while(1){if(g>>>0<h>>>0){break}f=i+96|0;m=i+64|0;n=h;Ac(f|0,m|0,n)|0;cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);l=i+64|0;n=0;while(1){if(n>>>0>=h>>>0){break}m=l;l=m+1|0;f=e;e=f+1|0;o=b;b=o+1|0;a[o]=((d[m]|0)^(d[f]|0))&255;n=n+1|0}g=g-h|0}if((g|0)!=0){n=i+96|0;f=i+64|0;m=h;Ac(n|0,f|0,m)|0;cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);c[i+112>>2]=h;h=i+112|0;c[h>>2]=(c[h>>2]|0)-g;l=i+64|0;while(1){if((g|0)==0){break}i=l;l=i+1|0;h=e;e=h+1|0;m=b;b=m+1|0;a[m]=((d[i]|0)^(d[h]|0))&255;g=g-1|0}}j=0;k=j;return k|0}function ln(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return lp(a,b,c,d,e)|0}function lo(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;j=i;i=i+8|0;k=j|0;l=b;b=g;g=h;if((c[(c[l+12>>2]|0)+12>>2]|0)!=16){m=139;n=m;i=j;return n|0}if((f+8|0)>>>0<g>>>0){m=200;n=m;i=j;return n|0}if(((g>>>0)%8|0|0)!=0){m=45;n=m;i=j;return n|0}f=(g>>>0)/8|0;if(f>>>0<3){m=45;n=m;i=j;return n|0}h=e;e=l+96|0;o=l+80|0;p=e;q=b;Ac(p|0,q|0,8)|0;Ad(h|0,b+8|0,g-8|0);f=f-1|0;g=f*6|0;b=0;while(1){if((b|0)<8){r=b>>>0<4}else{r=0}if(!r){break}a[k+(7-b)|0]=g>>>(b<<3>>>0)&255;b=b+1|0}while(1){if((b|0)>=8){break}a[k+(7-b)|0]=0;b=b+1|0}r=5;while(1){if((r|0)<0){break}g=f;while(1){if(g>>>0<1){break}b=0;while(1){if((b|0)>=8){break}a[o+b|0]=((d[e+b|0]|0)^(d[k+b|0]|0))&255;b=b+1|0}q=o+8|0;p=h+(g-1<<3)|0;Ac(q|0,p|0,8)|0;cJ[c[(c[l+12>>2]|0)+32>>2]&127](l+128|0,o,o);b=7;while(1){if((b|0)<0){break}p=k+b|0;a[p]=(a[p]|0)-1&255;if((d[k+b|0]|0|0)!=255){s=5268;break}b=b-1|0}if((s|0)==5268){s=0}p=e;q=o;Ac(p|0,q|0,8)|0;q=h+(g-1<<3)|0;p=o+8|0;Ac(q|0,p|0,8)|0;g=g-1|0}r=r-1|0}if(((c[l+56>>2]|0)>>>1&1|0)!=0){r=Af(e|0,l+64|0,8)|0}else{r=0;b=0;while(1){if((b|0)>=8){break}if((d[e+b|0]|0|0)!=166){s=5280;break}b=b+1|0}if((s|0)==5280){r=1}}m=(r|0)!=0?10:0;n=m;i=j;return n|0}function lp(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=i;i=i+16|0;k=j|0;l=b;b=e;e=g;g=h;h=c[(c[l+12>>2]|0)+12>>2]|0;if(f>>>0<g>>>0){m=200;n=m;i=j;return n|0}if((c[l+112>>2]|0)!=0){if((c[l+112>>2]|0)>>>0>=h>>>0){ug(78672,71480,1459,87776);return 0}o=h-(c[l+112>>2]|0)|0;p=0;while(1){if((c[l+112>>2]|0)!=0){q=p>>>0<g>>>0}else{q=0}if(!q){break}a[b+p|0]=((d[e+p|0]|0)^(d[l+96+o|0]|0))&255;f=l+112|0;c[f>>2]=(c[f>>2]|0)-1;p=p+1|0;o=o+1|0}e=e+p|0;b=b+p|0;g=g-p|0}q=(g>>>0)/(h>>>0)|0;do{if((q|0)!=0){if((c[l+44>>2]|0)==0){break}cC[c[l+44>>2]&15](l+128|0,l+80|0,b,e,q);e=e+(ad(q,h)|0)|0;b=b+(ad(q,h)|0)|0;g=g-(ad(q,h)|0)|0}}while(0);if((g|0)!=0){p=0;while(1){if(p>>>0>=g>>>0){break}if(((p>>>0)%(h>>>0)|0|0)==0){cJ[c[(c[l+12>>2]|0)+28>>2]&127](l+128|0,k|0,l+80|0);o=h;while(1){if((o|0)<=0){break}q=l+80+(o-1)|0;a[q]=(a[q]|0)+1&255;if((d[l+80+(o-1)|0]|0|0)!=0){r=5314;break}o=o-1|0}if((r|0)==5314){r=0}}a[b+p|0]=((d[e+p|0]|0)^(d[k+((p>>>0)%(h>>>0)|0)|0]|0))&255;p=p+1|0}p=(p>>>0)%(h>>>0)|0;c[l+112>>2]=((h-p|0)>>>0)%(h>>>0)|0;if((c[l+112>>2]|0)!=0){h=l+96+p|0;e=k+p|0;p=c[l+112>>2]|0;Ac(h|0,e|0,p)|0}p=k|0;k=16;while(1){if((k|0)==0){break}a[p]=0;p=p+1|0;k=k-1|0}}m=0;n=m;i=j;return n|0}function lq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=a;a=b;b=e;e=f;f=c[(c[g+12>>2]|0)+12>>2]|0;if(d>>>0<e>>>0){h=200;i=h;return i|0}if(((e>>>0)%(f>>>0)|0|0)!=0){h=139;i=h;return i|0}d=(e>>>0)/((c[(c[g+12>>2]|0)+12>>2]|0)>>>0)|0;e=0;while(1){if(e>>>0>=d>>>0){break}cJ[c[(c[g+12>>2]|0)+28>>2]&127](g+128|0,a,b);b=b+f|0;a=a+f|0;e=e+1|0}h=0;i=h;return i|0}function lr(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=b;b=e;e=g;g=h;h=c[(c[i+12>>2]|0)+12>>2]|0;j=(g>>>0)/(h>>>0)|0;if((c[i+52>>2]&8|0)!=0){k=h}else{k=g}if(f>>>0<k>>>0){l=200;m=l;return m|0}do{if(((g>>>0)%((c[(c[i+12>>2]|0)+12>>2]|0)>>>0)|0|0)!=0){if(g>>>0>(c[(c[i+12>>2]|0)+12>>2]|0)>>>0){if((c[i+52>>2]&4|0)!=0){break}}l=139;m=l;return m|0}}while(0);do{if((c[i+52>>2]&4|0)!=0){if(g>>>0<=h>>>0){break}if(((g>>>0)%(h>>>0)|0|0)==0){j=j-1|0}}}while(0);if((c[i+36>>2]|0)!=0){cM[c[i+36>>2]&7](i+128|0,i+64|0,b,e,j,c[i+52>>2]&8);e=e+(ad(j,h)|0)|0;if((c[i+52>>2]&8|0)==0){b=b+(ad(j,h)|0)|0}}else{k=0;while(1){if(k>>>0>=j>>>0){break}n=i+64|0;o=0;while(1){if(o>>>0>=h>>>0){break}f=n;n=f+1|0;a[b+o|0]=((d[e+o|0]|0)^(d[f]|0))&255;o=o+1|0}cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,b,b);f=i+64|0;p=b;q=h;Ac(f|0,p|0,q)|0;e=e+h|0;if((c[i+52>>2]&8|0)==0){b=b+h|0}k=k+1|0}}do{if((c[i+52>>2]&4|0)!=0){if(g>>>0<=h>>>0){break}if(((g>>>0)%(h>>>0)|0|0)==0){r=h}else{r=(g>>>0)%(h>>>0)|0}b=b+(-h|0)|0;n=i+64|0;o=0;while(1){if((o|0)>=(r|0)){break}k=a[e+o|0]|0;a[b+(h+o)|0]=a[b+o|0]|0;j=n;n=j+1|0;a[b+o|0]=(k&255^(d[j]|0))&255;o=o+1|0}while(1){if(o>>>0>=h>>>0){break}j=n;n=j+1|0;a[b+o|0]=(0^(d[j]|0))&255;o=o+1|0}cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,b,b);j=i+64|0;k=b;q=h;Ac(j|0,k|0,q)|0}}while(0);l=0;m=l;return m|0}function ls(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;i=b;b=e;e=g;g=h;h=c[(c[i+12>>2]|0)+12>>2]|0;j=h+h|0;if(f>>>0<g>>>0){k=200;l=k;return l|0}if(g>>>0<=(c[i+112>>2]|0)>>>0){m=i+64+(c[(c[i+12>>2]|0)+12>>2]|0)+(-(c[i+112>>2]|0)|0)|0;while(1){if((g|0)==0){break}f=e;e=f+1|0;n=m;m=n+1|0;o=((d[n]|0)^(d[f]|0))&255;a[n]=o;n=b;b=n+1|0;a[n]=o;g=g-1|0;o=i+112|0;c[o>>2]=(c[o>>2]|0)-1}k=0;l=k;return l|0}if((c[i+112>>2]|0)!=0){g=g-(c[i+112>>2]|0)|0;m=i+64+h+(-(c[i+112>>2]|0)|0)|0;while(1){if((c[i+112>>2]|0)==0){break}o=e;e=o+1|0;n=m;m=n+1|0;f=((d[n]|0)^(d[o]|0))&255;a[n]=f;n=b;b=n+1|0;a[n]=f;f=i+112|0;c[f>>2]=(c[f>>2]|0)-1}}do{if(g>>>0>=j>>>0){if((c[i+28>>2]|0)==0){p=5410;break}f=(g>>>0)/(h>>>0)|0;cC[c[i+28>>2]&15](i+128|0,i+64|0,b,e,f);b=b+(ad(f,h)|0)|0;e=e+(ad(f,h)|0)|0;g=g-(ad(f,h)|0)|0}else{p=5410}}while(0);if((p|0)==5410){while(1){if(g>>>0<j>>>0){break}cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);m=i+64|0;p=0;while(1){if(p>>>0>=h>>>0){break}f=e;e=f+1|0;n=m;m=n+1|0;o=((d[n]|0)^(d[f]|0))&255;a[n]=o;n=b;b=n+1|0;a[n]=o;p=p+1|0}g=g-h|0}}if(g>>>0>=h>>>0){j=i+96|0;p=i+64|0;o=h;Ac(j|0,p|0,o)|0;cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);m=i+64|0;o=0;while(1){if(o>>>0>=h>>>0){break}p=e;e=p+1|0;j=m;m=j+1|0;n=((d[j]|0)^(d[p]|0))&255;a[j]=n;j=b;b=j+1|0;a[j]=n;o=o+1|0}g=g-h|0}if((g|0)!=0){o=i+96|0;n=i+64|0;j=h;Ac(o|0,n|0,j)|0;cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);c[i+112>>2]=h;h=i+112|0;c[h>>2]=(c[h>>2]|0)-g;m=i+64|0;while(1){if((g|0)==0){break}i=e;e=i+1|0;h=m;m=h+1|0;j=((d[h]|0)^(d[i]|0))&255;a[h]=j;h=b;b=h+1|0;a[h]=j;g=g-1|0}}k=0;l=k;return l|0}function lt(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=b;b=e;e=g;g=h;h=c[(c[i+12>>2]|0)+12>>2]|0;if(f>>>0<g>>>0){j=200;k=j;return k|0}if(g>>>0<=(c[i+112>>2]|0)>>>0){l=i+64+(c[(c[i+12>>2]|0)+12>>2]|0)+(-(c[i+112>>2]|0)|0)|0;while(1){if((g|0)==0){break}f=l;l=f+1|0;m=e;e=m+1|0;n=b;b=n+1|0;a[n]=((d[f]|0)^(d[m]|0))&255;g=g-1|0;m=i+112|0;c[m>>2]=(c[m>>2]|0)-1}j=0;k=j;return k|0}if((c[i+112>>2]|0)!=0){g=g-(c[i+112>>2]|0)|0;l=i+64+h+(-(c[i+112>>2]|0)|0)|0;while(1){if((c[i+112>>2]|0)==0){break}m=l;l=m+1|0;f=e;e=f+1|0;n=b;b=n+1|0;a[n]=((d[m]|0)^(d[f]|0))&255;f=i+112|0;c[f>>2]=(c[f>>2]|0)-1}}while(1){if(g>>>0<h>>>0){break}f=i+96|0;m=i+64|0;n=h;Ac(f|0,m|0,n)|0;cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);l=i+64|0;n=0;while(1){if(n>>>0>=h>>>0){break}m=l;l=m+1|0;f=e;e=f+1|0;o=b;b=o+1|0;a[o]=((d[m]|0)^(d[f]|0))&255;n=n+1|0}g=g-h|0}if((g|0)!=0){n=i+96|0;f=i+64|0;m=h;Ac(n|0,f|0,m)|0;cJ[c[(c[i+12>>2]|0)+28>>2]&127](i+128|0,i+64|0,i+64|0);c[i+112>>2]=h;h=i+112|0;c[h>>2]=(c[h>>2]|0)-g;l=i+64|0;while(1){if((g|0)==0){break}i=l;l=i+1|0;h=e;e=h+1|0;m=b;b=m+1|0;a[m]=((d[i]|0)^(d[h]|0))&255;g=g-1|0}}j=0;k=j;return k|0}function lu(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=i;i=i+8|0;k=j|0;l=b;b=e;e=h;if((c[(c[l+12>>2]|0)+12>>2]|0)!=16){m=139;n=m;i=j;return n|0}if(f>>>0<(e+8|0)>>>0){m=200;n=m;i=j;return n|0}if(((e>>>0)%8|0|0)!=0){m=45;n=m;i=j;return n|0}f=(e>>>0)/8|0;if(f>>>0<2){m=45;n=m;i=j;return n|0}h=b;o=b;b=l+80|0;if(((c[l+56>>2]|0)>>>1&1|0)!=0){p=o;q=l+64|0;Ac(p|0,q|0,8)|0}else{Ae(o|0,-90|0,8)}Ad(h+8|0,g|0,e|0);Ae(k|0,0,8);e=0;while(1){if((e|0)>5){break}g=1;while(1){if(g>>>0>f>>>0){break}q=b;p=o;Ac(q|0,p|0,8)|0;p=b+8|0;q=h+(g<<3)|0;Ac(p|0,q|0,8)|0;cJ[c[(c[l+12>>2]|0)+28>>2]&127](l+128|0,b,b);q=7;while(1){if((q|0)<0){break}p=k+q|0;a[p]=(a[p]|0)+1&255;if((a[k+q|0]|0)!=0){r=5485;break}q=q-1|0}if((r|0)==5485){r=0}q=0;while(1){if((q|0)>=8){break}a[o+q|0]=(d[b+q|0]^d[k+q|0])&255;q=q+1|0}q=h+(g<<3)|0;p=b+8|0;Ac(q|0,p|0,8)|0;g=g+1|0}e=e+1|0}m=0;n=m;i=j;return n|0}function lv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;a=b;b=c[d+4>>2]|0;e=((Al(a|0,c[d>>2]|0)|0)!=0^1)&1;if((b|0)==0){f=e;return f|0}d=0;while(1){if((c[b+(d<<2)>>2]|0)!=0){g=(e|0)!=0^1}else{g=0}if(!g){break}e=((Al(a|0,c[b+(d<<2)>>2]|0)|0)!=0^1)&1;d=d+1|0}f=e;return f|0}function lw(a){a=a|0;return ut(c[30788]|0,a,6)|0}function lx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=b;b=c[a+8>>2]|0;a=0;if((b|0)==0){e=a;return e|0}f=0;while(1){if((c[b+(f<<3)>>2]|0)!=0){g=(a|0)!=0^1}else{g=0}if(!g){break}if((Al(d|0,c[b+(f<<3)>>2]|0)|0)==0){a=1}f=f+1|0}e=a;return e|0}function ly(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function lz(a,b){a=a|0;b=b|0;return lA(a,b)|0}function lA(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function lB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=b;if((c|0)!=8){e=44;f=e;return f|0}lL(a,d)|0;if((lQ(d)|0)!=0){up(64);e=43;f=e;return f|0}else{up(64);e=0;f=e;return f|0}return 0}function lC(a,b,c){a=a|0;b=b|0;c=c|0;lM(a,c,b,0)|0;up(32);return}function lD(a,b,c){a=a|0;b=b|0;c=c|0;lM(a,c,b,1)|0;up(32);return}function lE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=b;b=a;if((d|0)!=24){f=44;g=f;return g|0}lP(b,e,e+8|0,e+16|0)|0;L6854:do{if((c[b+768>>2]|0)==0){do{if((lQ(e)|0)==0){if((lQ(e+8|0)|0)!=0){break}if((lQ(e+16|0)|0)!=0){break}break L6854}}while(0);up(64);f=43;g=f;return g|0}}while(0);up(64);f=0;g=f;return g|0}function lF(a,b,c){a=a|0;b=b|0;c=c|0;lO(a,c,b,0)|0;up(32);return}function lG(a,b,c){a=a|0;b=b|0;c=c|0;lO(a,c,b,1)|0;up(32);return}function lH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((a|0)==2){d=lJ(b,c)|0;e=d;return e|0}else{d=12;e=d;return e|0}return 0}function lI(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;e=0;if((b|0)==1){c[a+768>>2]=1;f=e;return f|0}else{e=61;f=e;return f|0}return 0}function lJ(a,b){a=a|0;b=b|0;var c=0,d=0;a=b;b=lK()|0;if((b|0)==0){c=0;d=c;return d|0}if((a|0)!=0){cP[a&15](67512,2,70928,b)}c=50;d=c;return d|0}function lK(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;a=i;i=i+2304|0;b=a|0;d=a+8|0;e=a+16|0;f=a+24|0;g=a+32|0;h=a+40|0;j=a+48|0;k=a+304|0;l=a+312|0;m=a+320|0;n=a+328|0;o=a+336|0;p=a+1112|0;q=a+1512|0;r=a+1520|0;s=a+2296|0;t=b;Ac(t|0,6616,8)|0;t=d;Ac(t|0,6920,8)|0;t=e;Ac(t|0,6280,8)|0;t=0;while(1){if((t|0)>=64){break}lL(j|0,b|0)|0;lM(j|0,d|0,f|0,0)|0;lM(j|0,f|0,g|0,0)|0;lL(j|0,g|0)|0;lM(j|0,f|0,h|0,1)|0;u=b;v=h;Ac(u|0,v|0,8)|0;v=d;u=f;Ac(v|0,u|0,8)|0;t=t+1|0}if((Af(h|0,e|0,8)|0)!=0){w=64672;x=w;i=a;return x|0}e=k;Ac(e|0,6912,8)|0;e=l;Ac(e|0,6608,8)|0;e=m;Ac(e|0,6568,8)|0;e=n;Ac(e|0,6272,8)|0;e=0;while(1){if((e|0)>=16){break}lN(o|0,l|0,m|0)|0;lO(o|0,k|0,l|0,0)|0;lO(o|0,k|0,m|0,1)|0;lP(o|0,l|0,k|0,m|0)|0;lO(o|0,k|0,k|0,0)|0;e=e+1|0}if((Af(k|0,n|0,8)|0)!=0){w=59704;x=w;i=a;return x|0}n=p;Ac(n|0,5216,400)|0;n=0;while(1){if(n>>>0>=10){y=5604;break}lP(r|0,p+(n*40|0)|0,p+(n*40|0)+8|0,p+(n*40|0)+16|0)|0;lO(r|0,p+(n*40|0)+24|0,q|0,0)|0;if((Af(p+(n*40|0)+32|0,q|0,8)|0)!=0){y=5599;break}lO(r|0,p+(n*40|0)+32|0,q|0,1)|0;if((Af(p+(n*40|0)+24|0,q|0,8)|0)!=0){y=5601;break}n=n+1|0}if((y|0)==5601){w=55880;x=w;i=a;return x|0}else if((y|0)==5604){if((mi(s,2,0)|0)!=0){w=83112;x=w;i=a;return x|0}n=0;while(1){if((n|0)>=64){break}ms(c[s>>2]|0,192+(n<<3)|0,8);n=n+1|0}n=Af(mB(c[s>>2]|0,2)|0,168,20)|0;mq(c[s>>2]|0);if((n|0)!=0){w=81968;x=w;i=a;return x|0}n=0;while(1){if((n|0)>=64){y=5618;break}if((lQ(192+(n<<3)|0)|0)==0){y=5615;break}n=n+1|0}if((y|0)==5615){w=80368;x=w;i=a;return x|0}else if((y|0)==5618){w=0;x=w;i=a;return x|0}}else if((y|0)==5599){w=57888;x=w;i=a;return x|0}return 0}function lL(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;do{if((s5()|0)==0){if((c[30684]|0)!=0){break}c[30684]=1;c[30770]=lK()|0;if((c[30770]|0)!=0){uj(79624,(b=i,i=i+8|0,c[b>>2]=c[30770],b)|0);i=b}}}while(0);if((c[30770]|0)!=0){f=50;g=f;i=d;return g|0}lS(a,e|0);up(32);a=0;while(1){if((a|0)>=32){break}c[e+128+(a<<2)>>2]=c[e+(30-a<<2)>>2];c[e+128+(a+1<<2)>>2]=c[e+(31-a<<2)>>2];a=a+2|0}f=0;g=f;i=d;return g|0}function lM(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=b;b=e;e=f;if((g|0)!=0){i=h+128|0}else{i=h|0}h=i;i=(d[b|0]|0)<<24|(d[b+1|0]|0)<<16|(d[b+2|0]|0)<<8|(d[b+3|0]|0);g=(d[b+4|0]|0)<<24|(d[b+5|0]|0)<<16|(d[b+6|0]|0)<<8|(d[b+7|0]|0);b=(i>>>4^g)&252645135;g=g^b;i=i^b<<4;b=(i>>>16^g)&65535;g=g^b;i=i^b<<16;b=(g>>>2^i)&858993459;i=i^b;g=g^b<<2;b=(g>>>8^i)&16711935;i=i^b;g=g^b<<8;g=g<<1|g>>>31;b=(i^g)&-1431655766;g=g^b;i=i^b;i=i<<1|i>>>31;f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];g=g<<31|g>>>1;b=(g^i)&-1431655766;g=g^b;i=i^b;i=i<<31|i>>>1;b=(i>>>8^g)&16711935;g=g^b;i=i^b<<8;b=(i>>>2^g)&858993459;g=g^b;i=i^b<<2;b=(g>>>16^i)&65535;i=i^b;g=g^b<<16;b=(g>>>4^i)&252645135;i=i^b;g=g^b<<4;a[e|0]=g>>>24&255;a[e+1|0]=g>>>16&255;a[e+2|0]=g>>>8&255;a[e+3|0]=g&255;a[e+4|0]=i>>>24&255;a[e+5|0]=i>>>16&255;a[e+6|0]=i>>>8&255;a[e+7|0]=i&255;return 0}function lN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;lS(b,e|0);lS(d,e+512|0);up(32);d=0;while(1){if((d|0)>=32){break}c[e+384+(d<<2)>>2]=c[e+(30-d<<2)>>2];c[e+384+(d+1<<2)>>2]=c[e+(31-d<<2)>>2];c[e+(d+32<<2)>>2]=c[e+384+(62-d<<2)>>2];c[e+(d+33<<2)>>2]=c[e+384+(63-d<<2)>>2];c[e+(d+64<<2)>>2]=c[e+(d<<2)>>2];c[e+(d+65<<2)>>2]=c[e+(d+1<<2)>>2];c[e+384+(d+64<<2)>>2]=c[e+384+(d<<2)>>2];c[e+384+(d+65<<2)>>2]=c[e+384+(d+1<<2)>>2];d=d+2|0}return 0}
function vz(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a;a=b;if((c[30514]|0)==0){if((uI(e)|0)!=0){f=uH(e,a)|0;g=f;return g|0}else{f=zg(e,a)|0;g=f;return g|0}}b=e;if((e|0)==0){f=vx(a)|0;g=f;return g|0}vA(b);h=d[b-4|0]|0;h=h|(d[b-3|0]|0)<<8;h=h|(d[b-2|0]|0)<<16;if(h>>>0>=a>>>0){f=e;g=f;return g|0}if((d[b-1|0]|0|0)==204){i=vy(a)|0}else{i=vx(a)|0}if((i|0)!=0){j=i;k=e;e=h;Ac(j|0,k|0,e)|0;Ae(i+h|0,0,a-h|0);vB(b);f=i;g=f;return g|0}else{f=0;g=f;return g|0}return 0}function vA(a){a=a|0;var b=0,e=0,f=0;b=i;if((c[30514]|0)==0){i=b;return}e=a;if((e|0)==0){i=b;return}do{if((d[e-1|0]|0|0)!=85){if((d[e-1|0]|0|0)==204){break}a=d[e-1|0]|0;uk(78240,(f=i,i=i+16|0,c[f>>2]=e,c[f+8>>2]=a,f)|0);i=f}}while(0);a=d[e-4|0]|0;a=a|(d[e-3|0]|0)<<8;a=a|(d[e-2|0]|0)<<16;if((d[e+a|0]|0|0)!=170){a=d[e-1|0]|0;uk(81928,(f=i,i=i+16|0,c[f>>2]=e,c[f+8>>2]=a,f)|0);i=f}i=b;return}function vB(a){a=a|0;var b=0;b=a;a=b;if((a|0)==0){return}if((c[30514]|0)!=0){vA(a);if((uI(b)|0)!=0){uF(a-4|0)}else{ze(a-4|0)}return}else{if((uI(b)|0)!=0){uF(a)}else{ze(a)}return}}function vC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=vF(a,b,c)|0;up(300);return d|0}function vD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;vE(a,b,c,d);up(64);return}function vE(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=b;b=e;e=f;f=g;g=c[h>>2]|0;i=c[h+4>>2]|0;j=h+8|0;while(1){k=f;f=k-1|0;if((k|0)==0){break}g=g+1|0;g=g&255;i=i+(d[j+g|0]|0)|0;i=i&255;k=d[j+g|0]|0;a[j+g|0]=a[j+i|0]|0;a[j+i|0]=k&255;k=e;e=k+1|0;l=b;b=l+1|0;a[l]=((d[k]|0)^(d[j+((d[j+g|0]|0)+(d[j+i|0]|0)&255)|0]|0))&255}c[h>>2]=g;c[h+4>>2]=i;return}function vF(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+256|0;h=g|0;j=e;e=f;f=b;if((c[30758]|0)==0){c[30758]=1;c[30756]=vG()|0;if((c[30756]|0)!=0){uj(81864,(b=i,i=i+8|0,c[b>>2]=c[30756],b)|0);i=b}}if((c[30756]|0)!=0){k=50;l=k;i=g;return l|0}if(e>>>0<5){k=44;l=k;i=g;return l|0}c[f+4>>2]=0;c[f>>2]=0;b=0;while(1){if((b|0)>=256){break}a[f+8+b|0]=b&255;b=b+1|0}b=0;while(1){if((b|0)>=256){break}a[h+b|0]=a[j+((b>>>0)%(e>>>0)|0)|0]|0;b=b+1|0}e=0;b=0;while(1){if((b|0)>=256){break}e=(e+(d[f+8+b|0]|0)+(d[h+b|0]|0)|0)%256|0;j=d[f+8+b|0]|0;a[f+8+b|0]=a[f+8+e|0]|0;a[f+8+e|0]=j&255;b=b+1|0}Ae(h|0,0,256);k=0;l=k;i=g;return l|0}function vG(){var a=0,b=0,c=0,d=0,e=0;a=i;i=i+280|0;b=a|0;c=a+264|0;vC(b,6536,5)|0;vD(b,c|0,6312,5);if((Af(c|0,7336,5)|0)!=0){d=72944;e=d;i=a;return e|0}vC(b,6536,5)|0;vD(b,c|0,c|0,5);if((Af(c|0,6312,5)|0)!=0){d=68512;e=d;i=a;return e|0}else{d=0;e=d;i=a;return e|0}return 0}function vH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=vO(a,b,c)|0;up(64);return d|0}function vI(a,b,c){a=a|0;b=b|0;c=c|0;vM(a,b,c);up(64);return}function vJ(a,b,c){a=a|0;b=b|0;c=c|0;vK(a,b,c);up(64);return}function vK(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=e;e=f;c[h>>2]=(d[e|0]|0)<<24|(d[e+1|0]|0)<<16|(d[e+2|0]|0)<<8|(d[e+3|0]|0);c[j>>2]=(d[e+4|0]|0)<<24|(d[e+5|0]|0)<<16|(d[e+6|0]|0)<<8|(d[e+7|0]|0);vL(b,h,j);a[k|0]=(c[h>>2]|0)>>>24&255;a[k+1|0]=(c[h>>2]|0)>>>16&255;a[k+2|0]=(c[h>>2]|0)>>>8&255;a[k+3|0]=c[h>>2]&255;a[k+4|0]=(c[j>>2]|0)>>>24&255;a[k+5|0]=(c[j>>2]|0)>>>16&255;a[k+6|0]=(c[j>>2]|0)>>>8&255;a[k+7|0]=c[j>>2]&255;i=g;return}function vL(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f|0;h=f+8|0;j=a;a=b;b=e;c[g>>2]=c[a>>2];c[h>>2]=c[b>>2];e=j+4096|0;k=j|0;l=j+1024|0;m=j+2048|0;n=j+3072|0;c[g>>2]=c[g>>2]^c[e+68>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+64>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+60>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+56>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+52>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+48>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+44>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+40>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+36>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+32>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+28>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+24>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+20>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+16>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+12>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+8>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+4>>2];c[h>>2]=c[h>>2]^c[e>>2];c[a>>2]=c[h>>2];c[b>>2]=c[g>>2];i=f;return}function vM(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=e;e=f;c[h>>2]=(d[e|0]|0)<<24|(d[e+1|0]|0)<<16|(d[e+2|0]|0)<<8|(d[e+3|0]|0);c[j>>2]=(d[e+4|0]|0)<<24|(d[e+5|0]|0)<<16|(d[e+6|0]|0)<<8|(d[e+7|0]|0);vN(b,h,j);a[k|0]=(c[h>>2]|0)>>>24&255;a[k+1|0]=(c[h>>2]|0)>>>16&255;a[k+2|0]=(c[h>>2]|0)>>>8&255;a[k+3|0]=c[h>>2]&255;a[k+4|0]=(c[j>>2]|0)>>>24&255;a[k+5|0]=(c[j>>2]|0)>>>16&255;a[k+6|0]=(c[j>>2]|0)>>>8&255;a[k+7|0]=c[j>>2]&255;i=g;return}function vN(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f|0;h=f+8|0;j=a;a=b;b=e;c[g>>2]=c[a>>2];c[h>>2]=c[b>>2];e=j+4096|0;k=j|0;l=j+1024|0;m=j+2048|0;n=j+3072|0;c[g>>2]=c[g>>2]^c[e>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+4>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+8>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+12>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+16>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+20>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+24>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+28>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+32>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+36>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+40>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+44>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+48>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+52>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+56>>2];c[h>>2]=c[h>>2]^((c[k+((d[g+3|0]|0)<<2)>>2]|0)+(c[l+((d[g+2|0]|0)<<2)>>2]|0)^c[m+((d[g+1|0]|0)<<2)>>2])+(c[n+((d[g|0]|0)<<2)>>2]|0);c[h>>2]=c[h>>2]^c[e+60>>2];c[g>>2]=c[g>>2]^((c[k+((d[h+3|0]|0)<<2)>>2]|0)+(c[l+((d[h+2|0]|0)<<2)>>2]|0)^c[m+((d[h+1|0]|0)<<2)>>2])+(c[n+((d[h|0]|0)<<2)>>2]|0);c[g>>2]=c[g>>2]^c[e+64>>2];c[h>>2]=c[h>>2]^c[e+68>>2];c[a>>2]=c[h>>2];c[b>>2]=c[g>>2];i=f;return}function vO(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+24|0;g=f|0;h=f+8|0;j=f+16|0;k=b;b=d;d=e;if((c[30754]|0)==0){c[30754]=1;c[30752]=vP()|0;if((c[30752]|0)!=0){uj(81856,(e=i,i=i+8|0,c[e>>2]=c[30752],e)|0);i=e}}if((c[30752]|0)!=0){l=50;m=l;i=f;return m|0}e=0;while(1){if((e|0)>=18){break}c[k+4096+(e<<2)>>2]=c[30784+(e<<2)>>2];e=e+1|0}e=0;while(1){if((e|0)>=256){break}c[k+(e<<2)>>2]=c[45192+(e<<2)>>2];c[k+1024+(e<<2)>>2]=c[44168+(e<<2)>>2];c[k+2048+(e<<2)>>2]=c[43144+(e<<2)>>2];c[k+3072+(e<<2)>>2]=c[42120+(e<<2)>>2];e=e+1|0}n=0;e=0;while(1){if((e|0)>=18){break}a[g+3|0]=a[b+n|0]|0;a[g+2|0]=a[b+(((n+1|0)>>>0)%(d>>>0)|0)|0]|0;a[g+1|0]=a[b+(((n+2|0)>>>0)%(d>>>0)|0)|0]|0;a[g|0]=a[b+(((n+3|0)>>>0)%(d>>>0)|0)|0]|0;o=k+4096+(e<<2)|0;c[o>>2]=c[o>>2]^c[g>>2];n=((n+4|0)>>>0)%(d>>>0)|0;e=e+1|0}c[j>>2]=0;c[h>>2]=0;e=0;while(1){if((e|0)>=18){break}vN(k,h,j);c[k+4096+(e<<2)>>2]=c[h>>2];c[k+4096+(e+1<<2)>>2]=c[j>>2];e=e+2|0}e=0;while(1){if((e|0)>=256){break}vN(k,h,j);c[k+(e<<2)>>2]=c[h>>2];c[k+(e+1<<2)>>2]=c[j>>2];e=e+2|0}e=0;while(1){if((e|0)>=256){break}vN(k,h,j);c[k+1024+(e<<2)>>2]=c[h>>2];c[k+1024+(e+1<<2)>>2]=c[j>>2];e=e+2|0}e=0;while(1){if((e|0)>=256){break}vN(k,h,j);c[k+2048+(e<<2)>>2]=c[h>>2];c[k+2048+(e+1<<2)>>2]=c[j>>2];e=e+2|0}e=0;while(1){if((e|0)>=256){break}vN(k,h,j);c[k+3072+(e<<2)>>2]=c[h>>2];c[k+3072+(e+1<<2)>>2]=c[j>>2];e=e+2|0}e=0;L6301:while(1){if((e|0)>=255){p=5166;break}n=e+1|0;while(1){if((n|0)>=256){break}if((c[k+(e<<2)>>2]|0)==(c[k+(n<<2)>>2]|0)){p=5161;break L6301}if((c[k+1024+(e<<2)>>2]|0)==(c[k+1024+(n<<2)>>2]|0)){p=5161;break L6301}if((c[k+2048+(e<<2)>>2]|0)==(c[k+2048+(n<<2)>>2]|0)){p=5161;break L6301}if((c[k+3072+(e<<2)>>2]|0)==(c[k+3072+(n<<2)>>2]|0)){p=5161;break L6301}n=n+1|0}e=e+1|0}if((p|0)==5161){l=43;m=l;i=f;return m|0}else if((p|0)==5166){l=0;m=l;i=f;return m|0}return 0}function vP(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;a=i;i=i+4216|0;b=a|0;c=a+4168|0;d=a+4184|0;e=a+4192|0;f=a+4200|0;g=a+4208|0;h=c;Ac(h|0,6384,9)|0;h=e;Ac(h|0,6368,8)|0;h=f;Ac(h|0,6560,8)|0;h=g;Ac(h|0,7384,8)|0;vH(b,72904,26)|0;vI(b,d|0,c|0);if((Af(d|0,68496,8)|0)!=0){j=65512;k=j;i=a;return k|0}vJ(b,d|0,d|0);if((Af(d|0,c|0,8)|0)!=0){j=63472;k=j;i=a;return k|0}vH(b,f|0,8)|0;vI(b,d|0,e|0);if((Af(d|0,g|0,8)|0)!=0){j=61824;k=j;i=a;return k|0}vJ(b,d|0,d|0);if((Af(d|0,e|0,8)|0)!=0){j=60344;k=j;i=a;return k|0}else{j=0;k=j;i=a;return k|0}return 0}function vQ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=b;b=d;d=a;do{if((b|0)!=16){if((b|0)==24){break}if((b|0)==32){break}g=44;h=g;i=e;return h|0}}while(0);if((c[30794]|0)==0){c[30794]=1;c[30792]=vT()|0;if((c[30792]|0)!=0){uj(82472,(a=i,i=i+8|0,c[a>>2]=c[30792],a)|0);i=a}}if((c[30792]|0)!=0){g=50;h=g;i=e;return h|0}else{c[d>>2]=b<<3;v$(c[d>>2]|0,f,d+4|0);up(544);g=0;h=g;i=e;return h|0}return 0}function vR(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;v0(c[e>>2]|0,d,e+4|0,b);up(340);return}function vS(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;v1(c[e>>2]|0,d,e+4|0,b);up(340);return}function vT(){var a=0,b=0,c=0,d=0,e=0;a=i;i=i+296|0;b=a|0;c=a+280|0;vQ(b,6520,16)|0;vR(b,c|0,6336);if((Af(c|0,7320,16)|0)!=0){d=80696;e=d;i=a;return e|0}vS(b,c|0,c|0);if((Af(c|0,6336,16)|0)!=0){d=79968;e=d;i=a;return e|0}vQ(b,6496,24)|0;vR(b,c|0,6336);if((Af(c|0,7304,16)|0)!=0){d=78952;e=d;i=a;return e|0}vS(b,c|0,c|0);if((Af(c|0,6336,16)|0)!=0){d=78056;e=d;i=a;return e|0}vQ(b,6416,32)|0;vR(b,c|0,6336);if((Af(c|0,7264,16)|0)!=0){d=77096;e=d;i=a;return e|0}vS(b,c|0,c|0);if((Af(c|0,6336,16)|0)!=0){d=76392;e=d;i=a;return e|0}else{d=0;e=d;i=a;return e|0}return 0}function vU(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+208|0;f=e|0;g=e+104|0;h=a;a=b;b=(d[h|0]|0)<<24^(d[h+1|0]|0)<<16^(d[h+2|0]|0)<<8^(d[h+3|0]|0);j=(d[h+4|0]|0)<<24^(d[h+5|0]|0)<<16^(d[h+6|0]|0)<<8^(d[h+7|0]|0);k=(d[h+8|0]|0)<<24^(d[h+9|0]|0)<<16^(d[h+10|0]|0)<<8^(d[h+11|0]|0);l=(d[h+12|0]|0)<<24^(d[h+13|0]|0)<<16^(d[h+14|0]|0)<<8^(d[h+15|0]|0);c[f>>2]=b;c[g>>2]=j;c[f+4>>2]=k;c[g+4>>2]=l;h=b;b=(b<<15)+(j>>>17)|0;j=(j<<15)+(k>>>17)|0;k=(k<<15)+(l>>>17)|0;l=(l<<15)+(h>>>17)|0;c[f+16>>2]=b;c[g+16>>2]=j;c[f+20>>2]=k;c[g+20>>2]=l;h=b;b=(b<<30)+(j>>>2)|0;j=(j<<30)+(k>>>2)|0;k=(k<<30)+(l>>>2)|0;l=(l<<30)+(h>>>2)|0;c[f+40>>2]=b;c[g+40>>2]=j;c[f+44>>2]=k;c[g+44>>2]=l;h=b;b=(b<<15)+(j>>>17)|0;j=(j<<15)+(k>>>17)|0;k=(k<<15)+(l>>>17)|0;l=(l<<15)+(h>>>17)|0;c[f+52>>2]=k;c[g+52>>2]=l;h=b;b=(b<<17)+(j>>>15)|0;j=(j<<17)+(k>>>15)|0;k=(k<<17)+(l>>>15)|0;l=(l<<17)+(h>>>15)|0;c[f+64>>2]=b;c[g+64>>2]=j;c[f+68>>2]=k;c[g+68>>2]=l;h=b;b=(b<<17)+(j>>>15)|0;j=(j<<17)+(k>>>15)|0;k=(k<<17)+(l>>>15)|0;l=(l<<17)+(h>>>15)|0;c[f+72>>2]=b;c[g+72>>2]=j;c[f+76>>2]=k;c[g+76>>2]=l;h=b;b=(b<<17)+(j>>>15)|0;j=(j<<17)+(k>>>15)|0;k=(k<<17)+(l>>>15)|0;l=(l<<17)+(h>>>15)|0;c[f+88>>2]=b;c[g+88>>2]=j;c[f+92>>2]=k;c[g+92>>2]=l;b=c[f>>2]|0;j=c[g>>2]|0;k=c[f+4>>2]|0;l=c[g+4>>2]|0;m=b^-1600231809;n=j^1003262091;o=m>>>16;p=n>>>16;h=c[52528+((n&255)<<2)>>2]^c[53552+((p>>>8&255)<<2)>>2]^c[51504+((p&255)<<2)>>2]^c[50480+((n>>>8&255)<<2)>>2];q=c[52528+((o>>>8&255)<<2)>>2]^c[53552+((o&255)<<2)>>2]^c[51504+((m>>>8&255)<<2)>>2]^c[50480+((m&255)<<2)>>2];h=h^q;q=(q>>>8)+(q<<24)|0;q=q^h;k=k^h;l=l^q;m=k^-1233459112;n=l^1286239154;o=m>>>16;p=n>>>16;b=c[52528+((n&255)<<2)>>2]^c[53552+((p>>>8&255)<<2)>>2]^c[51504+((p&255)<<2)>>2]^c[50480+((n>>>8&255)<<2)>>2];j=c[52528+((o>>>8&255)<<2)>>2]^c[53552+((o&255)<<2)>>2]^c[51504+((m>>>8&255)<<2)>>2]^c[50480+((m&255)<<2)>>2];b=b^j;j=(j>>>8)+(j<<24)|0;j=j^b;m=b^-957401297;n=j^-380665154;o=m>>>16;p=n>>>16;k=c[52528+((n&255)<<2)>>2]^c[53552+((p>>>8&255)<<2)>>2]^c[51504+((p&255)<<2)>>2]^c[50480+((n>>>8&255)<<2)>>2];l=c[52528+((o>>>8&255)<<2)>>2]^c[53552+((o&255)<<2)>>2]^c[51504+((m>>>8&255)<<2)>>2]^c[50480+((m&255)<<2)>>2];k=k^l;l=(l>>>8)+(l<<24)|0;l=l^k;k=k^h;l=l^q;m=k^1426019237;n=l^-237801700;o=m>>>16;p=n>>>16;h=c[52528+((n&255)<<2)>>2]^c[53552+((p>>>8&255)<<2)>>2]^c[51504+((p&255)<<2)>>2]^c[50480+((n>>>8&255)<<2)>>2];q=c[52528+((o>>>8&255)<<2)>>2]^c[53552+((o&255)<<2)>>2]^c[51504+((m>>>8&255)<<2)>>2]^c[50480+((m&255)<<2)>>2];h=h^q;q=(q>>>8)+(q<<24)|0;q=q^h;b=b^h;j=j^q;c[f+8>>2]=b;c[g+8>>2]=j;c[f+12>>2]=k;c[g+12>>2]=l;h=b;b=(b<<15)+(j>>>17)|0;j=(j<<15)+(k>>>17)|0;k=(k<<15)+(l>>>17)|0;l=(l<<15)+(h>>>17)|0;c[f+24>>2]=b;c[g+24>>2]=j;c[f+28>>2]=k;c[g+28>>2]=l;h=b;b=(b<<15)+(j>>>17)|0;j=(j<<15)+(k>>>17)|0;k=(k<<15)+(l>>>17)|0;l=(l<<15)+(h>>>17)|0;c[f+32>>2]=b;c[g+32>>2]=j;c[f+36>>2]=k;c[g+36>>2]=l;h=b;b=(b<<15)+(j>>>17)|0;j=(j<<15)+(k>>>17)|0;k=(k<<15)+(l>>>17)|0;l=(l<<15)+(h>>>17)|0;c[f+48>>2]=b;c[g+48>>2]=j;h=b;b=(b<<15)+(j>>>17)|0;j=(j<<15)+(k>>>17)|0;k=(k<<15)+(l>>>17)|0;l=(l<<15)+(h>>>17)|0;c[f+56>>2]=b;c[g+56>>2]=j;c[f+60>>2]=k;c[g+60>>2]=l;h=b;q=j;b=(j<<2)+(k>>>30)|0;j=(k<<2)+(l>>>30)|0;k=(l<<2)+(h>>>30)|0;l=(h<<2)+(q>>>30)|0;c[f+80>>2]=b;c[g+80>>2]=j;c[f+84>>2]=k;c[g+84>>2]=l;h=b;b=(b<<17)+(j>>>15)|0;j=(j<<17)+(k>>>15)|0;k=(k<<17)+(l>>>15)|0;l=(l<<17)+(h>>>15)|0;c[f+96>>2]=b;c[g+96>>2]=j;c[f+100>>2]=k;c[g+100>>2]=l;l=f+12|0;c[l>>2]=c[l>>2]^c[f+4>>2];l=g+12|0;c[l>>2]=c[l>>2]^c[g+4>>2];l=f+20|0;c[l>>2]=c[l>>2]^c[f+4>>2];l=g+20|0;c[l>>2]=c[l>>2]^c[g+4>>2];l=f+28|0;c[l>>2]=c[l>>2]^c[f+4>>2];l=g+28|0;c[l>>2]=c[l>>2]^c[g+4>>2];l=f+4|0;c[l>>2]=c[l>>2]^c[g+4>>2]&~c[g+36>>2];l=c[f+4>>2]&c[f+36>>2];k=g+4|0;c[k>>2]=c[k>>2]^(l<<1)+(l>>>31);k=f+44|0;c[k>>2]=c[k>>2]^c[f+4>>2];k=g+44|0;c[k>>2]=c[k>>2]^c[g+4>>2];k=f+52|0;c[k>>2]=c[k>>2]^c[f+4>>2];k=g+52|0;c[k>>2]=c[k>>2]^c[g+4>>2];k=f+60|0;c[k>>2]=c[k>>2]^c[f+4>>2];k=g+60|0;c[k>>2]=c[k>>2]^c[g+4>>2];k=f+4|0;c[k>>2]=c[k>>2]^c[g+4>>2]&~c[g+68>>2];l=c[f+4>>2]&c[f+68>>2];k=g+4|0;c[k>>2]=c[k>>2]^(l<<1)+(l>>>31);k=f+76|0;c[k>>2]=c[k>>2]^c[f+4>>2];k=g+76|0;c[k>>2]=c[k>>2]^c[g+4>>2];k=f+84|0;c[k>>2]=c[k>>2]^c[f+4>>2];k=g+84|0;c[k>>2]=c[k>>2]^c[g+4>>2];k=f+92|0;c[k>>2]=c[k>>2]^c[f+4>>2];k=g+92|0;c[k>>2]=c[k>>2]^c[g+4>>2];k=f+96|0;c[k>>2]=c[k>>2]^c[f+4>>2];k=g+96|0;c[k>>2]=c[k>>2]^c[g+4>>2];k=c[f+100>>2]|0;j=c[g+100>>2]|0;b=f+88|0;c[b>>2]=c[b>>2]^k;b=g+88|0;c[b>>2]=c[b>>2]^j;b=f+80|0;c[b>>2]=c[b>>2]^k;b=g+80|0;c[b>>2]=c[b>>2]^j;b=f+72|0;c[b>>2]=c[b>>2]^k;b=g+72|0;c[b>>2]=c[b>>2]^j;k=k^j&~c[g+64>>2];l=k&c[f+64>>2];j=j^(l<<1)+(l>>>31);b=f+56|0;c[b>>2]=c[b>>2]^k;b=g+56|0;c[b>>2]=c[b>>2]^j;b=f+48|0;c[b>>2]=c[b>>2]^k;b=g+48|0;c[b>>2]=c[b>>2]^j;b=f+40|0;c[b>>2]=c[b>>2]^k;b=g+40|0;c[b>>2]=c[b>>2]^j;k=k^j&~c[g+32>>2];l=k&c[f+32>>2];j=j^(l<<1)+(l>>>31);b=f+24|0;c[b>>2]=c[b>>2]^k;b=g+24|0;c[b>>2]=c[b>>2]^j;b=f+16|0;c[b>>2]=c[b>>2]^k;b=g+16|0;c[b>>2]=c[b>>2]^j;b=f+8|0;c[b>>2]=c[b>>2]^k;b=g+8|0;c[b>>2]=c[b>>2]^j;b=f|0;c[b>>2]=c[b>>2]^k;k=g|0;c[k>>2]=c[k>>2]^j;c[a>>2]=c[f>>2]^c[f+8>>2];c[a+4>>2]=c[g>>2]^c[g+8>>2];c[a+16>>2]=c[f+12>>2];c[a+20>>2]=c[g+12>>2];c[a+24>>2]=c[f+8>>2]^c[f+16>>2];c[a+28>>2]=c[g+8>>2]^c[g+16>>2];c[a+32>>2]=c[f+12>>2]^c[f+20>>2];c[a+36>>2]=c[g+12>>2]^c[g+20>>2];c[a+40>>2]=c[f+16>>2]^c[f+24>>2];c[a+44>>2]=c[g+16>>2]^c[g+24>>2];c[a+48>>2]=c[f+20>>2]^c[f+28>>2];c[a+52>>2]=c[g+20>>2]^c[g+28>>2];j=c[f+40>>2]^c[g+40>>2]&~c[g+32>>2];l=j&c[f+32>>2];k=c[g+40>>2]^(l<<1)+(l>>>31);c[a+56>>2]=c[f+24>>2]^j;c[a+60>>2]=c[g+24>>2]^k;c[a+64>>2]=c[f+32>>2];c[a+68>>2]=c[g+32>>2];c[a+72>>2]=c[f+36>>2];c[a+76>>2]=c[g+36>>2];j=c[f+28>>2]^c[g+28>>2]&~c[g+36>>2];l=j&c[f+36>>2];k=c[g+28>>2]^(l<<1)+(l>>>31);c[a+80>>2]=j^c[f+44>>2];c[a+84>>2]=k^c[g+44>>2];c[a+88>>2]=c[f+40>>2]^c[f+48>>2];c[a+92>>2]=c[g+40>>2]^c[g+48>>2];c[a+96>>2]=c[f+44>>2]^c[f+52>>2];c[a+100>>2]=c[g+44>>2]^c[g+52>>2];c[a+104>>2]=c[f+48>>2]^c[f+56>>2];c[a+108>>2]=c[g+48>>2]^c[g+56>>2];c[a+112>>2]=c[f+52>>2]^c[f+60>>2];c[a+116>>2]=c[g+52>>2]^c[g+60>>2];j=c[f+72>>2]^c[g+72>>2]&~c[g+64>>2];l=j&c[f+64>>2];k=c[g+72>>2]^(l<<1)+(l>>>31);c[a+120>>2]=c[f+56>>2]^j;c[a+124>>2]=c[g+56>>2]^k;c[a+128>>2]=c[f+64>>2];c[a+132>>2]=c[g+64>>2];c[a+136>>2]=c[f+68>>2];c[a+140>>2]=c[g+68>>2];j=c[f+60>>2]^c[g+60>>2]&~c[g+68>>2];l=j&c[f+68>>2];k=c[g+60>>2]^(l<<1)+(l>>>31);c[a+144>>2]=j^c[f+76>>2];c[a+148>>2]=k^c[g+76>>2];c[a+152>>2]=c[f+72>>2]^c[f+80>>2];c[a+156>>2]=c[g+72>>2]^c[g+80>>2];c[a+160>>2]=c[f+76>>2]^c[f+84>>2];c[a+164>>2]=c[g+76>>2]^c[g+84>>2];c[a+168>>2]=c[f+80>>2]^c[f+88>>2];c[a+172>>2]=c[g+80>>2]^c[g+88>>2];c[a+176>>2]=c[f+84>>2]^c[f+92>>2];c[a+180>>2]=c[g+84>>2]^c[g+92>>2];c[a+184>>2]=c[f+88>>2];c[a+188>>2]=c[g+88>>2];c[a+192>>2]=c[f+96>>2]^c[f+92>>2];c[a+196>>2]=c[g+96>>2]^c[g+92>>2];l=c[a+16>>2]^c[a+20>>2];l=(l<<8)+(l>>>24)|0;c[a+20>>2]=c[a+16>>2]^l;c[a+16>>2]=l;l=c[a+24>>2]^c[a+28>>2];l=(l<<8)+(l>>>24)|0;c[a+28>>2]=c[a+24>>2]^l;c[a+24>>2]=l;l=c[a+32>>2]^c[a+36>>2];l=(l<<8)+(l>>>24)|0;c[a+36>>2]=c[a+32>>2]^l;c[a+32>>2]=l;l=c[a+40>>2]^c[a+44>>2];l=(l<<8)+(l>>>24)|0;c[a+44>>2]=c[a+40>>2]^l;c[a+40>>2]=l;l=c[a+48>>2]^c[a+52>>2];l=(l<<8)+(l>>>24)|0;c[a+52>>2]=c[a+48>>2]^l;c[a+48>>2]=l;l=c[a+56>>2]^c[a+60>>2];l=(l<<8)+(l>>>24)|0;c[a+60>>2]=c[a+56>>2]^l;c[a+56>>2]=l;l=c[a+80>>2]^c[a+84>>2];l=(l<<8)+(l>>>24)|0;c[a+84>>2]=c[a+80>>2]^l;c[a+80>>2]=l;l=c[a+88>>2]^c[a+92>>2];l=(l<<8)+(l>>>24)|0;c[a+92>>2]=c[a+88>>2]^l;c[a+88>>2]=l;l=c[a+96>>2]^c[a+100>>2];l=(l<<8)+(l>>>24)|0;c[a+100>>2]=c[a+96>>2]^l;c[a+96>>2]=l;l=c[a+104>>2]^c[a+108>>2];l=(l<<8)+(l>>>24)|0;c[a+108>>2]=c[a+104>>2]^l;c[a+104>>2]=l;l=c[a+112>>2]^c[a+116>>2];l=(l<<8)+(l>>>24)|0;c[a+116>>2]=c[a+112>>2]^l;c[a+112>>2]=l;l=c[a+120>>2]^c[a+124>>2];l=(l<<8)+(l>>>24)|0;c[a+124>>2]=c[a+120>>2]^l;c[a+120>>2]=l;l=c[a+144>>2]^c[a+148>>2];l=(l<<8)+(l>>>24)|0;c[a+148>>2]=c[a+144>>2]^l;c[a+144>>2]=l;l=c[a+152>>2]^c[a+156>>2];l=(l<<8)+(l>>>24)|0;c[a+156>>2]=c[a+152>>2]^l;c[a+152>>2]=l;l=c[a+160>>2]^c[a+164>>2];l=(l<<8)+(l>>>24)|0;c[a+164>>2]=c[a+160>>2]^l;c[a+160>>2]=l;l=c[a+168>>2]^c[a+172>>2];l=(l<<8)+(l>>>24)|0;c[a+172>>2]=c[a+168>>2]^l;c[a+168>>2]=l;l=c[a+176>>2]^c[a+180>>2];l=(l<<8)+(l>>>24)|0;c[a+180>>2]=c[a+176>>2]^l;c[a+176>>2]=l;l=c[a+184>>2]^c[a+188>>2];l=(l<<8)+(l>>>24)|0;c[a+188>>2]=c[a+184>>2]^l;c[a+184>>2]=l;i=e;return}function vV(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+272|0;f=e|0;g=e+136|0;h=a;a=b;b=(d[h|0]|0)<<24^(d[h+1|0]|0)<<16^(d[h+2|0]|0)<<8^(d[h+3|0]|0);j=(d[h+4|0]|0)<<24^(d[h+5|0]|0)<<16^(d[h+6|0]|0)<<8^(d[h+7|0]|0);k=(d[h+8|0]|0)<<24^(d[h+9|0]|0)<<16^(d[h+10|0]|0)<<8^(d[h+11|0]|0);l=(d[h+12|0]|0)<<24^(d[h+13|0]|0)<<16^(d[h+14|0]|0)<<8^(d[h+15|0]|0);m=(d[h+16|0]|0)<<24^(d[h+17|0]|0)<<16^(d[h+18|0]|0)<<8^(d[h+19|0]|0);n=(d[h+20|0]|0)<<24^(d[h+21|0]|0)<<16^(d[h+22|0]|0)<<8^(d[h+23|0]|0);o=(d[h+24|0]|0)<<24^(d[h+25|0]|0)<<16^(d[h+26|0]|0)<<8^(d[h+27|0]|0);p=(d[h+28|0]|0)<<24^(d[h+29|0]|0)<<16^(d[h+30|0]|0)<<8^(d[h+31|0]|0);c[f>>2]=b;c[g>>2]=j;c[f+4>>2]=k;c[g+4>>2]=l;h=b;q=j;b=(j<<13)+(k>>>19)|0;j=(k<<13)+(l>>>19)|0;k=(l<<13)+(h>>>19)|0;l=(h<<13)+(q>>>19)|0;c[f+48>>2]=b;c[g+48>>2]=j;c[f+52>>2]=k;c[g+52>>2]=l;h=b;b=(b<<15)+(j>>>17)|0;j=(j<<15)+(k>>>17)|0;k=(k<<15)+(l>>>17)|0;l=(l<<15)+(h>>>17)|0;c[f+64>>2]=b;c[g+64>>2]=j;c[f+68>>2]=k;c[g+68>>2]=l;h=b;b=(b<<17)+(j>>>15)|0;j=(j<<17)+(k>>>15)|0;k=(k<<17)+(l>>>15)|0;l=(l<<17)+(h>>>15)|0;c[f+88>>2]=b;c[g+88>>2]=j;c[f+92>>2]=k;c[g+92>>2]=l;h=b;q=j;b=(j<<2)+(k>>>30)|0;j=(k<<2)+(l>>>30)|0;k=(l<<2)+(h>>>30)|0;l=(h<<2)+(q>>>30)|0;c[f+120>>2]=b;c[g+120>>2]=j;c[f+124>>2]=k;c[g+124>>2]=l;h=m;m=(m<<15)+(n>>>17)|0;n=(n<<15)+(o>>>17)|0;o=(o<<15)+(p>>>17)|0;p=(p<<15)+(h>>>17)|0;c[f+16>>2]=m;c[g+16>>2]=n;c[f+20>>2]=o;c[g+20>>2]=p;h=m;m=(m<<15)+(n>>>17)|0;n=(n<<15)+(o>>>17)|0;o=(o<<15)+(p>>>17)|0;p=(p<<15)+(h>>>17)|0;c[f+32>>2]=m;c[g+32>>2]=n;c[f+36>>2]=o;c[g+36>>2]=p;h=m;m=(m<<30)+(n>>>2)|0;n=(n<<30)+(o>>>2)|0;o=(o<<30)+(p>>>2)|0;p=(p<<30)+(h>>>2)|0;c[f+72>>2]=m;c[g+72>>2]=n;c[f+76>>2]=o;c[g+76>>2]=p;h=m;q=n;m=(n<<2)+(o>>>30)|0;n=(o<<2)+(p>>>30)|0;o=(p<<2)+(h>>>30)|0;p=(h<<2)+(q>>>30)|0;c[f+104>>2]=m;c[g+104>>2]=n;c[f+108>>2]=o;c[g+108>>2]=p;h=m;q=n;m=(n<<2)+(o>>>30)|0;n=(o<<2)+(p>>>30)|0;o=(p<<2)+(h>>>30)|0;p=(h<<2)+(q>>>30)|0;b=c[f>>2]^m;j=c[g>>2]^n;k=c[f+4>>2]^o;l=c[g+4>>2]^p;r=b^-1600231809;s=j^1003262091;t=r>>>16;u=s>>>16;h=c[52528+((s&255)<<2)>>2]^c[53552+((u>>>8&255)<<2)>>2]^c[51504+((u&255)<<2)>>2]^c[50480+((s>>>8&255)<<2)>>2];q=c[52528+((t>>>8&255)<<2)>>2]^c[53552+((t&255)<<2)>>2]^c[51504+((r>>>8&255)<<2)>>2]^c[50480+((r&255)<<2)>>2];h=h^q;q=(q>>>8)+(q<<24)|0;q=q^h;k=k^h;l=l^q;r=k^-1233459112;s=l^1286239154;t=r>>>16;u=s>>>16;b=c[52528+((s&255)<<2)>>2]^c[53552+((u>>>8&255)<<2)>>2]^c[51504+((u&255)<<2)>>2]^c[50480+((s>>>8&255)<<2)>>2];j=c[52528+((t>>>8&255)<<2)>>2]^c[53552+((t&255)<<2)>>2]^c[51504+((r>>>8&255)<<2)>>2]^c[50480+((r&255)<<2)>>2];b=b^j;j=(j>>>8)+(j<<24)|0;j=j^b;b=b^m;j=j^n;r=b^-957401297;s=j^-380665154;t=r>>>16;u=s>>>16;k=c[52528+((s&255)<<2)>>2]^c[53552+((u>>>8&255)<<2)>>2]^c[51504+((u&255)<<2)>>2]^c[50480+((s>>>8&255)<<2)>>2];l=c[52528+((t>>>8&255)<<2)>>2]^c[53552+((t&255)<<2)>>2]^c[51504+((r>>>8&255)<<2)>>2]^c[50480+((r&255)<<2)>>2];k=k^l;l=(l>>>8)+(l<<24)|0;l=l^k;k=k^(h^o);l=l^(q^p);r=k^1426019237;s=l^-237801700;t=r>>>16;u=s>>>16;h=c[52528+((s&255)<<2)>>2]^c[53552+((u>>>8&255)<<2)>>2]^c[51504+((u&255)<<2)>>2]^c[50480+((s>>>8&255)<<2)>>2];q=c[52528+((t>>>8&255)<<2)>>2]^c[53552+((t&255)<<2)>>2]^c[51504+((r>>>8&255)<<2)>>2]^c[50480+((r&255)<<2)>>2];h=h^q;q=(q>>>8)+(q<<24)|0;q=q^h;b=b^h;j=j^q;m=m^b;n=n^j;o=o^k;p=p^l;r=m^283453434;s=n^-563598051;t=r>>>16;u=s>>>16;h=c[52528+((s&255)<<2)>>2]^c[53552+((u>>>8&255)<<2)>>2]^c[51504+((u&255)<<2)>>2]^c[50480+((s>>>8&255)<<2)>>2];q=c[52528+((t>>>8&255)<<2)>>2]^c[53552+((t&255)<<2)>>2]^c[51504+((r>>>8&255)<<2)>>2]^c[50480+((r&255)<<2)>>2];h=h^q;q=(q>>>8)+(q<<24)|0;q=q^h;o=o^h;p=p^q;r=o^-1336506174;s=p^-1276722691;t=r>>>16;u=s>>>16;h=c[52528+((s&255)<<2)>>2]^c[53552+((u>>>8&255)<<2)>>2]^c[51504+((u&255)<<2)>>2]^c[50480+((s>>>8&255)<<2)>>2];q=c[52528+((t>>>8&255)<<2)>>2]^c[53552+((t&255)<<2)>>2]^c[51504+((r>>>8&255)<<2)>>2]^c[50480+((r&255)<<2)>>2];h=h^q;q=(q>>>8)+(q<<24)|0;q=q^h;m=m^h;n=n^q;h=b;b=(b<<15)+(j>>>17)|0;j=(j<<15)+(k>>>17)|0;k=(k<<15)+(l>>>17)|0;l=(l<<15)+(h>>>17)|0;c[f+24>>2]=b;c[g+24>>2]=j;c[f+28>>2]=k;c[g+28>>2]=l;h=b;b=(b<<30)+(j>>>2)|0;j=(j<<30)+(k>>>2)|0;k=(k<<30)+(l>>>2)|0;l=(l<<30)+(h>>>2)|0;c[f+56>>2]=b;c[g+56>>2]=j;c[f+60>>2]=k;c[g+60>>2]=l;c[f+96>>2]=j;c[g+96>>2]=k;c[f+100>>2]=l;c[g+100>>2]=b;h=b;q=j;b=(j<<17)+(k>>>15)|0;j=(k<<17)+(l>>>15)|0;k=(l<<17)+(h>>>15)|0;l=(h<<17)+(q>>>15)|0;c[f+112>>2]=b;c[g+112>>2]=j;c[f+116>>2]=k;c[g+116>>2]=l;c[f+8>>2]=m;c[g+8>>2]=n;c[f+12>>2]=o;c[g+12>>2]=p;h=m;m=(m<<30)+(n>>>2)|0;n=(n<<30)+(o>>>2)|0;o=(o<<30)+(p>>>2)|0;p=(p<<30)+(h>>>2)|0;c[f+40>>2]=m;c[g+40>>2]=n;c[f+44>>2]=o;c[g+44>>2]=p;h=m;m=(m<<30)+(n>>>2)|0;n=(n<<30)+(o>>>2)|0;o=(o<<30)+(p>>>2)|0;p=(p<<30)+(h>>>2)|0;c[f+80>>2]=m;c[g+80>>2]=n;c[f+84>>2]=o;c[g+84>>2]=p;h=m;q=n;m=(n<<19)+(o>>>13)|0;n=(o<<19)+(p>>>13)|0;o=(p<<19)+(h>>>13)|0;p=(h<<19)+(q>>>13)|0;c[f+128>>2]=m;c[g+128>>2]=n;c[f+132>>2]=o;c[g+132>>2]=p;p=f+12|0;c[p>>2]=c[p>>2]^c[f+4>>2];p=g+12|0;c[p>>2]=c[p>>2]^c[g+4>>2];p=f+20|0;c[p>>2]=c[p>>2]^c[f+4>>2];p=g+20|0;c[p>>2]=c[p>>2]^c[g+4>>2];p=f+28|0;c[p>>2]=c[p>>2]^c[f+4>>2];p=g+28|0;c[p>>2]=c[p>>2]^c[g+4>>2];p=f+4|0;c[p>>2]=c[p>>2]^c[g+4>>2]&~c[g+36>>2];p=c[f+4>>2]&c[f+36>>2];o=g+4|0;c[o>>2]=c[o>>2]^(p<<1)+(p>>>31);o=f+44|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+44|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=f+52|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+52|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=f+60|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+60|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=f+4|0;c[o>>2]=c[o>>2]^c[g+4>>2]&~c[g+68>>2];p=c[f+4>>2]&c[f+68>>2];o=g+4|0;c[o>>2]=c[o>>2]^(p<<1)+(p>>>31);o=f+76|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+76|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=f+84|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+84|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=f+92|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+92|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=f+4|0;c[o>>2]=c[o>>2]^c[g+4>>2]&~c[g+100>>2];p=c[f+4>>2]&c[f+100>>2];o=g+4|0;c[o>>2]=c[o>>2]^(p<<1)+(p>>>31);o=f+108|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+108|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=f+116|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+116|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=f+124|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+124|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=f+128|0;c[o>>2]=c[o>>2]^c[f+4>>2];o=g+128|0;c[o>>2]=c[o>>2]^c[g+4>>2];o=c[f+132>>2]|0;n=c[g+132>>2]|0;m=f+120|0;c[m>>2]=c[m>>2]^o;m=g+120|0;c[m>>2]=c[m>>2]^n;m=f+112|0;c[m>>2]=c[m>>2]^o;m=g+112|0;c[m>>2]=c[m>>2]^n;m=f+104|0;c[m>>2]=c[m>>2]^o;m=g+104|0;c[m>>2]=c[m>>2]^n;o=o^n&~c[g+96>>2];p=o&c[f+96>>2];n=n^(p<<1)+(p>>>31);m=f+88|0;c[m>>2]=c[m>>2]^o;m=g+88|0;c[m>>2]=c[m>>2]^n;m=f+80|0;c[m>>2]=c[m>>2]^o;m=g+80|0;c[m>>2]=c[m>>2]^n;m=f+72|0;c[m>>2]=c[m>>2]^o;m=g+72|0;c[m>>2]=c[m>>2]^n;o=o^n&~c[g+64>>2];p=o&c[f+64>>2];n=n^(p<<1)+(p>>>31);m=f+56|0;c[m>>2]=c[m>>2]^o;m=g+56|0;c[m>>2]=c[m>>2]^n;m=f+48|0;c[m>>2]=c[m>>2]^o;m=g+48|0;c[m>>2]=c[m>>2]^n;m=f+40|0;c[m>>2]=c[m>>2]^o;m=g+40|0;c[m>>2]=c[m>>2]^n;o=o^n&~c[g+32>>2];p=o&c[f+32>>2];n=n^(p<<1)+(p>>>31);m=f+24|0;c[m>>2]=c[m>>2]^o;m=g+24|0;c[m>>2]=c[m>>2]^n;m=f+16|0;c[m>>2]=c[m>>2]^o;m=g+16|0;c[m>>2]=c[m>>2]^n;m=f+8|0;c[m>>2]=c[m>>2]^o;m=g+8|0;c[m>>2]=c[m>>2]^n;m=f|0;c[m>>2]=c[m>>2]^o;o=g|0;c[o>>2]=c[o>>2]^n;c[a>>2]=c[f>>2]^c[f+8>>2];c[a+4>>2]=c[g>>2]^c[g+8>>2];c[a+16>>2]=c[f+12>>2];c[a+20>>2]=c[g+12>>2];c[a+24>>2]=c[f+8>>2]^c[f+16>>2];c[a+28>>2]=c[g+8>>2]^c[g+16>>2];c[a+32>>2]=c[f+12>>2]^c[f+20>>2];c[a+36>>2]=c[g+12>>2]^c[g+20>>2];c[a+40>>2]=c[f+16>>2]^c[f+24>>2];c[a+44>>2]=c[g+16>>2]^c[g+24>>2];c[a+48>>2]=c[f+20>>2]^c[f+28>>2];c[a+52>>2]=c[g+20>>2]^c[g+28>>2];n=c[f+40>>2]^c[g+40>>2]&~c[g+32>>2];p=n&c[f+32>>2];o=c[g+40>>2]^(p<<1)+(p>>>31);c[a+56>>2]=c[f+24>>2]^n;c[a+60>>2]=c[g+24>>2]^o;c[a+64>>2]=c[f+32>>2];c[a+68>>2]=c[g+32>>2];c[a+72>>2]=c[f+36>>2];c[a+76>>2]=c[g+36>>2];n=c[f+28>>2]^c[g+28>>2]&~c[g+36>>2];p=n&c[f+36>>2];o=c[g+28>>2]^(p<<1)+(p>>>31);c[a+80>>2]=n^c[f+44>>2];c[a+84>>2]=o^c[g+44>>2];c[a+88>>2]=c[f+40>>2]^c[f+48>>2];c[a+92>>2]=c[g+40>>2]^c[g+48>>2];c[a+96>>2]=c[f+44>>2]^c[f+52>>2];c[a+100>>2]=c[g+44>>2]^c[g+52>>2];c[a+104>>2]=c[f+48>>2]^c[f+56>>2];c[a+108>>2]=c[g+48>>2]^c[g+56>>2];c[a+112>>2]=c[f+52>>2]^c[f+60>>2];c[a+116>>2]=c[g+52>>2]^c[g+60>>2];n=c[f+72>>2]^c[g+72>>2]&~c[g+64>>2];p=n&c[f+64>>2];o=c[g+72>>2]^(p<<1)+(p>>>31);c[a+120>>2]=c[f+56>>2]^n;c[a+124>>2]=c[g+56>>2]^o;c[a+128>>2]=c[f+64>>2];c[a+132>>2]=c[g+64>>2];c[a+136>>2]=c[f+68>>2];c[a+140>>2]=c[g+68>>2];n=c[f+60>>2]^c[g+60>>2]&~c[g+68>>2];p=n&c[f+68>>2];o=c[g+60>>2]^(p<<1)+(p>>>31);c[a+144>>2]=n^c[f+76>>2];c[a+148>>2]=o^c[g+76>>2];c[a+152>>2]=c[f+72>>2]^c[f+80>>2];c[a+156>>2]=c[g+72>>2]^c[g+80>>2];c[a+160>>2]=c[f+76>>2]^c[f+84>>2];c[a+164>>2]=c[g+76>>2]^c[g+84>>2];c[a+168>>2]=c[f+80>>2]^c[f+88>>2];c[a+172>>2]=c[g+80>>2]^c[g+88>>2];c[a+176>>2]=c[f+84>>2]^c[f+92>>2];c[a+180>>2]=c[g+84>>2]^c[g+92>>2];n=c[f+104>>2]^c[g+104>>2]&~c[g+96>>2];p=n&c[f+96>>2];o=c[g+104>>2]^(p<<1)+(p>>>31);c[a+184>>2]=c[f+88>>2]^n;c[a+188>>2]=c[g+88>>2]^o;c[a+192>>2]=c[f+96>>2];c[a+196>>2]=c[g+96>>2];c[a+200>>2]=c[f+100>>2];c[a+204>>2]=c[g+100>>2];n=c[f+92>>2]^c[g+92>>2]&~c[g+100>>2];p=n&c[f+100>>2];o=c[g+92>>2]^(p<<1)+(p>>>31);c[a+208>>2]=n^c[f+108>>2];c[a+212>>2]=o^c[g+108>>2];c[a+216>>2]=c[f+104>>2]^c[f+112>>2];c[a+220>>2]=c[g+104>>2]^c[g+112>>2];c[a+224>>2]=c[f+108>>2]^c[f+116>>2];c[a+228>>2]=c[g+108>>2]^c[g+116>>2];c[a+232>>2]=c[f+112>>2]^c[f+120>>2];c[a+236>>2]=c[g+112>>2]^c[g+120>>2];c[a+240>>2]=c[f+116>>2]^c[f+124>>2];c[a+244>>2]=c[g+116>>2]^c[g+124>>2];c[a+248>>2]=c[f+120>>2];c[a+252>>2]=c[g+120>>2];c[a+256>>2]=c[f+128>>2]^c[f+124>>2];c[a+260>>2]=c[g+128>>2]^c[g+124>>2];p=c[a+16>>2]^c[a+20>>2];p=(p<<8)+(p>>>24)|0;c[a+20>>2]=c[a+16>>2]^p;c[a+16>>2]=p;p=c[a+24>>2]^c[a+28>>2];p=(p<<8)+(p>>>24)|0;c[a+28>>2]=c[a+24>>2]^p;c[a+24>>2]=p;p=c[a+32>>2]^c[a+36>>2];p=(p<<8)+(p>>>24)|0;c[a+36>>2]=c[a+32>>2]^p;c[a+32>>2]=p;p=c[a+40>>2]^c[a+44>>2];p=(p<<8)+(p>>>24)|0;c[a+44>>2]=c[a+40>>2]^p;c[a+40>>2]=p;p=c[a+48>>2]^c[a+52>>2];p=(p<<8)+(p>>>24)|0;c[a+52>>2]=c[a+48>>2]^p;c[a+48>>2]=p;p=c[a+56>>2]^c[a+60>>2];p=(p<<8)+(p>>>24)|0;c[a+60>>2]=c[a+56>>2]^p;c[a+56>>2]=p;p=c[a+80>>2]^c[a+84>>2];p=(p<<8)+(p>>>24)|0;c[a+84>>2]=c[a+80>>2]^p;c[a+80>>2]=p;p=c[a+88>>2]^c[a+92>>2];p=(p<<8)+(p>>>24)|0;c[a+92>>2]=c[a+88>>2]^p;c[a+88>>2]=p;p=c[a+96>>2]^c[a+100>>2];p=(p<<8)+(p>>>24)|0;c[a+100>>2]=c[a+96>>2]^p;c[a+96>>2]=p;p=c[a+104>>2]^c[a+108>>2];p=(p<<8)+(p>>>24)|0;c[a+108>>2]=c[a+104>>2]^p;c[a+104>>2]=p;p=c[a+112>>2]^c[a+116>>2];p=(p<<8)+(p>>>24)|0;c[a+116>>2]=c[a+112>>2]^p;c[a+112>>2]=p;p=c[a+120>>2]^c[a+124>>2];p=(p<<8)+(p>>>24)|0;c[a+124>>2]=c[a+120>>2]^p;c[a+120>>2]=p;p=c[a+144>>2]^c[a+148>>2];p=(p<<8)+(p>>>24)|0;c[a+148>>2]=c[a+144>>2]^p;c[a+144>>2]=p;p=c[a+152>>2]^c[a+156>>2];p=(p<<8)+(p>>>24)|0;c[a+156>>2]=c[a+152>>2]^p;c[a+152>>2]=p;p=c[a+160>>2]^c[a+164>>2];p=(p<<8)+(p>>>24)|0;c[a+164>>2]=c[a+160>>2]^p;c[a+160>>2]=p;p=c[a+168>>2]^c[a+172>>2];p=(p<<8)+(p>>>24)|0;c[a+172>>2]=c[a+168>>2]^p;c[a+168>>2]=p;p=c[a+176>>2]^c[a+180>>2];p=(p<<8)+(p>>>24)|0;c[a+180>>2]=c[a+176>>2]^p;c[a+176>>2]=p;p=c[a+184>>2]^c[a+188>>2];p=(p<<8)+(p>>>24)|0;c[a+188>>2]=c[a+184>>2]^p;c[a+184>>2]=p;p=c[a+208>>2]^c[a+212>>2];p=(p<<8)+(p>>>24)|0;c[a+212>>2]=c[a+208>>2]^p;c[a+208>>2]=p;p=c[a+216>>2]^c[a+220>>2];p=(p<<8)+(p>>>24)|0;c[a+220>>2]=c[a+216>>2]^p;c[a+216>>2]=p;p=c[a+224>>2]^c[a+228>>2];p=(p<<8)+(p>>>24)|0;c[a+228>>2]=c[a+224>>2]^p;c[a+224>>2]=p;p=c[a+232>>2]^c[a+236>>2];p=(p<<8)+(p>>>24)|0;c[a+236>>2]=c[a+232>>2]^p;c[a+232>>2]=p;p=c[a+240>>2]^c[a+244>>2];p=(p<<8)+(p>>>24)|0;c[a+244>>2]=c[a+240>>2]^p;c[a+240>>2]=p;p=c[a+248>>2]^c[a+252>>2];p=(p<<8)+(p>>>24)|0;c[a+252>>2]=c[a+248>>2]^p;c[a+248>>2]=p;i=e;return}function vW(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+64|0;f=e|0;g=e+32|0;h=e+40|0;j=e+48|0;k=e+56|0;l=b;b=d;d=f;m=l;Ac(d|0,m|0,24)|0;m=g;d=l+16|0;a[m]=a[d]|0;a[m+1|0]=a[d+1|0]|0;a[m+2|0]=a[d+2|0]|0;a[m+3|0]=a[d+3|0]|0;d=h;m=l+20|0;a[d]=a[m]|0;a[d+1|0]=a[m+1|0]|0;a[d+2|0]=a[m+2|0]|0;a[d+3|0]=a[m+3|0]|0;c[j>>2]=~c[g>>2];c[k>>2]=~c[h>>2];h=f+24|0;g=j;a[h]=a[g]|0;a[h+1|0]=a[g+1|0]|0;a[h+2|0]=a[g+2|0]|0;a[h+3|0]=a[g+3|0]|0;g=f+28|0;h=k;a[g]=a[h]|0;a[g+1|0]=a[h+1|0]|0;a[g+2|0]=a[h+2|0]|0;a[g+3|0]=a[h+3|0]|0;vV(f|0,b);i=e;return}function vX(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;b=a|0;c[b>>2]=c[b>>2]^c[d>>2];b=a+4|0;c[b>>2]=c[b>>2]^c[d+4>>2];b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+16>>2];b=b^c[d+20>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+24>>2];b=b^c[d+28>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+32>>2];b=b^c[d+36>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+40>>2];b=b^c[d+44>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+48>>2];b=b^c[d+52>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+56>>2];b=b^c[d+60>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;f=c[d+64>>2]|0;f=f&c[a>>2];g=a+4|0;c[g>>2]=c[g>>2]^(f<<1)+(f>>>31);g=c[d+68>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+76>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+72>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+80>>2];b=b^c[d+84>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+88>>2];b=b^c[d+92>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+96>>2];b=b^c[d+100>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+104>>2];b=b^c[d+108>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+112>>2];b=b^c[d+116>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+120>>2];b=b^c[d+124>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;f=c[d+128>>2]|0;f=f&c[a>>2];h=a+4|0;c[h>>2]=c[h>>2]^(f<<1)+(f>>>31);g=c[d+132>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+140>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+136>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+144>>2];b=b^c[d+148>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+152>>2];b=b^c[d+156>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+160>>2];b=b^c[d+164>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+168>>2];b=b^c[d+172>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+176>>2];b=b^c[d+180>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+184>>2];b=b^c[d+188>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;b=a+4|0;c[b>>2]=c[b>>2]^e;e=a+8|0;c[e>>2]=c[e>>2]^c[d+192>>2];e=a+12|0;c[e>>2]=c[e>>2]^c[d+196>>2];f=c[a>>2]|0;g=c[a+4>>2]|0;c[a>>2]=c[a+8>>2];c[a+4>>2]=c[a+12>>2];c[a+8>>2]=f;c[a+12>>2]=g;return}function vY(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;b=a|0;c[b>>2]=c[b>>2]^c[d+192>>2];b=a+4|0;c[b>>2]=c[b>>2]^c[d+196>>2];b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+184>>2];b=b^c[d+188>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+176>>2];b=b^c[d+180>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+168>>2];b=b^c[d+172>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+160>>2];b=b^c[d+164>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+152>>2];b=b^c[d+156>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+144>>2];b=b^c[d+148>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;f=c[d+136>>2]|0;f=f&c[a>>2];g=a+4|0;c[g>>2]=c[g>>2]^(f<<1)+(f>>>31);g=c[d+140>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+132>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+128>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+120>>2];b=b^c[d+124>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+112>>2];b=b^c[d+116>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+104>>2];b=b^c[d+108>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+96>>2];b=b^c[d+100>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+88>>2];b=b^c[d+92>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+80>>2];b=b^c[d+84>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;f=c[d+72>>2]|0;f=f&c[a>>2];h=a+4|0;c[h>>2]=c[h>>2]^(f<<1)+(f>>>31);g=c[d+76>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+68>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+64>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+56>>2];b=b^c[d+60>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+48>>2];b=b^c[d+52>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+40>>2];b=b^c[d+44>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+32>>2];b=b^c[d+36>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+24>>2];b=b^c[d+28>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+16>>2];b=b^c[d+20>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;b=a+4|0;c[b>>2]=c[b>>2]^e;e=a+8|0;c[e>>2]=c[e>>2]^c[d>>2];e=a+12|0;c[e>>2]=c[e>>2]^c[d+4>>2];f=c[a>>2]|0;g=c[a+4>>2]|0;c[a>>2]=c[a+8>>2];c[a+4>>2]=c[a+12>>2];c[a+8>>2]=f;c[a+12>>2]=g;return}function vZ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;b=a|0;c[b>>2]=c[b>>2]^c[d>>2];b=a+4|0;c[b>>2]=c[b>>2]^c[d+4>>2];b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+16>>2];b=b^c[d+20>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+24>>2];b=b^c[d+28>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+32>>2];b=b^c[d+36>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+40>>2];b=b^c[d+44>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+48>>2];b=b^c[d+52>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+56>>2];b=b^c[d+60>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;f=c[d+64>>2]|0;f=f&c[a>>2];g=a+4|0;c[g>>2]=c[g>>2]^(f<<1)+(f>>>31);g=c[d+68>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+76>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+72>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+80>>2];b=b^c[d+84>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+88>>2];b=b^c[d+92>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+96>>2];b=b^c[d+100>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+104>>2];b=b^c[d+108>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+112>>2];b=b^c[d+116>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+120>>2];b=b^c[d+124>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;f=c[d+128>>2]|0;f=f&c[a>>2];h=a+4|0;c[h>>2]=c[h>>2]^(f<<1)+(f>>>31);g=c[d+132>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+140>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+136>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+144>>2];b=b^c[d+148>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+152>>2];b=b^c[d+156>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+160>>2];b=b^c[d+164>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+168>>2];b=b^c[d+172>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+176>>2];b=b^c[d+180>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+184>>2];b=b^c[d+188>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;f=c[d+192>>2]|0;f=f&c[a>>2];h=a+4|0;c[h>>2]=c[h>>2]^(f<<1)+(f>>>31);g=c[d+196>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+204>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+200>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+208>>2];b=b^c[d+212>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+216>>2];b=b^c[d+220>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+224>>2];b=b^c[d+228>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+232>>2];b=b^c[d+236>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+240>>2];b=b^c[d+244>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+248>>2];b=b^c[d+252>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;b=a+4|0;c[b>>2]=c[b>>2]^e;e=a+8|0;c[e>>2]=c[e>>2]^c[d+256>>2];e=a+12|0;c[e>>2]=c[e>>2]^c[d+260>>2];f=c[a>>2]|0;g=c[a+4>>2]|0;c[a>>2]=c[a+8>>2];c[a+4>>2]=c[a+12>>2];c[a+8>>2]=f;c[a+12>>2]=g;return}function v_(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;b=a|0;c[b>>2]=c[b>>2]^c[d+256>>2];b=a+4|0;c[b>>2]=c[b>>2]^c[d+260>>2];b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+248>>2];b=b^c[d+252>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+240>>2];b=b^c[d+244>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+232>>2];b=b^c[d+236>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+224>>2];b=b^c[d+228>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+216>>2];b=b^c[d+220>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a+8|0;c[f>>2]=c[f>>2]^b;f=a+12|0;c[f>>2]=c[f>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+208>>2];b=b^c[d+212>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;f=a|0;c[f>>2]=c[f>>2]^b;f=a+4|0;c[f>>2]=c[f>>2]^e;f=c[d+200>>2]|0;f=f&c[a>>2];g=a+4|0;c[g>>2]=c[g>>2]^(f<<1)+(f>>>31);g=c[d+204>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+196>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+192>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+184>>2];b=b^c[d+188>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+176>>2];b=b^c[d+180>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+168>>2];b=b^c[d+172>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+160>>2];b=b^c[d+164>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+152>>2];b=b^c[d+156>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+144>>2];b=b^c[d+148>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;f=c[d+136>>2]|0;f=f&c[a>>2];h=a+4|0;c[h>>2]=c[h>>2]^(f<<1)+(f>>>31);g=c[d+140>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+132>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+128>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+120>>2];b=b^c[d+124>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+112>>2];b=b^c[d+116>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+104>>2];b=b^c[d+108>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+96>>2];b=b^c[d+100>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+88>>2];b=b^c[d+92>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+80>>2];b=b^c[d+84>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;f=c[d+72>>2]|0;f=f&c[a>>2];h=a+4|0;c[h>>2]=c[h>>2]^(f<<1)+(f>>>31);g=c[d+76>>2]|0;g=g|c[a+4>>2];h=a|0;c[h>>2]=c[h>>2]^g;e=c[d+68>>2]|0;e=e|c[a+12>>2];h=a+8|0;c[h>>2]=c[h>>2]^e;b=c[d+64>>2]|0;b=b&c[a+8>>2];h=a+12|0;c[h>>2]=c[h>>2]^(b<<1)+(b>>>31);b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+56>>2];b=b^c[d+60>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+48>>2];b=b^c[d+52>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+40>>2];b=b^c[d+44>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+32>>2];b=b^c[d+36>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;h=a+4|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+4>>2]&255)<<2)>>2]^c[53552+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a>>2]&255)<<2)>>2];e=e^c[d+24>>2];b=b^c[d+28>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a+8|0;c[h>>2]=c[h>>2]^b;h=a+12|0;c[h>>2]=c[h>>2]^e;b=c[52528+((c[a+12>>2]&255)<<2)>>2]^c[53552+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[51504+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[50480+(((c[a+12>>2]|0)>>>8&255)<<2)>>2];e=c[52528+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[53552+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[51504+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[50480+((c[a+8>>2]&255)<<2)>>2];e=e^c[d+16>>2];b=b^c[d+20>>2];b=b^e;e=(e>>>8)+(e<<24)|0;e=e^b;h=a|0;c[h>>2]=c[h>>2]^b;b=a+4|0;c[b>>2]=c[b>>2]^e;e=a+8|0;c[e>>2]=c[e>>2]^c[d>>2];e=a+12|0;c[e>>2]=c[e>>2]^c[d+4>>2];f=c[a>>2]|0;g=c[a+4>>2]|0;c[a>>2]=c[a+8>>2];c[a+4>>2]=c[a+12>>2];c[a+8>>2]=f;c[a+12>>2]=g;return}function v$(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=b;b=c;c=a;if((c|0)==192){vW(d,b);return}else if((c|0)==128){vU(d,b);return}else if((c|0)==256){vV(d,b);return}else{return}}function v0(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h|0;k=e;e=f;f=g;c[j>>2]=(d[k|0]|0)<<24^(d[k+1|0]|0)<<16^(d[k+2|0]|0)<<8^(d[k+3|0]|0);c[j+4>>2]=(d[k+4|0]|0)<<24^(d[k+5|0]|0)<<16^(d[k+6|0]|0)<<8^(d[k+7|0]|0);c[j+8>>2]=(d[k+8|0]|0)<<24^(d[k+9|0]|0)<<16^(d[k+10|0]|0)<<8^(d[k+11|0]|0);c[j+12>>2]=(d[k+12|0]|0)<<24^(d[k+13|0]|0)<<16^(d[k+14|0]|0)<<8^(d[k+15|0]|0);k=b;if((k|0)==128){vX(e,j|0)}else if((k|0)==192|(k|0)==256){vZ(e,j|0)}a[f|0]=(c[j>>2]|0)>>>24&255;a[f+1|0]=(c[j>>2]|0)>>>16&255;a[f+2|0]=(c[j>>2]|0)>>>8&255;a[f+3|0]=c[j>>2]&255;a[f+4|0]=(c[j+4>>2]|0)>>>24&255;a[f+5|0]=(c[j+4>>2]|0)>>>16&255;a[f+6|0]=(c[j+4>>2]|0)>>>8&255;a[f+7|0]=c[j+4>>2]&255;a[f+8|0]=(c[j+8>>2]|0)>>>24&255;a[f+9|0]=(c[j+8>>2]|0)>>>16&255;a[f+10|0]=(c[j+8>>2]|0)>>>8&255;a[f+11|0]=c[j+8>>2]&255;a[f+12|0]=(c[j+12>>2]|0)>>>24&255;a[f+13|0]=(c[j+12>>2]|0)>>>16&255;a[f+14|0]=(c[j+12>>2]|0)>>>8&255;a[f+15|0]=c[j+12>>2]&255;i=h;return}function v1(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h|0;k=e;e=f;f=g;c[j>>2]=(d[k|0]|0)<<24^(d[k+1|0]|0)<<16^(d[k+2|0]|0)<<8^(d[k+3|0]|0);c[j+4>>2]=(d[k+4|0]|0)<<24^(d[k+5|0]|0)<<16^(d[k+6|0]|0)<<8^(d[k+7|0]|0);c[j+8>>2]=(d[k+8|0]|0)<<24^(d[k+9|0]|0)<<16^(d[k+10|0]|0)<<8^(d[k+11|0]|0);c[j+12>>2]=(d[k+12|0]|0)<<24^(d[k+13|0]|0)<<16^(d[k+14|0]|0)<<8^(d[k+15|0]|0);k=b;if((k|0)==192|(k|0)==256){v_(e,j|0)}else if((k|0)==128){vY(e,j|0)}a[f|0]=(c[j>>2]|0)>>>24&255;a[f+1|0]=(c[j>>2]|0)>>>16&255;a[f+2|0]=(c[j>>2]|0)>>>8&255;a[f+3|0]=c[j>>2]&255;a[f+4|0]=(c[j+4>>2]|0)>>>24&255;a[f+5|0]=(c[j+4>>2]|0)>>>16&255;a[f+6|0]=(c[j+4>>2]|0)>>>8&255;a[f+7|0]=c[j+4>>2]&255;a[f+8|0]=(c[j+8>>2]|0)>>>24&255;a[f+9|0]=(c[j+8>>2]|0)>>>16&255;a[f+10|0]=(c[j+8>>2]|0)>>>8&255;a[f+11|0]=c[j+8>>2]&255;a[f+12|0]=(c[j+12>>2]|0)>>>24&255;a[f+13|0]=(c[j+12>>2]|0)>>>16&255;a[f+14|0]=(c[j+12>>2]|0)>>>8&255;a[f+15|0]=c[j+12>>2]&255;i=h;return}function v2(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=v7(a,b,c)|0;up(124);return d|0}function v3(a,b,c){a=a|0;b=b|0;c=c|0;v6(a,b,c);up(36);return}function v4(a,b,c){a=a|0;b=b|0;c=c|0;v5(a,b,c);up(36);return}function v5(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=b;b=e;e=f;f=g|0;h=g+64|0;g=(d[e|0]|0)<<24|(d[e+1|0]|0)<<16|(d[e+2|0]|0)<<8|(d[e+3|0]|0);i=(d[e+4|0]|0)<<24|(d[e+5|0]|0)<<16|(d[e+6|0]|0)<<8|(d[e+7|0]|0);e=g;g=i;j=(c[f+60>>2]|0)+i|0;j=j<<(d[h+15|0]|0)|j>>>((32-(d[h+15|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+56>>2]|0)-i|0;j=j<<(d[h+14|0]|0)|j>>>((32-(d[h+14|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+52>>2]^i;j=j<<(d[h+13|0]|0)|j>>>((32-(d[h+13|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f+48>>2]|0)+i|0;j=j<<(d[h+12|0]|0)|j>>>((32-(d[h+12|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+44>>2]|0)-i|0;j=j<<(d[h+11|0]|0)|j>>>((32-(d[h+11|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+40>>2]^i;j=j<<(d[h+10|0]|0)|j>>>((32-(d[h+10|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f+36>>2]|0)+i|0;j=j<<(d[h+9|0]|0)|j>>>((32-(d[h+9|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+32>>2]|0)-i|0;j=j<<(d[h+8|0]|0)|j>>>((32-(d[h+8|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+28>>2]^i;j=j<<(d[h+7|0]|0)|j>>>((32-(d[h+7|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f+24>>2]|0)+i|0;j=j<<(d[h+6|0]|0)|j>>>((32-(d[h+6|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+20>>2]|0)-i|0;j=j<<(d[h+5|0]|0)|j>>>((32-(d[h+5|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+16>>2]^i;j=j<<(d[h+4|0]|0)|j>>>((32-(d[h+4|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f+12>>2]|0)+i|0;j=j<<(d[h+3|0]|0)|j>>>((32-(d[h+3|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+8>>2]|0)-i|0;j=j<<(d[h+2|0]|0)|j>>>((32-(d[h+2|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+4>>2]^i;j=j<<(d[h+1|0]|0)|j>>>((32-(d[h+1|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f>>2]|0)+i|0;j=j<<(d[h|0]|0)|j>>>((32-(d[h|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);a[b|0]=i>>>24&255;a[b+1|0]=i>>>16&255;a[b+2|0]=i>>>8&255;a[b+3|0]=i&255;a[b+4|0]=g>>>24&255;a[b+5|0]=g>>>16&255;a[b+6|0]=g>>>8&255;a[b+7|0]=g&255;return}function v6(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=b;b=e;e=f;f=g|0;h=g+64|0;g=(d[e|0]|0)<<24|(d[e+1|0]|0)<<16|(d[e+2|0]|0)<<8|(d[e+3|0]|0);i=(d[e+4|0]|0)<<24|(d[e+5|0]|0)<<16|(d[e+6|0]|0)<<8|(d[e+7|0]|0);e=g;g=i;j=(c[f>>2]|0)+i|0;j=j<<(d[h|0]|0)|j>>>((32-(d[h|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+4>>2]^i;j=j<<(d[h+1|0]|0)|j>>>((32-(d[h+1|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f+8>>2]|0)-i|0;j=j<<(d[h+2|0]|0)|j>>>((32-(d[h+2|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+12>>2]|0)+i|0;j=j<<(d[h+3|0]|0)|j>>>((32-(d[h+3|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+16>>2]^i;j=j<<(d[h+4|0]|0)|j>>>((32-(d[h+4|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f+20>>2]|0)-i|0;j=j<<(d[h+5|0]|0)|j>>>((32-(d[h+5|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+24>>2]|0)+i|0;j=j<<(d[h+6|0]|0)|j>>>((32-(d[h+6|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+28>>2]^i;j=j<<(d[h+7|0]|0)|j>>>((32-(d[h+7|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f+32>>2]|0)-i|0;j=j<<(d[h+8|0]|0)|j>>>((32-(d[h+8|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+36>>2]|0)+i|0;j=j<<(d[h+9|0]|0)|j>>>((32-(d[h+9|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+40>>2]^i;j=j<<(d[h+10|0]|0)|j>>>((32-(d[h+10|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f+44>>2]|0)-i|0;j=j<<(d[h+11|0]|0)|j>>>((32-(d[h+11|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+48>>2]|0)+i|0;j=j<<(d[h+12|0]|0)|j>>>((32-(d[h+12|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=c[f+52>>2]^i;j=j<<(d[h+13|0]|0)|j>>>((32-(d[h+13|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)-(c[27232+((j>>>16&255)<<2)>>2]|0)+(c[26208+((j>>>8&255)<<2)>>2]|0)^c[25184+((j&255)<<2)>>2]);e=g;g=i;j=(c[f+56>>2]|0)-i|0;j=j<<(d[h+14|0]|0)|j>>>((32-(d[h+14|0]|0)|0)>>>0);i=e^((c[28256+(j>>>24<<2)>>2]|0)+(c[27232+((j>>>16&255)<<2)>>2]|0)^c[26208+((j>>>8&255)<<2)>>2])-(c[25184+((j&255)<<2)>>2]|0);e=g;g=i;j=(c[f+60>>2]|0)+i|0;j=j<<(d[h+15|0]|0)|j>>>((32-(d[h+15|0]|0)|0)>>>0);i=e^(c[28256+(j>>>24<<2)>>2]^c[27232+((j>>>16&255)<<2)>>2])-(c[26208+((j>>>8&255)<<2)>>2]|0)+(c[25184+((j&255)<<2)>>2]|0);a[b|0]=i>>>24&255;a[b+1|0]=i>>>16&255;a[b+2|0]=i>>>8&255;a[b+3|0]=i&255;a[b+4|0]=g>>>24&255;a[b+5|0]=g>>>16&255;a[b+6|0]=g>>>8&255;a[b+7|0]=g&255;return}function v7(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+96|0;h=g|0;j=g+16|0;k=g+32|0;l=b;b=e;e=f;if((c[30750]|0)==0){c[30750]=1;c[30748]=v8()|0;if((c[30748]|0)!=0){uj(81800,(f=i,i=i+8|0,c[f>>2]=c[30748],f)|0);i=f}}if((c[30748]|0)!=0){m=50;n=m;i=g;return n|0}if((e|0)!=16){m=44;n=m;i=g;return n|0}c[h>>2]=(d[b|0]|0)<<24|(d[b+1|0]|0)<<16|(d[b+2|0]|0)<<8|(d[b+3|0]|0);c[h+4>>2]=(d[b+4|0]|0)<<24|(d[b+5|0]|0)<<16|(d[b+6|0]|0)<<8|(d[b+7|0]|0);c[h+8>>2]=(d[b+8|0]|0)<<24|(d[b+9|0]|0)<<16|(d[b+10|0]|0)<<8|(d[b+11|0]|0);c[h+12>>2]=(d[b+12|0]|0)<<24|(d[b+13|0]|0)<<16|(d[b+14|0]|0)<<8|(d[b+15|0]|0);v9(h|0,j|0,k|0);b=0;while(1){if((b|0)>=16){break}c[l+(b<<2)>>2]=c[k+(b<<2)>>2];b=b+1|0}v9(h|0,j|0,k|0);b=0;while(1){if((b|0)>=16){break}a[l+64+b|0]=c[k+(b<<2)>>2]&31;b=b+1|0}Ae(h|0,0,16);Ae(j|0,0,16);Ae(k|0,0,64);m=0;n=m;i=g;return n|0}function v8(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0;a=i;i=i+120|0;b=a|0;c=a+80|0;d=a+96|0;e=a+104|0;f=a+112|0;g=c;Ac(g|0,6576,16)|0;g=d;Ac(g|0,6376,8)|0;g=e;Ac(g|0,7392,8)|0;v2(b,c|0,16)|0;v3(b,f|0,d|0);if((Af(f|0,e|0,8)|0)!=0){h=72880;j=h;i=a;return j|0}v4(b,f|0,f|0);if((Af(f|0,d|0,8)|0)!=0){h=68456;j=h;i=a;return j|0}else{h=0;j=h;i=a;return j|0}return 0}function v9(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;a=b;b=d;c[a>>2]=c[e>>2]^c[24160+(((c[e+12>>2]|0)>>>16&255)<<2)>>2]^c[23136+(((c[e+12>>2]|0)>>>0&255)<<2)>>2]^c[22112+(((c[e+12>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[e+12>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[e+8>>2]|0)>>>24&255)<<2)>>2];c[a+4>>2]=c[e+8>>2]^c[24160+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[a>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[e+8>>2]|0)>>>8&255)<<2)>>2];c[a+8>>2]=c[e+12>>2]^c[24160+(((c[a+4>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[a+4>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[24160+(((c[e+8>>2]|0)>>>16&255)<<2)>>2];c[a+12>>2]=c[e+4>>2]^c[24160+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[23136+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[a+8>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[e+8>>2]|0)>>>0&255)<<2)>>2];c[b>>2]=c[24160+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[a+4>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[a+4>>2]|0)>>>8&255)<<2)>>2]^c[24160+(((c[a>>2]|0)>>>8&255)<<2)>>2];c[b+4>>2]=c[24160+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[23136+(((c[a+8>>2]|0)>>>0&255)<<2)>>2]^c[22112+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];c[b+8>>2]=c[24160+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[a>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[a+8>>2]|0)>>>16&255)<<2)>>2];c[b+12>>2]=c[24160+(((c[a+12>>2]|0)>>>8&255)<<2)>>2]^c[23136+(((c[a+12>>2]|0)>>>0&255)<<2)>>2]^c[22112+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[a+12>>2]|0)>>>24&255)<<2)>>2];c[e>>2]=c[a+8>>2]^c[24160+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[23136+(((c[a+4>>2]|0)>>>0&255)<<2)>>2]^c[22112+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[a+4>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[a>>2]|0)>>>24&255)<<2)>>2];c[e+4>>2]=c[a>>2]^c[24160+(((c[e>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[e>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[e>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[e>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[a>>2]|0)>>>8&255)<<2)>>2];c[e+8>>2]=c[a+4>>2]^c[24160+(((c[e+4>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[e+4>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[e+4>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[e+4>>2]|0)>>>24&255)<<2)>>2]^c[24160+(((c[a>>2]|0)>>>16&255)<<2)>>2];c[e+12>>2]=c[a+12>>2]^c[24160+(((c[e+8>>2]|0)>>>8&255)<<2)>>2]^c[23136+(((c[e+8>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[e+8>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[e+8>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[a>>2]|0)>>>0&255)<<2)>>2];c[b+16>>2]=c[24160+(((c[e>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[e>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[e+12>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[e+12>>2]|0)>>>16&255)<<2)>>2]^c[24160+(((c[e+8>>2]|0)>>>24&255)<<2)>>2];c[b+20>>2]=c[24160+(((c[e>>2]|0)>>>16&255)<<2)>>2]^c[23136+(((c[e>>2]|0)>>>24&255)<<2)>>2]^c[22112+(((c[e+12>>2]|0)>>>8&255)<<2)>>2]^c[21088+(((c[e+12>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[e+12>>2]|0)>>>16&255)<<2)>>2];c[b+24>>2]=c[24160+(((c[e+4>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[e+4>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[e+8>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[e+8>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[e>>2]|0)>>>0&255)<<2)>>2];c[b+28>>2]=c[24160+(((c[e+4>>2]|0)>>>16&255)<<2)>>2]^c[23136+(((c[e+4>>2]|0)>>>24&255)<<2)>>2]^c[22112+(((c[e+8>>2]|0)>>>8&255)<<2)>>2]^c[21088+(((c[e+8>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[e+4>>2]|0)>>>0&255)<<2)>>2];c[a>>2]=c[e>>2]^c[24160+(((c[e+12>>2]|0)>>>16&255)<<2)>>2]^c[23136+(((c[e+12>>2]|0)>>>0&255)<<2)>>2]^c[22112+(((c[e+12>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[e+12>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[e+8>>2]|0)>>>24&255)<<2)>>2];c[a+4>>2]=c[e+8>>2]^c[24160+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[a>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[e+8>>2]|0)>>>8&255)<<2)>>2];c[a+8>>2]=c[e+12>>2]^c[24160+(((c[a+4>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[a+4>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[24160+(((c[e+8>>2]|0)>>>16&255)<<2)>>2];c[a+12>>2]=c[e+4>>2]^c[24160+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[23136+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[a+8>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[e+8>>2]|0)>>>0&255)<<2)>>2];c[b+32>>2]=c[24160+(((c[a>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[a>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[a+12>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[a+12>>2]|0)>>>16&255)<<2)>>2]^c[24160+(((c[a+8>>2]|0)>>>16&255)<<2)>>2];c[b+36>>2]=c[24160+(((c[a>>2]|0)>>>16&255)<<2)>>2]^c[23136+(((c[a>>2]|0)>>>24&255)<<2)>>2]^c[22112+(((c[a+12>>2]|0)>>>8&255)<<2)>>2]^c[21088+(((c[a+12>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[a+12>>2]|0)>>>24&255)<<2)>>2];c[b+40>>2]=c[24160+(((c[a+4>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[a+4>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[a+8>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[a+8>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[a>>2]|0)>>>8&255)<<2)>>2];c[b+44>>2]=c[24160+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[23136+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[22112+(((c[a+8>>2]|0)>>>8&255)<<2)>>2]^c[21088+(((c[a+8>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[a+4>>2]|0)>>>8&255)<<2)>>2];c[e>>2]=c[a+8>>2]^c[24160+(((c[a+4>>2]|0)>>>16&255)<<2)>>2]^c[23136+(((c[a+4>>2]|0)>>>0&255)<<2)>>2]^c[22112+(((c[a+4>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[a+4>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[a>>2]|0)>>>24&255)<<2)>>2];c[e+4>>2]=c[a>>2]^c[24160+(((c[e>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[e>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[e>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[e>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[a>>2]|0)>>>8&255)<<2)>>2];c[e+8>>2]=c[a+4>>2]^c[24160+(((c[e+4>>2]|0)>>>0&255)<<2)>>2]^c[23136+(((c[e+4>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[e+4>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[e+4>>2]|0)>>>24&255)<<2)>>2]^c[24160+(((c[a>>2]|0)>>>16&255)<<2)>>2];c[e+12>>2]=c[a+12>>2]^c[24160+(((c[e+8>>2]|0)>>>8&255)<<2)>>2]^c[23136+(((c[e+8>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[e+8>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[e+8>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[a>>2]|0)>>>0&255)<<2)>>2];c[b+48>>2]=c[24160+(((c[e+8>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[e+8>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[e+4>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[e+4>>2]|0)>>>8&255)<<2)>>2]^c[24160+(((c[e>>2]|0)>>>0&255)<<2)>>2];c[b+52>>2]=c[24160+(((c[e+8>>2]|0)>>>8&255)<<2)>>2]^c[23136+(((c[e+8>>2]|0)>>>0&255)<<2)>>2]^c[22112+(((c[e+4>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[e+4>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[e+4>>2]|0)>>>0&255)<<2)>>2];c[b+56>>2]=c[24160+(((c[e+12>>2]|0)>>>24&255)<<2)>>2]^c[23136+(((c[e+12>>2]|0)>>>16&255)<<2)>>2]^c[22112+(((c[e>>2]|0)>>>0&255)<<2)>>2]^c[21088+(((c[e>>2]|0)>>>8&255)<<2)>>2]^c[22112+(((c[e+8>>2]|0)>>>24&255)<<2)>>2];c[b+60>>2]=c[24160+(((c[e+12>>2]|0)>>>8&255)<<2)>>2]^c[23136+(((c[e+12>>2]|0)>>>0&255)<<2)>>2]^c[22112+(((c[e>>2]|0)>>>16&255)<<2)>>2]^c[21088+(((c[e>>2]|0)>>>24&255)<<2)>>2]^c[21088+(((c[e+12>>2]|0)>>>16&255)<<2)>>2];return}function wa(a){a=a|0;c[a>>2]=-1;return}function wb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=b;b=a;if((e|0)!=0){c[b>>2]=wj(c[b>>2]|0,e,d)|0;return}else{return}}function wc(b){b=b|0;var d=0;d=b;b=d|0;c[b>>2]=~c[b>>2];a[d+4|0]=(c[d>>2]|0)>>>24&255;a[d+5|0]=(c[d>>2]|0)>>>16&255;a[d+6|0]=(c[d>>2]|0)>>>8&255;a[d+7|0]=c[d>>2]&255;return}function wd(a){a=a|0;return a+4|0}function we(a){a=a|0;c[a>>2]=0;return}function wf(b){b=b|0;var d=0;d=b;a[d+4|0]=(c[d>>2]|0)>>>24&255;a[d+5|0]=(c[d>>2]|0)>>>16&255;a[d+6|0]=(c[d>>2]|0)>>>8&255;a[d+7|0]=c[d>>2]&255;return}function wg(a){a=a|0;c[a>>2]=11994318;return}function wh(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0;f=e;e=b;b=a;if((e|0)==0){return}while(1){a=f;f=a-1|0;if((a|0)==0){break}a=e;e=a+1|0;g=b|0;c[g>>2]=c[g>>2]^(d[a]|0)<<16;a=0;while(1){if((a|0)>=8){break}g=b|0;c[g>>2]=c[g>>2]<<1;if((c[b>>2]&16777216|0)!=0){g=b|0;c[g>>2]=c[g>>2]^25578747}a=a+1|0}}return}function wi(b){b=b|0;var d=0;d=b;a[d+4|0]=(c[d>>2]|0)>>>16&255;a[d+5|0]=(c[d>>2]|0)>>>8&255;a[d+6|0]=c[d>>2]&255;return}function wj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=b;b=e;e=d;d=0;while(1){if(d>>>0>=b>>>0){break}f=c[48960+(((f^a[e+d|0])&255)<<2)>>2]^f>>>8;d=d+1|0}return f|0}function wk(a,b){a=a|0;b=b|0;c[30588]=a;c[30578]=b;return}function wl(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return wr(a,b,0,0,d,e,0)|0}function wm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;a=i;i=i+24|0;d=a|0;e=b;b=0;do{if((c[e>>2]|0)!=0){if((c[e+4>>2]|0)==0){break}if((c[e+8>>2]|0)==0){break}if((c[e+12>>2]|0)==0){break}if((c[e+16>>2]|0)==0){break}c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];c[d+16>>2]=c[e+16>>2];if((wD(d)|0)==0){b=7}f=b;i=a;return f|0}}while(0);b=30;f=b;i=a;return f|0}function wn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=i;i=i+24|0;f=a|0;g=b;b=d;d=e;e=0;do{if((b|0)!=0){if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}if((c[d+12>>2]|0)==0){break}if((c[d+16>>2]|0)==0){break}c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];c[f+16>>2]=c[d+16>>2];c[g>>2]=r1(c[(c[f>>2]|0)+4>>2]|0)|0;c[g+4>>2]=r1(c[(c[f>>2]|0)+4>>2]|0)|0;wx(c[g>>2]|0,c[g+4>>2]|0,b,f);h=e;i=a;return h|0}}while(0);e=30;h=e;i=a;return h|0}function wo(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;g=i;i=i+16|0;f=g|0;a=b;b=d;d=e;e=0;do{if((c[b>>2]|0)!=0){if((c[b+4>>2]|0)==0){break}if((a|0)==0){break}if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}if((c[d+12>>2]|0)==0){break}c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];if((wy(c[b>>2]|0,c[b+4>>2]|0,a,f)|0)==0){e=8}h=e;i=g;return h|0}}while(0);e=30;h=e;i=g;return h|0}function wp(a,b){a=a|0;b=b|0;return qR(c[b>>2]|0)|0}function wq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((a|0)==17){d=wA(c)|0;e=d;return e|0}else{d=4;e=d;return e|0}return 0}function wr(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=i;i=i+144|0;b=e|0;k=e+24|0;l=e+32|0;m=e+48|0;n=e+104|0;o=e+112|0;p=e+120|0;q=e+128|0;r=e+136|0;s=d;d=f;f=g;g=h;h=j;j=0;t=0;c[k>>2]=0;u=0;v=0;w=0;Ae(l|0,0,12);if((d|0)!=0){x=u4(d,63440,0)|0;L446:do{if((x|0)!=0){y=u9(x,1,n)|0;do{if((y|0)!=0){if((c[n>>2]|0)>>>0>=49){break}z=m;A=y;B=c[n>>2]|0;Ac(z|0,A|0,B)|0;a[m+(c[n>>2]|0)|0]=0;j=aE(m|0,0,0)|0;u_(x);break L446}}while(0);u_(x);C=65;D=C;i=e;return D|0}}while(0);x=u4(d,61784,0)|0;if((x|0)!=0){u=1;u_(x)}t=u4(d,60296,0)|0;x=u4(d,58552,0)|0;if((x|0)!=0){w=1;u_(x)}x=u4(d,56336,0)|0;if((x|0)!=0){v=1;u_(x)}m=u4(d,83448,0)|0;L463:do{if((m|0)!=0){do{if((t|0)==0){if((j|0)!=0){break}if((s|0)!=0){break}x=u4(m,82464,0)|0;c[l>>2]=vc(x,1,5)|0;u_(x);x=u4(m,80688,0)|0;c[l+4>>2]=vc(x,1,5)|0;u_(x);x=u4(m,79960,0)|0;c[l+8>>2]=vc(x,1,5)|0;u_(x);u_(m);do{if((c[l>>2]|0)!=0){if((c[l+4>>2]|0)==0){break}if((c[l+8>>2]|0)==0){break}s=qR(c[l>>2]|0)|0;j=qR(c[l+4>>2]|0)|0;break L463}}while(0);sn(c[l>>2]|0);sn(c[l+4>>2]|0);sn(c[l+8>>2]|0);u_(t);C=128;D=C;i=e;return D|0}}while(0);u_(m);u_(t);C=55;D=C;i=e;return D|0}}while(0)}do{if((t|0)!=0){E=452}else{if((w|0)!=0){E=452;break}if((v|0)!=0){E=452;break}if((s5()|0)!=0){E=452;break}F=wu(b,s,j,u,l,g)|0}}while(0);if((E|0)==452){F=ws(b,s,j,t,v,l,o,p,q,r)|0;u_(t);do{if((F|0)==0){if((c[r>>2]|0)==0){break}t=c[q>>2]|0;v=c[p>>2]|0;j=c[r>>2]|0;s=vf(k,0,78904,(u=i,i=i+32|0,c[u>>2]=c[o>>2],c[u+8>>2]=t,c[u+16>>2]=v,c[u+24>>2]=j,u)|0)|0;i=u;F=wt(s)|0;if((F|0)!=0){sn(c[b>>2]|0);c[b>>2]=0;sn(c[b+4>>2]|0);c[b+4>>2]=0;sn(c[b+8>>2]|0);c[b+8>>2]=0;sn(c[b+12>>2]|0);c[b+12>>2]=0;sn(c[b+16>>2]|0);c[b+16>>2]=0}tQ(c[p>>2]|0);sn(c[r>>2]|0)}}while(0)}sn(c[l>>2]|0);sn(c[l+4>>2]|0);sn(c[l+8>>2]|0);if((F|0)==0){c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];c[f+16>>2]=c[b+16>>2];if((h|0)!=0){do{if((c[g>>2]|0)!=0){E=465}else{if((c[k>>2]|0)!=0){E=465;break}c[h>>2]=0}}while(0);if((E|0)==465){E=0;b=0;l=0;while(1){if((c[g>>2]|0)!=0){G=(c[(c[g>>2]|0)+(l<<2)>>2]|0)!=0}else{G=0}if(!G){break}l=l+1|0}E=tJ((l<<1)+50|0)|0;if((E|0)!=0){G=ca(E|0,78040)|0;if((c[k>>2]|0)!=0){G=ca(G|0,77088)|0}if((l|0)!=0){G=ca(G|0,76376)|0;H=0;while(1){if((H|0)>=(l|0)){break}G=ca(G|0,75376)|0;H=H+1|0}G=ca(G|0,74648)|0}G=ca(G|0,74648)|0;b=tR(l+2|0,4)|0;if((b|0)!=0){H=0;if((c[k>>2]|0)!=0){G=H;H=G+1|0;c[b+(G<<2)>>2]=k}G=0;while(1){if((G|0)>=(l|0)){break}r=H;H=r+1|0;c[b+(r<<2)>>2]=(c[g>>2]|0)+(G<<2);G=G+1|0}c[b+(H<<2)>>2]=0;F=wt(vi(h,0,E,b)|0)|0}else{F=y$()|0}}else{F=y$()|0}tQ(b);tQ(E);H=0;while(1){if((H|0)>=(l|0)){break}sn(c[(c[g>>2]|0)+(H<<2)>>2]|0);c[(c[g>>2]|0)+(H<<2)>>2]=0;H=H+1|0}tQ(c[g>>2]|0);c[g>>2]=0;if((F|0)!=0){H=0;while(1){if((H|0)>=5){break}sn(c[f+(H<<2)>>2]|0);c[f+(H<<2)>>2]=0;H=H+1|0}}}}}u_(c[k>>2]|0);C=F;D=C;i=e;return D|0}function ws(a,b,d,e,f,g,h,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;i=i+32|0;m=f|0;n=f+16|0;o=f+24|0;p=a;a=b;b=d;d=e;e=g;g=h;h=j;j=k;k=l;Ae(m|0,0,12);c[n>>2]=0;c[o>>2]=0;l=0;q=0;r=0;s=0;t=0;c[g>>2]=0;c[h>>2]=0;c[j>>2]=0;c[k>>2]=0;if((b|0)==0){if((a|0)==1024){b=160}else{if((a|0)==2048){b=224}else{if((a|0)==3072){b=256}}}}do{if((a|0)==1024){if((b|0)!=160){u=523;break}}else{u=523}}while(0);if((u|0)==523){do{if((a|0)==2048){if((b|0)!=224){u=526;break}}else{u=526}}while(0);if((u|0)==526){do{if((a|0)==2048){if((b|0)!=256){u=529;break}}else{u=529}}while(0);L584:do{if((u|0)==529){do{if((a|0)==3072){if((b|0)!=256){break}break L584}}while(0);v=55;w=v;i=f;return w|0}}while(0)}}do{if((c[e>>2]|0)!=0){if((c[e+4>>2]|0)==0){u=549;break}if((c[e+8>>2]|0)==0){u=549;break}c[o>>2]=sc(c[e>>2]|0)|0;c[n>>2]=sc(c[e+4>>2]|0)|0;l=sc(c[e+8>>2]|0)|0;if((qR(c[o>>2]|0)|0)!=(a|0)){ug(67648,73368,465,87224);return 0}if((qR(c[n>>2]|0)|0)!=(b|0)){ug(67344,73368,466,87224);return 0}if((d|0)!=0){ug(67064,73368,467,87224);return 0}x=0;u=559}else{u=549}}while(0);do{if((u|0)==549){if((d|0)!=0){c[m>>2]=u4(d,66792,0)|0;if((c[m>>2]|0)!=0){c[m+4>>2]=u9(c[m>>2]|0,1,m+8|0)|0}}x=nm(a,b,c[m+4>>2]|0,c[m+8>>2]|0,n,o,g,h,j)|0;u_(c[m>>2]|0);if((x|0)!=0){break}t=sd(c[o>>2]|0)|0;qM(t,c[o>>2]|0,1);q4(t,t,c[n>>2]|0);l=sd(c[o>>2]|0)|0;s=sj(1)|0;do{qK(s,s,1);rq(l,s,t,c[o>>2]|0);}while((q$(l,1)|0)!=0^1);u=559}}while(0);if((u|0)==559){r=sm(b)|0;do{if((t_(1)|0)!=0){wv(46)}so(r,b,2);qV(r,b+1|0);if((q$(r,0)|0)>0){y=(q0(r,c[n>>2]|0)|0)<0}else{y=0}}while(y^1);q=sd(c[o>>2]|0)|0;rq(q,l,r,c[o>>2]|0);if((t_(1)|0)!=0){wv(10);rv(70464,c[o>>2]|0);rv(70144,c[n>>2]|0);rv(69808,l);rv(69504,q);rv(69176,r);rv(66680,s)}c[p>>2]=c[o>>2];c[o>>2]=0;c[p+4>>2]=c[n>>2];c[n>>2]=0;c[p+8>>2]=l;l=0;c[p+12>>2]=q;q=0;c[p+16>>2]=r;r=0;c[k>>2]=s;s=0}sn(c[o>>2]|0);sn(c[n>>2]|0);sn(l);sn(q);sn(r);sn(s);sn(t);do{if((x|0)==0){if((ww(p,b)|0)==0){break}sn(c[p>>2]|0);c[p>>2]=0;sn(c[p+4>>2]|0);c[p+4>>2]=0;sn(c[p+8>>2]|0);c[p+8>>2]=0;sn(c[p+12>>2]|0);c[p+12>>2]=0;sn(c[p+16>>2]|0);c[p+16>>2]=0;tb(73368,570,87224,0,68896);x=50}}while(0);if((x|0)!=0){c[g>>2]=0;tQ(c[h>>2]|0);c[h>>2]=0;c[j>>2]=0;sn(c[k>>2]|0);c[k>>2]=0}v=x;w=v;i=f;return w|0}function wt(a){a=a|0;return a&65535|0}function wu(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;k=b;b=d;d=e;e=f;f=g;g=h;if((d|0)==0){do{if(b>>>0>=512){if(b>>>0>1024){l=584;break}d=160}else{l=584}}while(0);if((l|0)==584){if((b|0)==2048){d=224}else{if((b|0)==3072){d=256}else{do{if((b|0)==7680){d=384}else{if((b|0)==15360){d=512;break}else{m=55;n=m;i=j;return n|0}}}while(0)}}}}do{if(d>>>0>=160){if(d>>>0>512){break}if(((d>>>0)%8|0|0)!=0){break}do{if(b>>>0>=d<<1>>>0){if(b>>>0>15360){break}do{if((s5()|0)!=0){if(b>>>0<1024){m=55;n=m;i=j;return n|0}if((e|0)==0){break}m=55;n=m;i=j;return n|0}}while(0);do{if((c[f>>2]|0)!=0){if((c[f+4>>2]|0)==0){l=621;break}if((c[f+8>>2]|0)==0){l=621;break}o=sc(c[f>>2]|0)|0;p=sc(c[f+4>>2]|0)|0;q=sc(c[f+8>>2]|0)|0;if((qR(o)|0)!=(b|0)){ug(73880,73368,305,87264);return 0}if((qR(p)|0)!=(d|0)){ug(72112,73368,306,87264);return 0}r=r1(0)|0;s=0}else{l=621}}while(0);if((l|0)==621){o=nb(1,b,d,0,g)|0;p=sc(c[c[g>>2]>>2]|0)|0;if((qR(p)|0)!=(d|0)){ug(72112,73368,316,87264);return 0}s=r1(c[o+4>>2]|0)|0;qM(s,o,1);q4(s,s,p);q=r1(c[o+4>>2]|0)|0;r=sj(1)|0;do{qK(r,r,1);rq(q,r,s,o);}while((q$(q,1)|0)!=0^1)}h=(e|0)!=0?1:2;if((t_(1)|0)!=0){um(71760,(t=i,i=i+8|0,c[t>>2]=(e|0)!=0?71448:123256,t)|0);i=t}if(d>>>0<160){ug(70824,73368,341,87264);return 0}t=r4(c[p+4>>2]|0)|0;qM(r,p,1);u=0;do{if((t_(1)|0)!=0){wv(46)}if((u|0)!=0){v=sH(2,h)|0;w=u;x=v;a[w]=a[x]|0;a[w+1|0]=a[x+1|0]|0;tQ(v)}else{u=sH(((d+7|0)>>>0)/8|0,h)|0}rz(t,u,((d+7|0)>>>0)/8|0,0);qV(t,d+1|0);if((q$(t,0)|0)>0){y=(q0(t,r)|0)<0}else{y=0}}while(y^1);tQ(u);r9(s);r9(r);h=r1(c[o+4>>2]|0)|0;rq(h,q,t,o);if((t_(1)|0)!=0){wv(10);rv(70464,o);rv(70144,p);rv(69808,q);rv(69504,h);rv(69176,t)}c[k>>2]=o;c[k+4>>2]=p;c[k+8>>2]=q;c[k+12>>2]=h;c[k+16>>2]=t;if((ww(k,d)|0)!=0){sn(c[k>>2]|0);c[k>>2]=0;sn(c[k+4>>2]|0);c[k+4>>2]=0;sn(c[k+8>>2]|0);c[k+8>>2]=0;sn(c[k+12>>2]|0);c[k+12>>2]=0;sn(c[k+16>>2]|0);c[k+16>>2]=0;tb(73368,395,87264,0,68896);m=50;n=m;i=j;return n|0}else{m=0;n=m;i=j;return n|0}}}while(0);m=55;n=m;i=j;return n|0}}while(0);m=55;n=m;i=j;return n|0}function wv(a){a=a|0;if((c[30588]|0)==0){return}cC[c[30588]&15](c[30578]|0,67896,a,0,0);return}function ww(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d|0;f=a;a=b;b=-1;g=sl(a)|0;h=sl(a)|0;j=sl(a)|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];c[e+8>>2]=c[f+8>>2];c[e+12>>2]=c[f+12>>2];so(g,a,0);wx(h,j,g,f);do{if((wy(h,j,g,e)|0)!=0){qK(g,g,1);if((wy(h,j,g,e)|0)!=0){break}else{b=0;break}}}while(0);sn(j);sn(h);sn(g);i=d;return b|0}function wx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a;a=e;e=wz(c[a+4>>2]|0)|0;rq(f,c[a+8>>2]|0,e,c[a>>2]|0);q1(f,f,c[a+4>>2]|0);g=r1(c[e+4>>2]|0)|0;rg(g,e,c[a+4>>2]|0)|0;h=r1(c[(c[a>>2]|0)+4>>2]|0)|0;ro(h,c[a+16>>2]|0,f);qL(h,h,d);rp(b,g,h,c[a+4>>2]|0);r9(e);r9(g);r9(h);return}function wy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+32|0;g=f|0;h=f+16|0;j=a;a=b;b=d;d=e;do{if((q$(j,0)|0)>0){if((q0(j,c[d+4>>2]|0)|0)>=0){break}do{if((q$(a,0)|0)>0){if((q0(a,c[d+4>>2]|0)|0)>=0){break}e=r1(c[(c[d+4>>2]|0)+4>>2]|0)|0;k=r1(c[(c[d+4>>2]|0)+4>>2]|0)|0;l=r1(c[(c[d+4>>2]|0)+4>>2]|0)|0;m=r1(c[(c[d>>2]|0)+4>>2]|0)|0;n=e;o=a;p=c[d+4>>2]|0;rg(n,o,p)|0;rp(k,b,e,c[d+4>>2]|0);rp(l,j,e,c[d+4>>2]|0);c[g>>2]=c[d+8>>2];c[h>>2]=k;c[g+4>>2]=c[d+12>>2];c[h+4>>2]=l;c[g+8>>2]=0;c[h+8>>2]=0;xP(m,g|0,h|0,c[d>>2]|0);q1(m,m,c[d+4>>2]|0);p=((q0(m,j)|0)!=0^1)&1;r9(e);r9(k);r9(l);r9(m);q=p;r=q;i=f;return r|0}}while(0);q=0;r=q;i=f;return r|0}}while(0);q=0;r=q;i=f;return r|0}function wz(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=b;b=r4(c[e+4>>2]|0)|0;f=qR(e)|0;g=((f+7|0)>>>0)/8|0;h=0;if((t_(1)|0)!=0){um(68120,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}while(1){if((t_(1)|0)!=0){wv(46)}do{if((h|0)!=0){if(f>>>0<32){k=686;break}j=sH(4,1)|0;l=h;m=j;a[l]=a[m]|0;a[l+1|0]=a[m+1|0]|0;a[l+2|0]=a[m+2|0]|0;a[l+3|0]=a[m+3|0]|0;tQ(j)}else{k=686}}while(0);if((k|0)==686){k=0;tQ(h);h=sH(((f+7|0)>>>0)/8|0,1)|0}rz(b,h,g,0);if((qS(b,f-1|0)|0)!=0){qU(b,f-1|0)}else{qU(b,f-1|0);qW(b,f-1|0)}if((q0(b,e)|0)>=0){if((t_(1)|0)!=0){wv(43)}continue}if((q$(b,0)|0)>0){break}if((t_(1)|0)!=0){wv(45)}}tQ(h);if((t_(1)|0)==0){n=b;i=d;return n|0}wv(10);n=b;i=d;return n|0}function wA(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a;c[d>>2]=0;c[e>>2]=0;a=66392;g=vj(d,0,17848,Ab(17848)|0)|0;if((g|0)==0){g=vj(e,0,19848,Ab(19848)|0)|0}do{if((g|0)!=0){h=tA(g)|0}else{a=66112;g=nX(c[d>>2]|0)|0;if((g|0)!=0){h=tA(g)|0;break}a=65808;h=wB(c[e>>2]|0,c[d>>2]|0)|0;if((h|0)!=0){break}u_(c[e>>2]|0);u_(c[d>>2]|0);j=0;k=j;i=b;return k|0}}while(0);u_(c[e>>2]|0);u_(c[d>>2]|0);if((f|0)!=0){cP[f&15](65192,17,a,h)}j=50;k=j;i=b;return k|0}function wB(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+24|0;e=d|0;f=d+8|0;g=d+16|0;h=a;a=0;c[e>>2]=0;c[f>>2]=0;c[g>>2]=0;j=vj(e,0,6120,Ab(6120)|0)|0;if((j|0)==0){j=vj(f,0,5968,Ab(5968)|0)|0}do{if((j|0)!=0){a=64952}else{j=nS(g,c[e>>2]|0,b)|0;if((j|0)!=0){a=64744;break}j=nU(c[g>>2]|0,c[e>>2]|0,h)|0;if((j|0)!=0){a=64560;break}j=nU(c[g>>2]|0,c[f>>2]|0,h)|0;if((wC(j)|0)!=8){a=64392;break}else{break}}}while(0);u_(c[g>>2]|0);u_(c[f>>2]|0);u_(c[e>>2]|0);i=d;return a|0}function wC(a){a=a|0;return wt(a)|0}function wD(a){a=a|0;var b=0,d=0;b=a;a=r1(c[(c[b+12>>2]|0)+4>>2]|0)|0;rq(a,c[b+8>>2]|0,c[b+16>>2]|0,c[b>>2]|0);d=((q0(a,c[b+12>>2]|0)|0)!=0^1)&1;r9(a);return d|0}function wE(a,b){a=a|0;b=b|0;c[30586]=a;c[30576]=b;return}function wF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return wN(a,b,0,0,d,e,0)|0}function wG(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;a=i;i=i+48|0;d=a|0;e=b;do{if((c[e>>2]|0)!=0){if((c[e+4>>2]|0)==0){break}if((c[e+8>>2]|0)==0){break}if((c[e+12>>2]|0)==0){break}if((c[e+16>>2]|0)==0){break}if((c[e+20>>2]|0)==0){break}if((c[e+24>>2]|0)==0){break}c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];xB(d+12|0);b=wS(d+12|0,c[e+12>>2]|0)|0;if((b|0)!=0){xC(d+12|0);f=b;g=f;i=a;return g|0}c[d+24>>2]=c[e+16>>2];xB(d+32|0);b=wS(d+32|0,c[e+20>>2]|0)|0;if((b|0)!=0){xC(d+12|0);xC(d+32|0);f=b;g=f;i=a;return g|0}c[d+44>>2]=c[e+24>>2];if((w3(d)|0)!=0){xC(d+12|0);xC(d+32|0);f=7;g=f;i=a;return g|0}else{xC(d+12|0);xC(d+32|0);f=0;g=f;i=a;return g|0}}}while(0);f=30;g=f;i=a;return g|0}function wH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;a=i;i=i+48|0;f=a|0;g=b;b=d;d=e;do{if((b|0)!=0){if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}if((c[d+12>>2]|0)==0){break}if((c[d+16>>2]|0)==0){break}if((c[d+20>>2]|0)==0){break}if((c[d+24>>2]|0)==0){break}c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];xB(f+12|0);e=wS(f+12|0,c[d+12>>2]|0)|0;if((e|0)!=0){xC(f+12|0);h=e;j=h;i=a;return j|0}c[f+24>>2]=c[d+16>>2];xB(f+32|0);e=wS(f+32|0,c[d+20>>2]|0)|0;if((e|0)!=0){xC(f+12|0);xC(f+32|0);h=e;j=h;i=a;return j|0}c[f+44>>2]=c[d+24>>2];c[g>>2]=r1(c[(c[f>>2]|0)+4>>2]|0)|0;c[g+4>>2]=r1(c[(c[f>>2]|0)+4>>2]|0)|0;e=w0(b,f,c[g>>2]|0,c[g+4>>2]|0)|0;if((e|0)!=0){r9(c[g>>2]|0);r9(c[g+4>>2]|0);c[g>>2]=0}xC(f+12|0);xC(f+32|0);h=e;j=h;i=a;return j|0}}while(0);h=30;j=h;i=a;return j|0}function wI(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;g=i;i=i+48|0;f=g|0;a=b;b=d;d=e;do{if((c[b>>2]|0)!=0){if((c[b+4>>2]|0)==0){break}if((a|0)==0){break}if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}if((c[d+12>>2]|0)==0){break}if((c[d+16>>2]|0)==0){break}if((c[d+20>>2]|0)==0){break}c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];xB(f+12|0);e=wS(f+12|0,c[d+12>>2]|0)|0;if((e|0)!=0){xC(f+12|0);h=e;j=h;i=g;return j|0}c[f+24>>2]=c[d+16>>2];xB(f+32|0);e=wS(f+32|0,c[d+20>>2]|0)|0;if((e|0)!=0){xC(f+12|0);xC(f+32|0);h=e;j=h;i=g;return j|0}else{e=w1(a,f,c[b>>2]|0,c[b+4>>2]|0)|0;xC(f+12|0);xC(f+32|0);h=e;j=h;i=g;return j|0}}}while(0);h=30;j=h;i=g;return j|0}function wJ(a,b){a=a|0;b=b|0;return qR(c[b>>2]|0)|0}function wK(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+72|0;a=f|0;g=f+48|0;h=f+56|0;j=b;b=d;d=e;do{if((b|0)!=0){if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}if((c[d+12>>2]|0)==0){break}if((c[d+16>>2]|0)==0){break}if((c[d+20>>2]|0)==0){break}c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];xB(a+12|0);e=wS(a+12|0,c[d+12>>2]|0)|0;if((e|0)!=0){xC(a+12|0);k=e;l=k;i=f;return l|0}c[a+24>>2]=c[d+16>>2];xB(a+32|0);e=wS(a+32|0,c[d+20>>2]|0)|0;if((e|0)!=0){xC(a+12|0);xC(a+32|0);k=e;l=k;i=f;return l|0}e=xD(c[a>>2]|0,c[a+4>>2]|0)|0;m=sl(0)|0;n=sl(0)|0;xB(h);xN(h,b,a+32|0,e);if((xG(m,n,h,e)|0)!=0){uk(77568,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;return 0}c[g>>2]=wV(m,n,c[a>>2]|0)|0;xN(h,b,a+12|0,e);if((xG(m,n,h,e)|0)!=0){uk(77496,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;return 0}c[g+4>>2]=wV(m,n,c[a>>2]|0)|0;r9(m);r9(n);xC(h);xF(e);xC(a+12|0);xC(a+32|0);do{if((c[g>>2]|0)!=0){if((c[g+4>>2]|0)==0){break}c[j>>2]=c[g>>2];c[j+4>>2]=c[g+4>>2];k=0;l=k;i=f;return l|0}}while(0);r9(c[g>>2]|0);r9(c[g+4>>2]|0);k=32854;l=k;i=f;return l|0}}while(0);k=30;l=k;i=f;return l|0}function wL(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+80|0;a=f|0;g=f+48|0;h=f+64|0;j=b;b=d;d=e;c[j>>2]=0;do{if((b|0)!=0){if((c[b>>2]|0)==0){break}if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}if((c[d+12>>2]|0)==0){break}if((c[d+16>>2]|0)==0){break}if((c[d+20>>2]|0)==0){break}if((c[d+24>>2]|0)==0){break}xB(h);e=wS(h,c[b>>2]|0)|0;if((e|0)!=0){xC(h);k=e;l=k;i=f;return l|0}c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];xB(a+12|0);e=wS(a+12|0,c[d+12>>2]|0)|0;if((e|0)!=0){xC(h);xC(a+12|0);k=e;l=k;i=f;return l|0}c[a+24>>2]=c[d+16>>2];xB(a+32|0);e=wS(a+32|0,c[d+20>>2]|0)|0;if((e|0)!=0){xC(h);xC(a+12|0);xC(a+32|0);k=e;l=k;i=f;return l|0}c[a+44>>2]=c[d+24>>2];e=xD(c[a>>2]|0,c[a+4>>2]|0)|0;xB(g);xN(g,c[a+44>>2]|0,h,e);xC(h);m=sl(0)|0;n=sl(0)|0;if((xG(m,n,g,e)|0)!=0){uk(77656,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;return 0}o=wV(m,n,c[a>>2]|0)|0;r9(m);r9(n);xC(g);xF(e);xC(h);xC(a+12|0);xC(a+32|0);if((o|0)!=0){c[j>>2]=o;k=0;l=k;i=f;return l|0}else{k=32854;l=k;i=f;return l|0}}}while(0);k=30;l=k;i=f;return l|0}function wM(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((a|0)==301){d=w2(c)|0;e=d;return e|0}else{d=4;e=d;return e|0}return 0}function wN(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+56|0;a=d|0;j=d+48|0;k=b;b=e;e=f;f=g;g=h;h=0;l=0;c[j>>2]=0;if((b|0)!=0){m=u4(b,81920,0)|0;do{if((m|0)!=0){h=vb(m,1)|0;u_(m);if((h|0)!=0){break}n=65;o=n;i=d;return o|0}}while(0);m=u4(b,81192,0)|0;if((m|0)!=0){l=1;u_(m)}}do{if((k|0)==0){if((h|0)!=0){break}n=68;o=n;i=d;return o|0}}while(0);m=sl(0)|0;b=sl(0)|0;p=sl(0)|0;q=sl(0)|0;r=wW(a,k,h,l,m,b,p,q,j)|0;tQ(h);if((r|0)!=0){n=r;o=n;i=d;return o|0}if((c[j>>2]|0)!=0){r=g;g=c[j>>2]|0;vf(r,0,81104,(r=i,i=i+8|0,c[r>>2]=g,r)|0)|0;i=r}c[e>>2]=c[a>>2];c[e+4>>2]=c[a+4>>2];c[e+8>>2]=c[a+8>>2];c[e+12>>2]=wV(m,b,c[a>>2]|0)|0;c[e+16>>2]=c[a+24>>2];c[e+20>>2]=wV(p,q,c[a>>2]|0)|0;c[e+24>>2]=c[a+44>>2];r9(m);r9(b);r9(p);r9(q);xC(a+12|0);xC(a+32|0);c[f>>2]=tR(1,4)|0;if((c[f>>2]|0)==0){n=y$()|0;o=n;i=d;return o|0}if((t_(1)|0)!=0){rv(80912,c[e>>2]|0);rv(80816,c[e+4>>2]|0);rv(80480,c[e+8>>2]|0);rv(80464,c[e+12>>2]|0);rv(80424,c[e+16>>2]|0);rv(80352,c[e+20>>2]|0);rv(80272,c[e+24>>2]|0)}n=0;o=n;i=d;return o|0}function wO(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+88|0;f=e|0;g=e+24|0;h=e+48|0;j=e+80|0;k=b;b=d;d=0;l=0;while(1){if((l|0)>=6){break}c[f+(l<<2)>>2]=0;l=l+1|0}l=0;while(1){if((l|0)>=6){m=897;break}n=u4(b,49984+l|0,1)|0;if((n|0)!=0){c[f+(l<<2)>>2]=vc(n,1,5)|0;u_(n);if((c[f+(l<<2)>>2]|0)==0){m=893;break}}l=l+1|0}do{if((m|0)==893){d=65}else if((m|0)==897){n=u4(b,81920,5)|0;if((n|0)!=0){l=0;while(1){if((l|0)>=6){break}c[g+(l<<2)>>2]=0;l=l+1|0}o=vb(n,1)|0;u_(n);if((o|0)==0){d=65;break}d=wP(o,g|0)|0;tQ(o);if((d|0)!=0){break}l=0;while(1){if((l|0)>=6){break}if((c[f+(l<<2)>>2]|0)!=0){r9(c[g+(l<<2)>>2]|0)}else{c[f+(l<<2)>>2]=c[g+(l<<2)>>2]}l=l+1|0}}l=0;while(1){if((l|0)>=6){break}if((c[f+(l<<2)>>2]|0)==0){m=917;break}qQ(c[f+(l<<2)>>2]|0);l=l+1|0}if((m|0)==917){d=68;break}l=0;while(1){if((l|0)>=6){m=927;break}o=rw(c[f+(l<<2)>>2]|0,j,0)|0;if((o|0)==0){m=924;break}p=c[j>>2]|0;a4(h|0,30,81304,(q=i,i=i+16|0,c[q>>2]=a[49984+l|0]|0,c[q+8>>2]=p,q)|0)|0;i=q;ms(k,h|0,Ab(h|0)|0);ms(k,o,c[j>>2]|0);ms(k,81240,1);tQ(o);l=l+1|0}if((m|0)==927){break}else if((m|0)==924){d=y$()|0;break}}}while(0);l=0;while(1){if((l|0)>=6){break}sn(c[f+(l<<2)>>2]|0);l=l+1|0}i=e;return d|0}function wP(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+40|0;e=d+8|0;f=b;b=wU(0,a,e,d|0)|0;if((b|0)!=0){g=b;h=g;i=d;return h|0}b=sl(0)|0;a=sl(0)|0;j=xD(c[e>>2]|0,c[e+4>>2]|0)|0;if((xG(b,a,e+12|0,j)|0)!=0){uk(56008,(k=i,i=i+1|0,i=i+7&-8,c[k>>2]=0,k)|0);i=k;return 0}xF(j);xC(e+12|0);c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];c[f+12>>2]=wV(b,a,c[e>>2]|0)|0;c[f+16>>2]=c[e+24>>2];c[f+20>>2]=0;r9(b);r9(a);g=0;h=g;i=d;return h|0}function wQ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e|0;g=a;a=d;d=0;if((a|0)!=0){c[a>>2]=0}if((g|0)==0){h=b;do{if((h|0)>=0){if(h>>>0>=13){break}d=c[48072+(h*36|0)>>2]|0;if((a|0)!=0){c[a>>2]=c[48076+(h*36|0)>>2]}}}while(0);j=d;k=j;i=e;return k|0}do{if((c[g>>2]|0)!=0){if((c[g+4>>2]|0)==0){break}if((c[g+8>>2]|0)==0){break}if((c[g+12>>2]|0)==0){break}if((c[g+16>>2]|0)==0){break}c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];xB(f+12|0);if((wS(f+12|0,c[g+12>>2]|0)|0)!=0){xC(f+12|0);j=0;k=j;i=e;return k|0}c[f+24>>2]=c[g+16>>2];h=0;while(1){if((c[48072+(h*36|0)>>2]|0)==0){break}b=wT(c[48084+(h*36|0)>>2]|0)|0;if((q0(b,c[f>>2]|0)|0)==0){r9(b);b=wT(c[48088+(h*36|0)>>2]|0)|0;if((q0(b,c[f+4>>2]|0)|0)==0){r9(b);b=wT(c[48092+(h*36|0)>>2]|0)|0;if((q0(b,c[f+8>>2]|0)|0)==0){r9(b);b=wT(c[48096+(h*36|0)>>2]|0)|0;if((q0(b,c[f+24>>2]|0)|0)==0){r9(b);b=wT(c[48100+(h*36|0)>>2]|0)|0;if((q0(b,c[f+12>>2]|0)|0)==0){r9(b);b=wT(c[48104+(h*36|0)>>2]|0)|0;if((q0(b,c[f+16>>2]|0)|0)==0){l=966;break}}}}}}r9(b);h=h+1|0}if((l|0)==966){d=c[48072+(h*36|0)>>2]|0;if((a|0)!=0){c[a>>2]=c[48076+(h*36|0)>>2]}}xC(f+12|0);j=d;k=j;i=e;return k|0}}while(0);j=0;k=j;i=e;return k|0}function wR(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;i=i+32|0;d=b|0;e=b+24|0;if((wP(a,d|0)|0)!=0){f=0;g=f;i=b;return g|0}a=c[d+4>>2]|0;h=c[d+8>>2]|0;j=c[d+12>>2]|0;k=c[d+16>>2]|0;l=vf(e,0,60248,(m=i,i=i+40|0,c[m>>2]=c[d>>2],c[m+8>>2]=a,c[m+16>>2]=h,c[m+24>>2]=j,c[m+32>>2]=k,m)|0)|0;i=m;if((l|0)!=0){c[e>>2]=0}l=0;while(1){if((c[d+(l<<2)>>2]|0)==0){break}sn(c[d+(l<<2)>>2]|0);l=l+1|0}f=c[e>>2]|0;g=f;i=b;return g|0}function wS(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+24|0;f=e|0;g=e+8|0;h=e+16|0;j=a;a=b;c[f>>2]=(((qR(a)|0)+7|0)>>>0)/8|0;b=tU(c[f>>2]|0)|0;k=rE(5,b,c[f>>2]|0,f,a)|0;if((k|0)!=0){tQ(b);l=k;m=l;i=e;return m|0}if((c[f>>2]|0)>>>0<1){tQ(b);l=65;m=l;i=e;return m|0}if((d[b]|0|0)!=4){tQ(b);l=69;m=l;i=e;return m|0}if(((((c[f>>2]|0)-1|0)>>>0)%2|0|0)!=0){tQ(b);l=65;m=l;i=e;return m|0}c[f>>2]=(((c[f>>2]|0)-1|0)>>>0)/2|0;k=rA(g,5,b+1|0,c[f>>2]|0,0)|0;if((k|0)!=0){tQ(b);l=k;m=l;i=e;return m|0}k=rA(h,5,b+1+(c[f>>2]|0)|0,c[f>>2]|0,0)|0;tQ(b);if((k|0)!=0){r9(c[g>>2]|0);l=k;m=l;i=e;return m|0}else{k=c[j>>2]|0;b=c[g>>2]|0;se(k,b)|0;b=c[j+4>>2]|0;k=c[h>>2]|0;se(b,k)|0;k=c[j+8>>2]|0;sf(k,1)|0;r9(c[g>>2]|0);r9(c[h>>2]|0);l=0;m=l;i=e;return m|0}return 0}function wT(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+8|0;d=b|0;e=rA(d,4,a,0,0)|0;if((e|0)!=0){a=y4(e)|0;uk(58512,(e=i,i=i+8|0,c[e>>2]=a,e)|0);i=e;return 0}else{i=b;return c[d>>2]|0}return 0}function wU(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=a;a=b;b=d;d=e;e=0;if((a|0)!=0){g=0;while(1){if((c[48072+(g*36|0)>>2]|0)==0){break}if((a1(a|0,c[48072+(g*36|0)>>2]|0)|0)==0){h=1022;break}g=g+1|0}if((h|0)==1022){e=c[48072+(g*36|0)>>2]|0}if((c[48072+(g*36|0)>>2]|0)==0){i=0;while(1){if((c[48800+(i<<3)>>2]|0)==0){break}if((a1(a|0,c[48804+(i<<3)>>2]|0)|0)==0){h=1029;break}i=i+1|0}if((c[48800+(i<<3)>>2]|0)!=0){g=0;while(1){if((c[48072+(g*36|0)>>2]|0)==0){break}if((a1(c[48800+(i<<3)>>2]|0,c[48072+(g*36|0)>>2]|0)|0)==0){h=1036;break}g=g+1|0}if((h|0)==1036){e=c[48072+(g*36|0)>>2]|0}}}}else{g=0;while(1){if((c[48072+(g*36|0)>>2]|0)==0){break}if((f|0)==(c[48076+(g*36|0)>>2]|0)){h=1045;break}g=g+1|0}}if((c[48072+(g*36|0)>>2]|0)==0){j=55;k=j;return k|0}do{if((s5()|0)!=0){if((c[48080+(g*36|0)>>2]&1|0)!=0){break}j=60;k=j;return k|0}}while(0);c[d>>2]=c[48076+(g*36|0)>>2];c[b>>2]=wT(c[48084+(g*36|0)>>2]|0)|0;c[b+4>>2]=wT(c[48088+(g*36|0)>>2]|0)|0;c[b+8>>2]=wT(c[48092+(g*36|0)>>2]|0)|0;c[b+24>>2]=wT(c[48096+(g*36|0)>>2]|0)|0;c[b+12>>2]=wT(c[48100+(g*36|0)>>2]|0)|0;c[b+16>>2]=wT(c[48104+(g*36|0)>>2]|0)|0;c[b+20>>2]=sj(1)|0;c[b+28>>2]=e;j=0;k=j;return k|0}function wV(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f|0;h=f+8|0;j=(((qR(e)|0)+7|0)>>>0)/8|0;e=tU((j<<1)+1|0)|0;a[e]=4;k=e+1|0;l=rE(5,k,j,g,b)|0;if((l|0)!=0){b=y4(l)|0;uk(55968,(m=i,i=i+8|0,c[m>>2]=b,m)|0);i=m;return 0}if((c[g>>2]|0)>>>0<j>>>0){Ad(k+(j-(c[g>>2]|0))|0,k|0,c[g>>2]|0);Ae(k|0,0,j-(c[g>>2]|0)|0)}k=k+j|0;l=rE(5,k,j,g,d)|0;if((l|0)!=0){d=y4(l)|0;uk(55968,(m=i,i=i+8|0,c[m>>2]=d,m)|0);i=m;return 0}if((c[g>>2]|0)>>>0<j>>>0){Ad(k+(j-(c[g>>2]|0))|0,k|0,c[g>>2]|0);Ae(k|0,0,j-(c[g>>2]|0)|0)}l=rA(h,5,e,(j<<1)+1|0,0)|0;if((l|0)!=0){j=y4(l)|0;uk(55856,(m=i,i=i+8|0,c[m>>2]=j,m)|0);i=m;return 0}else{tQ(e);i=f;return c[h>>2]|0}return 0}function wW(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;l=i;i=i+56|0;m=l|0;n=l+8|0;o=l+40|0;p=a;c[m>>2]=b;b=e;e=f;f=g;g=h;h=j;j=k;c[j>>2]=0;k=wU(c[m>>2]|0,d,n,m)|0;if((k|0)!=0){q=k;r=q;i=l;return r|0}if((t_(1)|0)!=0){rv(80216,c[n>>2]|0);rv(80200,c[n+4>>2]|0);rv(80176,c[n+8>>2]|0);rv(80112,c[n+24>>2]|0);rv(80072,c[n+12>>2]|0);rv(79736,c[n+16>>2]|0);rv(79720,c[n+20>>2]|0);if((c[n+28>>2]|0)!=0){um(79680,(s=i,i=i+8|0,c[s>>2]=c[n+28>>2],s)|0);i=s}}k=wX(c[n+24>>2]|0,(b|0)!=0?1:2)|0;xB(o);b=xD(c[n>>2]|0,c[n+4>>2]|0)|0;xN(o,k,n+12|0,b);c[p>>2]=sc(c[n>>2]|0)|0;c[p+4>>2]=sc(c[n+4>>2]|0)|0;c[p+8>>2]=sc(c[n+8>>2]|0)|0;xB(p+12|0);wY(p+12|0,n+12|0);c[p+24>>2]=sc(c[n+24>>2]|0)|0;xB(p+32|0);wY(p+32|0,o);c[p+44>>2]=sc(k)|0;do{if((e|0)!=0){if((f|0)==0){break}if((xG(e,f,p+12|0,b)|0)!=0){uk(79576,(s=i,i=i+1|0,i=i+7&-8,c[s>>2]=0,s)|0);i=s;return 0}else{break}}}while(0);do{if((g|0)!=0){if((h|0)==0){break}if((xG(g,h,p+32|0,b)|0)!=0){uk(79576,(s=i,i=i+1|0,i=i+7&-8,c[s>>2]=0,s)|0);i=s;return 0}else{break}}}while(0);xF(b);xC(o);r9(k);c[j>>2]=c[n+28>>2];wZ(n);w_(p,(c[m>>2]|0)-64|0);q=0;r=q;i=l;return r|0}function wX(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;b=qR(e)|0;f=sm(b)|0;if((t_(1)|0)!=0){um(77832,(g=i,i=i+16|0,c[g>>2]=b,c[g+8>>2]=a,g)|0);i=g}so(f,b,a);rh(f,f,e);i=d;return f|0}function wY(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;se(c[d>>2]|0,c[a>>2]|0)|0;se(c[d+4>>2]|0,c[a+4>>2]|0)|0;se(c[d+8>>2]|0,c[a+8>>2]|0)|0;return}function wZ(a){a=a|0;var b=0;b=a;r9(c[b>>2]|0);c[b>>2]=0;r9(c[b+4>>2]|0);c[b+4>>2]=0;r9(c[b+8>>2]|0);c[b+8>>2]=0;xC(b+12|0);r9(c[b+24>>2]|0);c[b+24>>2]=0;return}function w_(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;d=i;i=i+96|0;e=d|0;f=d+48|0;g=d+64|0;h=a;a=b;b=sl(a)|0;j=sl(a)|0;k=sl(a)|0;l=sl(a)|0;m=sl(a)|0;if((t_(1)|0)!=0){um(79464,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}xB(f);w$(g,h|0);o=e|0;p=g;Ac(o|0,p|0,32)|0;xB(e+32|0);wY(e+32|0,h+32|0);so(b,a,0);if((w0(b,h,l,m)|0)!=0){uk(79424,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}if((w1(b,e,l,m)|0)!=0){uk(79368,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n}if((t_(1)|0)==0){q=e+32|0;xC(q);r=e|0;wZ(r);xC(f);s=m;r9(s);t=l;r9(t);u=k;r9(u);v=j;r9(v);w=b;r9(w);i=d;return}um(79320,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n;q=e+32|0;xC(q);r=e|0;wZ(r);xC(f);s=m;r9(s);t=l;r9(t);u=k;r9(u);v=j;r9(v);w=b;r9(w);i=d;return}function w$(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+32|0;e=b;b=i;i=i+32|0;Ac(b,e,32)|0;e=d|0;c[e>>2]=sc(c[b>>2]|0)|0;c[e+4>>2]=sc(c[b+4>>2]|0)|0;c[e+8>>2]=sc(c[b+8>>2]|0)|0;xB(e+12|0);wY(e+12|0,b+12|0);c[e+24>>2]=sc(c[b+24>>2]|0)|0;b=a;a=e;Ac(b|0,a|0,32)|0;i=d;return}function w0(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+16|0;g=f|0;h=a;a=b;b=d;d=e;e=0;if((t_(1)|0)!=0){rv(78464,h)}j=0;k=r1(0)|0;l=r1(0)|0;m=r1(0)|0;n=r1(0)|0;xB(g);sf(d,0)|0;sf(b,0)|0;o=xD(c[a>>2]|0,c[a+4>>2]|0)|0;L1319:while(1){if(!((q$(d,0)|0)!=0^1)){p=1119;break}while(1){if(!((q$(b,0)|0)!=0^1)){break}r9(j);j=wX(c[a+24>>2]|0,1)|0;xN(g,j,a+12|0,o);if((xG(n,0,g,o)|0)!=0){p=1114;break L1319}rh(b,n,c[a+24>>2]|0)}rp(k,c[a+44>>2]|0,b,c[a+24>>2]|0);qO(l,h,k,c[a+24>>2]|0);rg(m,j,c[a+24>>2]|0)|0;rp(d,m,l,c[a+24>>2]|0)}if((p|0)==1114){if((t_(1)|0)!=0){um(78400,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a}e=8;q=o;xF(q);xC(g);r=n;r9(r);s=m;r9(s);t=l;r9(t);u=k;r9(u);v=j;r9(v);w=e;i=f;return w|0}else if((p|0)==1119){if((t_(1)|0)!=0){rv(78208,b);rv(78176,d)}q=o;xF(q);xC(g);r=n;r9(r);s=m;r9(s);t=l;r9(t);u=k;r9(u);v=j;r9(v);w=e;i=f;return w|0}return 0}function w1(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+48|0;g=f|0;h=f+16|0;j=f+32|0;k=a;a=b;b=d;d=e;e=0;do{if((q$(b,0)|0)>0){if((q0(b,c[a+24>>2]|0)|0)>=0){break}do{if((q$(d,0)|0)>0){if((q0(d,c[a+24>>2]|0)|0)>=0){break}l=r1(0)|0;m=r1(0)|0;n=r1(0)|0;o=r1(0)|0;p=r1(0)|0;xB(g);xB(h);xB(j);q=xD(c[a>>2]|0,c[a+4>>2]|0)|0;r=l;s=d;t=c[a+24>>2]|0;rg(r,s,t)|0;rp(m,k,l,c[a+24>>2]|0);xN(h,m,a+12|0,q);rp(n,b,l,c[a+24>>2]|0);xN(j,n,a+32|0,q);xM(g,h,j,q);do{if((q$(c[g+8>>2]|0,0)|0)!=0){if((xG(o,p,g,q)|0)!=0){if((t_(1)|0)!=0){um(79056,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u}e=8;break}rh(o,o,c[a+24>>2]|0);if((q0(o,b)|0)!=0){if((t_(1)|0)!=0){rv(78736,o);rv(78712,p);rv(78696,b);rv(78640,d);um(78544,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u}e=8;break}else{if((t_(1)|0)!=0){um(78496,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u}break}}else{if((t_(1)|0)!=0){um(79184,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u}e=8}}while(0);xF(q);xC(j);xC(h);xC(g);r9(p);r9(o);r9(n);r9(m);r9(l);v=e;w=v;i=f;return w|0}}while(0);v=8;w=v;i=f;return w|0}}while(0);v=8;w=v;i=f;return w|0}function w2(a){a=a|0;var b=0,c=0,d=0;b=a;a=0;if((a|0)==0){c=0;d=c;return d|0}if((b|0)!=0){cP[b&15](77768,301,77800,a)}c=50;d=c;return d|0}function w3(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b|0;e=a;a=1;f=0;xB(d);g=w4(c[e+12>>2]|0,e|0)|0;h=r1(0)|0;rp(h,c[e+16>>2]|0,c[e+16>>2]|0,c[e>>2]|0);L1383:do{if((q0(g,h)|0)!=0){if((t_(1)|0)!=0){um(77216,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}}else{if((q$(c[e+20>>2]|0,0)|0)==0){if((t_(1)|0)!=0){um(77168,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}break}f=xD(c[e>>2]|0,c[e+4>>2]|0)|0;xN(d,c[e+24>>2]|0,e+12|0,f);if((q$(c[d+8>>2]|0,0)|0)!=0){if((t_(1)|0)!=0){um(76888,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}break}if((q$(c[e+40>>2]|0,0)|0)==0){if((t_(1)|0)!=0){um(76832,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}break}xN(d,c[e+44>>2]|0,e+12|0,f);do{if((c[d>>2]|0)==(c[e+32>>2]|0)){if((c[d+4>>2]|0)!=(c[e+36>>2]|0)){break}if((c[d+8>>2]|0)!=(c[e+40>>2]|0)){break}if((t_(1)|0)!=0){um(76760,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}break L1383}}while(0);a=0}}while(0);xF(f);r9(h);r9(g);xC(d);i=b;return a|0}function w4(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;a=b;b=sj(3)|0;e=sl(0)|0;f=sl(0)|0;g=sl(0)|0;rq(e,d,b,c[a>>2]|0);rp(f,c[a+4>>2]|0,d,c[a>>2]|0);qO(f,f,c[a+8>>2]|0,c[a>>2]|0);qO(g,e,f,c[a>>2]|0);r9(e);r9(f);r9(b);return g|0}function w5(a,b){a=a|0;b=b|0;c[30584]=a;c[30574]=b;return}function w6(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0;d=i;i=i+16|0;a=d|0;g=e;xf(a,b,f);c[g>>2]=c[a>>2];c[g+4>>2]=c[a+4>>2];c[g+8>>2]=c[a+8>>2];c[g+12>>2]=c[a+12>>2];i=d;return 0}function w7(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;a=i;i=i+16|0;d=a|0;e=b;b=0;do{if((c[e>>2]|0)!=0){if((c[e+4>>2]|0)==0){break}if((c[e+8>>2]|0)==0){break}if((c[e+12>>2]|0)==0){break}c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];if((xo(d)|0)==0){b=7}f=b;i=a;return f|0}}while(0);b=30;f=b;i=a;return f|0}function w8(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;f=i;i=i+16|0;a=f|0;g=b;b=d;d=e;e=0;do{if((b|0)!=0){if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[g>>2]=r1(c[(c[a>>2]|0)+4>>2]|0)|0;c[g+4>>2]=r1(c[(c[a>>2]|0)+4>>2]|0)|0;xj(c[g>>2]|0,c[g+4>>2]|0,b,a);h=e;i=f;return h|0}}while(0);e=30;h=e;i=f;return h|0}function w9(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;f=i;i=i+16|0;a=f|0;g=b;b=d;d=e;e=0;do{if((c[b>>2]|0)!=0){if((c[b+4>>2]|0)==0){break}if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}if((c[d+12>>2]|0)==0){break}c[a>>2]=c[d>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];c[g>>2]=r4(c[(c[a>>2]|0)+4>>2]|0)|0;xk(c[g>>2]|0,c[b>>2]|0,c[b+4>>2]|0,a);h=e;i=f;return h|0}}while(0);e=30;h=e;i=f;return h|0}function xa(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=i;i=i+16|0;f=a|0;g=b;b=d;d=e;e=0;do{if((b|0)!=0){if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}if((c[d+12>>2]|0)==0){break}c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];c[f+12>>2]=c[d+12>>2];c[g>>2]=r1(c[(c[f>>2]|0)+4>>2]|0)|0;c[g+4>>2]=r1(c[(c[f>>2]|0)+4>>2]|0)|0;xl(c[g>>2]|0,c[g+4>>2]|0,b,f);h=e;i=a;return h|0}}while(0);e=30;h=e;i=a;return h|0}function xb(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;g=i;i=i+16|0;f=g|0;a=b;b=d;d=e;e=0;do{if((c[b>>2]|0)!=0){if((c[b+4>>2]|0)==0){break}if((a|0)==0){break}if((c[d>>2]|0)==0){break}if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];if((xm(c[b>>2]|0,c[b+4>>2]|0,a,f)|0)==0){e=8}h=e;i=g;return h|0}}while(0);e=30;h=e;i=g;return h|0}function xc(a,b){a=a|0;b=b|0;return qR(c[b>>2]|0)|0}function xd(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;h=i;i=i+16|0;d=h|0;a=b;b=e;e=f;f=g;g=0;if((b|0)!=0){j=u4(b,63408,0)|0;do{if((j|0)!=0){g=vc(j,1,0)|0;u_(j);if((g|0)!=0){break}k=30;l=k;i=h;return l|0}}while(0)}if((g|0)!=0){m=xe(d,a,g,f)|0}else{xf(d,a,f);m=0}c[e>>2]=c[d>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[e+12>>2]=c[d+12>>2];k=m;l=k;i=h;return l|0}function xe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;g=a;a=b;b=d;d=e;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;e=qR(b)|0;do{if(e>>>0>=64){if(e>>>0>=a>>>0){break}h=sl(a)|0;j=xg(a)|0;if((j&1|0)!=0){j=j+1|0}k=r1(1)|0;l=nb(0,a,j,k,d)|0;qM(h,l,1);if((t_(1)|0)!=0){um(75224,(j=i,i=i+8|0,c[j>>2]=e,j)|0);i=j}do{if((q$(b,0)|0)>0){if((q0(b,h)|0)>=0){break}j=sl(a)|0;rq(j,k,b,l);if((t_(1)|0)!=0){xh(10);rv(58496,l);rv(56296,k);rv(83376,j);rv(82384,b)}c[g>>2]=l;c[g+4>>2]=k;c[g+8>>2]=j;c[g+12>>2]=sc(b)|0;sn(h);if((xi(g,a-64|0,1)|0)!=0){sn(c[g>>2]|0);c[g>>2]=0;sn(c[g+4>>2]|0);c[g+4>>2]=0;sn(c[g+8>>2]|0);c[g+8>>2]=0;sn(c[g+12>>2]|0);c[g+12>>2]=0;m=7;n=m;i=f;return n|0}else{m=0;n=m;i=f;return n|0}}}while(0);sn(h);sn(l);sn(k);m=55;n=m;i=f;return n|0}}while(0);m=55;n=m;i=f;return n|0}function xf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=i;g=b;b=d;d=sl(b)|0;h=xg(b)|0;if((h&1|0)!=0){h=h+1|0}j=r1(1)|0;k=nb(0,b,h,j,e)|0;qM(d,k,1);e=((h*3|0)>>>0)/2|0;if(e>>>0>=b>>>0){uf(61760,292,87248)}h=sm(e)|0;if((t_(1)|0)!=0){um(60208,(l=i,i=i+8|0,c[l>>2]=e,l)|0);i=l}l=0;do{if((t_(1)|0)!=0){xh(46)}if((l|0)!=0){if(e>>>0<16){tQ(l);l=sH(((e+7|0)>>>0)/8|0,2)|0}else{m=sH(2,2)|0;n=l;o=m;a[n]=a[o]|0;a[n+1|0]=a[o+1|0]|0;tQ(m)}}else{l=sH(((e+7|0)>>>0)/8|0,2)|0}rz(h,l,((e+7|0)>>>0)/8|0,0);qV(h,e+1|0);if((q$(h,0)|0)>0){p=(q0(h,d)|0)<0}else{p=0}}while(p^1);tQ(l);l=sl(b)|0;rq(l,j,h,k);if((t_(1)|0)==0){q=k;r=g;s=r|0;c[s>>2]=q;t=j;u=g;v=u+4|0;c[v>>2]=t;w=l;x=g;y=x+8|0;c[y>>2]=w;z=h;A=g;B=A+12|0;c[B>>2]=z;C=d;sn(C);D=g;E=b;F=E-64|0;G=xi(D,F,0)|0;i=f;return}xh(10);rv(58496,k);rv(56296,j);rv(83376,l);rv(82384,h);q=k;r=g;s=r|0;c[s>>2]=q;t=j;u=g;v=u+4|0;c[v>>2]=t;w=l;x=g;y=x+8|0;c[y>>2]=w;z=h;A=g;B=A+12|0;c[B>>2]=z;C=d;sn(C);D=g;E=b;F=E-64|0;G=xi(D,F,0)|0;i=f;return}function xg(a){a=a|0;var b=0,d=0,e=0,f=0;b=a;a=0;while(1){if((c[8+(a<<3)>>2]|0)==0){d=1305;break}if(b>>>0<=(c[8+(a<<3)>>2]|0)>>>0){d=1302;break}a=a+1|0}if((d|0)==1305){e=((b>>>0)/8|0)+200|0;f=e;return f|0}else if((d|0)==1302){e=c[12+(a<<3)>>2]|0;f=e;return f|0}return 0}function xh(a){a=a|0;if((c[30584]|0)==0){return}cC[c[30584]&15](c[30574]|0,76304,a,0,0);return}function xi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+16|0;f=e|0;g=a;a=b;b=sl(0)|0;h=sl(a)|0;j=sl(a)|0;k=sl(a)|0;l=0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];so(b,a,0);xj(h,j,b,f);xk(k,h,j,g);if((q0(b,k)|0)!=0){l=l|1}xl(h,j,b,g);if((xm(h,j,b,f)|0)==0){l=l|2}sn(b);sn(h);sn(j);sn(k);do{if((l|0)!=0){if((d|0)!=0){break}uk(80592,(m=i,i=i+16|0,c[m>>2]=(l&1|0)!=0?79888:123304,c[m+8>>2]=(l&2|0)!=0?77960:123304,m)|0);i=m;return 0}}while(0);if((l|0)==0){n=l;i=e;return n|0}if((t_(1)|0)==0){n=l;i=e;return n|0}um(80592,(m=i,i=i+16|0,c[m>>2]=(l&1|0)!=0?79888:123304,c[m+8>>2]=(l&2|0)!=0?77960:123304,m)|0);i=m;n=l;i=e;return n|0}function xj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=b;b=e;e=xn(c[b>>2]|0,1)|0;rq(a,c[b+4>>2]|0,e,c[b>>2]|0);rq(f,c[b+8>>2]|0,e,c[b>>2]|0);rp(f,f,d,c[b>>2]|0);r9(e);return}function xk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=e;e=r4(c[(c[f>>2]|0)+4>>2]|0)|0;rq(e,b,c[f+12>>2]|0,c[f>>2]|0);rg(e,e,c[f>>2]|0)|0;rp(a,d,e,c[f>>2]|0);r9(e);return}function xl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=a;a=e;e=r1(c[f+4>>2]|0)|0;g=r1(c[f+4>>2]|0)|0;h=sc(c[a>>2]|0)|0;qM(h,h,1);i=xn(c[a>>2]|0,0)|0;rq(f,c[a+4>>2]|0,i,c[a>>2]|0);ro(e,c[a+12>>2]|0,f);qP(e,d,e,h);rg(g,i,h)|0;rp(b,e,g,h);r9(i);r9(e);r9(g);r9(h);return}function xm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f|0;h=f+16|0;j=a;a=b;b=d;d=e;do{if((q$(j,0)|0)>0){if((q0(j,c[d>>2]|0)|0)>=0){break}e=r1(c[j+4>>2]|0)|0;k=r1(c[j+4>>2]|0)|0;l=k;m=c[d+4>>2]|0;n=c[d>>2]|0;rg(l,m,n)|0;c[g>>2]=k;c[h>>2]=b;c[g+4>>2]=c[d+8>>2];c[h+4>>2]=j;c[g+8>>2]=j;c[h+8>>2]=a;c[g+12>>2]=0;c[h+12>>2]=0;xP(e,g|0,h|0,c[d>>2]|0);n=((q$(e,1)|0)!=0^1)&1;r9(e);r9(k);o=n;p=o;i=f;return p|0}}while(0);o=0;p=o;i=f;return p|0}function xn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;f=b;b=r4(0)|0;g=r1(c[f+4>>2]|0)|0;h=sc(f)|0;j=qR(f)|0;k=0;do{if((d|0)!=0){l=(((xg(j)|0)*3|0)>>>0)/2|0;if(l>>>0>=j>>>0){uf(61760,192,87328);return 0}else{break}}else{l=j}}while(0);j=((l+7|0)>>>0)/8|0;if((t_(1)|0)!=0){um(77048,(d=i,i=i+1|0,i=i+7&-8,c[d>>2]=0,d)|0);i=d}qM(h,f,1);L1604:while(1){do{if((k|0)!=0){if(l>>>0<32){m=1348;break}f=sH(4,1)|0;d=k;n=f;a[d]=a[n]|0;a[d+1|0]=a[n+1|0]|0;a[d+2|0]=a[n+2|0]|0;a[d+3|0]=a[n+3|0]|0;tQ(f)}else{m=1348}}while(0);if((m|0)==1348){m=0;tQ(k);k=sH(j,1)|0}rz(b,k,j,0);while(1){if((q0(b,h)|0)>=0){m=1352;break}if((q$(b,0)|0)<=0){m=1356;break}if((ra(g,b,h)|0)!=0){break L1604}qK(b,b,1);if((t_(1)|0)!=0){xh(46)}}if((m|0)==1352){m=0;if((t_(1)|0)!=0){xh(43)}}else if((m|0)==1356){m=0;if((t_(1)|0)!=0){xh(45)}}}tQ(k);if((t_(1)|0)==0){o=h;r9(o);p=g;r9(p);q=b;i=e;return q|0}xh(10);o=h;r9(o);p=g;r9(p);q=b;i=e;return q|0}function xo(a){a=a|0;var b=0,d=0;b=a;a=r1(c[(c[b+8>>2]|0)+4>>2]|0)|0;rq(a,c[b+4>>2]|0,c[b+12>>2]|0,c[b>>2]|0);d=((q0(a,c[b+8>>2]|0)|0)!=0^1)&1;r9(a);return d|0}function xp(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+1008|0;j=h|0;k=h+8|0;l=a;a=f;f=g;g=0;m=0;if((mI(l)|0)!=(f|0)){n=75264;o=n;i=h;return o|0}m=mi(j,l,0)|0;if((m|0)!=0){n=81160;o=n;i=h;return o|0}m=b;if((m|0)==0){ms(c[j>>2]|0,d,e)}else if((m|0)==1){Ae(k|0,97,1e3);m=0;while(1){if((m|0)>=1e3){break}ms(c[j>>2]|0,k|0,1e3);m=m+1|0}}else{g=72328}if((g|0)==0){if((Af(mB(c[j>>2]|0,l)|0,a|0,f|0)|0)!=0){g=68384}}mq(c[j>>2]|0);n=g;o=n;i=h;return o|0}function xq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=a;a=c;c=0;if((mJ(d,8,0,0)|0)==0){c=xr(d,b,a)|0;e=c;f=xs(e)|0;return f|0}c=5;if((a|0)!=0){cP[a&15](75104,d,81152,72296)}e=c;f=xs(e)|0;return f|0}function xr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=b;b=c;switch(a|0){case 10:{e=xy(d,b)|0;break};case 2:{e=xu(d,b)|0;break};case 9:{e=xx(d,b)|0;break};case 8:{e=xw(d,b)|0;break};case 11:{e=xv(d,b)|0;break};default:{e=5}}return e|0}function xs(a){a=a|0;return xt(1,a)|0}function xt(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function xu(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+128|0;e=d|0;f=b;b=c;c=69720;g=0;while(1){if((g|0)>=64){break}a[e+g|0]=g&255;g=g+1|0}h=xz(2,69416,9,e|0,64,69136,20)|0;L1694:do{if((h|0)==0){do{if((f|0)!=0){c=68776;g=0;j=48;while(1){if((g|0)>=20){break}k=j;j=k+1|0;a[e+g|0]=k&255;g=g+1|0}h=xz(2,68e3,9,e|0,20,67768,20)|0;if((h|0)!=0){break L1694}c=67528;g=0;j=80;while(1){if((g|0)>=100){break}k=j;j=k+1|0;a[e+g|0]=k&255;g=g+1|0}h=xz(2,67224,9,e|0,100,66936,20)|0;if((h|0)!=0){break L1694}c=66760;g=0;j=112;while(1){if((g|0)>=49){break}k=j;j=k+1|0;a[e+g|0]=k&255;g=g+1|0}h=xz(2,66528,9,e|0,49,66232,20)|0;if((h|0)!=0){break L1694}else{break}}}while(0);l=0;m=l;i=d;return m|0}}while(0);if((b|0)!=0){cP[b&15](75104,2,c,h)}l=50;m=l;i=d;return m|0}function xv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a;a=b;b=0;while(1){if((c[4936+(b*40|0)>>2]|0)==0){break}e=c[4936+(b*40|0)>>2]|0;f=c[4940+(b*40|0)>>2]|0;g=Ab(c[4940+(b*40|0)>>2]|0)|0;h=c[4944+(b*40|0)>>2]|0;i=xz(11,f,g,h,Ab(c[4944+(b*40|0)>>2]|0)|0,4948+(b*40|0)|0,28)|0;if((i|0)!=0){j=1451;break}if((d|0)==0){j=1453;break}b=b+1|0}if((j|0)!=1453)if((j|0)==1451){if((a|0)!=0){cP[a&15](75104,11,e,i)}k=50;l=k;return l|0}k=0;l=k;return l|0}function xw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+8|0;e=d|0;f=a;a=b;b=0;while(1){if((c[4624+(b*44|0)>>2]|0)==0){g=1478;break}h=c[4624+(b*44|0)>>2]|0;j=c[4628+(b*44|0)>>2]|0;k=Ab(c[4628+(b*44|0)>>2]|0)|0;l=c[4632+(b*44|0)>>2]|0;m=xz(8,j,k,l,Ab(c[4632+(b*44|0)>>2]|0)|0,4636+(b*44|0)|0,32)|0;if((m|0)!=0){g=1466;break}l=c[4632+(b*44|0)>>2]|0;n=yT(l,Ab(c[4632+(b*44|0)>>2]|0)|0)|0;if((n|0)==0){g=1468;break}l=c[4628+(b*44|0)>>2]|0;yU(n,l,Ab(c[4628+(b*44|0)>>2]|0)|0);l=yY(n,e)|0;if((l|0)==0){g=1470;break}if((c[e>>2]|0)!=32){g=1473;break}if((Af(l|0,4636+(b*44|0)|0,32)|0)!=0){g=1473;break}yW(n);if((f|0)==0){g=1475;break}b=b+1|0}if((g|0)!=1466)if((g|0)==1468){m=70720}else if((g|0)==1470){m=70360;yW(n)}else if((g|0)==1473){m=70032;yW(n)}else if((g|0)==1475){g=1478}if((g|0)==1478){o=0;p=o;i=d;return p|0}if((a|0)!=0){cP[a&15](75104,8,h,m)}o=50;p=o;i=d;return p|0}function xx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a;a=b;b=0;while(1){if((c[4200+(b*60|0)>>2]|0)==0){break}e=c[4200+(b*60|0)>>2]|0;f=c[4204+(b*60|0)>>2]|0;g=Ab(c[4204+(b*60|0)>>2]|0)|0;h=c[4208+(b*60|0)>>2]|0;i=xz(9,f,g,h,Ab(c[4208+(b*60|0)>>2]|0)|0,4212+(b*60|0)|0,48)|0;if((i|0)!=0){j=1488;break}if((d|0)==0){j=1490;break}b=b+1|0}if((j|0)!=1490)if((j|0)==1488){if((a|0)!=0){cP[a&15](75104,9,e,i)}k=50;l=k;return l|0}k=0;l=k;return l|0}function xy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a;a=b;b=0;while(1){if((c[3664+(b*76|0)>>2]|0)==0){break}e=c[3664+(b*76|0)>>2]|0;f=c[3668+(b*76|0)>>2]|0;g=Ab(c[3668+(b*76|0)>>2]|0)|0;h=c[3672+(b*76|0)>>2]|0;i=xz(10,f,g,h,Ab(c[3672+(b*76|0)>>2]|0)|0,3676+(b*76|0)|0,64)|0;if((i|0)!=0){j=1503;break}if((d|0)==0){j=1505;break}b=b+1|0}if((j|0)!=1505)if((j|0)==1503){if((a|0)!=0){cP[a&15](75104,10,e,i)}k=50;l=k;return l|0}k=0;l=k;return l|0}function xz(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=j|0;l=a;a=h;if((mI(l)|0)!=(a|0)){m=73776;n=m;i=j;return n|0}if((mi(k,l,2)|0)!=0){m=73240;n=m;i=j;return n|0}if((mw(c[k>>2]|0,e,f)|0)!=0){mq(c[k>>2]|0);m=72024;n=m;i=j;return n|0}ms(c[k>>2]|0,b,d);d=mB(c[k>>2]|0,l)|0;if((d|0)==0){mq(c[k>>2]|0);m=71712;n=m;i=j;return n|0}if((Af(d|0,g|0,a|0)|0)!=0){mq(c[k>>2]|0);m=71360;n=m;i=j;return n|0}else{mq(c[k>>2]|0);m=0;n=m;i=j;return n|0}return 0}function xA(){return 84824}function xB(a){a=a|0;var b=0;b=a;c[b>>2]=sl(0)|0;c[b+4>>2]=sl(0)|0;c[b+8>>2]=sl(0)|0;return}function xC(a){a=a|0;var b=0;b=a;r9(c[b>>2]|0);c[b>>2]=0;r9(c[b+4>>2]|0);c[b+4>>2]=0;r9(c[b+8>>2]|0);c[b+8>>2]=0;return}function xD(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;qQ(d);qQ(a);b=tX(1,80)|0;c[b>>2]=sc(d)|0;c[b+4>>2]=sc(a)|0;a=sd(c[b>>2]|0)|0;qM(a,c[b>>2]|0,3);c[b+8>>2]=((q0(c[b+4>>2]|0,a)|0)!=0^1)&1;r9(a);c[b+12>>2]=sj(1)|0;c[b+16>>2]=sj(2)|0;c[b+20>>2]=sj(3)|0;c[b+24>>2]=sj(4)|0;c[b+28>>2]=sj(8)|0;c[b+32>>2]=r1(0)|0;xE(c[b+32>>2]|0,c[b+16>>2]|0,b);a=0;while(1){if(a>>>0>=11){break}c[b+36+(a<<2)>>2]=sd(c[b>>2]|0)|0;a=a+1|0}return b|0}function xE(a,b,d){a=a|0;b=b|0;d=d|0;rg(a,b,c[d>>2]|0)|0;return}function xF(a){a=a|0;var b=0;b=a;if((b|0)==0){return}r9(c[b>>2]|0);r9(c[b+4>>2]|0);r9(c[b+12>>2]|0);r9(c[b+16>>2]|0);r9(c[b+20>>2]|0);r9(c[b+24>>2]|0);r9(c[b+28>>2]|0);r9(c[b+32>>2]|0);a=0;while(1){if(a>>>0>=11){break}r9(c[b+36+(a<<2)>>2]|0);a=a+1|0}tQ(b);return}function xG(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=a;a=b;b=d;d=e;if((q$(c[b+8>>2]|0,0)|0)==0){g=-1;h=g;return h|0}e=sl(0)|0;i=sl(0)|0;xE(e,c[b+8>>2]|0,d);xH(i,e,e,d);if((f|0)!=0){xH(f,c[b>>2]|0,i,d)}if((a|0)!=0){f=sl(0)|0;xH(f,i,e,d);xH(a,c[b+4>>2]|0,f,d);r9(f)}r9(i);r9(e);g=0;h=g;return h|0}function xH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;rp(a,b,d,c[e>>2]|0);return}function xI(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;a=b;b=d;do{if((q$(c[a+4>>2]|0,0)|0)!=0){if((q$(c[a+8>>2]|0,0)|0)==0){break}if((c[b+8>>2]|0)!=0){xJ(c[b+36>>2]|0,c[a+8>>2]|0,c[b+16>>2]|0,b);xK(c[b+48>>2]|0,c[a>>2]|0,c[b+36>>2]|0,b);xH(c[b+48>>2]|0,c[b+48>>2]|0,c[b+20>>2]|0,b);xL(c[b+40>>2]|0,c[a>>2]|0,c[b+36>>2]|0,b);xH(c[b+48>>2]|0,c[b+48>>2]|0,c[b+40>>2]|0,b)}else{xJ(c[b+48>>2]|0,c[a>>2]|0,c[b+16>>2]|0,b);xH(c[b+48>>2]|0,c[b+48>>2]|0,c[b+20>>2]|0,b);xJ(c[b+36>>2]|0,c[a+8>>2]|0,c[b+24>>2]|0,b);xH(c[b+36>>2]|0,c[b+36>>2]|0,c[b+4>>2]|0,b);xL(c[b+48>>2]|0,c[b+48>>2]|0,c[b+36>>2]|0,b)}xH(c[e+8>>2]|0,c[a+4>>2]|0,c[a+8>>2]|0,b);xH(c[e+8>>2]|0,c[e+8>>2]|0,c[b+16>>2]|0,b);xJ(c[b+40>>2]|0,c[a+4>>2]|0,c[b+16>>2]|0,b);xH(c[b+52>>2]|0,c[b+40>>2]|0,c[a>>2]|0,b);xH(c[b+52>>2]|0,c[b+52>>2]|0,c[b+24>>2]|0,b);xJ(c[e>>2]|0,c[b+48>>2]|0,c[b+16>>2]|0,b);xH(c[b+36>>2]|0,c[b+52>>2]|0,c[b+16>>2]|0,b);xK(c[e>>2]|0,c[e>>2]|0,c[b+36>>2]|0,b);xJ(c[b+40>>2]|0,c[b+40>>2]|0,c[b+16>>2]|0,b);xH(c[b+56>>2]|0,c[b+40>>2]|0,c[b+28>>2]|0,b);xK(c[e+4>>2]|0,c[b+52>>2]|0,c[e>>2]|0,b);xH(c[e+4>>2]|0,c[e+4>>2]|0,c[b+48>>2]|0,b);xK(c[e+4>>2]|0,c[e+4>>2]|0,c[b+56>>2]|0,b);return}}while(0);sf(c[e>>2]|0,1)|0;sf(c[e+4>>2]|0,1)|0;sf(c[e+8>>2]|0,0)|0;return}function xJ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=a;a=b;b=d;d=e;if((q$(b,2)|0)==0){ro(f,a,a);rh(f,f,c[d>>2]|0);return}if((q$(b,3)|0)==0){ro(f,a,a);ro(f,f,a);rh(f,f,c[d>>2]|0)}else{rq(f,a,b,c[d>>2]|0)}return}function xK(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;qP(a,b,d,c[e>>2]|0);return}function xL(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;qO(a,b,d,c[e>>2]|0);return}function xM(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a;a=b;b=d;d=e;do{if((q0(c[a>>2]|0,c[b>>2]|0)|0)==0){if((q0(c[a+4>>2]|0,c[b+4>>2]|0)|0)!=0){break}if((q0(c[a+8>>2]|0,c[b+8>>2]|0)|0)!=0){break}xI(f,a,d);return}}while(0);if((q$(c[a+8>>2]|0,0)|0)!=0){if((q$(c[b+8>>2]|0,0)|0)!=0){e=((q$(c[a+8>>2]|0,1)|0)!=0^1)&1;if((((q$(c[b+8>>2]|0,1)|0)!=0^1)&1|0)!=0){g=c[d+36>>2]|0;h=c[a>>2]|0;se(g,h)|0}else{xJ(c[d+36>>2]|0,c[b+8>>2]|0,c[d+16>>2]|0,d);xH(c[d+36>>2]|0,c[d+36>>2]|0,c[a>>2]|0,d)}if((e|0)!=0){e=c[d+40>>2]|0;h=c[b>>2]|0;se(e,h)|0}else{xJ(c[d+40>>2]|0,c[a+8>>2]|0,c[d+16>>2]|0,d);xH(c[d+40>>2]|0,c[d+40>>2]|0,c[b>>2]|0,d)}xK(c[d+44>>2]|0,c[d+36>>2]|0,c[d+40>>2]|0,d);xJ(c[d+48>>2]|0,c[b+8>>2]|0,c[d+20>>2]|0,d);xH(c[d+48>>2]|0,c[d+48>>2]|0,c[a+4>>2]|0,d);xJ(c[d+52>>2]|0,c[a+8>>2]|0,c[d+20>>2]|0,d);xH(c[d+52>>2]|0,c[d+52>>2]|0,c[b+4>>2]|0,d);xK(c[d+56>>2]|0,c[d+48>>2]|0,c[d+52>>2]|0,d);if((q$(c[d+44>>2]|0,0)|0)!=0){xL(c[d+60>>2]|0,c[d+36>>2]|0,c[d+40>>2]|0,d);xL(c[d+64>>2]|0,c[d+48>>2]|0,c[d+52>>2]|0,d);xH(c[f+8>>2]|0,c[a+8>>2]|0,c[b+8>>2]|0,d);xH(c[f+8>>2]|0,c[f+8>>2]|0,c[d+44>>2]|0,d);xJ(c[d+72>>2]|0,c[d+56>>2]|0,c[d+16>>2]|0,d);xJ(c[d+76>>2]|0,c[d+44>>2]|0,c[d+16>>2]|0,d);xH(c[d+76>>2]|0,c[d+76>>2]|0,c[d+60>>2]|0,d);xK(c[f>>2]|0,c[d+72>>2]|0,c[d+76>>2]|0,d);xH(c[d+72>>2]|0,c[f>>2]|0,c[d+16>>2]|0,d);xK(c[d+68>>2]|0,c[d+76>>2]|0,c[d+72>>2]|0,d);xH(c[d+68>>2]|0,c[d+68>>2]|0,c[d+56>>2]|0,d);xJ(c[d+72>>2]|0,c[d+44>>2]|0,c[d+20>>2]|0,d);xH(c[d+72>>2]|0,c[d+72>>2]|0,c[d+64>>2]|0,d);xK(c[f+4>>2]|0,c[d+68>>2]|0,c[d+72>>2]|0,d);xH(c[f+4>>2]|0,c[f+4>>2]|0,c[d+32>>2]|0,d)}else{if((q$(c[d+56>>2]|0,0)|0)!=0){h=c[f>>2]|0;sf(h,1)|0;h=c[f+4>>2]|0;sf(h,1)|0;h=c[f+8>>2]|0;sf(h,0)|0}else{xI(f,a,d)}}}else{d=c[f>>2]|0;h=c[a>>2]|0;se(d,h)|0;h=c[f+4>>2]|0;d=c[a+4>>2]|0;se(h,d)|0;d=c[f+8>>2]|0;h=c[a+8>>2]|0;se(d,h)|0}}else{h=c[f>>2]|0;d=c[b>>2]|0;se(h,d)|0;d=c[f+4>>2]|0;h=c[b+4>>2]|0;se(d,h)|0;h=c[f+8>>2]|0;f=c[b+8>>2]|0;se(h,f)|0}return}function xN(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+48|0;g=f|0;h=f+16|0;j=f+32|0;k=a;a=d;d=e;e=sd(c[d>>2]|0)|0;l=sd(c[d>>2]|0)|0;m=sd(c[d>>2]|0)|0;n=sc(b)|0;b=sc(c[a+4>>2]|0)|0;if((c[n+8>>2]|0)!=0){c[n+8>>2]=0;xE(b,b,d)}if((q$(c[a+8>>2]|0,1)|0)!=0){o=sd(c[d>>2]|0)|0;p=sd(c[d>>2]|0)|0;xH(o,c[a+8>>2]|0,c[a+8>>2]|0,d);xH(p,c[a+8>>2]|0,o,d);xE(o,o,d);xH(e,c[a>>2]|0,o,d);xE(p,p,d);xH(l,b,p,d);r9(o);r9(p)}else{p=e;o=c[a>>2]|0;se(p,o)|0;o=l;p=b;se(o,p)|0}p=sc(c[d+12>>2]|0)|0;ro(m,n,c[d+20>>2]|0);o=qR(m)|0;if(o>>>0<2){o=2;r8(c[k>>2]|0);r8(c[k+4>>2]|0);r8(c[k+8>>2]|0)}else{q=c[k>>2]|0;r=c[a>>2]|0;se(q,r)|0;r=c[k+4>>2]|0;q=b;se(r,q)|0;q=c[k+8>>2]|0;r=c[a+8>>2]|0;se(q,r)|0}r9(b);b=0;c[g>>2]=e;e=0;c[g+4>>2]=l;l=0;c[g+8>>2]=p;p=0;xB(h);xB(j);p=o-2|0;while(1){if(p>>>0<=0){break}xI(k,k,d);do{if((qS(m,p)|0)==1){if((qS(n,p)|0)!=0){break}xO(h,k);xM(k,h,g,d)}}while(0);do{if((qS(m,p)|0)==0){if((qS(n,p)|0)!=1){break}xO(h,k);xO(j,g);xK(c[j+4>>2]|0,c[d>>2]|0,c[j+4>>2]|0,d);xM(k,h,j,d)}}while(0);p=p-1|0}xC(g);xC(h);xC(j);r9(m);r9(n);i=f;return}function xO(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;se(c[d>>2]|0,c[a>>2]|0)|0;se(c[d+4>>2]|0,c[a+4>>2]|0)|0;se(c[d+8>>2]|0,c[a+8>>2]|0)|0;return}function xP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;bA(a|0,b|0,c|0,d|0);return}function xQ(a){a=a|0;if((a|0)!=0){xS();return}else{xR();return}}function xR(){var a=0,b=0,d=0,e=0;a=i;if((c[30686]|0)!=0){i=a;return}c[30686]=1;b=sT(122424)|0;if((b|0)!=0){d=bY(b|0)|0;uk(69680,(e=i,i=i+8|0,c[e>>2]=d,e)|0);i=e}b=sT(122600)|0;if((b|0)!=0){d=bY(b|0)|0;uk(69368,(e=i,i=i+8|0,c[e>>2]=d,e)|0);i=e}i=a;return}function xS(){var a=0,b=0;xR();x$();if((c[30564]|0)!=0){x1();return}if((c[30548]|0)!=0){a=tY(1,664)|0}else{a=tX(1,664)|0}c[30564]=a;if((c[30548]|0)!=0){b=tY(1,664)|0}else{b=tX(1,664)|0}c[30678]=b;c[30526]=yf()|0;if((c[30526]|0)==0){c[30712]=1;c[30526]=8}c[30710]=yh()|0;x1();return}function xT(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;a=i;b=c[30554]|0;d=c[30556]|0;e=c[30557]|0;f=c[30563]|0;g=c[30562]|0;h=c[30555]|0;j=c[30559]|0;k=c[30558]|0;l=c[30561]|0;m=c[30560]|0;n=(yN()|0)!=0?81120:123272;uh(74744,(o=i,i=i+96|0,c[o>>2]=600,c[o+8>>2]=b,c[o+16>>2]=d,c[o+24>>2]=e,c[o+32>>2]=f,c[o+40>>2]=g,c[o+48>>2]=h,c[o+56>>2]=j,c[o+64>>2]=k,c[o+72>>2]=l,c[o+80>>2]=m,c[o+88>>2]=n,o)|0);i=o;i=a;return}function xU(){c[30548]=1;return}function xV(){c[30568]=1;return}function xW(a){a=a|0;return}function xX(a){a=a|0;return 0}function xY(){var a=0;xS();if((c[30712]|0)!=0){a=1}else{a=(c[30568]|0)!=0}return a&1|0}function xZ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a;a=b;b=d;if((b|0)==-1){b=35}else{if((b|0)>100){b=100}else{if((b|0)<0){b=0}}}if((e|0)==0){f=x_(45)|0;g=f;return g|0}do{if((a|0)!=0){if((b|0)<10){break}xR();d=e;while(1){if((a|0)==0){break}if(a>>>0>600){h=600}else{h=a}i=h;x$();if((c[30564]|0)!=0){x0(d,i,1)}x1();d=d+i|0;a=a-i|0}f=0;g=f;return g|0}}while(0);f=0;g=f;return g|0}function x_(a){a=a|0;return ye(1,a)|0}function x$(){var a=0,b=0,d=0;a=i;b=sW(122424)|0;if((b|0)!=0){d=bY(b|0)|0;uk(71672,(b=i,i=i+8|0,c[b>>2]=d,b)|0);i=b}else{c[30610]=1;i=a;return}}function x0(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=e;e=f;f=b;b=0;if((c[30610]|0)==0){ug(83304,68344,1074,87864)}c[30562]=(c[30562]|0)+g;c[30563]=(c[30563]|0)+1;while(1){h=g;g=h-1|0;if((h|0)==0){break}h=f;f=h+1|0;i=d[h]|0;h=c[30598]|0;c[30598]=h+1;j=(c[30564]|0)+h|0;a[j]=((d[j]|0)^i)&255;b=b+1|0;if((c[30598]|0)>>>0>=600){do{if(e>>>0>=3){if((c[30614]|0)!=0){break}c[30612]=(c[30612]|0)+b;b=0;if((c[30612]|0)>>>0>=600){c[30614]=1}}}while(0);c[30598]=0;x6(c[30564]|0);c[30554]=(c[30554]|0)+1;c[30680]=((g|0)!=0^1)&1}}return}function x1(){var a=0,b=0,d=0;a=i;c[30610]=0;b=sX(122424)|0;if((b|0)!=0){d=bY(b|0)|0;uk(71984,(b=i,i=i+8|0,c[b>>2]=d,b)|0);i=b}else{i=a;return}}function x2(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=a;a=b;b=d;xS();do{if((c[30568]|0)!=0){if(b>>>0<=1){break}b=1}}while(0);b=b&3;x$();if(b>>>0>=2){c[30560]=(c[30560]|0)+a;c[30561]=(c[30561]|0)+1}else{c[30558]=(c[30558]|0)+a;c[30559]=(c[30559]|0)+1}d=e;while(1){if(a>>>0<=0){break}if(a>>>0>600){f=600}else{f=a}e=f;x3(d,e,b);a=a-e|0;d=d+e|0}x1();return}function x3(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+24|0;g=f|0;h=f+8|0;j=f+16|0;k=b;b=d;d=e;if((c[30610]|0)==0){ug(83304,68344,934,86840)}L2069:while(1){e=bR()|0;if((c[7488]|0)==-1){c[7488]=e}if((c[7488]|0)!=(e|0)){c[7488]=e;c[g>>2]=c[7488];x0(g,4,0);c[30680]=0}if((c[30610]|0)==0){ug(83304,68344,953,86840)}if(b>>>0>600){l=1739;break}if((c[30614]|0)==0){if((yb()|0)!=0){c[30614]=1}}do{if((d|0)==2){if((c[30768]|0)!=0){break}c[30616]=0;m=b-(c[30616]|0)|0;if(m>>>0<300){m=300}else{if(m>>>0>600){l=1749;break L2069}}yc(4,m,2);c[30616]=(c[30616]|0)+m;c[30768]=1}}while(0);do{if((d|0)==2){if((c[30616]|0)>>>0>=b>>>0){break}if((c[30616]|0)<0){c[30616]=0}m=b-(c[30616]|0)|0;if(m>>>0>600){l=1757;break L2069}yc(4,m,2);c[30616]=(c[30616]|0)+m}}while(0);while(1){if(!((c[30614]|0)!=0^1)){break}yd()}x9();c[h>>2]=c[7488];x0(h,4,0);if((c[30680]|0)==0){x6(c[30564]|0);c[30554]=(c[30554]|0)+1}m=0;n=c[30678]|0;o=c[30564]|0;while(1){if((m|0)>=150){break}c[n>>2]=(c[o>>2]|0)-1515870811;m=m+1|0;n=n+4|0;o=o+4|0}x6(c[30564]|0);c[30554]=(c[30554]|0)+1;x6(c[30678]|0);c[30555]=(c[30555]|0)+1;while(1){o=b;b=o-1|0;if((o|0)==0){break}o=c[30602]|0;c[30602]=o+1;n=k;k=n+1|0;a[n]=a[(c[30678]|0)+o|0]|0;if((c[30602]|0)>>>0>=600){c[30602]=0}c[30616]=(c[30616]|0)-1}if((c[30616]|0)<0){c[30616]=0}Ae(c[30678]|0,0,600);if((bR()|0)==(e|0)){l=1777;break}c[j>>2]=bR()|0;x0(j,4,0);c[30680]=0;c[7488]=c[j>>2]}if((l|0)==1739){ul(82328,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}else if((l|0)==1757){uf(68344,995,86840)}else if((l|0)==1777){i=f;return}else if((l|0)==1749){uf(68344,979,86840)}}function x4(a){a=a|0;if((c[30546]|0)!=0){uf(68344,673,88088)}else{c[30546]=tZ(a)|0;return}}function x5(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0;a=i;xR();x$();do{if((c[30546]|0)!=0){if((c[30564]|0)==0){break}if((c[30614]|0)==0){break}if((c[30800]|0)==0){x1();uh(t6(65384)|0,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b;i=a;return}d=0;e=c[30678]|0;f=c[30564]|0;while(1){if((d|0)>=150){break}c[e>>2]=(c[f>>2]|0)-1515870811;d=d+1|0;e=e+4|0;f=f+4|0}x6(c[30564]|0);c[30554]=(c[30554]|0)+1;x6(c[30678]|0);c[30555]=(c[30555]|0)+1;f=bK(c[30546]|0,65,(b=i,i=i+8|0,c[b>>2]=384,b)|0)|0;i=b;e=f;if((e|0)==-1){f=t6(63368)|0;g=c[30546]|0;h=bY(c[(bX()|0)>>2]|0)|0;uh(f,(b=i,i=i+16|0,c[b>>2]=g,c[b+8>>2]=h,b)|0);i=b}else{if((x7(e,c[30546]|0,1)|0)!=0){h=e;bc(h|0)|0}else{if((b1(e|0,0)|0)!=0){h=t6(61720)|0;g=c[30546]|0;f=bY(c[(bX()|0)>>2]|0)|0;uh(h,(b=i,i=i+16|0,c[b>>2]=g,c[b+8>>2]=f,b)|0);i=b;f=e;bc(f|0)|0}else{do{d=ck(e|0,c[30678]|0,600)|0;if((d|0)==-1){j=(c[(bX()|0)>>2]|0)==4}else{j=0}}while(j);if((d|0)!=600){f=t6(61720)|0;g=c[30546]|0;h=bY(c[(bX()|0)>>2]|0)|0;uh(f,(b=i,i=i+16|0,c[b>>2]=g,c[b+8>>2]=h,b)|0);i=b}if((bc(e|0)|0)!=0){h=t6(60168)|0;g=c[30546]|0;f=bY(c[(bX()|0)>>2]|0)|0;uh(h,(b=i,i=i+16|0,c[b>>2]=g,c[b+8>>2]=f,b)|0);i=b}}}}x1();i=a;return}}while(0);x1();i=a;return}function x6(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+96|0;f=e|0;g=b;b=g+600|0;if((c[30610]|0)==0){ug(83304,68344,615,87008)}o1(f);h=g+600|0;j=b;k=h-20|0;Ac(j|0,k|0,20)|0;k=b+20|0;j=g;Ac(k|0,j|0,44)|0;o2(f,b);j=g;k=b;Ac(j|0,k|0,20)|0;do{if((c[30664]|0)!=0){if((g|0)!=(c[30564]|0)){break}l=0;while(1){if((l|0)>=20){break}k=g+l|0;a[k]=((d[k]|0)^(d[122664+l|0]|0))&255;l=l+1|0}}}while(0);k=g;j=1;while(1){if((j|0)>=30){break}m=b;n=k;Ac(m|0,n|0,20)|0;k=k+20|0;if((k+84|0)>>>0<h>>>0){n=b+20|0;m=k+20|0;Ac(n|0,m|0,44)|0}else{m=k+20|0;l=20;while(1){if((l|0)>=64){break}if(m>>>0>=h>>>0){m=g}n=m;m=n+1|0;a[b+l|0]=a[n]|0;l=l+1|0}}o2(f,b);m=k;n=b;Ac(m|0,n|0,20)|0;j=j+1|0}if((g|0)!=(c[30564]|0)){up(384);i=e;return}o4(122664,g,600);c[30664]=1;up(384);i=e;return}function x7(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+24|0;g=f|0;h=f+16|0;j=a;a=d;d=0;Ae(g|0,0,16);b[g>>1]=((e|0)!=0?1:0)&65535;b[g+2>>1]=0;while(1){e=bn(j|0,13,(k=i,i=i+8|0,c[k>>2]=g,k)|0)|0;i=k;if((e|0)!=-1){l=1852;break}if((c[(bX()|0)>>2]|0)!=11){if((c[(bX()|0)>>2]|0)!=13){l=1846;break}}if((d|0)>2){uh(t6(73208)|0,(k=i,i=i+8|0,c[k>>2]=a,k)|0);i=k}c[h>>2]=d;c[h+4>>2]=25e4;aC(0,0,0,0,h|0)|0;if((d|0)<10){d=d+1|0}}if((l|0)==1846){d=t6(73752)|0;h=bY(c[(bX()|0)>>2]|0)|0;uh(d,(k=i,i=i+16|0,c[k>>2]=a,c[k+8>>2]=h,k)|0);i=k;m=-1;n=m;i=f;return n|0}else if((l|0)==1852){m=0;n=m;i=f;return n|0}return 0}function x8(){xR();x$();if((c[30564]|0)==0){x1();return}x9();x1();return}function x9(){var a=0,b=0,d=0,e=0,f=0;a=i;i=i+160|0;b=a|0;d=a+8|0;e=a+144|0;f=a+152|0;if((c[30610]|0)==0){ug(83304,68344,1180,87752)}c[30557]=(c[30557]|0)+1;if((c[30710]|0)!=0){cF[c[30710]&31](46,2)}if((bT(b|0,0)|0)!=0){uf(68344,1198,87752)}else{x0(b|0,4,2);x0(b+4|0,4,2);bZ(0,d|0)|0;x0(d,136,2);Ae(d|0,0,136);c[e>>2]=cz(0)|0;x0(e,4,2);c[f>>2]=bf()|0;x0(f,4,2);yO(46,2);i=a;return}}function ya(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+16|0;f=e|0;g=e+8|0;h=b;b=d;xS();d=sW(122600)|0;if((d|0)!=0){j=bY(d|0)|0;uk(58424,(k=i,i=i+8|0,c[k>>2]=j,k)|0);i=k}j=bR()|0;if((c[30950]|0)!=0){if((c[30960]|0)!=(j|0)){sI(123828,8,0);c[30960]=j}}else{c[f>>2]=cz(0)|0;c[g>>2]=j;c[30960]=j;l=123808;j=l;m=g;a[j]=a[m]|0;a[j+1|0]=a[m+1|0]|0;a[j+2|0]=a[m+2|0]|0;a[j+3|0]=a[m+3|0]|0;l=l+4|0;m=l;j=f;a[m]=a[j]|0;a[m+1|0]=a[j+1|0]|0;a[m+2|0]=a[j+2|0]|0;a[m+3|0]=a[j+3|0]|0;sI(123828,8,0);c[30950]=1}l=h;while(1){if(b>>>0<=0){break}pP(123808,123808,28);if(b>>>0>20){n=20}else{n=b}h=n;j=l;m=h;Ac(j|0,123808,m)|0;b=b-h|0;l=l+h|0}d=sX(122600)|0;if((d|0)!=0){l=bY(d|0)|0;uk(56224,(k=i,i=i+8|0,c[k>>2]=l,k)|0);i=k}else{i=e;return}}function yb(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;a=i;i=i+704|0;b=a|0;d=a+80|0;e=a+680|0;f=a+688|0;g=a+696|0;if((c[30610]|0)==0){ug(83304,68344,743,86824);return 0}if((c[30546]|0)==0){h=0;j=h;i=a;return j|0}k=bK(c[30546]|0,0,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0)|0;i=l;m=k;do{if((m|0)==-1){if((c[(bX()|0)>>2]|0)!=2){break}c[30800]=1;h=0;j=h;i=a;return j|0}}while(0);if((m|0)==-1){k=t6(78768)|0;n=c[30546]|0;o=bY(c[(bX()|0)>>2]|0)|0;uh(k,(l=i,i=i+16|0,c[l>>2]=n,c[l+8>>2]=o,l)|0);i=l;h=0;j=h;i=a;return j|0}if((x7(m,c[30546]|0,0)|0)!=0){o=m;bc(o|0)|0;h=0;j=h;i=a;return j|0}if((aR(m|0,b|0)|0)!=0){o=t6(77920)|0;n=c[30546]|0;k=bY(c[(bX()|0)>>2]|0)|0;uh(o,(l=i,i=i+16|0,c[l>>2]=n,c[l+8>>2]=k,l)|0);i=l;k=m;bc(k|0)|0;h=0;j=h;i=a;return j|0}if((c[b+12>>2]&61440|0)!=32768){k=t6(76952)|0;uh(k,(l=i,i=i+8|0,c[l>>2]=c[30546],l)|0);i=l;k=m;bc(k|0)|0;h=0;j=h;i=a;return j|0}if((c[b+36>>2]|0)==0){uh(t6(76128)|0,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l;k=m;bc(k|0)|0;c[30800]=1;h=0;j=h;i=a;return j|0}if((c[b+36>>2]|0)!=600){uh(t6(75144)|0,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l;b=m;bc(b|0)|0;h=0;j=h;i=a;return j|0}do{p=aU(m|0,d|0,600)|0;if((p|0)==-1){q=(c[(bX()|0)>>2]|0)==4}else{q=0}}while(q);if((p|0)!=600){p=t6(74392)|0;q=c[30546]|0;b=bY(c[(bX()|0)>>2]|0)|0;uk(p,(l=i,i=i+16|0,c[l>>2]=q,c[l+8>>2]=b,l)|0);i=l;return 0}bc(m|0)|0;x0(d|0,600,0);c[e>>2]=bR()|0;x0(e,4,0);c[f>>2]=cz(0)|0;x0(f,4,0);c[g>>2]=bf()|0;x0(g,4,0);yc(0,16,0);c[30800]=1;h=1;j=h;i=a;return j|0}function yc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((c[30526]|0)==0){uk(80520,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f}if((cL[c[30526]&31](46,a,b,d)|0)<0){uk(79792,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f}else{i=e;return}}function yd(){c[30556]=(c[30556]|0)+1;yc(3,120,1);return}function ye(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function yf(){var a=0;a=i;do{if((bi(70704,4)|0)==0){if((bi(70344,4)|0)!=0){break}i=a;return 20}}while(0);uk(t6(69992)|0,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;return 0}function yg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;f=i;b=d;d=e;if((c[30694]|0)==0){uh(t6(71304)|0,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;c[30694]=1;e=cz(0)|0;bQ(ad(e,bR()|0)|0)}e=tU(d)|0;g=e;h=e;e=d;while(1){j=e;e=j-1|0;if((j|0)==0){break}j=h;h=j+1|0;a[j]=~~(+(az()|0)*256.0/2147483648.0)+1-1&255}x0(g,d,b);tQ(g);i=f;return 0}function yh(){return 0}function yi(a){a=a|0;yj();if((a|0)==0){return}yk();if((c[30518]|0)!=0){if((c[(c[30648]|0)+52>>2]|0)!=0){ug(74216,81008,772,88056)}if((c[(c[30524]|0)+52>>2]|0)!=0){ug(72256,81008,773,88056)}if((c[(c[30522]|0)+52>>2]|0)!=0){ug(68200,81008,774,88056)}ym(c[30648]|0);ym(c[30524]|0);ym(c[30522]|0)}else{c[30518]=tW(48)|0;c[30648]=tX(1,68)|0;yl(c[30648]|0);c[30524]=tY(1,68)|0;yl(c[30524]|0);c[30522]=tY(1,68)|0;yl(c[30522]|0)}yn();return}function yj(){var a=0,b=0,d=0;a=i;if((c[30796]|0)==0){i=a;return}c[30796]=1;b=sT(122808)|0;if((b|0)!=0){d=bY(b|0)|0;uk(68736,(b=i,i=i+8|0,c[b>>2]=d,b)|0);i=b}c[30704]=0;i=a;return}function yk(){var a=0,b=0,d=0;a=i;b=sW(122808)|0;if((b|0)!=0){d=bY(b|0)|0;uk(69096,(b=i,i=i+8|0,c[b>>2]=d,b)|0);i=b}else{c[30704]=1;i=a;return}}function yl(b){b=b|0;var c=0;c=b;a[c|0]=17;a[c+16|0]=42;a[c+33|0]=-119;a[c+50|0]=-4;return}function ym(a){a=a|0;var b=0,e=0;b=i;e=a;do{if((d[e|0]|0|0)==17){if((d[e+16|0]|0|0)!=42){break}if((d[e+33|0]|0|0)!=137){break}if((d[e+50|0]|0|0)!=252){break}i=b;return}}while(0);uk(69320,(b=i,i=i+8|0,c[b>>2]=e,b)|0);i=b}function yn(){var a=0,b=0,d=0;a=i;c[30704]=0;b=sX(122808)|0;if((b|0)!=0){d=bY(b|0)|0;uk(69640,(b=i,i=i+8|0,c[b>>2]=d,b)|0);i=b}else{i=a;return}}function yo(){return}function yp(){return 0}function yq(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function yr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;a=b;yi(1);yk();if((d|0)==2){ys(e,a,c[30522]|0);yn();return}else{ys(e,a,c[30524]|0);yn();return}}function ys(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=a;a=b;b=d;if((f|0)==0){ug(71976,81008,690,87144)}if((b|0)==0){ug(71664,81008,691,87144)}ym(b);do{if((c[b+4>>2]|0)!=0){g=2008}else{if((b|0)==(c[30648]|0)){c[b+4>>2]=yM(1)|0}else{c[b+4>>2]=yM(0)|0}if((c[b+4>>2]|0)!=0){c[b+60>>2]=bR()|0;g=2008;break}else{break}}}while(0);L2422:do{if((g|0)==2008){if(((c[b+8>>2]&1)<<31>>31|0)==0){yE(b)}d=c[b+60>>2]|0;do{if((d|0)==(bR()|0)){h=c[b+64>>2]|0;if((h|0)!=(bR()|0)){break}if((yD(f,a,b)|0)!=0){break L2422}else{ym(b);i=e;return}}}while(0);tb(81008,719,87144,0,71248)}}while(0);uk(70672,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e}function yt(a,b){a=a|0;b=b|0;yi(1);yk();ys(a,b,c[30648]|0);yn();return}function yu(a){a=a|0;var b=0,c=0;b=i;i=i+8|0;sI(b|0,8,1);c=yw(yv(a)|0)|0;i=b;return c|0}function yv(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;i=i+16|0;e=b|0;f=a;a=0;if((c[30518]|0)==0){ug(65336,81008,904,86808);return 0}g=tX(1,68)|0;yl(g);yk();h=0;L2442:while(1){if(h>>>0>=3){j=2041;break}k=kR(g+4|0,7,1,1)|0;if((k|0)!=0){j=2025;break}k=k$(c[g+4>>2]|0,6624+(h*96|0)|0,16)|0;if((k|0)!=0){j=2027;break}c[g+60>>2]=bR()|0;k=g+17|0;l=6656+(h*96|0)|0;Ac(k|0,l|0,16)|0;l=g+8|0;c[l>>2]=c[l>>2]&-2|1;c[g+64>>2]=bR()|0;c[g+52>>2]=6640+(h*96|0);c[g+56>>2]=(d[6652+(h*96|0)|0]|0)<<24|(d[6653+(h*96|0)|0]|0)<<16|(d[6654+(h*96|0)|0]|0)<<8|(d[6655+(h*96|0)|0]|0);l=0;while(1){if((l|0)>=3){break}if((yD(e|0,16,g)|0)!=0){j=2031;break L2442}if((Af(e|0,6672+(h*96|0)+(l<<4)|0,16)|0)!=0){j=2033;break L2442}l=l+1|0}l=c[g+60>>2]|0;if((l|0)!=(bR()|0)){j=2038;break}l=c[g+64>>2]|0;if((l|0)!=(bR()|0)){j=2038;break}kW(c[g+4>>2]|0);c[g+4>>2]=0;l=g+8|0;c[l>>2]=c[l>>2]&-2;ym(g);h=h+1|0}if((j|0)==2025){a=63328}else if((j|0)==2033){a=58384}else if((j|0)==2031){a=60136}else if((j|0)==2038){a=56200}else if((j|0)==2027){a=61688}yn();kW(c[g+4>>2]|0);ym(g);tQ(g);if((f|0)==0){m=a;n=(m|0)!=0;o=n?50:0;i=b;return o|0}if((a|0)==0){m=a;n=(m|0)!=0;o=n?50:0;i=b;return o|0}cP[f&15](83296,0,82320,a);m=a;n=(m|0)!=0;o=n?50:0;i=b;return o|0}function yw(a){a=a|0;return yC(1,a)|0}function yx(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0;l=b;b=e;e=f;f=g;g=h;h=i;i=j;j=k;yi(1);do{if((l|0)!=0){if((e|0)==0){break}if((f|0)!=16){break}if((g|0)==0){break}if((h|0)!=16){break}if((i|0)==0){break}if((j|0)!=16){break}k=tR(1,j+68|0)|0;if((k|0)==0){m=y$()|0;n=m;return n|0}yl(k);o=kR(k+4|0,7,1,1)|0;do{if((o|0)==0){o=k$(c[k+4>>2]|0,e,f)|0;if((o|0)!=0){break}c[k+60>>2]=bR()|0;p=k+17|0;q=g;r=h;Ac(p|0,q|0,r)|0;r=k+8|0;c[r>>2]=c[r>>2]&-2|1;c[k+64>>2]=bR()|0;r=k+68|0;q=i;p=j;Ac(r|0,q|0,p)|0;c[k+52>>2]=k+68;c[k+56>>2]=(d[(c[k+52>>2]|0)+12|0]|0)<<24|(d[(c[k+52>>2]|0)+13|0]|0)<<16|(d[(c[k+52>>2]|0)+14|0]|0)<<8|(d[(c[k+52>>2]|0)+15|0]|0);if((b&1|0)!=0){a[k+51|0]=1}ym(k);o=0}}while(0);if((o|0)!=0){kW(c[k+4>>2]|0);tQ(k);c[l>>2]=0}else{c[l>>2]=k}m=yy(o)|0;n=m;return n|0}}while(0);m=45;n=m;return n|0}function yy(a){a=a|0;return yB(a)|0}function yz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=b;b=c;c=a;do{if((c|0)!=0){if((d|0)==0){break}if((b|0)!=16){break}yk();ys(d,b,c);yn();e=0;f=e;return f|0}}while(0);e=45;f=e;return f|0}function yA(a){a=a|0;var b=0;b=a;if((b|0)==0){return}kW(c[b+4>>2]|0);tQ(b);return}function yB(a){a=a|0;return a&65535|0}function yC(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function yD(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+16|0;h=g|0;j=b;b=e;e=f;if((c[30704]|0)==0){ug(80496,81008,449,86728);return 0}if((c[e+4>>2]|0)==0){ug(79768,81008,450,86728);return 0}if(((c[e+8>>2]&1)<<31>>31|0)==0){ug(78744,81008,451,86728);return 0}if((c[30518]|0)==0){ug(65336,81008,453,86728);return 0}f=c[30518]|0;k=(c[30518]|0)+16|0;l=(c[30518]|0)+32|0;while(1){if((b|0)==0){m=2133;break}do{if((c[e+52>>2]|0)==0){if((c[e+12>>2]|0)>>>0<=1e3){break}yE(e);c[e+12>>2]=0}}while(0);if(b>>>0<16){n=b}else{n=16}o=n;yF(h|0,16,e);yG(l,h|0,e+17|0,c[e+4>>2]|0,f,k);p=e+12|0;c[p>>2]=(c[p>>2]|0)+1;do{if((d[e+51|0]|0|0)!=0){if((c[e+52>>2]|0)==0){m=2122;break}if((e|0)==(c[30648]|0)){m=2122;break}if((e|0)==(c[30524]|0)){m=2122;break}if((e|0)==(c[30522]|0)){m=2122;break}}else{m=2122}}while(0);if((m|0)==2122){m=0;if((((c[e+8>>2]|0)>>>1&1)<<31>>31|0)==0){p=e+34|0;q=l;Ac(p|0,q|0,16)|0;q=e+8|0;c[q>>2]=c[q>>2]&-3|2;continue}if((Af(e+34|0,l|0,16)|0)==0){m=2125;break}q=e+34|0;p=l;Ac(q|0,p|0,16)|0}p=j;q=l;r=o;Ac(p|0,q|0,r)|0;r=l;q=16;while(1){if((q|0)==0){break}a[r]=0;r=r+1|0;q=q-1|0}j=j+o|0;b=b-o|0}if((m|0)==2133){s=0;t=s;i=g;return t|0}else if((m|0)==2125){tb(81008,507,86728,0,77880);s=-1;t=s;i=g;return t|0}return 0}function yE(a){a=a|0;var b=0;b=a;if((c[30704]|0)==0){ug(80496,81008,663,86648)}if((b|0)==(c[30648]|0)){ys(b+17|0,16,c[30524]|0);a=b+8|0;c[a>>2]=c[a>>2]&-2|1;c[b+64>>2]=bR()|0;return}else{yJ(b+17|0,16);a=b+8|0;c[a>>2]=c[a>>2]&-2|1;c[b+64>>2]=bR()|0;return}}function yF(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+8|0;j=h|0;k=d;d=g;if((f|0)!=16){ug(76936,81008,278,86664)}if((c[30704]|0)==0){ug(80496,81008,279,86664)}do{if((c[d+52>>2]|0)!=0){if((d|0)==(c[30648]|0)){break}if((d|0)==(c[30524]|0)){break}if((d|0)==(c[30522]|0)){break}f=k;g=c[d+52>>2]|0;Ac(f|0,g|0,16)|0;a[k+12|0]=(c[d+56>>2]|0)>>>24&255;a[k+13|0]=(c[d+56>>2]|0)>>>16&255;a[k+14|0]=(c[d+56>>2]|0)>>>8&255;a[k+15|0]=c[d+56>>2]&255;g=d+56|0;c[g>>2]=(c[g>>2]|0)+1;i=h;return}}while(0);if((c[30502]|0)==0){c[30506]=bR()|0;c[30508]=bR()|0}if((bT(j|0,0)|0)!=0){d=bY(c[(bX()|0)>>2]|0)|0;uk(75112,(g=i,i=i+8|0,c[g>>2]=d,g)|0);i=g}g=c[j+4>>2]|0;g=g<<4;do{if((c[j>>2]|0)==(c[30502]|0)){if((g|0)!=(c[30500]|0)){l=2164;break}b[61008]=(b[61008]|0)+1&65535;b[61008]=(e[61008]|0)&4095}else{l=2164}}while(0);if((l|0)==2164){b[61008]=0;c[30502]=c[j>>2];c[30500]=g}a[k|0]=c[j>>2]>>24&255;a[k+1|0]=c[j>>2]>>16&255;a[k+2|0]=c[j>>2]>>8&255;a[k+3|0]=c[j>>2]&255;a[k+4|0]=g>>>16&255;a[k+5|0]=g>>>8&255;a[k+6|0]=(g&240|(e[61008]|0)>>8&15)&255;a[k+7|0]=(e[61008]|0)&255;a[k+8|0]=(c[30506]|0)>>>24&255;a[k+9|0]=(c[30506]|0)>>>16&255;a[k+10|0]=(c[30506]|0)>>>8&255;a[k+11|0]=c[30506]&255;a[k+12|0]=(c[30508]|0)>>>24&255;a[k+13|0]=(c[30508]|0)>>>16&255;a[k+14|0]=(c[30508]|0)>>>8&255;a[k+15|0]=c[30508]&255;k=(c[30508]|0)+1|0;c[30508]=k;if((k|0)!=0){i=h;return}c[30506]=(c[30506]|0)+1;i=h;return}function yG(b,c,d,e,f,g){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=b;b=d;d=e;e=f;f=g;yH(d,e,c,16);yI(f,e,b,16);yH(d,h,f,16);yI(f,h,e,16);yH(d,b,f,16);b=e;e=16;while(1){if((e|0)==0){break}a[b]=0;b=b+1|0;e=e-1|0}e=f;f=16;while(1){if((f|0)==0){break}a[e]=0;e=e+1|0;f=f-1|0}return}function yH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=e;if((g|0)!=16){ug(76936,81008,391,87520)}e=kX(a,b,g,d,g)|0;if((e|0)!=0){g=tA(e)|0;uk(76088,(e=i,i=i+8|0,c[e>>2]=g,e)|0);i=e}else{i=f;return}}function yI(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0;g=b;b=c;c=e;e=f;while(1){if((e|0)==0){break}a[g]=((d[b]|0)^(d[c]|0))&255;e=e-1|0;b=b+1|0;c=c+1|0;g=g+1|0}return}function yJ(b,d){b=b|0;d=d|0;var e=0;if((c[30704]|0)==0){ug(80496,81008,647,86680)}if((d|0)!=16){ug(76936,81008,648,86680)}d=yK(16)|0;e=b;b=d;Ac(e|0,b|0,16)|0;b=d;e=16;while(1){if((e|0)==0){break}a[b]=0;b=b+1|0;e=e-1|0}tQ(d);return}function yK(a){a=a|0;var b=0,d=0;b=i;d=a;if((c[30718]|0)!=0){ug(74368,81008,557,87176);return 0}c[30718]=tW(d)|0;c[30714]=d;c[30716]=0;do{if((yQ(24,0,16,2)|0)>=0){if((c[30716]|0)!=(c[30714]|0)){break}d=c[30718]|0;c[30718]=0;i=b;return d|0}}while(0);tQ(c[30718]|0);c[30718]=0;uk(73720,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b;return 0}function yL(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0;f=e;e=b;if((c[30704]|0)==0){ug(80496,81008,536,87496)}if((c[30718]|0)==0){ug(73184,81008,537,87496)}while(1){b=f;f=b-1|0;if((b|0)!=0){g=(c[30716]|0)>>>0<(c[30714]|0)>>>0}else{g=0}if(!g){break}b=e;e=b+1|0;h=d[b]|0;b=c[30716]|0;c[30716]=b+1;i=(c[30718]|0)+b|0;a[i]=((d[i]|0)^h)&255}return}function yM(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;if((c[30704]|0)==0){ug(80496,81008,601,86704);return 0}f=kR(e,7,1,1)|0;if((f|0)!=0){g=tA(f)|0;uj(70296,(h=i,i=i+8|0,c[h>>2]=g,h)|0);i=h;j=0;k=j;i=d;return k|0}if((b|0)!=0){l=tU(16)|0;ys(l,16,c[30524]|0)}else{l=yK(16)|0}f=k$(c[e>>2]|0,l,16)|0;b=l;g=16;while(1){if((g|0)==0){break}a[b]=0;b=b+1|0;g=g-1|0}tQ(l);if((f|0)!=0){l=tA(f)|0;uj(69960,(h=i,i=i+8|0,c[h>>2]=l,h)|0);i=h;kW(c[e>>2]|0);j=0;k=j;i=d;return k|0}else{j=c[e>>2]|0;k=j;i=d;return k|0}return 0}function yN(){return c[30552]|0}function yO(a,b){a=a|0;b=b|0;return}function yP(a,b){a=a|0;b=b|0;return 0}function yQ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+904|0;g=f|0;h=f+768|0;j=f+896|0;k=a;a=b;b=d;d=b;l=0;m=0;n=yP(k,a)|0;if(n>>>0>((b>>>0)/2|0)>>>0){n=(b>>>0)/2|0}if(b>>>0>1){b=b-n|0}if((e|0)>=2){if((c[20932]|0)==-1){c[20932]=yR(73976)|0}o=c[20932]|0}else{if((c[20930]|0)==-1){c[20930]=yR(80872)|0}o=c[20930]|0}e=0;L2729:while(1){if((b|0)==0){break}do{if((o|0)<1024){n=h|0;p=32;while(1){if((p|0)==0){break}q=n;n=q+4|0;c[q>>2]=0;p=p-1|0}p=h+(((o>>>0)/32|0)<<2)|0;c[p>>2]=c[p>>2]|1<<((o>>>0)%32|0);c[j>>2]=e;c[j+4>>2]=(e|0)!=0?0:1e5;p=aC(o+1|0,h|0,0,0,j|0)|0;n=p;if((p|0)==0){if((m|0)!=0){if((l|0)!=(d-b|0)){r=2270}}else{r=2270}if((r|0)==2270){r=0;l=d-b|0;sw(72224,88,l,d);m=1}e=3;continue L2729}if((n|0)!=-1){break}n=bY(c[(bX()|0)>>2]|0)|0;uj(68152,(s=i,i=i+8|0,c[s>>2]=n,s)|0);i=s;if((e|0)==0){e=1}continue L2729}}while(0);do{if(b>>>0<768){t=b}else{t=768}n=t;u=aU(o|0,g|0,n|0)|0;do{if((u|0)>=0){if((u|0)<=(n|0)){break}uj(65200,(s=i,i=i+8|0,c[s>>2]=u,s)|0);i=s;u=n}}while(0);if((u|0)==-1){v=(c[(bX()|0)>>2]|0)==4}else{v=0}}while(v);if((u|0)==-1){r=2290;break}cJ[k&127](g|0,u,a);b=b-u|0}if((r|0)==2290){r=bY(c[(bX()|0)>>2]|0)|0;uk(63280,(s=i,i=i+8|0,c[s>>2]=r,s)|0);i=s;return 0}Ae(g|0,0,768);if((m|0)==0){i=f;return 0}sw(72224,88,d,d);i=f;return 0}function yR(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a;a=bK(d|0,0,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0)|0;i=e;f=a;if((f|0)==-1){a=bY(c[(bX()|0)>>2]|0)|0;uk(61656,(e=i,i=i+16|0,c[e>>2]=d,c[e+8>>2]=a,e)|0);i=e;return 0}if((yS(f)|0)==0){g=f;i=b;return g|0}a=bY(c[(bX()|0)>>2]|0)|0;uj(60064,(e=i,i=i+16|0,c[e>>2]=f,c[e+8>>2]=a,e)|0);i=e;g=f;i=b;return g|0}function yS(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;a=bn(d|0,1,(e=i,i=i+8|0,c[e>>2]=0,e)|0)|0;i=e;f=a;if((f|0)<0){g=f;h=g;i=b;return h|0}else{f=f|1;a=bn(d|0,2,(e=i,i=i+8|0,c[e>>2]=f,e)|0)|0;i=e;g=a;h=g;i=b;return h|0}return 0}function yT(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+64|0;g=f|0;h=b;b=e;e=zd(172)|0;if((e|0)==0){j=0;k=j;i=f;return k|0}c[e>>2]=1779033703;c[e+4>>2]=-1150833019;c[e+8>>2]=1013904242;c[e+12>>2]=-1521486534;c[e+16>>2]=1359893119;c[e+20>>2]=-1694144372;c[e+24>>2]=528734635;c[e+28>>2]=1541459225;c[e+32>>2]=0;c[e+36>>2]=0;l=e+40|0;c[l>>2]=c[l>>2]&-2;l=e+40|0;c[l>>2]=c[l>>2]&-3;if((h|0)!=0){Ae(g|0,0,64);Ae(e+105|0,0,64);do{if(b>>>0<=64){l=g;m=h;n=b;Ac(l|0,m|0,n)|0;n=e+105|0;m=h;l=b;Ac(n|0,m|0,l)|0}else{l=yT(0,0)|0;if((l|0)!=0){yU(l,h,b);yV(l);m=g;n=l+41|0;Ac(m|0,n|0,32)|0;n=e+105|0;m=l+41|0;Ac(n|0,m|0,32)|0;yW(l);break}ze(e);j=0;k=j;i=f;return k|0}}while(0);b=0;while(1){if((b|0)>=64){break}h=g+b|0;a[h]=((d[h]|0)^54)&255;h=e+105+b|0;a[h]=((d[h]|0)^92)&255;b=b+1|0}b=e+40|0;c[b>>2]=c[b>>2]&-3|2;yU(e,g|0,64);b=g|0;g=64;while(1){if((g|0)==0){break}a[b]=0;b=b+1|0;g=g-1|0}}j=e;k=j;i=f;return k|0}function yU(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=b;b=e;e=d;if(((c[f+40>>2]&1)<<31>>31|0)!=0){return}if((c[f+36>>2]|0)==64){yX(f,f+41|0);c[f+36>>2]=0;d=f+32|0;c[d>>2]=(c[d>>2]|0)+1}if((e|0)==0){return}do{if((c[f+36>>2]|0)!=0){while(1){if((b|0)!=0){g=(c[f+36>>2]|0)<64}else{g=0}if(!g){break}d=e;e=d+1|0;h=a[d]|0;d=f+36|0;i=c[d>>2]|0;c[d>>2]=i+1;a[f+41+i|0]=h;b=b-1|0}yU(f,0,0);if((b|0)!=0){break}return}}while(0);while(1){if(b>>>0<64){break}yX(f,e);c[f+36>>2]=0;g=f+32|0;c[g>>2]=(c[g>>2]|0)+1;b=b-64|0;e=e+64|0}while(1){if((b|0)!=0){j=(c[f+36>>2]|0)<64}else{j=0}if(!j){break}g=e;e=g+1|0;h=a[g]|0;g=f+36|0;i=c[g>>2]|0;c[g>>2]=i+1;a[f+41+i|0]=h;b=b-1|0}return}function yV(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;if(((c[d+40>>2]&1)<<31>>31|0)!=0){return}yU(d,0,0);b=c[d+32>>2]|0;e=b<<6;f=b>>>26;b=e;g=e+(c[d+36>>2]|0)|0;e=g;if(g>>>0<b>>>0){f=f+1|0}b=e;e=e<<3;f=f<<3;f=f|b>>>29;if((c[d+36>>2]|0)<56){b=d+36|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+41+g|0]=-128;while(1){if((c[d+36>>2]|0)>=56){break}g=d+36|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+41+b|0]=0}}else{b=d+36|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+41+g|0]=-128;while(1){if((c[d+36>>2]|0)>=64){break}g=d+36|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+41+b|0]=0}yU(d,0,0);Ae(d+41|0,0,56)}a[d+97|0]=f>>>24&255;a[d+98|0]=f>>>16&255;a[d+99|0]=f>>>8&255;a[d+100|0]=f&255;a[d+101|0]=e>>>24&255;a[d+102|0]=e>>>16&255;a[d+103|0]=e>>>8&255;a[d+104|0]=e&255;yX(d,d+41|0);e=d+41|0;f=e;e=f+1|0;a[f]=(c[d>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d>>2]&255;f=e;e=f+1|0;a[f]=(c[d+4>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+4>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+4>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+4>>2]&255;f=e;e=f+1|0;a[f]=(c[d+8>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+8>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+8>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+8>>2]&255;f=e;e=f+1|0;a[f]=(c[d+12>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+12>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+12>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+12>>2]&255;f=e;e=f+1|0;a[f]=(c[d+16>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+16>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+16>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+16>>2]&255;f=e;e=f+1|0;a[f]=(c[d+20>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+20>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+20>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+20>>2]&255;f=e;e=f+1|0;a[f]=(c[d+24>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+24>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+24>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+24>>2]&255;f=e;e=f+1|0;a[f]=(c[d+28>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+28>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+28>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+28>>2]&255;f=d+40|0;c[f>>2]=c[f>>2]&-2|1;return}function yW(b){b=b|0;var d=0,e=0;d=b;if((d|0)==0){return}if((((c[d+40>>2]|0)>>>1&1)<<31>>31|0)!=0){b=d+105|0;e=64;while(1){if((e|0)==0){break}a[b]=0;b=b+1|0;e=e-1|0}}ze(d);return}function yX(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+320|0;f=e|0;g=e+64|0;h=b;b=d;d=c[h>>2]|0;j=c[h+4>>2]|0;k=c[h+8>>2]|0;l=c[h+12>>2]|0;m=c[h+16>>2]|0;n=c[h+20>>2]|0;o=c[h+24>>2]|0;p=c[h+28>>2]|0;q=0;r=f|0;while(1){if((q|0)>=16){break}s=b;b=s+1|0;a[r+3|0]=a[s]|0;s=b;b=s+1|0;a[r+2|0]=a[s]|0;s=b;b=s+1|0;a[r+1|0]=a[s]|0;s=b;b=s+1|0;a[r|0]=a[s]|0;q=q+1|0;r=r+4|0}q=0;while(1){if((q|0)>=16){break}c[g+(q<<2)>>2]=c[f+(q<<2)>>2];q=q+1|0}while(1){if((q|0)>=64){break}c[g+(q<<2)>>2]=(((c[g+(q-2<<2)>>2]|0)>>>17|c[g+(q-2<<2)>>2]<<15)^((c[g+(q-2<<2)>>2]|0)>>>19|c[g+(q-2<<2)>>2]<<13)^(c[g+(q-2<<2)>>2]|0)>>>10)+(c[g+(q-7<<2)>>2]|0)+(((c[g+(q-15<<2)>>2]|0)>>>7|c[g+(q-15<<2)>>2]<<25)^((c[g+(q-15<<2)>>2]|0)>>>18|c[g+(q-15<<2)>>2]<<14)^(c[g+(q-15<<2)>>2]|0)>>>3)+(c[g+(q-16<<2)>>2]|0);q=q+1|0}q=0;while(1){if((q|0)>=64){break}f=p+((m>>>6|m<<26)^(m>>>11|m<<21)^(m>>>25|m<<7))+(o^m&(n^o))+(c[1416+(q<<2)>>2]|0)+(c[g+(q<<2)>>2]|0)|0;r=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&j|k&(d|j))|0;p=o;o=n;n=m;m=l+f|0;l=k;k=j;j=d;d=f+r|0;q=q+1|0}q=h|0;c[q>>2]=(c[q>>2]|0)+d;d=h+4|0;c[d>>2]=(c[d>>2]|0)+j;j=h+8|0;c[j>>2]=(c[j>>2]|0)+k;k=h+12|0;c[k>>2]=(c[k>>2]|0)+l;l=h+16|0;c[l>>2]=(c[l>>2]|0)+m;m=h+20|0;c[m>>2]=(c[m>>2]|0)+n;n=h+24|0;c[n>>2]=(c[n>>2]|0)+o;o=h+28|0;c[o>>2]=(c[o>>2]|0)+p;i=e;return}function yY(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;yV(d);do{if((((c[d+40>>2]|0)>>>1&1)<<31>>31|0)!=0){b=yT(0,0)|0;if((b|0)!=0){yU(b,d+105|0,64);yU(b,d+41|0,32);yV(b);e=d+41|0;f=b+41|0;Ac(e|0,f|0,32)|0;yW(b);break}ze(d);g=0;h=g;return h|0}}while(0);if((a|0)!=0){c[a>>2]=32}g=d+41|0;h=g;return h|0}function yZ(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;j=a;a=b;b=bJ(d|0,73712)|0;if((b|0)==0){k=-1;l=k;i=g;return l|0}d=yT(e,f)|0;if((d|0)==0){f=b;aB(f|0)|0;k=-1;l=k;i=g;return l|0}f=32768;e=zd(f)|0;if((e|0)==0){m=b;aB(m|0)|0;yW(d);k=-1;l=k;i=g;return l|0}while(1){m=b6(e|0,1,f|0,b|0)|0;if((m|0)==0){break}yU(d,e,m)}ze(e);if((bo(b|0)|0)!=0){e=b;aB(e|0)|0;yW(d);k=-1;l=k;i=g;return l|0}aB(b|0)|0;b=yY(d,h)|0;if((b|0)==0){yW(d);k=-1;l=k;i=g;return l|0}if((c[h>>2]|0)>>>0>a>>>0){yW(d);c[(bX()|0)>>2]=22;k=-1;l=k;i=g;return l|0}else{a=j;j=b;b=c[h>>2]|0;Ac(a|0,j|0,b)|0;yW(d);k=c[h>>2]|0;l=k;i=g;return l|0}return 0}function y_(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;b=a;if((b|0)==0){d=0;e=d;return e|0}do{if((b|0)>=1){if((b|0)>11){f=2466;break}g=b-1|0}else{f=2466}}while(0);if((f|0)==2466){do{if((b|0)>=11){if((b|0)>35){f=2469;break}h=b|0}else{f=2469}}while(0);if((f|0)==2469){do{if((b|0)>=35){if((b|0)>40){f=2472;break}i=b+1|0}else{f=2472}}while(0);if((f|0)==2472){do{if((b|0)>=42){if((b|0)>57){f=2475;break}j=b|0}else{f=2475}}while(0);if((f|0)==2475){do{if((b|0)>=59){if((b|0)>95){f=2478;break}k=b-1|0}else{f=2478}}while(0);if((f|0)==2478){do{if((b|0)>=95){if((b|0)>125){f=2481;break}l=b|0}else{f=2481}}while(0);if((f|0)==2481){l=-1}k=l}j=k}i=j}h=i}g=h}h=g;if((h|0)<0){d=16382;e=d;return e|0}else{d=32768|c[47488+(h<<2)>>2];e=d;return e|0}return 0}function y$(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;a=c[(bX()|0)>>2]|0;if((a|0)==0){b=16381;d=b;return d|0}do{if((a|0)>=1){if((a|0)>11){e=2499;break}f=a-1|0}else{e=2499}}while(0);if((e|0)==2499){do{if((a|0)>=11){if((a|0)>35){e=2502;break}g=a|0}else{e=2502}}while(0);if((e|0)==2502){do{if((a|0)>=35){if((a|0)>40){e=2505;break}h=a+1|0}else{e=2505}}while(0);if((e|0)==2505){do{if((a|0)>=42){if((a|0)>57){e=2508;break}i=a|0}else{e=2508}}while(0);if((e|0)==2508){do{if((a|0)>=59){if((a|0)>95){e=2511;break}j=a-1|0}else{e=2511}}while(0);if((e|0)==2511){do{if((a|0)>=95){if((a|0)>125){e=2514;break}k=a|0}else{e=2514}}while(0);if((e|0)==2514){k=-1}j=k}i=j}h=i}g=h}f=g}g=f;if((g|0)<0){b=16382;d=b;return d|0}else{b=32768|c[47488+(g<<2)>>2];d=b;return d|0}return 0}function y0(){y1();return 0}function y1(){return}function y2(a){a=a|0;return}function y3(a){a=a|0;c[(bX()|0)>>2]=a;return}function y4(a){a=a|0;var b=0,d=0,e=0;b=y5(a)|0;do{if((b&32768|0)!=0){a=zc(b)|0;if((a|0)!=0){d=bY(a|0)|0;e=d;return e|0}else{b=16382;break}}}while(0);d=31696+(c[36776+((y6(b)|0)<<2)>>2]|0)|0;e=d;return e|0}function y5(a){a=a|0;return a&65535|0}function y6(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a;do{if((b|0)>=0){if((b|0)>196){break}c=b|0;return c|0}}while(0);do{if((b|0)>=198){if((b|0)>213){d=2547;break}e=b-1|0}else{d=2547}}while(0);if((d|0)==2547){do{if((b|0)>=257){if((b|0)>271){d=2550;break}f=b-44|0}else{d=2550}}while(0);if((d|0)==2550){do{if((b|0)>=273){if((b|0)>281){d=2553;break}g=b-45|0}else{d=2553}}while(0);if((d|0)==2553){do{if((b|0)>=1024){if((b|0)>1039){d=2556;break}h=b-787|0}else{d=2556}}while(0);if((d|0)==2556){do{if((b|0)>=16381){if((b|0)>16383){d=2559;break}i=b-16128|0}else{d=2559}}while(0);if((d|0)==2559){i=256}h=i}g=h}f=g}e=f}c=e;return c|0}function y7(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=d;d=e;e=y5(b)|0;if((e&32768|0)!=0){b=zc(e)|0;do{if((b|0)!=0){g=y8(b,f,d)|0;if((g|0)==22){break}if((d|0)!=0){a[f+(d-1)|0]=0}h=g;i=h;return i|0}}while(0);e=16382}b=31696+(c[36776+((y6(e)|0)<<2)>>2]|0)|0;e=(Ab(b|0)|0)+1|0;if(e>>>0<d>>>0){j=e}else{j=d}g=j;j=f;k=b;b=g;Ac(j|0,k|0,b)|0;if((d|0)!=0){a[f+(d-1)|0]=0}h=(g|0)==(e|0)?0:34;i=h;return i|0}function y8(a,b,c){a=a|0;b=b|0;c=c|0;return cx(a|0,b|0,c|0)|0}function y9(a){a=a|0;return 31464+(c[36688+((zb(za(a)|0)|0)<<2)>>2]|0)|0}function za(a){a=a|0;return a>>>24&127|0}function zb(a){a=a|0;var b=0,c=0,d=0,e=0;b=a;do{if((b|0)>=0){if((b|0)>15){break}c=b|0;return c|0}}while(0);do{if((b|0)>=31){if((b|0)>35){d=2594;break}e=b-15|0}else{d=2594}}while(0);if((d|0)==2594){e=21}c=e;return c|0}function zc(a){a=a|0;var b=0,d=0;b=a;do{if((b&32768|0)!=0){b=b&-32769;if(b>>>0<141){d=c[46920+(b<<2)>>2]|0;break}else{d=0;break}}else{d=0}}while(0);return d|0}function zd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0;do{if(a>>>0<245){if(a>>>0<11){b=16}else{b=a+11&-8}d=b>>>3;e=c[30830]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=123360+(h<<2)|0;j=123360+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[30830]=e&~(1<<g)}else{if(l>>>0<(c[30834]|0)>>>0){b8();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{b8();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(b>>>0<=(c[30832]|0)>>>0){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=123360+(p<<2)|0;m=123360+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[30830]=e&~(1<<r)}else{if(l>>>0<(c[30834]|0)>>>0){b8();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{b8();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[30832]|0;if((l|0)!=0){q=c[30835]|0;d=l>>>3;l=d<<1;f=123360+(l<<2)|0;k=c[30830]|0;h=1<<d;do{if((k&h|0)==0){c[30830]=k|h;s=f;t=123360+(l+2<<2)|0}else{d=123360+(l+2<<2)|0;g=c[d>>2]|0;if(g>>>0>=(c[30834]|0)>>>0){s=g;t=d;break}b8();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[30832]=m;c[30835]=e;n=i;return n|0}l=c[30831]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[123624+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[30834]|0;if(r>>>0<i>>>0){b8();return 0}e=r+b|0;m=e;if(r>>>0>=e>>>0){b8();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){b8();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){b8();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){b8();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{b8();return 0}}}while(0);L3245:do{if((e|0)!=0){f=d+28|0;i=123624+(c[f>>2]<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[30831]=c[30831]&~(1<<c[f>>2]);break L3245}else{if(e>>>0<(c[30834]|0)>>>0){b8();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break L3245}}}while(0);if(v>>>0<(c[30834]|0)>>>0){b8();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[30832]|0;if((f|0)!=0){e=c[30835]|0;i=f>>>3;f=i<<1;q=123360+(f<<2)|0;k=c[30830]|0;g=1<<i;do{if((k&g|0)==0){c[30830]=k|g;y=q;z=123360+(f+2<<2)|0}else{i=123360+(f+2<<2)|0;l=c[i>>2]|0;if(l>>>0>=(c[30834]|0)>>>0){y=l;z=i;break}b8();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[30832]=p;c[30835]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231){o=-1;break}f=a+11|0;g=f&-8;k=c[30831]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[123624+(A<<2)>>2]|0;L3293:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break L3293}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[123624+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(J>>>0>=((c[30832]|0)-g|0)>>>0){o=g;break}q=K;m=c[30834]|0;if(q>>>0<m>>>0){b8();return 0}p=q+g|0;k=p;if(q>>>0>=p>>>0){b8();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){b8();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){b8();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){b8();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{b8();return 0}}}while(0);L3343:do{if((e|0)!=0){i=K+28|0;m=123624+(c[i>>2]<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[30831]=c[30831]&~(1<<c[i>>2]);break L3343}else{if(e>>>0<(c[30834]|0)>>>0){b8();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break L3343}}}while(0);if(L>>>0<(c[30834]|0)>>>0){b8();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256){e=i<<1;m=123360+(e<<2)|0;r=c[30830]|0;j=1<<i;do{if((r&j|0)==0){c[30830]=r|j;O=m;P=123360+(e+2<<2)|0}else{i=123360+(e+2<<2)|0;d=c[i>>2]|0;if(d>>>0>=(c[30834]|0)>>>0){O=d;P=i;break}b8();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=123624+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[30831]|0;l=1<<Q;if((m&l|0)==0){c[30831]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=2755;break}else{l=l<<1;m=j}}if((T|0)==2755){if(S>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[30834]|0;if(m>>>0<i>>>0){b8();return 0}if(j>>>0<i>>>0){b8();return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[30832]|0;if(o>>>0<=K>>>0){S=K-o|0;J=c[30835]|0;if(S>>>0>15){R=J;c[30835]=R+o;c[30832]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[30832]=0;c[30835]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[30833]|0;if(o>>>0<J>>>0){S=J-o|0;c[30833]=S;J=c[30836]|0;K=J;c[30836]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[30658]|0)==0){J=bN(30)|0;if((J-1&J|0)==0){c[30660]=J;c[30659]=J;c[30661]=-1;c[30662]=-1;c[30663]=0;c[30941]=0;c[30658]=(cz(0)|0)&-16^1431655768;break}else{b8();return 0}}}while(0);J=o+48|0;S=c[30660]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(S>>>0<=o>>>0){n=0;return n|0}O=c[30940]|0;do{if((O|0)!=0){P=c[30938]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);L3435:do{if((c[30941]&4|0)==0){O=c[30836]|0;L3437:do{if((O|0)==0){T=2785}else{L=O;P=123768;while(1){U=P|0;M=c[U>>2]|0;if(M>>>0<=L>>>0){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=2785;break L3437}else{P=M}}if((P|0)==0){T=2785;break}L=R-(c[30833]|0)&Q;if(L>>>0>=2147483647){W=0;break}m=bW(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=2794}}while(0);do{if((T|0)==2785){O=bW(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[30659]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[30938]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647)){W=0;break}m=c[30940]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=bW($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=2794}}while(0);L3457:do{if((T|0)==2794){m=-_|0;if((X|0)!=-1){aa=Y;ab=X;T=2805;break L3435}do{if((Z|0)!=-1&_>>>0<2147483647&_>>>0<J>>>0){g=c[30660]|0;O=K-_+g&-g;if(O>>>0>=2147483647){ac=_;break}if((bW(O|0)|0)==-1){bW(m|0)|0;W=Y;break L3457}else{ac=O+_|0;break}}else{ac=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ac;ab=Z;T=2805;break L3435}}}while(0);c[30941]=c[30941]|4;ad=W;T=2802}else{ad=0;T=2802}}while(0);do{if((T|0)==2802){if(S>>>0>=2147483647){break}W=bW(S|0)|0;Z=bW(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ac=Z-W|0;Z=ac>>>0>(o+40|0)>>>0;Y=Z?W:-1;if((Y|0)!=-1){aa=Z?ac:ad;ab=Y;T=2805}}}while(0);do{if((T|0)==2805){ad=(c[30938]|0)+aa|0;c[30938]=ad;if(ad>>>0>(c[30939]|0)>>>0){c[30939]=ad}ad=c[30836]|0;L3477:do{if((ad|0)==0){S=c[30834]|0;if((S|0)==0|ab>>>0<S>>>0){c[30834]=ab}c[30942]=ab;c[30943]=aa;c[30945]=0;c[30839]=c[30658];c[30838]=-1;S=0;do{Y=S<<1;ac=123360+(Y<<2)|0;c[123360+(Y+3<<2)>>2]=ac;c[123360+(Y+2<<2)>>2]=ac;S=S+1|0;}while(S>>>0<32);S=ab+8|0;if((S&7|0)==0){ae=0}else{ae=-S&7}S=aa-40-ae|0;c[30836]=ab+ae;c[30833]=S;c[ab+(ae+4)>>2]=S|1;c[ab+(aa-36)>>2]=40;c[30837]=c[30662]}else{S=123768;while(1){af=c[S>>2]|0;ag=S+4|0;ah=c[ag>>2]|0;if((ab|0)==(af+ah|0)){T=2817;break}ac=c[S+8>>2]|0;if((ac|0)==0){break}else{S=ac}}do{if((T|0)==2817){if((c[S+12>>2]&8|0)!=0){break}ac=ad;if(!(ac>>>0>=af>>>0&ac>>>0<ab>>>0)){break}c[ag>>2]=ah+aa;ac=c[30836]|0;Y=(c[30833]|0)+aa|0;Z=ac;W=ac+8|0;if((W&7|0)==0){ai=0}else{ai=-W&7}W=Y-ai|0;c[30836]=Z+ai;c[30833]=W;c[Z+(ai+4)>>2]=W|1;c[Z+(Y+4)>>2]=40;c[30837]=c[30662];break L3477}}while(0);if(ab>>>0<(c[30834]|0)>>>0){c[30834]=ab}S=ab+aa|0;Y=123768;while(1){aj=Y|0;if((c[aj>>2]|0)==(S|0)){T=2827;break}Z=c[Y+8>>2]|0;if((Z|0)==0){break}else{Y=Z}}do{if((T|0)==2827){if((c[Y+12>>2]&8|0)!=0){break}c[aj>>2]=ab;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ab+8|0;if((S&7|0)==0){ak=0}else{ak=-S&7}S=ab+(aa+8)|0;if((S&7|0)==0){al=0}else{al=-S&7}S=ab+(al+aa)|0;Z=S;W=ak+o|0;ac=ab+W|0;_=ac;K=S-(ab+ak)-o|0;c[ab+(ak+4)>>2]=o|3;do{if((Z|0)==(c[30836]|0)){J=(c[30833]|0)+K|0;c[30833]=J;c[30836]=_;c[ab+(W+4)>>2]=J|1}else{if((Z|0)==(c[30835]|0)){J=(c[30832]|0)+K|0;c[30832]=J;c[30835]=_;c[ab+(W+4)>>2]=J|1;c[ab+(J+W)>>2]=J;break}J=aa+4|0;X=c[ab+(J+al)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;L3522:do{if(X>>>0<256){U=c[ab+((al|8)+aa)>>2]|0;Q=c[ab+(aa+12+al)>>2]|0;R=123360+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[30834]|0)>>>0){b8();return 0}if((c[U+12>>2]|0)==(Z|0)){break}b8();return 0}}while(0);if((Q|0)==(U|0)){c[30830]=c[30830]&~(1<<V);break}do{if((Q|0)==(R|0)){am=Q+8|0}else{if(Q>>>0<(c[30834]|0)>>>0){b8();return 0}m=Q+8|0;if((c[m>>2]|0)==(Z|0)){am=m;break}b8();return 0}}while(0);c[U+12>>2]=Q;c[am>>2]=U}else{R=S;m=c[ab+((al|24)+aa)>>2]|0;P=c[ab+(aa+12+al)>>2]|0;do{if((P|0)==(R|0)){O=al|16;g=ab+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ab+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){an=0;break}else{ao=O;ap=e}}else{ao=L;ap=g}while(1){g=ao+20|0;L=c[g>>2]|0;if((L|0)!=0){ao=L;ap=g;continue}g=ao+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{ao=L;ap=g}}if(ap>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[ap>>2]=0;an=ao;break}}else{g=c[ab+((al|8)+aa)>>2]|0;if(g>>>0<(c[30834]|0)>>>0){b8();return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){b8();return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;an=P;break}else{b8();return 0}}}while(0);if((m|0)==0){break}P=ab+(aa+28+al)|0;U=123624+(c[P>>2]<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=an;if((an|0)!=0){break}c[30831]=c[30831]&~(1<<c[P>>2]);break L3522}else{if(m>>>0<(c[30834]|0)>>>0){b8();return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=an}else{c[m+20>>2]=an}if((an|0)==0){break L3522}}}while(0);if(an>>>0<(c[30834]|0)>>>0){b8();return 0}c[an+24>>2]=m;R=al|16;P=c[ab+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[an+16>>2]=P;c[P+24>>2]=an;break}}}while(0);P=c[ab+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[an+20>>2]=P;c[P+24>>2]=an;break}}}while(0);aq=ab+(($|al)+aa)|0;ar=$+K|0}else{aq=Z;ar=K}J=aq+4|0;c[J>>2]=c[J>>2]&-2;c[ab+(W+4)>>2]=ar|1;c[ab+(ar+W)>>2]=ar;J=ar>>>3;if(ar>>>0<256){V=J<<1;X=123360+(V<<2)|0;P=c[30830]|0;m=1<<J;do{if((P&m|0)==0){c[30830]=P|m;as=X;at=123360+(V+2<<2)|0}else{J=123360+(V+2<<2)|0;U=c[J>>2]|0;if(U>>>0>=(c[30834]|0)>>>0){as=U;at=J;break}b8();return 0}}while(0);c[at>>2]=_;c[as+12>>2]=_;c[ab+(W+8)>>2]=as;c[ab+(W+12)>>2]=X;break}V=ac;m=ar>>>8;do{if((m|0)==0){au=0}else{if(ar>>>0>16777215){au=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;au=ar>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=123624+(au<<2)|0;c[ab+(W+28)>>2]=au;c[ab+(W+20)>>2]=0;c[ab+(W+16)>>2]=0;X=c[30831]|0;Q=1<<au;if((X&Q|0)==0){c[30831]=X|Q;c[m>>2]=V;c[ab+(W+24)>>2]=m;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}if((au|0)==31){av=0}else{av=25-(au>>>1)|0}Q=ar<<av;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(ar|0)){break}aw=X+16+(Q>>>31<<2)|0;m=c[aw>>2]|0;if((m|0)==0){T=2900;break}else{Q=Q<<1;X=m}}if((T|0)==2900){if(aw>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[aw>>2]=V;c[ab+(W+24)>>2]=X;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[30834]|0;if(X>>>0<$>>>0){b8();return 0}if(m>>>0<$>>>0){b8();return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ab+(W+8)>>2]=m;c[ab+(W+12)>>2]=X;c[ab+(W+24)>>2]=0;break}}}while(0);n=ab+(ak|8)|0;return n|0}}while(0);Y=ad;W=123768;while(1){ax=c[W>>2]|0;if(ax>>>0<=Y>>>0){ay=c[W+4>>2]|0;az=ax+ay|0;if(az>>>0>Y>>>0){break}}W=c[W+8>>2]|0}W=ax+(ay-39)|0;if((W&7|0)==0){aA=0}else{aA=-W&7}W=ax+(ay-47+aA)|0;ac=W>>>0<(ad+16|0)>>>0?Y:W;W=ac+8|0;_=ab+8|0;if((_&7|0)==0){aB=0}else{aB=-_&7}_=aa-40-aB|0;c[30836]=ab+aB;c[30833]=_;c[ab+(aB+4)>>2]=_|1;c[ab+(aa-36)>>2]=40;c[30837]=c[30662];c[ac+4>>2]=27;c[W>>2]=c[30942];c[W+4>>2]=c[30943];c[W+8>>2]=c[30944];c[W+12>>2]=c[30945];c[30942]=ab;c[30943]=aa;c[30945]=0;c[30944]=W;W=ac+28|0;c[W>>2]=7;if((ac+32|0)>>>0<az>>>0){_=W;while(1){W=_+4|0;c[W>>2]=7;if((_+8|0)>>>0<az>>>0){_=W}else{break}}}if((ac|0)==(Y|0)){break}_=ac-ad|0;W=Y+(_+4)|0;c[W>>2]=c[W>>2]&-2;c[ad+4>>2]=_|1;c[Y+_>>2]=_;W=_>>>3;if(_>>>0<256){K=W<<1;Z=123360+(K<<2)|0;S=c[30830]|0;m=1<<W;do{if((S&m|0)==0){c[30830]=S|m;aC=Z;aD=123360+(K+2<<2)|0}else{W=123360+(K+2<<2)|0;Q=c[W>>2]|0;if(Q>>>0>=(c[30834]|0)>>>0){aC=Q;aD=W;break}b8();return 0}}while(0);c[aD>>2]=ad;c[aC+12>>2]=ad;c[ad+8>>2]=aC;c[ad+12>>2]=Z;break}K=ad;m=_>>>8;do{if((m|0)==0){aE=0}else{if(_>>>0>16777215){aE=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;ac=(Y+520192|0)>>>16&4;W=Y<<ac;Y=(W+245760|0)>>>16&2;Q=14-(ac|S|Y)+(W<<Y>>>15)|0;aE=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=123624+(aE<<2)|0;c[ad+28>>2]=aE;c[ad+20>>2]=0;c[ad+16>>2]=0;Z=c[30831]|0;Q=1<<aE;if((Z&Q|0)==0){c[30831]=Z|Q;c[m>>2]=K;c[ad+24>>2]=m;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}if((aE|0)==31){aF=0}else{aF=25-(aE>>>1)|0}Q=_<<aF;Z=c[m>>2]|0;while(1){if((c[Z+4>>2]&-8|0)==(_|0)){break}aG=Z+16+(Q>>>31<<2)|0;m=c[aG>>2]|0;if((m|0)==0){T=2935;break}else{Q=Q<<1;Z=m}}if((T|0)==2935){if(aG>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[aG>>2]=K;c[ad+24>>2]=Z;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}}Q=Z+8|0;_=c[Q>>2]|0;m=c[30834]|0;if(Z>>>0<m>>>0){b8();return 0}if(_>>>0<m>>>0){b8();return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[ad+8>>2]=_;c[ad+12>>2]=Z;c[ad+24>>2]=0;break}}}while(0);ad=c[30833]|0;if(ad>>>0<=o>>>0){break}_=ad-o|0;c[30833]=_;ad=c[30836]|0;Q=ad;c[30836]=Q+o;c[Q+(o+4)>>2]=_|1;c[ad+4>>2]=o|3;n=ad+8|0;return n|0}}while(0);c[(bX()|0)>>2]=12;n=0;return n|0}
function lO(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=b;b=e;e=f;if((g|0)!=0){i=h+384|0}else{i=h|0}h=i;i=(d[b|0]|0)<<24|(d[b+1|0]|0)<<16|(d[b+2|0]|0)<<8|(d[b+3|0]|0);g=(d[b+4|0]|0)<<24|(d[b+5|0]|0)<<16|(d[b+6|0]|0)<<8|(d[b+7|0]|0);b=(i>>>4^g)&252645135;g=g^b;i=i^b<<4;b=(i>>>16^g)&65535;g=g^b;i=i^b<<16;b=(g>>>2^i)&858993459;i=i^b;g=g^b<<2;b=(g>>>8^i)&16711935;i=i^b;g=g^b<<8;g=g<<1|g>>>31;b=(i^g)&-1431655766;g=g^b;i=i^b;i=i<<1|i>>>31;f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=g^c[f>>2];i=i^c[7608+((b&63)<<2)>>2];i=i^c[8120+((b>>>8&63)<<2)>>2];i=i^c[10680+((b>>>16&63)<<2)>>2];i=i^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(g<<28|g>>>4)^c[f>>2];i=i^c[7864+((b&63)<<2)>>2];i=i^c[8376+((b>>>8&63)<<2)>>2];i=i^c[12984+((b>>>16&63)<<2)>>2];i=i^c[17592+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=i^c[f>>2];g=g^c[7608+((b&63)<<2)>>2];g=g^c[8120+((b>>>8&63)<<2)>>2];g=g^c[10680+((b>>>16&63)<<2)>>2];g=g^c[15288+((b>>>24&63)<<2)>>2];f=h;h=f+4|0;b=(i<<28|i>>>4)^c[f>>2];g=g^c[7864+((b&63)<<2)>>2];g=g^c[8376+((b>>>8&63)<<2)>>2];g=g^c[12984+((b>>>16&63)<<2)>>2];g=g^c[17592+((b>>>24&63)<<2)>>2];g=g<<31|g>>>1;b=(g^i)&-1431655766;g=g^b;i=i^b;i=i<<31|i>>>1;b=(i>>>8^g)&16711935;g=g^b;i=i^b<<8;b=(i>>>2^g)&858993459;g=g^b;i=i^b<<2;b=(g>>>16^i)&65535;i=i^b;g=g^b<<16;b=(g>>>4^i)&252645135;i=i^b;g=g^b<<4;a[e|0]=g>>>24&255;a[e+1|0]=g>>>16&255;a[e+2|0]=g>>>8&255;a[e+3|0]=g&255;a[e+4|0]=i>>>24&255;a[e+5|0]=i>>>16&255;a[e+6|0]=i>>>8&255;a[e+7|0]=i&255;return 0}function lP(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;g=a;a=b;b=d;d=e;do{if((s5()|0)==0){if((c[30684]|0)!=0){break}c[30684]=1;c[30516]=lK()|0;if((c[30516]|0)!=0){uj(79624,(e=i,i=i+8|0,c[e>>2]=c[30516],e)|0);i=e}}}while(0);if((c[30516]|0)!=0){h=50;j=h;i=f;return j|0}lS(a,g|0);lS(b,g+512|0);lS(d,g+256|0);up(32);d=0;while(1){if((d|0)>=32){break}c[g+384+(d<<2)>>2]=c[g+(94-d<<2)>>2];c[g+384+(d+1<<2)>>2]=c[g+(95-d<<2)>>2];c[g+(d+32<<2)>>2]=c[g+384+(62-d<<2)>>2];c[g+(d+33<<2)>>2]=c[g+384+(63-d<<2)>>2];c[g+384+(d+64<<2)>>2]=c[g+(30-d<<2)>>2];c[g+384+(d+65<<2)>>2]=c[g+(31-d<<2)>>2];d=d+2|0}h=0;j=h;i=f;return j|0}function lQ(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;c=i;i=i+8|0;e=c|0;f=b;b=0;while(1){if((b|0)>=8){break}a[e+b|0]=(d[f+b|0]|0)&254;b=b+1|0}b=0;f=63;while(1){if((b|0)>(f|0)){g=5683;break}h=(b+f|0)/2|0;j=lR(e|0,192+(h<<3)|0,8)|0;if((j|0)==0){g=5678;break}if((j|0)>0){b=h+1|0}else{f=h-1|0}}if((g|0)==5683){k=0;l=k;i=c;return l|0}else if((g|0)==5678){k=-1;l=k;i=c;return l|0}return 0}function lR(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;b=c;c=e;while(1){if((c|0)==0){g=5693;break}if((a[f]|0)!=(a[b]|0)){g=5690;break}c=c-1|0;f=f+1|0;b=b+1|0}if((g|0)==5693){h=0;i=h;return i|0}else if((g|0)==5690){h=(d[f]|0)-(d[b]|0)|0;i=h;return i|0}return 0}function lS(a,b){a=a|0;b=b|0;var e=0,f=0,g=0;e=a;a=b;b=(d[e|0]|0)<<24|(d[e+1|0]|0)<<16|(d[e+2|0]|0)<<8|(d[e+3|0]|0);f=(d[e+4|0]|0)<<24|(d[e+5|0]|0)<<16|(d[e+6|0]|0)<<8|(d[e+7|0]|0);e=(f>>>4^b)&252645135;b=b^e;f=f^e<<4;e=(f>>>0^b)&269488144;b=b^e;f=f^e<<0;b=c[42056+((b>>>0&15)<<2)>>2]<<3|c[42056+((b>>>8&15)<<2)>>2]<<2|c[42056+((b>>>16&15)<<2)>>2]<<1|c[42056+((b>>>24&15)<<2)>>2]|c[42056+((b>>>5&15)<<2)>>2]<<7|c[42056+((b>>>13&15)<<2)>>2]<<6|c[42056+((b>>>21&15)<<2)>>2]<<5|c[42056+((b>>>29&15)<<2)>>2]<<4;b=b&268435455;f=c[29552+((f>>>1&15)<<2)>>2]<<3|c[29552+((f>>>9&15)<<2)>>2]<<2|c[29552+((f>>>17&15)<<2)>>2]<<1|c[29552+((f>>>25&15)<<2)>>2]|c[29552+((f>>>4&15)<<2)>>2]<<7|c[29552+((f>>>12&15)<<2)>>2]<<6|c[29552+((f>>>20&15)<<2)>>2]<<5|c[29552+((f>>>28&15)<<2)>>2]<<4;f=f&268435455;e=0;while(1){if((e|0)>=16){break}b=(b<<(d[47992+e|0]|0)|b>>>((28-(d[47992+e|0]|0)|0)>>>0))&268435455;f=(f<<(d[47992+e|0]|0)|f>>>((28-(d[47992+e|0]|0)|0)>>>0))&268435455;g=a;a=g+4|0;c[g>>2]=b<<4&603979776|b<<28&268435456|b<<14&134217728|b<<18&34078720|b<<6&16777216|b<<9&2097152|b>>>1&1048576|b<<10&262144|b<<2&131072|b>>>10&65536|f>>>13&8192|f>>>4&4096|f<<6&2048|f>>>1&1024|f>>>14&512|f&256|f>>>5&32|f>>>10&16|f>>>3&8|f>>>18&4|f>>>26&2|f>>>24&1;g=a;a=g+4|0;c[g>>2]=b<<15&536870912|b<<17&268435456|b<<10&134217728|b<<22&67108864|b>>>2&33554432|b<<1&16777216|b<<16&2097152|b<<11&1048576|b<<3&524288|b>>>6&262144|b<<15&131072|b>>>4&65536|f>>>2&8192|f<<8&4096|f>>>14&2056|f>>>9&1024|f&512|f<<7&256|f>>>7&32|f>>>3&17|f<<2&4|f>>>21&2;e=e+1|0}return}function lT(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=l$(a,b,c)|0;up(47);return d|0}function lU(a,b,c){a=a|0;b=b|0;c=c|0;l_(a,b,c);up(36);return}function lV(a,b,c){a=a|0;b=b|0;c=c|0;lW(a,b,c);up(36);return}function lW(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;if((c[e+208>>2]|0)==0){c[e+208>>2]=1;lX(e|0,e+104|0)}lY(b,d,e+104|0);return}function lX(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+104|0;f=d|0;g=a;a=c;c=f+104|0;h=g;g=h+2|0;j=lZ(b[h>>1]|0)|0;h=g;g=h+2|0;k=-(e[h>>1]|0)&65535;h=g;g=h+2|0;l=-(e[h>>1]|0)&65535;h=g;g=h+2|0;m=c-2|0;c=m;b[m>>1]=lZ(b[h>>1]|0)|0;h=c-2|0;c=h;b[h>>1]=l;h=c-2|0;c=h;b[h>>1]=k;h=c-2|0;c=h;b[h>>1]=j;h=0;while(1){if((h|0)>=7){break}m=g;g=m+2|0;j=b[m>>1]|0;m=g;g=m+2|0;n=c-2|0;c=n;b[n>>1]=b[m>>1]|0;m=c-2|0;c=m;b[m>>1]=j;m=g;g=m+2|0;j=lZ(b[m>>1]|0)|0;m=g;g=m+2|0;k=-(e[m>>1]|0)&65535;m=g;g=m+2|0;l=-(e[m>>1]|0)&65535;m=g;g=m+2|0;n=c-2|0;c=n;b[n>>1]=lZ(b[m>>1]|0)|0;m=c-2|0;c=m;b[m>>1]=k;m=c-2|0;c=m;b[m>>1]=l;m=c-2|0;c=m;b[m>>1]=j;h=h+1|0}h=g;g=h+2|0;j=b[h>>1]|0;h=g;g=h+2|0;m=c-2|0;c=m;b[m>>1]=b[h>>1]|0;h=c-2|0;c=h;b[h>>1]=j;h=g;g=h+2|0;j=lZ(b[h>>1]|0)|0;h=g;g=h+2|0;k=-(e[h>>1]|0)&65535;h=g;g=h+2|0;l=-(e[h>>1]|0)&65535;h=g;g=h+2|0;g=c-2|0;c=g;b[g>>1]=lZ(b[h>>1]|0)|0;h=c-2|0;c=h;b[h>>1]=l;l=c-2|0;c=l;b[l>>1]=k;k=c-2|0;c=k;b[k>>1]=j;j=a;a=f;Ac(j|0,a|0,104)|0;Ae(f|0,0,104);i=d;return}function lY(c,d,f){c=c|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;j=c;c=f;f=8;k=h;l=d;Ac(k|0,l|0,8)|0;b[h>>1]=((e[h>>1]|0)>>8|(e[h>>1]|0)<<8)&65535;b[h+2>>1]=((e[h+2>>1]|0)>>8|(e[h+2>>1]|0)<<8)&65535;b[h+4>>1]=((e[h+4>>1]|0)>>8|(e[h+4>>1]|0)<<8)&65535;b[h+6>>1]=((e[h+6>>1]|0)>>8|(e[h+6>>1]|0)<<8)&65535;do{l=c;c=l+2|0;k=b[l>>1]|0;l=k;if(k<<16>>16!=0){k=(e[h>>1]|0)&65535;b[h>>1]=k;if(k<<16>>16!=0){k=ad(e[h>>1]|0,l&65535)|0;b[h>>1]=k&65535;l=k>>>16&65535;b[h>>1]=(e[h>>1]|0)-(l&65535)+((e[h>>1]|0|0)<(l&65535|0)?1:0)&65535}else{b[h>>1]=1-(l&65535)&65535}}else{b[h>>1]=1-(e[h>>1]|0)&65535}l=c;c=l+2|0;k=h+2|0;b[k>>1]=(e[k>>1]|0)+(e[l>>1]|0)&65535;l=c;c=l+2|0;k=h+4|0;b[k>>1]=(e[k>>1]|0)+(e[l>>1]|0)&65535;l=c;c=l+2|0;k=b[l>>1]|0;l=k;if(k<<16>>16!=0){k=(e[h+6>>1]|0)&65535;b[h+6>>1]=k;if(k<<16>>16!=0){k=ad(e[h+6>>1]|0,l&65535)|0;b[h+6>>1]=k&65535;l=k>>>16&65535;b[h+6>>1]=(e[h+6>>1]|0)-(l&65535)+((e[h+6>>1]|0|0)<(l&65535|0)?1:0)&65535}else{b[h+6>>1]=1-(l&65535)&65535}}else{b[h+6>>1]=1-(e[h+6>>1]|0)&65535}l=b[h+4>>1]|0;k=h+4|0;b[k>>1]=((e[k>>1]|0)^(e[h>>1]|0))&65535;k=c;c=k+2|0;d=b[k>>1]|0;k=d;if(d<<16>>16!=0){d=(e[h+4>>1]|0)&65535;b[h+4>>1]=d;if(d<<16>>16!=0){d=ad(e[h+4>>1]|0,k&65535)|0;b[h+4>>1]=d&65535;k=d>>>16&65535;b[h+4>>1]=(e[h+4>>1]|0)-(k&65535)+((e[h+4>>1]|0|0)<(k&65535|0)?1:0)&65535}else{b[h+4>>1]=1-(k&65535)&65535}}else{b[h+4>>1]=1-(e[h+4>>1]|0)&65535}k=b[h+2>>1]|0;d=h+2|0;b[d>>1]=((e[d>>1]|0)^(e[h+6>>1]|0))&65535;d=h+2|0;b[d>>1]=(e[d>>1]|0)+(e[h+4>>1]|0)&65535;d=c;c=d+2|0;m=b[d>>1]|0;d=m;if(m<<16>>16!=0){m=(e[h+2>>1]|0)&65535;b[h+2>>1]=m;if(m<<16>>16!=0){m=ad(e[h+2>>1]|0,d&65535)|0;b[h+2>>1]=m&65535;d=m>>>16&65535;b[h+2>>1]=(e[h+2>>1]|0)-(d&65535)+((e[h+2>>1]|0|0)<(d&65535|0)?1:0)&65535}else{b[h+2>>1]=1-(d&65535)&65535}}else{b[h+2>>1]=1-(e[h+2>>1]|0)&65535}d=h+4|0;b[d>>1]=(e[d>>1]|0)+(e[h+2>>1]|0)&65535;d=h|0;b[d>>1]=((e[d>>1]|0)^(e[h+2>>1]|0))&65535;d=h+6|0;b[d>>1]=((e[d>>1]|0)^(e[h+4>>1]|0))&65535;d=h+2|0;b[d>>1]=((e[d>>1]|0)^l&65535)&65535;l=h+4|0;b[l>>1]=((e[l>>1]|0)^k&65535)&65535;k=f-1|0;f=k;}while((k|0)!=0);f=c;c=f+2|0;k=b[f>>1]|0;f=k;if(k<<16>>16!=0){k=(e[h>>1]|0)&65535;b[h>>1]=k;if(k<<16>>16!=0){k=ad(e[h>>1]|0,f&65535)|0;b[h>>1]=k&65535;f=k>>>16&65535;b[h>>1]=(e[h>>1]|0)-(f&65535)+((e[h>>1]|0|0)<(f&65535|0)?1:0)&65535}else{b[h>>1]=1-(f&65535)&65535}}else{b[h>>1]=1-(e[h>>1]|0)&65535}f=c;c=f+2|0;k=h+4|0;b[k>>1]=(e[k>>1]|0)+(e[f>>1]|0)&65535;f=c;c=f+2|0;k=h+2|0;b[k>>1]=(e[k>>1]|0)+(e[f>>1]|0)&65535;f=b[c>>1]|0;c=f;if(f<<16>>16!=0){f=(e[h+6>>1]|0)&65535;b[h+6>>1]=f;if(f<<16>>16!=0){f=ad(e[h+6>>1]|0,c&65535)|0;b[h+6>>1]=f&65535;c=f>>>16&65535;b[h+6>>1]=(e[h+6>>1]|0)-(c&65535)+((e[h+6>>1]|0|0)<(c&65535|0)?1:0)&65535}else{b[h+6>>1]=1-(c&65535)&65535}}else{b[h+6>>1]=1-(e[h+6>>1]|0)&65535}b[h>>1]=((e[h>>1]|0)>>8|(e[h>>1]|0)<<8)&65535;b[h+2>>1]=((e[h+2>>1]|0)>>8|(e[h+2>>1]|0)<<8)&65535;b[h+4>>1]=((e[h+4>>1]|0)>>8|(e[h+4>>1]|0)<<8)&65535;b[h+6>>1]=((e[h+6>>1]|0)>>8|(e[h+6>>1]|0)<<8)&65535;c=j|0;f=h|0;a[c]=a[f]|0;a[c+1|0]=a[f+1|0]|0;f=j+2|0;c=h+4|0;a[f]=a[c]|0;a[f+1|0]=a[c+1|0]|0;c=j+4|0;f=h+2|0;a[c]=a[f]|0;a[c+1|0]=a[f+1|0]|0;f=j+6|0;j=h+6|0;a[f]=a[j]|0;a[f+1|0]=a[j+1|0]|0;i=g;return}function lZ(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=a;if((b&65535|0)<2){c=b;d=c;return d|0}a=(65537/(b&65535|0)|0)&65535;e=(65537%(b&65535|0)|0)&65535;if((e&65535|0)==1){c=1-(a&65535)&65535;d=c;return d|0}f=1;while(1){g=((b&65535|0)/(e&65535|0)|0)&65535;b=((b&65535|0)%(e&65535|0)|0)&65535;f=(f&65535)+(ad(g&65535,a&65535)|0)&65535;if((b&65535|0)==1){h=5771;break}g=((e&65535|0)/(b&65535|0)|0)&65535;e=((e&65535|0)%(b&65535|0)|0)&65535;a=(a&65535)+(ad(g&65535,f&65535)|0)&65535;if((e&65535|0)==1){h=5774;break}}if((h|0)==5771){c=f;d=c;return d|0}else if((h|0)==5774){c=1-(a&65535)&65535;d=c;return d|0}return 0}function l_(a,b,c){a=a|0;b=b|0;c=c|0;lY(b,c,a|0);return}function l$(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=a;a=b;b=d;if((c[30746]|0)==0){c[30746]=1;c[30740]=l0()|0;if((c[30740]|0)!=0){uj(78448,(d=i,i=i+8|0,c[d>>2]=c[30740],d)|0);i=d}}if((c[30740]|0)!=0){g=50;h=g;i=e;return h|0}if((b|0)==16){}else{b4(70896,67472,253,86392);return 0}c[f+208>>2]=0;l1(a,f|0);lX(f|0,f+104|0);g=0;h=g;i=e;return h|0}function l0(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0;a=i;i=i+224|0;b=a|0;c=a+216|0;d=0;while(1){if(d>>>0>=11){e=5801;break}l$(b,5616+(d<<5)|0,16)|0;l_(b,c|0,5632+(d<<5)|0);if((Af(c|0,5640+(d<<5)|0,8)|0)!=0){e=5796;break}lW(b,c|0,5640+(d<<5)|0);if((Af(c|0,5632+(d<<5)|0,8)|0)!=0){e=5798;break}d=d+1|0}if((e|0)==5801){f=0;g=f;i=a;return g|0}else if((e|0)==5796){f=64624;g=f;i=a;return g|0}else if((e|0)==5798){f=62872;g=f;i=a;return g|0}return 0}function l1(a,c){a=a|0;c=c|0;var f=0;f=a;a=c;c=0;while(1){if((c|0)>=8){break}b[a+(c<<1)>>1]=((d[f]|0)<<8)+(d[f+1|0]|0)&65535;f=f+2|0;c=c+1|0}f=0;while(1){if((c|0)>=52){break}f=f+1|0;b[a+(f+7<<1)>>1]=((e[a+((f&7)<<1)>>1]|0)<<9|(e[a+((f+1&7)<<1)>>1]|0)>>7)&65535;a=a+((f&8)<<1)|0;f=f&7;c=c+1|0}return}function l2(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;m=i;i=i+8|0;n=m|0;o=b;b=d;d=e;e=f;f=g;g=h;h=j;j=k;k=l;l=k;p=0;if((d|0)==17){q=5817}else{if((d|0)==19){q=5817}}do{if((q|0)==5817){if((f|0)!=0){if((g|0)==8){break}}r=55;s=r;i=m;return s|0}}while(0);if((tM(o)|0)!=0){t=1}else{t=(tM(k)|0)!=0}k=l3(mi(n,e,(t&1|0)!=0?1:0)|0)|0;if((k|0)!=0){r=k;s=r;i=m;return s|0}k=0;while(1){if(p>>>0>=j>>>0){break}if((k|0)!=0){mo(c[n>>2]|0);u=0;while(1){if((u|0)>=(k|0)){break}t=c[n>>2]|0;if((c[t+4>>2]|0)==(c[t+8>>2]|0)){ms(t,0,0)}v=t+4|0;w=c[v>>2]|0;c[v>>2]=w+1;a[t+12+w|0]=0;u=u+1|0}}do{if((d|0)==17){q=5838}else{if((d|0)==19){q=5838;break}ms(c[n>>2]|0,o,b)}}while(0);if((q|0)==5838){q=0;w=b+8|0;t=w;if((d|0)==19){t=h;if(t>>>0<w>>>0){t=w}}while(1){if(t>>>0<=w>>>0){break}ms(c[n>>2]|0,f,g);ms(c[n>>2]|0,o,b);t=t-w|0}if(t>>>0<g>>>0){ms(c[n>>2]|0,f,t)}else{ms(c[n>>2]|0,f,g);t=t-g|0;ms(c[n>>2]|0,o,t)}}mt(c[n>>2]|0,5,0,0)|0;u=mI(e)|0;if(u>>>0>(j-p|0)>>>0){u=j-p|0}w=l+p|0;v=mB(c[n>>2]|0,e)|0;x=u;Ac(w|0,v|0,x)|0;p=p+u|0;k=k+1|0}mq(c[n>>2]|0);r=0;s=r;i=m;return s|0}function l3(a){a=a|0;return a&65535|0}function l4(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;l=i;i=i+8|0;m=l|0;n=b;b=d;d=e;e=f;f=g;g=h;h=k;k=j;j=h;do{if((e|0)!=0){if((f|0)==0){break}if((g|0)==0){break}if((k|0)==0){break}o=mI(d)|0;if((o|0)==0){p=5;q=p;i=l;return q|0}if((tM(n)|0)!=0){r=1}else{r=(tM(h)|0)!=0}s=r&1;t=(((k-1|0)>>>0)/(o>>>0)|0)+1|0;u=k-(ad(t-1|0,o)|0)|0;if((s|0)!=0){v=tL(f+4+o+o|0)|0}else{v=tJ(f+4+o+o|0)|0}w=v;if((w|0)==0){p=y$()|0;q=p;i=l;return q|0}x=w+f+4|0;y=x+o|0;z=l3(mi(m,d,2|((s|0)!=0?1:0))|0)|0;if((z|0)!=0){tQ(w);p=z;q=p;i=l;return q|0}s=w;A=e;B=f;Ac(s|0,A|0,B)|0;B=1;L7253:while(1){if(B>>>0>t>>>0){C=5896;break}A=0;while(1){if(A>>>0>=g>>>0){break}z=l3(mw(c[m>>2]|0,n,b)|0)|0;if((z|0)!=0){C=5881;break L7253}if((A|0)!=0){ms(c[m>>2]|0,y,o);s=y;D=mB(c[m>>2]|0,0)|0;E=o;Ac(s|0,D|0,E)|0;E=0;while(1){if(E>>>0>=o>>>0){break}D=x+E|0;a[D]=(a[D]^a[y+E|0])&255;E=E+1|0}}else{a[w+f|0]=B>>>24&255;a[w+(f+1)|0]=B>>>16&255;a[w+(f+2)|0]=B>>>8&255;a[w+(f+3)|0]=B&255;ms(c[m>>2]|0,w,f+4|0);E=y;D=mB(c[m>>2]|0,0)|0;s=o;Ac(E|0,D|0,s)|0;s=x;D=y;E=o;Ac(s|0,D|0,E)|0}A=A+1|0}if((B|0)==(t|0)){A=j;E=x;D=u;Ac(A|0,E|0,D)|0}else{D=j;E=x;A=o;Ac(D|0,E|0,A)|0;j=j+o|0}B=B+1|0}if((C|0)==5896){mq(c[m>>2]|0);tQ(w);p=0;q=p;i=l;return q|0}else if((C|0)==5881){mq(c[m>>2]|0);tQ(w);p=z;q=p;i=l;return q|0}}}while(0);p=55;q=p;i=l;return q|0}function l5(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;j=a;a=b;b=c;c=d;d=e;e=f;f=g;g=h;h=i;do{if((j|0)!=0){if((a|0)==0){if((b|0)!=34){break}}do{if((h|0)!=0){if((g|0)==0){break}switch(b|0){case 34:{k=l4(j,a,c,d,e,f,g,h)|0;break};case 16:case 17:case 19:{k=l2(j,a,b,c,d,e,f,g,h)|0;break};case 33:{k=84;break};default:{k=149}}l=k;m=l6(l)|0;return m|0}}while(0);k=55;l=k;m=l6(l)|0;return m|0}}while(0);k=79;l=k;m=l6(l)|0;return m|0}function l6(a){a=a|0;return l7(1,a)|0}function l7(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function l8(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;g=f|0;h=b;b=0;if((s5()|0)!=0){j=l9(60)|0;k=j;i=f;return k|0}sW(123056)|0;if((h|0)!=0){l=h}else{l=122912}b=uq(123064,0,a,l,g)|0;sX(123056)|0;if((b|0)==0){c[e>>2]=c[g>>2];c[d>>2]=c[(c[g>>2]|0)+24>>2]}j=ma(b)|0;k=j;i=f;return k|0}function l9(a){a=a|0;return mX(1,a)|0}function ma(a){a=a|0;return mW(32,a)|0}function mb(a){a=a|0;sW(123056)|0;uu(a);sX(123056)|0;return}function mc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+8|0;d=b|0;e=a;c[d>>2]=0;if((e|0)==0){f=0;g=f;i=b;return g|0}sW(123056)|0;if((c[30774]|0)==0){md();c[30774]=1}sX(123056)|0;sW(123056)|0;if((me(e,d,0)|0)==0){a=mf(e)|0;if((a|0)!=0){c[d>>2]=c[a+24>>2];uu(a)}}sX(123056)|0;f=c[d>>2]|0;g=f;i=b;return g|0}function md(){var a=0,b=0,d=0,e=0;a=0;b=0;while(1){if((a|0)!=0){d=0}else{d=(c[48544+(b<<4)>>2]|0)!=0}if(!d){break}L7350:do{if((s5()|0)!=0){if((c[48556+(b<<4)>>2]|0)==0){break}do{if((c[48552+(b<<4)>>2]|0)==1){if((s8()|0)==0){break}break L7350}}while(0);e=5967}else{e=5967}}while(0);if((e|0)==5967){e=0;a=uq(123064,c[48552+(b<<4)>>2]|0,c[48544+(b<<4)>>2]|0,c[48548+(b<<4)>>2]|0,0)|0}b=b+1|0}if((a|0)!=0){uf(78200,200,87040)}else{return}}function me(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a;a=b;b=d;d=0;do{if((e|0)!=0){if((a3(e|0,71608,4)|0)!=0){if((a3(e|0,70968,4)|0)!=0){break}}e=e+4|0}}while(0);f=mU(e)|0;if((f|0)==0){g=d;return g|0}h=c[f+8>>2]|0;i=0;while(1){if((c[(c[h+12>>2]|0)+(i<<2)>>2]|0)!=0){j=(d|0)!=0^1}else{j=0}if(!j){break}if((Al(e|0,c[(c[h+12>>2]|0)+(i<<2)>>2]|0)|0)==0){if((a|0)!=0){c[a>>2]=c[f+24>>2]}if((b|0)!=0){c[b>>2]=c[(c[h+12>>2]|0)+(i<<2)>>2]}d=1}i=i+1|0}uu(f);g=d;return g|0}function mf(a){a=a|0;return ut(c[30766]|0,a,44)|0}function mg(a){a=a|0;var b=0,c=0;b=mh(a)|0;if((b|0)!=0){c=b;return c|0}else{c=63736;return c|0}return 0}function mh(a){a=a|0;var b=0,d=0,e=0,f=0;b=0;sW(123056)|0;if((c[30774]|0)==0){md();c[30774]=1}sX(123056)|0;sW(123056)|0;d=us(c[30766]|0,a)|0;if((d|0)==0){e=sX(123056)|0;f=b;return f|0}b=c[c[d+8>>2]>>2]|0;uu(d);e=sX(123056)|0;f=b;return f|0}function mi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e|0;g=d;d=0;if((g&-4|0)!=0){d=45}else{d=mj(f,b,g&1,g&2)|0}if((d|0)!=0){h=0}else{h=c[f>>2]|0}c[a>>2]=h;h=ma(d)|0;i=e;return h|0}function mj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=a;a=b;b=d;d=0;g=((b|0)!=0?512:1024)+16|0;g=(((g+8-1|0)>>>0)/8|0)<<3;if((b|0)!=0){h=tL(g+32|0)|0}else{h=tJ(g+32|0)|0}if((h|0)==0){d=y_(c[(bX()|0)>>2]|0)|0}if((d|0)==0){i=h+g|0;j=i;c[h>>2]=i;c[h+8>>2]=g-16+1;c[h+4>>2]=0;Ae(c[h>>2]|0,0,32);c[j>>2]=(b|0)!=0?378630161:285677921;c[j+4>>2]=g+32;c[j+8>>2]=b;if((e|0)!=0){e=a;if((e|0)==9|(e|0)==10){c[j+28>>2]=128}else{c[j+28>>2]=64}c[j+24>>2]=tL(c[j+28>>2]<<1)|0;if((c[j+24>>2]|0)==0){d=y_(c[(bX()|0)>>2]|0)|0;mr(h)}}}if((d|0)==0){sL();if((a|0)!=0){d=ml(h,a)|0;if((d|0)!=0){mr(h)}}}if((d|0)!=0){k=d;return k|0}c[f>>2]=h;k=d;return k|0}function mk(a,b){a=a|0;b=b|0;return ma(ml(a,b)|0)|0}function ml(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;e=b;b=c[a>>2]|0;a=0;f=0;g=c[b+20>>2]|0;while(1){if((g|0)==0){break}if((c[(c[g+4>>2]|0)+24>>2]|0)==(e|0)){h=6045;break}g=c[g+8>>2]|0}if((h|0)==6045){j=f;k=j;i=d;return k|0}sW(123056)|0;if((c[30774]|0)==0){md();c[30774]=1}sX(123056)|0;sW(123056)|0;h=us(c[30766]|0,e)|0;sX(123056)|0;if((h|0)!=0){a=c[h+8>>2]|0}else{um(71896,(l=i,i=i+8|0,c[l>>2]=e,l)|0);i=l;f=5}do{if((f|0)==0){if((e|0)!=1){break}if((s5()|0)==0){break}ta(67448);if((s8()|0)!=0){f=5}}}while(0);if((f|0)==0){e=(c[a+36>>2]|0)+24-8|0;if((c[b+8>>2]|0)!=0){g=tL(e)|0}else{g=tJ(e)|0}if((g|0)!=0){c[g>>2]=a;c[g+4>>2]=h;c[g+8>>2]=c[b+20>>2];c[g+12>>2]=e;c[b+20>>2]=g;cE[c[(c[g>>2]|0)+20>>2]&127](g+16|0)}else{f=y_(c[(bX()|0)>>2]|0)|0}}if((f|0)!=0){if((h|0)!=0){sW(123056)|0;uu(h);sX(123056)|0}}j=f;k=j;i=d;return k|0}function mm(a,b){a=a|0;b=b|0;var d=0;d=a;a=mn(b,d)|0;if((a|0)!=0){c[d>>2]=0}return ma(a)|0}function mn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a;a=b;b=0;e=c[d>>2]|0;if((c[d+4>>2]|0)!=0){mp(d,0,0)}f=(c[d>>2]|0)-d|0;if((c[e+8>>2]|0)!=0){g=tL(f+32|0)|0}else{g=tJ(f+32|0)|0}if((g|0)==0){b=y_(c[(bX()|0)>>2]|0)|0}if((b|0)==0){h=g+f|0;i=h;c[g>>2]=h;if((c[d+8>>2]|0)!=(f-16+1|0)){ug(74248,78200,655,87088);return 0}c[g+8>>2]=c[d+8>>2];c[g+4>>2]=0;if((c[d+4>>2]|0)!=0){ug(73656,78200,658,87088);return 0}d=i;f=e;Ac(d|0,f|0,32)|0;c[i+20>>2]=0;c[i+12>>2]=0;if((c[e+24>>2]|0)!=0){c[i+24>>2]=tL(c[e+28>>2]<<1)|0;if((c[i+24>>2]|0)!=0){f=c[i+24>>2]|0;d=c[e+24>>2]|0;h=c[e+28>>2]<<1;Ac(f|0,d|0,h)|0}else{b=y_(c[(bX()|0)>>2]|0)|0;mr(g)}}}if((b|0)==0){h=c[e+20>>2]|0;while(1){if((h|0)==0){break}if((c[e+8>>2]|0)!=0){j=tL((c[(c[h>>2]|0)+36>>2]|0)+24-8|0)|0}else{j=tJ((c[(c[h>>2]|0)+36>>2]|0)+24-8|0)|0}if((j|0)==0){k=6107;break}d=j;f=h;l=(c[(c[h>>2]|0)+36>>2]|0)+24-8|0;Ac(d|0,f|0,l)|0;c[j+8>>2]=c[i+20>>2];c[i+20>>2]=j;sW(123056)|0;uw(c[j+4>>2]|0);sX(123056)|0;h=c[h+8>>2]|0}if((k|0)==6107){b=y_(c[(bX()|0)>>2]|0)|0;mr(g)}}do{if((c[e+12>>2]|0)!=0){if((b|0)!=0){break}mx(g,72936)}}while(0);if((b|0)!=0){m=b;return m|0}c[a>>2]=g;m=b;return m|0}function mo(a){a=a|0;var b=0;b=a;c[(c[b>>2]|0)+16>>2]=0;c[b+4>>2]=0;a=c[(c[b>>2]|0)+20>>2]|0;while(1){if((a|0)==0){break}Ae(a+16|0,0,c[(c[a>>2]|0)+36>>2]|0);cE[c[(c[a>>2]|0)+20>>2]&127](a+16|0);a=c[a+8>>2]|0}if((c[(c[b>>2]|0)+24>>2]|0)==0){return}mp(b,c[(c[b>>2]|0)+24>>2]|0,c[(c[b>>2]|0)+28>>2]|0);return}function mp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;a=b;b=d;if((c[(c[e>>2]|0)+12>>2]|0)!=0){do{if((c[e+4>>2]|0)!=0){if((aJ(e+12|0,c[e+4>>2]|0,1,c[(c[e>>2]|0)+12>>2]|0)|0)==1){break}uf(78200,794,87024)}}while(0);do{if((b|0)!=0){if((aJ(a|0,b|0,1,c[(c[e>>2]|0)+12>>2]|0)|0)==1){break}uf(78200,796,87024)}}while(0)}d=c[(c[e>>2]|0)+20>>2]|0;while(1){if((d|0)==0){break}if((c[e+4>>2]|0)!=0){cJ[c[(c[d>>2]|0)+24>>2]&127](d+16|0,e+12|0,c[e+4>>2]|0)}cJ[c[(c[d>>2]|0)+24>>2]&127](d+16|0,a,b);d=c[d+8>>2]|0}c[e+4>>2]=0;return}function mq(a){a=a|0;mr(a);return}function mr(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;if((d|0)==0){return}if((c[(c[d>>2]|0)+12>>2]|0)!=0){my(d)}b=c[(c[d>>2]|0)+20>>2]|0;while(1){if((b|0)==0){break}e=c[b+8>>2]|0;sW(123056)|0;uu(c[b+4>>2]|0);sX(123056)|0;f=b;g=c[b+12>>2]|0;while(1){if((g|0)==0){break}a[f]=0;f=f+1|0;g=g-1|0}tQ(b);b=e}if((c[(c[d>>2]|0)+24>>2]|0)!=0){b=c[(c[d>>2]|0)+24>>2]|0;g=c[(c[d>>2]|0)+28>>2]<<1;while(1){if((g|0)==0){break}a[b]=0;b=b+1|0;g=g-1|0}tQ(c[(c[d>>2]|0)+24>>2]|0)}g=d;b=c[(c[d>>2]|0)+4>>2]|0;while(1){if((b|0)==0){break}a[g]=0;g=g+1|0;b=b-1|0}tQ(d);return}function ms(a,b,c){a=a|0;b=b|0;c=c|0;mp(a,b,c);return}function mt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=0;f=b;if((f|0)==1){c=mv(mw(e,a,d)|0)|0}else if((f|0)==33){my(e)}else if((f|0)==5){mu(e)}else if((f|0)==32){mx(e,a)}else{c=61}return ma(c)|0}function mu(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+8|0;d=b|0;e=a;if((c[(c[e>>2]|0)+16>>2]|0)!=0){i=b;return}if((c[e+4>>2]|0)!=0){mp(e,0,0)}a=c[(c[e>>2]|0)+20>>2]|0;while(1){if((a|0)==0){break}cE[c[(c[a>>2]|0)+28>>2]&127](a+16|0);a=c[a+8>>2]|0}c[(c[e>>2]|0)+16>>2]=1;if((c[(c[e>>2]|0)+24>>2]|0)==0){i=b;return}a=mH(e)|0;f=mC(e,a)|0;g=mF(a)|0;h=mj(d,a,c[(c[e>>2]|0)+8>>2]|0,0)|0;if((h|0)!=0){t8(h,0)}mp(c[d>>2]|0,(c[(c[e>>2]|0)+24>>2]|0)+(c[(c[e>>2]|0)+28>>2]|0)|0,c[(c[e>>2]|0)+28>>2]|0);mp(c[d>>2]|0,f,g);mu(c[d>>2]|0);e=f;f=mC(c[d>>2]|0,a)|0;a=g;Ac(e|0,f|0,a)|0;mr(c[d>>2]|0);i=b;return}function mv(a){a=a|0;return mS(a)|0}function mw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=0;if((c[(c[e>>2]|0)+24>>2]|0)==0){a=70;f=a;g=ma(f)|0;return g|0}a=mz(e,b,d)|0;if((a|0)==0){mo(e)}f=a;g=ma(f)|0;return g|0}function mx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+56|0;e=d|0;f=a;if((s5()|0)!=0){i=d;return}if((c[(c[f>>2]|0)+12>>2]|0)!=0){um(83064,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;i=d;return}c[30672]=(c[30672]|0)+1;a4(e|0,49,81896,(g=i,i=i+16|0,c[g>>2]=c[30672],c[g+8>>2]=b,g)|0)|0;i=g;b=bJ(e|0,80344)|0;c[(c[f>>2]|0)+12>>2]=b;if((c[(c[f>>2]|0)+12>>2]|0)!=0){i=d;return}um(79544,(g=i,i=i+8|0,c[g>>2]=e,g)|0);i=g;i=d;return}function my(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a;if((c[(c[f>>2]|0)+12>>2]|0)!=0){if((c[f+4>>2]|0)!=0){mp(f,0,0)}a=c[(c[f>>2]|0)+12>>2]|0;aB(a|0)|0;c[(c[f>>2]|0)+12>>2]=0}c[d>>2]=42;c[d+4>>2]=0;a=Aw(f,0,c[d>>2]|0,c[d+4>>2]|0)|0;c[e>>2]=a;c[e+4>>2]=H;i=b;return}function mz(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;b=e;e=f;f=mH(g)|0;h=0;if((f|0)==0){i=5;j=i;return j|0}if(e>>>0>(c[(c[g>>2]|0)+28>>2]|0)>>>0){h=tL(mF(f)|0)|0;if((h|0)==0){i=y_(c[(bX()|0)>>2]|0)|0;j=i;return j|0}mE(f,h,b,e);b=h;e=mF(f)|0;if(e>>>0>(c[(c[g>>2]|0)+28>>2]|0)>>>0){ug(74984,78200,871,86888);return 0}}Ae(c[(c[g>>2]|0)+24>>2]|0,0,c[(c[g>>2]|0)+28>>2]<<1|0);f=c[(c[g>>2]|0)+24>>2]|0;k=(c[(c[g>>2]|0)+24>>2]|0)+(c[(c[g>>2]|0)+28>>2]|0)|0;l=f;m=b;n=e;Ac(l|0,m|0,n)|0;n=k;m=b;b=e;Ac(n|0,m|0,b)|0;b=0;while(1){if((b|0)>=(c[(c[g>>2]|0)+28>>2]|0)){break}m=f+b|0;a[m]=((d[m]|0)^54)&255;m=k+b|0;a[m]=((d[m]|0)^92)&255;b=b+1|0}tQ(h);i=0;j=i;return j|0}function mA(a,b){a=a|0;b=b|0;var c=0;c=a;a=b;if((a|0)!=0){mx(c,a);return}else{my(c);return}}function mB(a,b){a=a|0;b=b|0;var c=0;c=a;mt(c,5,0,0)|0;return mC(c,b)|0}function mC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a;a=b;b=c[(c[e>>2]|0)+20>>2]|0;if((a|0)==0){if((b|0)==0){uf(78200,969,87064);return 0}if((c[b+8>>2]|0)!=0){um(75984,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f}g=cH[c[(c[b>>2]|0)+32>>2]&31](b+16|0)|0;h=g;i=d;return h|0}b=c[(c[e>>2]|0)+20>>2]|0;while(1){if((b|0)==0){j=6259;break}if((c[(c[b+4>>2]|0)+24>>2]|0)==(a|0)){j=6256;break}b=c[b+8>>2]|0}if((j|0)==6259){uf(78200,969,87064);return 0}else if((j|0)==6256){g=cH[c[(c[b>>2]|0)+32>>2]&31](b+16|0)|0;h=g;i=d;return h|0}return 0}function mD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;tb(78200,1e3,88200,0,70848);return 63}function mE(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;g=f|0;h=a;a=b;b=d;d=e;if((h|0)==2){pP(a,b,d);i=f;return}do{if((h|0)==3){if((s5()|0)!=0){j=6272;break}o4(a,b,d)}else{j=6272}}while(0);do{if((j|0)==6272){do{if((h|0)==1){if((s5()|0)==0){break}ta(67448);if((s8()|0)!=0){s7()}}}while(0);e=mj(g,h,0,0)|0;if((e|0)!=0){k=y4(ma(e)|0)|0;ul(64576,(e=i,i=i+16|0,c[e>>2]=h,c[e+8>>2]=k,e)|0);i=e}else{mp(c[g>>2]|0,b,d);mu(c[g>>2]|0);e=a;k=mC(c[g>>2]|0,h)|0;l=mF(h)|0;Ac(e|0,k|0,l)|0;mr(c[g>>2]|0);break}}}while(0);i=f;return}function mF(a){a=a|0;var b=0,d=0,e=0,f=0;b=0;sW(123056)|0;if((c[30774]|0)==0){md();c[30774]=1}sX(123056)|0;sW(123056)|0;d=us(c[30766]|0,a)|0;if((d|0)==0){e=sX(123056)|0;f=b;return f|0}b=c[(c[d+8>>2]|0)+16>>2]|0;uu(d);e=sX(123056)|0;f=b;return f|0}function mG(a){a=a|0;return mH(a)|0}function mH(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[(c[a>>2]|0)+20>>2]|0;do{if((d|0)!=0){if((c[d+8>>2]|0)==0){break}tb(78200,1055,87072,0,77632);uj(76656,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a}}while(0);if((d|0)!=0){e=c[(c[d+4>>2]|0)+24>>2]|0;i=b;return e|0}else{e=0;i=b;return e|0}return 0}function mI(a){a=a|0;return mF(a)|0}function mJ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+8|0;g=f|0;h=a;a=d;d=e;e=0;j=b;if((j|0)==8){do{if((a|0)!=0){k=14}else{if((d|0)!=0){k=14;break}e=mK(h)|0}}while(0);if((k|0)==14){e=45}l=e;m=ma(l)|0;i=f;return m|0}else if((j|0)==10){e=mK(h)|0;if((e|0)==0){j=mL(h,g,0)|0;do{if((a|0)!=0){if((c[d>>2]|0)>>>0<(c[g>>2]|0)>>>0){k=21;break}h=a;b=j;n=c[g>>2]|0;Ac(h|0,b|0,n)|0;c[d>>2]=c[g>>2]}else{k=21}}while(0);if((k|0)==21){do{if((a|0)!=0){k=24}else{if((d|0)==0){k=24;break}c[d>>2]=c[g>>2]}}while(0);if((k|0)==24){if((a|0)!=0){e=66}else{e=45}}}}l=e;m=ma(l)|0;i=f;return m|0}else{e=61;l=e;m=ma(l)|0;i=f;return m|0}return 0}function mK(a){a=a|0;var b=0,d=0,e=0,f=0;b=0;sW(123056)|0;if((c[30774]|0)==0){md();c[30774]=1}sX(123056)|0;sW(123056)|0;d=us(c[30766]|0,a)|0;if((d|0)!=0){uu(d);e=sX(123056)|0;f=b;return f|0}else{b=5;e=sX(123056)|0;f=b;return f|0}return 0}function mL(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=a;a=b;b=d;d=0;sW(123056)|0;if((c[30774]|0)==0){md();c[30774]=1}sX(123056)|0;sW(123056)|0;g=us(c[30766]|0,f)|0;if((g|0)==0){ul(78608,(h=i,i=i+8|0,c[h>>2]=f,h)|0);i=h;return 0}if((a|0)!=0){c[a>>2]=c[(c[g+8>>2]|0)+8>>2]}if((b|0)!=0){c[b>>2]=c[(c[g+8>>2]|0)+16>>2]}d=c[(c[g+8>>2]|0)+4>>2]|0;uu(g);sX(123056)|0;i=e;return d|0}function mM(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a;a=d;d=e;e=0;g=b;if((g|0)==9){c[d>>2]=c[(c[f>>2]|0)+8>>2];h=e;i=ma(h)|0;return i|0}else if((g|0)==35){do{if((a|0)!=0){if((d|0)!=0){if((c[d>>2]|0)!=4){j=63;break}}g=c[a>>2]|0;c[d>>2]=0;b=c[(c[f>>2]|0)+20>>2]|0;while(1){if((b|0)==0){break}if((c[(c[b+4>>2]|0)+24>>2]|0)==(g|0)){j=67;break}b=c[b+8>>2]|0}if((j|0)==67){c[d>>2]=1}}else{j=63}}while(0);if((j|0)==63){e=45}h=e;i=ma(h)|0;return i|0}else{e=61;h=e;i=ma(h)|0;return i|0}return 0}function mN(){sW(123056)|0;if((c[30774]|0)==0){md();c[30774]=1}sX(123056)|0;return 0}function mO(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;if((mM(a,9,0,d)|0)!=0){c[d>>2]=1}i=b;return c[d>>2]|0}function mP(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=d+8|0;c[e>>2]=b;c[f>>2]=4;if((mM(a,35,e,f)|0)!=0){c[f>>2]=0}i=d;return c[f>>2]|0}function mQ(a,b){a=a|0;b=b|0;var d=0;d=0;sW(123056)|0;d=ux(c[30766]|0,a,b)|0;sX(123056)|0;return d|0}function mR(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a;a=b;b=d;d=0;f=0;g=0;sW(123056)|0;if((c[30774]|0)==0){md();c[30774]=1}sX(123056)|0;sW(123056)|0;d=us(c[30766]|0,e)|0;do{if((d|0)!=0){if((c[d+16>>2]&1|0)!=0){break}f=c[d+12>>2]|0}}while(0);sX(123056)|0;do{if((f|0)!=0){if((c[f>>2]|0)==0){h=99;break}g=cI[c[f>>2]&63](e,a,b)|0}else{h=99}}while(0);if((h|0)==99){g=5;if((b|0)!=0){a=b;b=e;do{if((d|0)!=0){if((c[d+16>>2]&1|0)!=0){h=103;break}i=59656}else{h=103}}while(0);if((h|0)==103){i=(d|0)!=0?57840:55832}cP[a&15](62856,b,61352,i)}}if((d|0)==0){j=g;k=l9(j)|0;return k|0}sW(123056)|0;uu(d);sX(123056)|0;j=g;k=l9(j)|0;return k|0}function mS(a){a=a|0;return a&65535|0}function mT(a,b){a=a|0;b=b|0;return((Al(c[a>>2]|0,b|0)|0)!=0^1)&1|0}function mU(a){a=a|0;return ut(c[30766]|0,a,12)|0}function mV(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=b;b=c[a+12>>2]|0;a=0;if((b|0)==0){e=a;return e|0}f=0;while(1){if((c[b+(f<<2)>>2]|0)!=0){g=(a|0)!=0^1}else{g=0}if(!g){break}if((Al(d|0,c[b+(f<<2)>>2]|0)|0)==0){a=1}f=f+1|0}e=a;return e|0}function mW(a,b){a=a|0;b=b|0;return mX(a,b)|0}function mX(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function mY(a){a=a|0;var b=0;b=a;c[b>>2]=1732584193;c[b+4>>2]=-271733879;c[b+8>>2]=-1732584194;c[b+12>>2]=271733878;c[b+16>>2]=0;c[b+84>>2]=0;return}function mZ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=e;e=d;d=b;if((c[d+84>>2]|0)==64){m0(d,d+20|0);up(104);c[d+84>>2]=0;b=d+16|0;c[b>>2]=(c[b>>2]|0)+1}if((e|0)==0){return}do{if((c[d+84>>2]|0)!=0){while(1){if((f|0)!=0){g=(c[d+84>>2]|0)<64}else{g=0}if(!g){break}b=e;e=b+1|0;h=a[b]|0;b=d+84|0;i=c[b>>2]|0;c[b>>2]=i+1;a[d+20+i|0]=h;f=f-1|0}mZ(d,0,0);if((f|0)!=0){break}return}}while(0);up(104);while(1){if(f>>>0<64){break}m0(d,e);c[d+84>>2]=0;g=d+16|0;c[g>>2]=(c[g>>2]|0)+1;f=f-64|0;e=e+64|0}while(1){if((f|0)!=0){j=(c[d+84>>2]|0)<64}else{j=0}if(!j){break}g=e;e=g+1|0;h=a[g]|0;g=d+84|0;i=c[g>>2]|0;c[g>>2]=i+1;a[d+20+i|0]=h;f=f-1|0}return}function m_(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;mZ(d,0,0);b=c[d+16>>2]|0;e=b<<6;f=b>>>26;b=e;g=e+(c[d+84>>2]|0)|0;e=g;if(g>>>0<b>>>0){f=f+1|0}b=e;e=e<<3;f=f<<3;f=f|b>>>29;if((c[d+84>>2]|0)<56){b=d+84|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+20+g|0]=-128;while(1){if((c[d+84>>2]|0)>=56){break}g=d+84|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+20+b|0]=0}}else{b=d+84|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+20+g|0]=-128;while(1){if((c[d+84>>2]|0)>=64){break}g=d+84|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+20+b|0]=0}mZ(d,0,0);Ae(d+20|0,0,56)}a[d+76|0]=e&255;a[d+77|0]=e>>>8&255;a[d+78|0]=e>>>16&255;a[d+79|0]=e>>>24&255;a[d+80|0]=f&255;a[d+81|0]=f>>>8&255;a[d+82|0]=f>>>16&255;a[d+83|0]=f>>>24&255;m0(d,d+20|0);up(104);f=d+20|0;c[f>>2]=c[d>>2];f=f+4|0;c[f>>2]=c[d+4>>2];f=f+4|0;c[f>>2]=c[d+8>>2];f=f+4|0;c[f>>2]=c[d+12>>2];f=f+4|0;return}function m$(a){a=a|0;return a+20|0}function m0(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+64|0;e=d|0;f=a;a=c[f>>2]|0;g=c[f+4>>2]|0;h=c[f+8>>2]|0;j=c[f+12>>2]|0;k=e;l=b;Ac(k|0,l|0,64)|0;a=a+(j^g&(h^j))+(c[e>>2]|0)<<3|(a+(j^g&(h^j))+(c[e>>2]|0)|0)>>>29;j=j+(h^a&(g^h))+(c[e+4>>2]|0)<<7|(j+(h^a&(g^h))+(c[e+4>>2]|0)|0)>>>25;h=h+(g^j&(a^g))+(c[e+8>>2]|0)<<11|(h+(g^j&(a^g))+(c[e+8>>2]|0)|0)>>>21;g=g+(a^h&(j^a))+(c[e+12>>2]|0)<<19|(g+(a^h&(j^a))+(c[e+12>>2]|0)|0)>>>13;a=a+(j^g&(h^j))+(c[e+16>>2]|0)<<3|(a+(j^g&(h^j))+(c[e+16>>2]|0)|0)>>>29;j=j+(h^a&(g^h))+(c[e+20>>2]|0)<<7|(j+(h^a&(g^h))+(c[e+20>>2]|0)|0)>>>25;h=h+(g^j&(a^g))+(c[e+24>>2]|0)<<11|(h+(g^j&(a^g))+(c[e+24>>2]|0)|0)>>>21;g=g+(a^h&(j^a))+(c[e+28>>2]|0)<<19|(g+(a^h&(j^a))+(c[e+28>>2]|0)|0)>>>13;a=a+(j^g&(h^j))+(c[e+32>>2]|0)<<3|(a+(j^g&(h^j))+(c[e+32>>2]|0)|0)>>>29;j=j+(h^a&(g^h))+(c[e+36>>2]|0)<<7|(j+(h^a&(g^h))+(c[e+36>>2]|0)|0)>>>25;h=h+(g^j&(a^g))+(c[e+40>>2]|0)<<11|(h+(g^j&(a^g))+(c[e+40>>2]|0)|0)>>>21;g=g+(a^h&(j^a))+(c[e+44>>2]|0)<<19|(g+(a^h&(j^a))+(c[e+44>>2]|0)|0)>>>13;a=a+(j^g&(h^j))+(c[e+48>>2]|0)<<3|(a+(j^g&(h^j))+(c[e+48>>2]|0)|0)>>>29;j=j+(h^a&(g^h))+(c[e+52>>2]|0)<<7|(j+(h^a&(g^h))+(c[e+52>>2]|0)|0)>>>25;h=h+(g^j&(a^g))+(c[e+56>>2]|0)<<11|(h+(g^j&(a^g))+(c[e+56>>2]|0)|0)>>>21;g=g+(a^h&(j^a))+(c[e+60>>2]|0)<<19|(g+(a^h&(j^a))+(c[e+60>>2]|0)|0)>>>13;a=a+(g&h|g&j|h&j)+(c[e>>2]|0)+1518500249<<3|(a+(g&h|g&j|h&j)+(c[e>>2]|0)+1518500249|0)>>>29;j=j+(a&g|a&h|g&h)+(c[e+16>>2]|0)+1518500249<<5|(j+(a&g|a&h|g&h)+(c[e+16>>2]|0)+1518500249|0)>>>27;h=h+(j&a|j&g|a&g)+(c[e+32>>2]|0)+1518500249<<9|(h+(j&a|j&g|a&g)+(c[e+32>>2]|0)+1518500249|0)>>>23;g=g+(h&j|h&a|j&a)+(c[e+48>>2]|0)+1518500249<<13|(g+(h&j|h&a|j&a)+(c[e+48>>2]|0)+1518500249|0)>>>19;a=a+(g&h|g&j|h&j)+(c[e+4>>2]|0)+1518500249<<3|(a+(g&h|g&j|h&j)+(c[e+4>>2]|0)+1518500249|0)>>>29;j=j+(a&g|a&h|g&h)+(c[e+20>>2]|0)+1518500249<<5|(j+(a&g|a&h|g&h)+(c[e+20>>2]|0)+1518500249|0)>>>27;h=h+(j&a|j&g|a&g)+(c[e+36>>2]|0)+1518500249<<9|(h+(j&a|j&g|a&g)+(c[e+36>>2]|0)+1518500249|0)>>>23;g=g+(h&j|h&a|j&a)+(c[e+52>>2]|0)+1518500249<<13|(g+(h&j|h&a|j&a)+(c[e+52>>2]|0)+1518500249|0)>>>19;a=a+(g&h|g&j|h&j)+(c[e+8>>2]|0)+1518500249<<3|(a+(g&h|g&j|h&j)+(c[e+8>>2]|0)+1518500249|0)>>>29;j=j+(a&g|a&h|g&h)+(c[e+24>>2]|0)+1518500249<<5|(j+(a&g|a&h|g&h)+(c[e+24>>2]|0)+1518500249|0)>>>27;h=h+(j&a|j&g|a&g)+(c[e+40>>2]|0)+1518500249<<9|(h+(j&a|j&g|a&g)+(c[e+40>>2]|0)+1518500249|0)>>>23;g=g+(h&j|h&a|j&a)+(c[e+56>>2]|0)+1518500249<<13|(g+(h&j|h&a|j&a)+(c[e+56>>2]|0)+1518500249|0)>>>19;a=a+(g&h|g&j|h&j)+(c[e+12>>2]|0)+1518500249<<3|(a+(g&h|g&j|h&j)+(c[e+12>>2]|0)+1518500249|0)>>>29;j=j+(a&g|a&h|g&h)+(c[e+28>>2]|0)+1518500249<<5|(j+(a&g|a&h|g&h)+(c[e+28>>2]|0)+1518500249|0)>>>27;h=h+(j&a|j&g|a&g)+(c[e+44>>2]|0)+1518500249<<9|(h+(j&a|j&g|a&g)+(c[e+44>>2]|0)+1518500249|0)>>>23;g=g+(h&j|h&a|j&a)+(c[e+60>>2]|0)+1518500249<<13|(g+(h&j|h&a|j&a)+(c[e+60>>2]|0)+1518500249|0)>>>19;a=a+(g^h^j)+(c[e>>2]|0)+1859775393<<3|(a+(g^h^j)+(c[e>>2]|0)+1859775393|0)>>>29;j=j+(a^g^h)+(c[e+32>>2]|0)+1859775393<<9|(j+(a^g^h)+(c[e+32>>2]|0)+1859775393|0)>>>23;h=h+(j^a^g)+(c[e+16>>2]|0)+1859775393<<11|(h+(j^a^g)+(c[e+16>>2]|0)+1859775393|0)>>>21;g=g+(h^j^a)+(c[e+48>>2]|0)+1859775393<<15|(g+(h^j^a)+(c[e+48>>2]|0)+1859775393|0)>>>17;a=a+(g^h^j)+(c[e+8>>2]|0)+1859775393<<3|(a+(g^h^j)+(c[e+8>>2]|0)+1859775393|0)>>>29;j=j+(a^g^h)+(c[e+40>>2]|0)+1859775393<<9|(j+(a^g^h)+(c[e+40>>2]|0)+1859775393|0)>>>23;h=h+(j^a^g)+(c[e+24>>2]|0)+1859775393<<11|(h+(j^a^g)+(c[e+24>>2]|0)+1859775393|0)>>>21;g=g+(h^j^a)+(c[e+56>>2]|0)+1859775393<<15|(g+(h^j^a)+(c[e+56>>2]|0)+1859775393|0)>>>17;a=a+(g^h^j)+(c[e+4>>2]|0)+1859775393<<3|(a+(g^h^j)+(c[e+4>>2]|0)+1859775393|0)>>>29;j=j+(a^g^h)+(c[e+36>>2]|0)+1859775393<<9|(j+(a^g^h)+(c[e+36>>2]|0)+1859775393|0)>>>23;h=h+(j^a^g)+(c[e+20>>2]|0)+1859775393<<11|(h+(j^a^g)+(c[e+20>>2]|0)+1859775393|0)>>>21;g=g+(h^j^a)+(c[e+52>>2]|0)+1859775393<<15|(g+(h^j^a)+(c[e+52>>2]|0)+1859775393|0)>>>17;a=a+(g^h^j)+(c[e+12>>2]|0)+1859775393<<3|(a+(g^h^j)+(c[e+12>>2]|0)+1859775393|0)>>>29;j=j+(a^g^h)+(c[e+44>>2]|0)+1859775393<<9|(j+(a^g^h)+(c[e+44>>2]|0)+1859775393|0)>>>23;h=h+(j^a^g)+(c[e+28>>2]|0)+1859775393<<11|(h+(j^a^g)+(c[e+28>>2]|0)+1859775393|0)>>>21;g=g+(h^j^a)+(c[e+60>>2]|0)+1859775393<<15|(g+(h^j^a)+(c[e+60>>2]|0)+1859775393|0)>>>17;e=f|0;c[e>>2]=(c[e>>2]|0)+a;a=f+4|0;c[a>>2]=(c[a>>2]|0)+g;g=f+8|0;c[g>>2]=(c[g>>2]|0)+h;h=f+12|0;c[h>>2]=(c[h>>2]|0)+j;i=d;return}function m1(a){a=a|0;var b=0;b=a;c[b>>2]=1732584193;c[b+4>>2]=-271733879;c[b+8>>2]=-1732584194;c[b+12>>2]=271733878;c[b+16>>2]=0;c[b+84>>2]=0;return}function m2(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=e;e=d;d=b;if((c[d+84>>2]|0)==64){m5(d,d+20|0);up(104);c[d+84>>2]=0;b=d+16|0;c[b>>2]=(c[b>>2]|0)+1}if((e|0)==0){return}do{if((c[d+84>>2]|0)!=0){while(1){if((f|0)!=0){g=(c[d+84>>2]|0)<64}else{g=0}if(!g){break}b=e;e=b+1|0;h=a[b]|0;b=d+84|0;i=c[b>>2]|0;c[b>>2]=i+1;a[d+20+i|0]=h;f=f-1|0}m2(d,0,0);if((f|0)!=0){break}return}}while(0);up(104);while(1){if(f>>>0<64){break}m5(d,e);c[d+84>>2]=0;g=d+16|0;c[g>>2]=(c[g>>2]|0)+1;f=f-64|0;e=e+64|0}while(1){if((f|0)!=0){j=(c[d+84>>2]|0)<64}else{j=0}if(!j){break}g=e;e=g+1|0;h=a[g]|0;g=d+84|0;i=c[g>>2]|0;c[g>>2]=i+1;a[d+20+i|0]=h;f=f-1|0}return}function m3(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;m2(d,0,0);b=c[d+16>>2]|0;e=b<<6;f=b>>>26;b=e;g=e+(c[d+84>>2]|0)|0;e=g;if(g>>>0<b>>>0){f=f+1|0}b=e;e=e<<3;f=f<<3;f=f|b>>>29;if((c[d+84>>2]|0)<56){b=d+84|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+20+g|0]=-128;while(1){if((c[d+84>>2]|0)>=56){break}g=d+84|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+20+b|0]=0}}else{b=d+84|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+20+g|0]=-128;while(1){if((c[d+84>>2]|0)>=64){break}g=d+84|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+20+b|0]=0}m2(d,0,0);Ae(d+20|0,0,56)}a[d+76|0]=e&255;a[d+77|0]=e>>>8&255;a[d+78|0]=e>>>16&255;a[d+79|0]=e>>>24&255;a[d+80|0]=f&255;a[d+81|0]=f>>>8&255;a[d+82|0]=f>>>16&255;a[d+83|0]=f>>>24&255;m5(d,d+20|0);up(104);f=d+20|0;c[f>>2]=c[d>>2];f=f+4|0;c[f>>2]=c[d+4>>2];f=f+4|0;c[f>>2]=c[d+8>>2];f=f+4|0;c[f>>2]=c[d+12>>2];f=f+4|0;return}function m4(a){a=a|0;return a+20|0}function m5(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+64|0;e=d|0;f=a;a=c[f>>2]|0;g=c[f+4>>2]|0;h=c[f+8>>2]|0;j=c[f+12>>2]|0;k=e|0;l=e;m=b;Ac(l|0,m|0,64)|0;m=k;k=m+4|0;a=a+((j^g&(h^j))+(c[m>>2]|0)-680876936)|0;a=a<<7|a>>>25;a=a+g|0;m=k;k=m+4|0;j=j+((h^a&(g^h))+(c[m>>2]|0)-389564586)|0;j=j<<12|j>>>20;j=j+a|0;m=k;k=m+4|0;h=h+((g^j&(a^g))+(c[m>>2]|0)+606105819)|0;h=h<<17|h>>>15;h=h+j|0;m=k;k=m+4|0;g=g+((a^h&(j^a))+(c[m>>2]|0)-1044525330)|0;g=g<<22|g>>>10;g=g+h|0;m=k;k=m+4|0;a=a+((j^g&(h^j))+(c[m>>2]|0)-176418897)|0;a=a<<7|a>>>25;a=a+g|0;m=k;k=m+4|0;j=j+((h^a&(g^h))+(c[m>>2]|0)+1200080426)|0;j=j<<12|j>>>20;j=j+a|0;m=k;k=m+4|0;h=h+((g^j&(a^g))+(c[m>>2]|0)-1473231341)|0;h=h<<17|h>>>15;h=h+j|0;m=k;k=m+4|0;g=g+((a^h&(j^a))+(c[m>>2]|0)-45705983)|0;g=g<<22|g>>>10;g=g+h|0;m=k;k=m+4|0;a=a+((j^g&(h^j))+(c[m>>2]|0)+1770035416)|0;a=a<<7|a>>>25;a=a+g|0;m=k;k=m+4|0;j=j+((h^a&(g^h))+(c[m>>2]|0)-1958414417)|0;j=j<<12|j>>>20;j=j+a|0;m=k;k=m+4|0;h=h+((g^j&(a^g))+(c[m>>2]|0)-42063)|0;h=h<<17|h>>>15;h=h+j|0;m=k;k=m+4|0;g=g+((a^h&(j^a))+(c[m>>2]|0)-1990404162)|0;g=g<<22|g>>>10;g=g+h|0;m=k;k=m+4|0;a=a+((j^g&(h^j))+(c[m>>2]|0)+1804603682)|0;a=a<<7|a>>>25;a=a+g|0;m=k;k=m+4|0;j=j+((h^a&(g^h))+(c[m>>2]|0)-40341101)|0;j=j<<12|j>>>20;j=j+a|0;m=k;k=m+4|0;h=h+((g^j&(a^g))+(c[m>>2]|0)-1502002290)|0;h=h<<17|h>>>15;h=h+j|0;m=k;k=m+4|0;g=g+((a^h&(j^a))+(c[m>>2]|0)+1236535329)|0;g=g<<22|g>>>10;g=g+h|0;a=a+((h^j&(g^h))+(c[e+4>>2]|0)-165796510)|0;a=a<<5|a>>>27;a=a+g|0;j=j+((g^h&(a^g))+(c[e+24>>2]|0)-1069501632)|0;j=j<<9|j>>>23;j=j+a|0;h=h+((a^g&(j^a))+(c[e+44>>2]|0)+643717713)|0;h=h<<14|h>>>18;h=h+j|0;g=g+((j^a&(h^j))+(c[e>>2]|0)-373897302)|0;g=g<<20|g>>>12;g=g+h|0;a=a+((h^j&(g^h))+(c[e+20>>2]|0)-701558691)|0;a=a<<5|a>>>27;a=a+g|0;j=j+((g^h&(a^g))+(c[e+40>>2]|0)+38016083)|0;j=j<<9|j>>>23;j=j+a|0;h=h+((a^g&(j^a))+(c[e+60>>2]|0)-660478335)|0;h=h<<14|h>>>18;h=h+j|0;g=g+((j^a&(h^j))+(c[e+16>>2]|0)-405537848)|0;g=g<<20|g>>>12;g=g+h|0;a=a+((h^j&(g^h))+(c[e+36>>2]|0)+568446438)|0;a=a<<5|a>>>27;a=a+g|0;j=j+((g^h&(a^g))+(c[e+56>>2]|0)-1019803690)|0;j=j<<9|j>>>23;j=j+a|0;h=h+((a^g&(j^a))+(c[e+12>>2]|0)-187363961)|0;h=h<<14|h>>>18;h=h+j|0;g=g+((j^a&(h^j))+(c[e+32>>2]|0)+1163531501)|0;g=g<<20|g>>>12;g=g+h|0;a=a+((h^j&(g^h))+(c[e+52>>2]|0)-1444681467)|0;a=a<<5|a>>>27;a=a+g|0;j=j+((g^h&(a^g))+(c[e+8>>2]|0)-51403784)|0;j=j<<9|j>>>23;j=j+a|0;h=h+((a^g&(j^a))+(c[e+28>>2]|0)+1735328473)|0;h=h<<14|h>>>18;h=h+j|0;g=g+((j^a&(h^j))+(c[e+48>>2]|0)-1926607734)|0;g=g<<20|g>>>12;g=g+h|0;a=a+((g^h^j)+(c[e+20>>2]|0)-378558)|0;a=a<<4|a>>>28;a=a+g|0;j=j+((a^g^h)+(c[e+32>>2]|0)-2022574463)|0;j=j<<11|j>>>21;j=j+a|0;h=h+((j^a^g)+(c[e+44>>2]|0)+1839030562)|0;h=h<<16|h>>>16;h=h+j|0;g=g+((h^j^a)+(c[e+56>>2]|0)-35309556)|0;g=g<<23|g>>>9;g=g+h|0;a=a+((g^h^j)+(c[e+4>>2]|0)-1530992060)|0;a=a<<4|a>>>28;a=a+g|0;j=j+((a^g^h)+(c[e+16>>2]|0)+1272893353)|0;j=j<<11|j>>>21;j=j+a|0;h=h+((j^a^g)+(c[e+28>>2]|0)-155497632)|0;h=h<<16|h>>>16;h=h+j|0;g=g+((h^j^a)+(c[e+40>>2]|0)-1094730640)|0;g=g<<23|g>>>9;g=g+h|0;a=a+((g^h^j)+(c[e+52>>2]|0)+681279174)|0;a=a<<4|a>>>28;a=a+g|0;j=j+((a^g^h)+(c[e>>2]|0)-358537222)|0;j=j<<11|j>>>21;j=j+a|0;h=h+((j^a^g)+(c[e+12>>2]|0)-722521979)|0;h=h<<16|h>>>16;h=h+j|0;g=g+((h^j^a)+(c[e+24>>2]|0)+76029189)|0;g=g<<23|g>>>9;g=g+h|0;a=a+((g^h^j)+(c[e+36>>2]|0)-640364487)|0;a=a<<4|a>>>28;a=a+g|0;j=j+((a^g^h)+(c[e+48>>2]|0)-421815835)|0;j=j<<11|j>>>21;j=j+a|0;h=h+((j^a^g)+(c[e+60>>2]|0)+530742520)|0;h=h<<16|h>>>16;h=h+j|0;g=g+((h^j^a)+(c[e+8>>2]|0)-995338651)|0;g=g<<23|g>>>9;g=g+h|0;a=a+((h^(g|~j))+(c[e>>2]|0)-198630844)|0;a=a<<6|a>>>26;a=a+g|0;j=j+((g^(a|~h))+(c[e+28>>2]|0)+1126891415)|0;j=j<<10|j>>>22;j=j+a|0;h=h+((a^(j|~g))+(c[e+56>>2]|0)-1416354905)|0;h=h<<15|h>>>17;h=h+j|0;g=g+((j^(h|~a))+(c[e+20>>2]|0)-57434055)|0;g=g<<21|g>>>11;g=g+h|0;a=a+((h^(g|~j))+(c[e+48>>2]|0)+1700485571)|0;a=a<<6|a>>>26;a=a+g|0;j=j+((g^(a|~h))+(c[e+12>>2]|0)-1894986606)|0;j=j<<10|j>>>22;j=j+a|0;h=h+((a^(j|~g))+(c[e+40>>2]|0)-1051523)|0;h=h<<15|h>>>17;h=h+j|0;g=g+((j^(h|~a))+(c[e+4>>2]|0)-2054922799)|0;g=g<<21|g>>>11;g=g+h|0;a=a+((h^(g|~j))+(c[e+32>>2]|0)+1873313359)|0;a=a<<6|a>>>26;a=a+g|0;j=j+((g^(a|~h))+(c[e+60>>2]|0)-30611744)|0;j=j<<10|j>>>22;j=j+a|0;h=h+((a^(j|~g))+(c[e+24>>2]|0)-1560198380)|0;h=h<<15|h>>>17;h=h+j|0;g=g+((j^(h|~a))+(c[e+52>>2]|0)+1309151649)|0;g=g<<21|g>>>11;g=g+h|0;a=a+((h^(g|~j))+(c[e+16>>2]|0)-145523070)|0;a=a<<6|a>>>26;a=a+g|0;j=j+((g^(a|~h))+(c[e+44>>2]|0)-1120210379)|0;j=j<<10|j>>>22;j=j+a|0;h=h+((a^(j|~g))+(c[e+8>>2]|0)+718787259)|0;h=h<<15|h>>>17;h=h+j|0;g=g+((j^(h|~a))+(c[e+36>>2]|0)-343485551)|0;g=g<<21|g>>>11;g=g+h|0;e=f|0;c[e>>2]=(c[e>>2]|0)+a;a=f+4|0;c[a>>2]=(c[a>>2]|0)+g;g=f+8|0;c[g>>2]=(c[g>>2]|0)+h;h=f+12|0;c[h>>2]=(c[h>>2]|0)+j;i=d;return}function m6(a,b){a=a|0;b=b|0;c[30592]=a;c[30582]=b;return}function m7(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=m8(a,1,b,c,d)|0;m9(10);return e|0}function m8(a,b,d,f,g){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;h=i;i=i+8|0;j=h|0;k=a;a=b;b=d;d=f;f=g;if(k>>>0<16){uk(81736,(l=i,i=i+8|0,c[l>>2]=16,l)|0);i=l;return 0}g=tU(c[7864]<<2)|0;m=sj(2)|0;n=sj(3)|0;if((a|0)!=0){o=sm(k)|0}else{o=sl(k)|0}p=o;o=sd(p)|0;q=sd(p)|0;r=sd(p)|0;c[j>>2]=0;s=0;L427:while(1){t=0;so(p,k,b);qU(p,k-1|0);if((a|0)!=0){qT(p,k-2|0)}qT(p,0);u=0;while(1){v=e[1928+(u<<1)>>1]|0;w=v;if((v|0)==0){break}c[g+(u<<2)>>2]=q3(0,p,w)|0;u=u+1|0}v=0;while(1){if(v>>>0>=2e4){break}s=s+1|0;u=0;while(1){x=e[1928+(u<<1)>>1]|0;w=x;if((x|0)==0){break}while(1){if(((c[g+(u<<2)>>2]|0)+v|0)>>>0<w>>>0){break}x=g+(u<<2)|0;c[x>>2]=(c[x>>2]|0)-w}if(((c[g+(u<<2)>>2]|0)+v|0)==0){y=384;break}u=u+1|0}if((y|0)==384){y=0}if((w|0)==0){qK(r,p,v);c[j>>2]=(c[j>>2]|0)+1;qM(q,r,1);rq(o,m,q,r);if((q$(o,1)|0)==0){if((np(r,5,j)|0)!=0){if((qS(r,k-1-a|0)|0)==0){y=392;break}if((d|0)==0){y=404;break L427}if((cN[d&63](f,r)|0)==0){y=405;break L427}m9(47)}}x=t+1|0;t=x;if((x|0)==10){m9(46);t=0}}v=v+2|0}if((y|0)==392){y=0;m9(10);um(80288,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l}m9(58)}if((y|0)==404){z=m;r9(z);A=n;r9(A);B=o;r9(B);C=q;r9(C);D=p;r9(D);E=g;F=E;tQ(F);G=r;i=h;return G|0}else if((y|0)==405){z=m;r9(z);A=n;r9(A);B=o;r9(B);C=q;r9(C);D=p;r9(D);E=g;F=E;tQ(F);G=r;i=h;return G|0}return 0}function m9(a){a=a|0;if((c[30592]|0)==0){return}cC[c[30592]&15](c[30582]|0,71880,a,0,0);return}function na(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=m8(a,0,b,c,d)|0;m9(10);return e|0}function nb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+8|0;h=g|0;c[h>>2]=0;if((nc((a|0)==1|0,h,b,d,e,f,0,0,0,0,0)|0)==0){j=c[h>>2]|0;i=g;return j|0}c[h>>2]=0;j=c[h>>2]|0;i=g;return j|0}function nc(b,d,e,f,g,h,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;o=i;p=b;b=d;d=e;e=f;f=g;g=h;h=j;j=l;l=m;m=n;n=0;q=0;r=0;s=0;t=0;u=0;v=0;w=0;x=0;y=0;z=0;A=0;B=0;C=0;D=k&1;k=0;E=0;F=0;G=0;if(d>>>0<48){H=45;I=H;i=o;return I|0}if(h>>>0>1){J=1}else{J=h}K=J;if((e|0)==0){e=(d>>>0)/3|0}J=e;x=1;while(1){if((((d-e-1|0)>>>0)/(x>>>0)|0)>>>0<e>>>0){break}x=x+1|0}x=x-1|0;L=sj(2)|0;do{if((x|0)!=0){if((p|0)!=0){if(x>>>0<2){M=431;break}}if((p|0)!=0){x=x-1|0;w=((d-(J<<1)-1|0)>>>0)/(x>>>0)|0;e=d-J-(ad(x,w)|0)|0}else{w=((d-J-1|0)>>>0)/(x>>>0)|0;e=d-(ad(x,w)|0)|0}if((t_(1)|0)!=0){um(79480,(N=i,i=i+40|0,c[N>>2]=d,c[N+8>>2]=J,c[N+16>>2]=e,c[N+24>>2]=w,c[N+32>>2]=x,N)|0);i=N}A=sl(d)|0;z=m8(e,D,h,0,0)|0;if((p|0)!=0){v=m8(J,D,h,0,0)|0}r=tR(x+2|0,4)|0;if((r|0)==0){n=y_(c[(bX()|0)>>2]|0)|0;break}t=tJ(x<<2)|0;if((t|0)==0){n=y_(c[(bX()|0)>>2]|0)|0;break}F=0;while(1){if(F>>>0>=x>>>0){break}c[t+(F<<2)>>2]=-1;F=F+1|0}y=(x*3|0)+5|0;if((p|0)!=0){y=y+5|0}if(y>>>0<30){y=30}s=tR(y,4)|0;if((s|0)==0){n=y_(c[(bX()|0)>>2]|0)|0;break}L538:while(1){L540:while(1){F=0;while(1){if(F>>>0>=x>>>0){break}c[t+(F<<2)>>2]=-1;F=F+1|0}do{if((u|0)!=0){nt(u,x,y);if((sW(122376)|0)!=0){M=485;break L538}C=1;G=0;F=0;while(1){if(F>>>0<y>>>0){O=G>>>0<x>>>0}else{O=0}if(!O){break}if((a[u+F|0]|0)!=0){do{if((c[s+(F<<2)>>2]|0)==0){if((C|0)==0){break}c[s+(F<<2)>>2]=ns(w,K)|0;if((c[s+(F<<2)>>2]|0)==0){if((sX(122376)|0)!=0){M=495;break L538}C=0}}}while(0);if((c[s+(F<<2)>>2]|0)==0){c[s+(F<<2)>>2]=m8(w,0,K,0,0)|0}c[t+(G<<2)>>2]=F;P=G;G=P+1|0;c[r+(P<<2)>>2]=c[s+(F<<2)>>2]}F=F+1|0}if((C|0)!=0){if((sX(122376)|0)!=0){M=505;break L538}}C=0;if((F|0)==(x|0)){tQ(u);u=0;m9(33);continue L540}else{break}}else{F=0;while(1){if(F>>>0>=y>>>0){break}r9(c[s+(F<<2)>>2]|0);c[s+(F<<2)>>2]=0;F=F+1|0}u=tR(1,y)|0;if((u|0)==0){M=465;break L538}if((sW(122376)|0)!=0){M=467;break L538}C=1;F=0;while(1){if(F>>>0>=x>>>0){break}a[u+F|0]=1;c[s+(F<<2)>>2]=0;if((C|0)!=0){c[s+(F<<2)>>2]=ns(w,K)|0;if((c[s+(F<<2)>>2]|0)==0){if((sX(122376)|0)!=0){M=473;break L538}C=0}}if((c[s+(F<<2)>>2]|0)==0){c[s+(F<<2)>>2]=m8(w,0,K,0,0)|0}c[t+(F<<2)>>2]=F;c[r+(F<<2)>>2]=c[s+(F<<2)>>2];F=F+1|0}if((C|0)!=0){if((sX(122376)|0)!=0){M=482;break L538}}C=0}}while(0);se(A,z)|0;rm(A,A,2);if((p|0)!=0){ro(A,A,v)}F=0;while(1){if(F>>>0>=x>>>0){break}ro(A,A,c[r+(F<<2)>>2]|0);F=F+1|0}qK(A,A,1);B=qR(A)|0;do{if(B>>>0<d>>>0){P=k+1|0;k=P;if(P>>>0>20){k=0;e=e+1|0;m9(62);r9(z);z=m8(e,D,h,0,0)|0;continue L540}else{break}}else{k=0}}while(0);if(B>>>0<=d>>>0){M=524;break}P=E+1|0;E=P;if(P>>>0<=20){M=523;break}E=0;e=e-1|0;m9(60);r9(z);z=m8(e,D,h,0,0)|0}if((M|0)==523){M=0}else if((M|0)==524){M=0;E=0}if((B|0)==(d|0)){Q=(nh(A,L,5,l,m)|0)!=0}else{Q=0}if(!(Q^1)){M=529;break}}if((M|0)==465){n=y_(c[(bX()|0)>>2]|0)|0;break}else if((M|0)==467){n=63;break}else if((M|0)==473){n=63;break}else if((M|0)==482){n=63;break}else if((M|0)==485){n=63;break}else if((M|0)==495){n=63;break}else if((M|0)==505){n=63;break}else if((M|0)==529){if((t_(1)|0)!=0){m9(10);rv(78576,A);rv(77552,z);if((p|0)!=0){rv(76600,v)}F=0;while(1){if(F>>>0>=x>>>0){break}rv(75960,c[r+(F<<2)>>2]|0);F=F+1|0}P=qR(A)|0;R=qR(z)|0;um(74944,(N=i,i=i+16|0,c[N>>2]=P,c[N+8>>2]=R,N)|0);i=N;if((p|0)!=0){R=qR(v)|0;um(74208,(N=i,i=i+8|0,c[N>>2]=R,N)|0);i=N}F=0;while(1){if(F>>>0>=x>>>0){break}R=qR(c[r+(F<<2)>>2]|0)|0;um(73640,(N=i,i=i+16|0,c[N>>2]=F,c[N+8>>2]=R,N)|0);i=N;F=F+1|0}m9(10)}if((g|0)!=0){q=tR(x+4|0,4)|0;if((q|0)==0){n=y_(c[(bX()|0)>>2]|0)|0;break}if((j|0)!=0){F=0;R=F;F=R+1|0;c[q+(R<<2)>>2]=sf(0,2)|0;R=F;F=R+1|0;c[q+(R<<2)>>2]=sc(z)|0;if((p|0)!=0){R=F;F=R+1|0;c[q+(R<<2)>>2]=sc(v)|0}G=0;while(1){if(G>>>0>=x>>>0){break}R=F;F=R+1|0;c[q+(R<<2)>>2]=sc(c[r+(G<<2)>>2]|0)|0;G=G+1|0}}else{F=0;if((p|0)!=0){R=F;F=R+1|0;c[q+(R<<2)>>2]=sc(v)|0;while(1){if(F>>>0>x>>>0){break}c[q+(F<<2)>>2]=sc(c[r+(F<<2)>>2]|0)|0;F=F+1|0}}else{while(1){if(F>>>0>=x>>>0){break}c[q+(F<<2)>>2]=sc(c[r+(F<<2)>>2]|0)|0;F=F+1|0}}}}if((f|0)!=0){R=r1(c[A+4>>2]|0)|0;P=r1(c[A+4>>2]|0)|0;S=r1(c[A+4>>2]|0)|0;if((p|0)!=0){n=69}else{c[r+(x<<2)>>2]=z;c[r+(x+1<<2)>>2]=sj(2)|0;qM(S,A,1);T=f;sf(T,2)|0;do{qK(f,f,1);if((t_(1)|0)!=0){um(62400,(N=i,i=i+1|0,i=i+7&-8,c[N>>2]=0,N)|0);i=N;ru(f);un(77400,(N=i,i=i+1|0,i=i+7&-8,c[N>>2]=0,N)|0);i=N}else{m9(94)}F=0;while(1){if(F>>>0>=(x+2|0)>>>0){break}q4(R,S,c[r+(F<<2)>>2]|0);rq(P,f,R,A);if((q$(P,1)|0)==0){M=577;break}F=F+1|0}if((M|0)==577){M=0}if((t_(1)|0)!=0){m9(10)}}while(F>>>0<(x+2|0)>>>0);r9(c[r+(x+1<<2)>>2]|0);r9(R);r9(P);r9(S)}}if((t_(1)|0)==0){m9(10)}break}}else{M=431}}while(0);if((M|0)==431){n=45}if((s|0)!=0){C=((sW(122376)|0)!=0^1)&1;F=0;while(1){if(F>>>0>=y>>>0){break}if((c[s+(F<<2)>>2]|0)!=0){G=0;while(1){if(G>>>0>=x>>>0){break}if((c[t+(G<<2)>>2]|0)==(F|0)){M=596;break}G=G+1|0}if((M|0)==596){M=0}do{if((G|0)==(x|0)){if((C|0)==0){M=602;break}nu(c[s+(F<<2)>>2]|0,K)}else{M=602}}while(0);if((M|0)==602){M=0;r9(c[s+(F<<2)>>2]|0)}}F=F+1|0}do{if((C|0)!=0){if((sX(122376)|0)==0){break}n=63}}while(0);C=0;tQ(s)}tQ(t);if((r|0)!=0){tQ(r)}if((u|0)!=0){tQ(u)}r9(L);r9(z);r9(v);if((n|0)!=0){if((q|0)!=0){F=0;while(1){if((c[q+(F<<2)>>2]|0)==0){break}r9(c[q+(F<<2)>>2]|0);F=F+1|0}tQ(q)}r9(A)}else{c[b>>2]=A;if((g|0)!=0){c[g>>2]=q}}H=n;I=H;i=o;return I|0}function nd(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=k|0;m=k+8|0;n=a;a=e;e=f;f=g;g=j;j=0;c[l>>2]=0;c[m>>2]=0;o=0;if((n|0)==0){p=ne(45)|0;q=p;i=k;return q|0}c[n>>2]=0;if((g&2|0)!=0){o=1}if((a|0)!=0){r=l}else{r=0}j=nc((o|0)==1|0,m,b,d,0,r,h,g,1,e,f)|0;if((j|0)==0){if((e|0)!=0){if((cI[e&63](f,0,c[m>>2]|0)|0)==0){r9(c[m>>2]|0);if((a|0)!=0){f=0;while(1){if((c[(c[l>>2]|0)+(f<<2)>>2]|0)==0){break}r9(c[(c[l>>2]|0)+(f<<2)>>2]|0);f=f+1|0}tQ(c[l>>2]|0)}j=1}}}if((j|0)==0){if((a|0)!=0){c[a>>2]=c[l>>2]}c[n>>2]=c[m>>2]}p=nf(j)|0;q=p;i=k;return q|0}function ne(a){a=a|0;return nr(1,a)|0}function nf(a){a=a|0;return nq(32,a)|0}function ng(a,b){a=a|0;b=b|0;var c=0;b=0;c=sj(2)|0;if((nh(a,c,64,0,0)|0)==0){b=21}r9(c);return nf(b)|0}function nh(a,b,d,f,g){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+8|0;j=h|0;k=a;a=b;b=d;d=f;f=g;c[j>>2]=0;g=0;while(1){l=e[1928+(g<<1)>>1]|0;if((l|0)==0){break}if((q8(k,l)|0)!=0){m=664;break}g=g+1|0}if((m|0)==664){n=0;o=n;i=h;return o|0}g=sd(k)|0;l=sd(k)|0;qM(l,k,1);rq(g,a,l,k);r9(l);if((q$(g,1)|0)!=0){r9(g);m9(46);n=0;o=n;i=h;return o|0}r9(g);if((d|0)!=0){if((cI[d&63](f,2,k)|0)!=0){m=671}}else{m=671}if((m|0)==671){L833:do{if((np(k,b,j)|0)!=0){do{if((d|0)!=0){if((cI[d&63](f,1,k)|0)!=0){break}break L833}}while(0);n=1;o=n;i=h;return o|0}}while(0)}m9(46);n=0;o=n;i=h;return o|0}function ni(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;g=a;a=b;b=d;d=e;e=sl(0)|0;h=sl(0)|0;j=sl(0)|0;if((d|0)!=0){k=sc(d)|0}else{k=sf(0,3)|0}d=k;k=1;do{if((b|0)!=0){if((g|0)==0){break}if((a|0)==0){break}c[g>>2]=0;l=0;while(1){if((c[b+(l<<2)>>2]|0)==0){break}l=l+1|0}if((l|0)<2){m=ne(45)|0;n=m;i=f;return n|0}qM(j,a,1);do{if((k|0)!=0){k=0}else{qK(d,d,1)}if((t_(1)|0)!=0){um(62400,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;ru(d);um(77400,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o}else{m9(94)}o=0;while(1){if((o|0)>=(l|0)){break}q4(e,j,c[b+(o<<2)>>2]|0);rq(h,d,e,a);if((q$(h,1)|0)==0){p=706;break}o=o+1|0}if((p|0)==706){p=0}if((t_(1)|0)!=0){m9(10)}}while((o|0)<(l|0));sn(e);sn(h);sn(j);c[g>>2]=d;m=0;n=m;i=f;return n|0}}while(0);m=ne(45)|0;n=m;i=f;return n|0}function nj(a){a=a|0;var b=0;b=a;if((b|0)==0){return}a=0;while(1){if((c[b+(a<<2)>>2]|0)==0){break}r9(c[b+(a<<2)>>2]|0);a=a+1|0}tQ(b);return}function nk(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=a;a=b;b=d;d=e;e=f;f=g;do{if((h|0)!=0){if((a|0)==0){break}if((b|0)==0){break}do{if((d|0)!=0){if((qS(d,0)|0)==0){break}g=nl(a)|0;i=nl(b)|0;j=sd(h)|0;ro(j,g,i);k=sd(g)|0;l=k;m=i;n=g;rg(l,m,n)|0;ro(k,k,i);n=k;k=sd(i)|0;m=k;l=g;o=i;rg(m,l,o)|0;ro(k,k,g);qN(n,n,k);if((c[n+8>>2]|0)!=0){qL(n,n,j)}o=k;k=0;qP(o,n,h,j);qL(o,o,h);r9(n);if((q0(o,h)|0)<0){qL(o,o,j)}n=sj(2)|0;k=sd(o)|0;qM(j,j,1);qM(o,o,1);while(1){l=ra(k,d,o)|0;qK(o,o,1);if((l|0)!=0){if((nh(o,n,64,0,0)|0)!=0){break}}else{m9(47)}qL(o,o,j)}r9(k);r9(n);r9(j);m9(10);if((e|0)!=0){c[e>>2]=g}else{r9(g)}if((f|0)!=0){c[f>>2]=i}else{r9(i)}p=o;q=p;return q|0}}while(0);p=0;q=p;return q|0}}while(0);p=0;q=p;return q|0}function nl(a){a=a|0;var b=0,c=0;b=sj(2)|0;c=sc(a)|0;qT(c,0);while(1){if(!((nh(c,b,64,0,0)|0)!=0^1)){break}qK(c,c,2)}r9(b);return c|0}function nm(b,e,f,g,h,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;n=i;i=i+88|0;o=n|0;p=n+24|0;q=n+48|0;r=n+56|0;s=n+80|0;t=b;b=e;e=f;f=g;g=h;h=j;j=k;k=l;l=m;m=0;c[q>>2]=0;u=0;v=0;c[s>>2]=0;w=0;do{if((t|0)==1024){if((b|0)!=160){break}do{if((e|0)!=0){x=766}else{if((f|0)!=0){x=766;break}}}while(0);L945:do{if((x|0)==766){do{if((e|0)!=0){if(f>>>0<((b>>>0)/8|0)>>>0){break}break L945}}while(0);y=45;z=y;i=n;return z|0}}while(0);if(f>>>0<20){A=20}else{A=f}B=tJ(A)|0;do{if((B|0)!=0){m=sj(2)|0;C=((t-1|0)>>>0)/(b>>>0)|0;D=t-1-(ad(C,b)|0)|0;u=sl(t)|0;v=sl(t)|0;L960:while(1){while(1){if((e|0)==0){f=20;sM(o|0,f);e=o|0}E=B;F=e;G=f;Ac(E|0,F|0,G)|0;H=f-1|0;while(1){if((H|0)<0){break}G=B+H|0;a[G]=(a[G]|0)+1&255;if((a[B+H|0]|0)!=0){x=782;break}H=H-1|0}if((x|0)==782){x=0}mE(2,r|0,e,f);mE(2,p|0,B,f);H=0;while(1){if(H>>>0>=20){break}G=r+H|0;a[G]=(d[G]^d[p+H|0])&255;H=H+1|0}sn(c[s>>2]|0);c[s>>2]=0;I=nn(rA(s,5,r|0,20,0)|0)|0;if((I|0)!=0){x=790;break L960}qU(c[s>>2]|0,b-1|0);qT(c[s>>2]|0,0);if((nh(c[s>>2]|0,m,64,0,0)|0)!=0){break}e=0}J=0;w=sl(t)|0;do{sf(u,0)|0;G=0;while(1){if((G|0)>(C|0)){break}H=f-1|0;while(1){if((H|0)<0){break}F=B+H|0;a[F]=(a[F]|0)+1&255;if((a[B+H|0]|0)!=0){x=800;break}H=H-1|0}if((x|0)==800){x=0}mE(2,p|0,B,f);sn(c[q>>2]|0);c[q>>2]=0;I=nn(rA(q,5,p|0,20,0)|0)|0;if((I|0)!=0){x=804;break L960}if((G|0)==(C|0)){qV(c[q>>2]|0,D)}F=c[q>>2]|0;E=c[q>>2]|0;q_(F,E,ad(G,b)|0);qL(u,u,c[q>>2]|0);G=G+1|0}sf(v,0)|0;qU(v,t-1|0);qL(v,v,u);rn(c[q>>2]|0,c[s>>2]|0,1);rh(c[q>>2]|0,v,c[q>>2]|0);qM(c[q>>2]|0,c[q>>2]|0,1);qN(w,v,c[q>>2]|0);if((qR(w)|0)>>>0>=(t-1|0)>>>0){if((nh(w,m,64,0,0)|0)!=0){x=811;break L960}}J=J+1|0;}while((J|0)<4096)}if((x|0)==804){break}else if((x|0)==811){if((g|0)!=0){c[g>>2]=c[s>>2];c[s>>2]=0}if((h|0)!=0){c[h>>2]=w;w=0}if((j|0)!=0){c[j>>2]=J}do{if((k|0)!=0){if((l|0)==0){break}D=B;C=e;G=f;Ac(D|0,C|0,G)|0;c[k>>2]=B;B=0;c[l>>2]=f}}while(0);break}else if((x|0)==790){break}}else{I=y$()|0}}while(0);sn(c[q>>2]|0);sn(v);sn(u);sn(w);sn(c[s>>2]|0);tQ(B);sn(m);y=I;z=y;i=n;return z|0}}while(0);y=44;z=y;i=n;return z|0}function nn(a){a=a|0;return a&65535|0}function no(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;n=i;i=i+112|0;o=n|0;p=n+32|0;q=n+64|0;r=n+72|0;s=n+104|0;t=b;b=d;d=e;e=f;f=g;g=h;h=j;j=k;k=l;l=m;m=0;c[q>>2]=0;u=0;v=0;c[s>>2]=0;w=0;do{if((t|0)==1024){if((b|0)!=160){x=834;break}y=2}else{x=834}}while(0);if((x|0)==834){do{if((t|0)==2048){if((b|0)!=224){x=837;break}y=11}else{x=837}}while(0);if((x|0)==837){do{if((t|0)==2048){if((b|0)!=256){x=840;break}y=8}else{x=840}}while(0);L1045:do{if((x|0)==840){do{if((t|0)==3072){if((b|0)!=256){break}y=8;break L1045}}while(0);z=44;A=z;i=n;return A|0}}while(0)}}B=nn(mJ(y,8,0,0)|0)|0;if((B|0)!=0){z=B;A=z;i=n;return A|0}if(((b>>>0)/8|0)>>>0>32){ug(70528,67144,1684,88296);return 0}if((mI(y)|0)!=((b>>>0)/8|0|0)){ug(64424,67144,1685,88296);return 0}do{if((d|0)!=0){x=858}else{if((e|0)!=0){x=858;break}}}while(0);L1071:do{if((x|0)==858){do{if((d|0)!=0){if(e>>>0<((b>>>0)/8|0)>>>0){break}break L1071}}while(0);z=45;A=z;i=n;return A|0}}while(0);if(e>>>0<32){C=32}else{C=e}D=tJ(C)|0;do{if((D|0)!=0){m=sj(2)|0;u=sl(t)|0;v=sl(t)|0;C=(((t+b-1|0)>>>0)/(b>>>0)|0)-1|0;E=t-1-(ad(C,b)|0)|0;L1086:while(1){while(1){if((d|0)==0){e=(b>>>0)/8|0;if(e>>>0>32){ug(62728,67144,1720,88296);return 0}sM(o|0,e);d=o|0}mE(y,r|0,d,e);if((a[r+(((b>>>0)/8|0)-1)|0]&1|0)==0){F=((b>>>0)/8|0)-1|0;while(1){if((F|0)<0){break}G=r+F|0;a[G]=(a[G]|0)+1&255;if((a[r+F|0]|0)!=0){x=878;break}F=F-1|0}if((x|0)==878){x=0}}sn(c[s>>2]|0);c[s>>2]=0;B=nn(rA(s,5,r|0,32,0)|0)|0;if((B|0)!=0){x=883;break L1086}qU(c[s>>2]|0,b-1|0);if((nh(c[s>>2]|0,m,64,0,0)|0)!=0){break}d=0}G=D;H=d;I=e;Ac(G|0,H|0,I)|0;J=0;w=sl(t)|0;do{sf(u,0)|0;I=0;while(1){if((I|0)>(C|0)){break}F=e-1|0;while(1){if((F|0)<0){break}H=D+F|0;a[H]=(a[H]|0)+1&255;if((a[D+F|0]|0)!=0){x=893;break}F=F-1|0}if((x|0)==893){x=0}mE(2,p|0,D,e);sn(c[q>>2]|0);c[q>>2]=0;B=nn(rA(q,5,p|0,32,0)|0)|0;if((B|0)!=0){x=897;break L1086}if((I|0)==(C|0)){qV(c[q>>2]|0,E)}H=c[q>>2]|0;G=c[q>>2]|0;q_(H,G,ad(I,b)|0);qL(u,u,c[q>>2]|0);I=I+1|0}sf(v,0)|0;qU(v,t-1|0);qL(v,v,u);rn(c[q>>2]|0,c[s>>2]|0,1);rh(c[q>>2]|0,v,c[q>>2]|0);qM(c[q>>2]|0,c[q>>2]|0,1);qN(w,v,c[q>>2]|0);if((qR(w)|0)>>>0>=(t-1|0)>>>0){if((nh(w,m,64,0,0)|0)!=0){x=904;break L1086}}J=J+1|0;}while(J>>>0<t<<2>>>0)}if((x|0)==883){break}else if((x|0)==897){break}else if((x|0)==904){E=qR(w)|0;C=qR(c[s>>2]|0)|0;um(61296,(I=i,i=i+24|0,c[I>>2]=E,c[I+8>>2]=C,c[I+16>>2]=J,I)|0);i=I;uo(59552,d,e);rv(57712,w);rv(55792,c[s>>2]|0);if((f|0)!=0){c[f>>2]=c[s>>2];c[s>>2]=0}if((g|0)!=0){c[g>>2]=w;w=0}if((h|0)!=0){c[h>>2]=J}do{if((j|0)!=0){if((k|0)==0){break}I=D;C=d;E=e;Ac(I|0,C|0,E)|0;c[j>>2]=D;D=0;c[k>>2]=e}}while(0);if((l|0)!=0){c[l>>2]=y}break}}else{B=y$()|0}}while(0);sn(c[q>>2]|0);sn(v);sn(u);sn(w);sn(c[s>>2]|0);tQ(D);sn(m);z=B;A=z;i=n;return A|0}function np(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=a;a=b;b=d;d=r1(c[e+4>>2]|0)|0;f=r1(c[e+4>>2]|0)|0;g=r1(c[e+4>>2]|0)|0;h=r1(c[e+4>>2]|0)|0;i=sj(2)|0;j=0;k=qR(e)|0;if((a|0)<5){a=5}qM(h,e,1);l=sc(h)|0;m=rt(l)|0;q7(l,l,m);n=0;L1163:while(1){if(n>>>0>=a>>>0){o=955;break}p=b;c[p>>2]=(c[p>>2]|0)+1;if((n|0)!=0){so(d,k,0);if((qS(d,k-2|0)|0)!=0){qU(d,k-2|0)}else{qU(d,k-2|0);qW(d,k-2|0)}do{if((q0(d,h)|0)<0){if((q$(d,1)|0)<=0){o=938;break}}else{o=938}}while(0);if((o|0)==938){o=0;ug(82984,67144,958,87112);return 0}}else{p=d;sf(p,2)|0}rq(f,d,l,e);do{if((q$(f,1)|0)!=0){if((q0(f,h)|0)==0){break}p=1;while(1){if(p>>>0<m>>>0){q=(q0(f,h)|0)!=0}else{q=0}if(!q){break}rq(f,f,i,e);if((q$(f,1)|0)==0){o=947;break L1163}p=p+1|0}if((q0(f,h)|0)!=0){o=951;break L1163}}}while(0);m9(43);n=n+1|0}if((o|0)==947){r=d;r9(r);s=f;r9(s);t=g;r9(t);u=h;r9(u);v=l;r9(v);w=i;r9(w);x=j;return x|0}else if((o|0)==955){j=1;r=d;r9(r);s=f;r9(s);t=g;r9(t);u=h;r9(u);v=l;r9(v);w=i;r9(w);x=j;return x|0}else if((o|0)==951){r=d;r9(r);s=f;r9(s);t=g;r9(t);u=h;r9(u);v=l;r9(v);w=i;r9(w);x=j;return x|0}return 0}function nq(a,b){a=a|0;b=b|0;return nr(a,b)|0}function nr(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function ns(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;a=b;b=c[30596]|0;L1210:while(1){if((b|0)==0){e=978;break}do{if((c[b+4>>2]|0)!=0){if((c[b+8>>2]|0)!=(d|0)){break}if((c[b+12>>2]|0)==(a|0)){break L1210}}}while(0);b=c[b>>2]|0}if((e|0)==978){f=0;g=f;return g|0}e=c[b+4>>2]|0;c[b+4>>2]=0;if((d|0)!=(qR(e)|0)){ug(72816,67144,210,87160);return 0}f=e;g=f;return g|0}function nt(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;b=c;c=d;d=0;f=0;g=0;h=0;i=0;j=0;k=0;do{if((b|0)!=0){if((b|0)>=(c|0)){break}if((b|0)==1){d=0;while(1){if((d|0)>=(c|0)){l=994;break}if((a[e+d|0]|0)!=0){break}d=d+1|0}if((l|0)==994){uf(67144,1025,87096)}m=d;d=m+1|0;a[e+m|0]=0;if((d|0)>=(c|0)){d=0}a[e+d|0]=1;return}g=1;while(1){if((g|0)>=(c|0)){break}if((a[e+(c-1)|0]|0)!=(a[e+(c-g-1)|0]|0)){l=999;break}g=g+1|0}if((l|0)==999){i=g}do{if((b&1|0)!=0){if((a[e+(c-1)|0]|0)!=0){if((i&1|0)==0){l=1023;break}j=c-i|0;k=j+2|0;if((k|0)>(c|0)){k=c}break}k=c-i-1|0;if((k|0)==0){j=d;k=c-i|0}else{do{if((a[e+k|0]|0)!=0){if((a[e+(k-1)|0]|0)==0){l=1013;break}j=c}else{l=1013}}while(0);if((l|0)==1013){j=k+1|0}}l=1033}else{if((a[e+(c-1)|0]|0)==0){j=c-i|0;k=j+1|0;break}if((i&1|0)!=0){l=1023;break}j=c-i|0;k=j+2|0;if((k|0)>(c|0)){k=c}}}while(0);do{if((l|0)==1023){h=c-i-1|0;d=1;while(1){if((d|0)>(h|0)){l=1032;break}f=h+2-d|0;if((a[e+(f-1)|0]|0)!=0){break}d=d+1|0}if((l|0)==1032){j=1;k=c+1-b|0;l=1033;break}if((a[e+(f-2)|0]|0)!=0){j=f-1|0;k=c-i|0}else{j=f-1|0;k=c+1-i|0}}}while(0);a[e+(j-1)|0]=((a[e+(j-1)|0]|0)!=0^1)&1;a[e+(k-1)|0]=((a[e+(k-1)|0]|0)!=0^1)&1;return}}while(0);return}function nu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;a=b;b=0;e=c[30596]|0;while(1){if((e|0)==0){break}if((c[e+4>>2]|0)==0){f=1042;break}e=c[e>>2]|0;b=b+1|0}do{if((e|0)==0){if(b>>>0<=100){break}f=0;g=c[30596]|0;while(1){if((g|0)==0){break}if(f>>>0>=((b>>>0)/3|0)<<1>>>0){sn(c[g+4>>2]|0);c[g+4>>2]=0;if((e|0)==0){e=g}}g=c[g>>2]|0}}}while(0);do{if((e|0)==0){e=tR(1,16)|0;if((e|0)!=0){c[e>>2]=c[30596];c[30596]=e;break}sn(d);return}}while(0);c[e+4>>2]=d;c[e+8>>2]=qR(d)|0;c[e+12>>2]=a;return}function nv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+8|0;g=f|0;h=b;b=0;if((s5()|0)!=0){j=nw(60)|0;k=j;i=f;return k|0}sW(122280)|0;if((h|0)!=0){l=h}else{l=122888}b=uq(122288,0,a,l,g)|0;sX(122280)|0;if((b|0)==0){c[e>>2]=c[g>>2];c[d>>2]=c[(c[g>>2]|0)+24>>2]}j=b;k=j;i=f;return k|0}function nw(a){a=a|0;return ol(1,a)|0}function nx(a){a=a|0;sW(122280)|0;uu(a);sX(122280)|0;return}function ny(a){a=a|0;var b=0,d=0,e=0,f=0;b=a;a=0;if((b|0)==0){d=0;e=d;return e|0}sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;f=nA(b)|0;if((f|0)!=0){a=c[f+24>>2]|0;uu(f)}sX(122280)|0;d=a;e=d;return e|0}function nz(){var a=0,b=0,d=0;a=0;b=0;while(1){if((a|0)!=0){d=0}else{d=(c[30672+(b<<4)>>2]|0)!=0}if(!d){break}if((c[(c[30672+(b<<4)>>2]|0)+32>>2]|0)==0){c[(c[30672+(b<<4)>>2]|0)+32>>2]=18}if((c[(c[30672+(b<<4)>>2]|0)+36>>2]|0)==0){c[(c[30672+(b<<4)>>2]|0)+36>>2]=22}if((c[(c[30672+(b<<4)>>2]|0)+40>>2]|0)==0){c[(c[30672+(b<<4)>>2]|0)+40>>2]=14}if((c[(c[30672+(b<<4)>>2]|0)+44>>2]|0)==0){c[(c[30672+(b<<4)>>2]|0)+44>>2]=2}if((c[(c[30672+(b<<4)>>2]|0)+48>>2]|0)==0){c[(c[30672+(b<<4)>>2]|0)+48>>2]=24}if((c[(c[30672+(b<<4)>>2]|0)+52>>2]|0)==0){c[(c[30672+(b<<4)>>2]|0)+52>>2]=8}if((c[(c[30672+(b<<4)>>2]|0)+56>>2]|0)==0){c[(c[30672+(b<<4)>>2]|0)+56>>2]=48}a=uq(122288,c[30680+(b<<4)>>2]|0,c[30672+(b<<4)>>2]|0,c[30676+(b<<4)>>2]|0,0)|0;b=b+1|0}if((a|0)!=0){uf(70280,226,86968)}else{return}}function nA(a){a=a|0;return ut(c[30572]|0,a,18)|0}function nB(a){a=a|0;var b=0,d=0,e=0,f=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;b=us(c[30572]|0,a)|0;if((b|0)!=0){d=c[c[b+8>>2]>>2]|0;uu(b);e=sX(122280)|0;f=d;return f|0}else{d=61584;e=sX(122280)|0;f=d;return f|0}return 0}function nC(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;e=us(c[30572]|0,b)|0;if((e|0)==0){f=sX(122280)|0;g=d;return g|0}b=c[e+8>>2]|0;if((c[b+4>>2]|0)!=0){h=c[c[b+4>>2]>>2]|0}else{h=0}d=h;if((d|0)!=0){if((a[d]|0)==0){i=1133}}else{i=1133}if((i|0)==1133){d=c[b>>2]|0}uu(e);f=sX(122280)|0;g=d;return g|0}function nD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+72|0;g=f|0;h=f+8|0;j=f+16|0;k=f+56|0;l=f+64|0;m=b;b=d;d=e;c[g>>2]=0;c[h>>2]=0;e=0;n=0;c[k>>2]=0;c[m>>2]=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;o=nE(d,0,0,g,k)|0;L1436:do{if((o|0)==0){if((c[k>>2]|0)==0){ug(76880,70280,2861,88152);return 0}n=c[(c[k>>2]|0)+8>>2]|0;if((c[n+4>>2]|0)!=0){p=c[c[n+4>>2]>>2]|0}else{p=0}q=p;if((q|0)!=0){if((a[q]|0)==0){r=1152}}else{r=1152}if((r|0)==1152){q=c[n>>2]|0}s=c[n+16>>2]|0;nF(j,0,nG(d)|0);o=nH(b,h,j)|0;if((o|0)!=0){break}e=tR((Ab(s|0)|0)+1|0,4)|0;if((e|0)==0){o=y$()|0;break}o=nI(c[(c[k>>2]|0)+24>>2]|0,e,c[h>>2]|0,c[g>>2]|0,c[j+12>>2]|0)|0;r9(c[h>>2]|0);c[h>>2]=0;if((o|0)!=0){break}do{if((c[j+8>>2]|0)==2){r=1161}else{if((c[j+8>>2]|0)==1){r=1161;break}t=Ab(s|0)|0;u=tJ((Ab(q|0)|0)+19+(t*5|0)|0)|0;v=u;w=u;if((w|0)==0){o=y$()|0;break L1436}v=ca(v|0,64328)|0;v=ca(v|0,q|0)|0;u=0;while(1){if((a[s+u|0]|0)==0){break}x=v;v=x+1|0;a[x]=40;x=v;v=x+1|0;a[x]=a[s+u|0]|0;v=ca(v|0,62648)|0;u=u+1|0}Ag(v|0,61208)|0;x=zd(t<<2)|0;if((x|0)==0){o=y$()|0;break L1436}u=0;while(1){if(u>>>0>=t>>>0){break}c[x+(u<<2)>>2]=e+(u<<2);u=u+1|0}o=vi(m,0,w,x)|0;ze(x);if((o|0)!=0){uf(70280,2957,88152);return 0}else{tQ(w);break}}}while(0);do{if((r|0)==1161){s=(((c[j+4>>2]|0)+7|0)>>>0)/8|0;o=nJ(l,0,c[e>>2]|0,s)|0;if((o|0)!=0){break L1436}u=c[l>>2]|0;t=vf(m,0,66912,(v=i,i=i+24|0,c[v>>2]=q,c[v+8>>2]=s,c[v+16>>2]=u,v)|0)|0;i=v;o=nK(t)|0;tQ(c[l>>2]|0);if((o|0)!=0){break L1436}else{break}}}while(0)}}while(0);if((c[g>>2]|0)!=0){nL(c[g>>2]|0);tQ(c[g>>2]|0)}if((e|0)!=0){nL(e);tQ(e)}if((c[k>>2]|0)==0){y=j+20|0;z=c[y>>2]|0;tQ(z);A=o;B=nM(A)|0;i=f;return B|0}sW(122280)|0;uu(c[k>>2]|0);sX(122280)|0;y=j+20|0;z=c[y>>2]|0;tQ(z);A=o;B=nM(A)|0;i=f;return B|0}function nE(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;b=d;d=e;e=f;f=0;h=u4(a,(g|0)!=0?70952:71592,0)|0;if((h|0)==0){i=65;j=i;return j|0}a=ve(h)|0;u_(h);h=a;a=vb(h,0)|0;if((a|0)==0){u_(h);i=65;j=i;return j|0}sW(122280)|0;k=nA(a)|0;sX(122280)|0;do{if((a1(a|0,57624)|0)!=0){if((a1(a|0,57432)|0)==0){l=1;break}l=(a1(a|0,69264)|0)!=0^1}else{l=1}}while(0);m=l&1;tQ(a);if((k|0)==0){u_(h);i=4;j=i;return j|0}a=c[k+8>>2]|0;l=c[k+12>>2]|0;if((b|0)!=0){n=b}else{if((g|0)!=0){n=c[a+12>>2]|0}else{n=c[a+8>>2]|0}}g=tR((Ab(n|0)|0)+1|0,4)|0;if((g|0)==0){f=y$()|0}if((f|0)==0){if((m|0)!=0){f=os(h,n,g,l)|0}else{f=og(h,n,g,c[a>>2]|0)|0}}u_(h);if((f|0)!=0){tQ(g);sW(122280)|0;uu(k);sX(122280)|0}else{c[d>>2]=g;c[e>>2]=k}i=f;j=i;return j|0}function nF(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;c[e>>2]=b;c[e+4>>2]=d;c[e+8>>2]=4;c[e+12>>2]=0;c[e+16>>2]=2;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=20;c[e+32>>2]=0;c[e+36>>2]=0;return}function nG(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a;c[d>>2]=0;c[e>>2]=0;a=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;g=nE(f,0,0,e,d)|0;if((g|0)==65){g=nE(f,1,0,e,d)|0}if((g|0)!=0){h=0;j=h;i=b;return j|0}else{a=cN[c[(c[(c[d>>2]|0)+8>>2]|0)+56>>2]&63](c[(c[d>>2]|0)+24>>2]|0,c[e>>2]|0)|0;sW(122280)|0;uu(c[d>>2]|0);sX(122280)|0;nL(c[e>>2]|0);tQ(c[e>>2]|0);h=a;j=h;i=b;return j|0}return 0}function nH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=a;a=b;b=d;d=0;m=0;n=0;c[a>>2]=0;o=u4(l,59680,0)|0;if((o|0)==0){c[a>>2]=vc(l,0,0)|0;p=(c[a>>2]|0)!=0?0:65;q=p;i=e;return q|0}l=u4(o,66424,0)|0;if((l|0)!=0){r=(u6(l)|0)-1|0;while(1){if((r|0)<=0){break}s=u9(l,r,f)|0;if((s|0)!=0){do{if((c[f>>2]|0)==3){if((Af(s|0,63320,3)|0)!=0){t=1247;break}if((c[b+8>>2]|0)!=4){t=1247;break}c[b+8>>2]=0}else{t=1247}}while(0);if((t|0)==1247){t=0;do{if((c[f>>2]|0)==5){if((Af(s|0,63208,5)|0)!=0){t=1251;break}if((c[b+8>>2]|0)!=4){t=1251;break}c[b+8>>2]=1}else{t=1251}}while(0);if((t|0)==1251){t=0;do{if((c[f>>2]|0)==4){if((Af(s|0,63016,4)|0)!=0){t=1255;break}if((c[b+8>>2]|0)!=4){t=1255;break}c[b+8>>2]=2}else{t=1255}}while(0);if((t|0)==1255){t=0;do{if((c[f>>2]|0)==3){if((Af(s|0,62864,3)|0)!=0){t=1259;break}if((c[b+8>>2]|0)!=4){t=1259;break}c[b+8>>2]=3}else{t=1259}}while(0);if((t|0)==1259){t=0;do{if((c[f>>2]|0)==11){if((Af(s|0,62712,11)|0)!=0){t=1262;break}n=n|1}else{t=1262}}while(0);if((t|0)==1262){t=0;m=1}}}}}}r=r-1|0}u_(l)}if((c[b+8>>2]|0)==4){c[b+8>>2]=0}l=u4(o,59544,0)|0;if((l|0)!=0){u=0}else{u=u4(o,59432,0)|0}r=u;L1617:do{if((((l|0)!=0^1)&1^((r|0)!=0^1)&1|0)!=0){if((m|0)!=0){d=72}else{do{if((c[b+8>>2]|0)==0){if((r|0)==0){t=1285;break}c[a>>2]=vc(r,1,5)|0;if((c[a>>2]|0)==0){d=65}}else{t=1285}}while(0);if((t|0)==1285){do{if((c[b+8>>2]|0)==1){if((r|0)==0){t=1305;break}if((c[b>>2]|0)!=0){t=1305;break}u=0;v=0;w=u9(r,1,g)|0;x=w;do{if((w|0)!=0){if((c[g>>2]|0)==0){t=1290;break}y=u4(o,62320,0)|0;do{if((y|0)!=0){s=u9(y,1,f)|0;if((s|0)!=0){if((c[f>>2]|0)>>>0>0){u=tJ(c[f>>2]|0)|0;if((u|0)!=0){z=u;A=s;B=c[f>>2]|0;Ac(z|0,A|0,B)|0;v=c[f>>2]|0}else{d=y$()|0}}}else{d=68}u_(y);if((d|0)!=0){break L1617}else{break}}}while(0);d=om(a,c[b+4>>2]|0,x,c[g>>2]|0,u,v)|0;tQ(u)}else{t=1290}}while(0);if((t|0)==1290){d=65}}else{t=1305}}while(0);if((t|0)==1305){do{if((c[b+8>>2]|0)==1){if((l|0)==0){t=1324;break}if((c[b>>2]|0)!=2){if((c[b>>2]|0)!=3){t=1324;break}}if((u6(l)|0)!=3){d=65}else{u=u9(l,1,f)|0;s=u;do{if((u|0)!=0){if((c[f>>2]|0)==0){t=1313;break}c[b+16>>2]=oj(s,c[f>>2]|0)|0;if((c[b+16>>2]|0)!=0){v=u9(l,2,h)|0;x=v;do{if((v|0)!=0){if((c[h>>2]|0)==0){t=1318;break}d=on(a,c[b+4>>2]|0,x,c[h>>2]|0,c[b+16>>2]|0)|0}else{t=1318}}while(0);if((t|0)==1318){d=65}}else{d=5}}else{t=1313}}while(0);if((t|0)==1313){d=65}}}else{t=1324}}while(0);if((t|0)==1324){do{if((c[b+8>>2]|0)==2){if((r|0)==0){t=1365;break}if((c[b>>2]|0)!=0){t=1365;break}u=u9(r,1,j)|0;x=u;do{if((u|0)!=0){if((c[j>>2]|0)==0){t=1329;break}v=0;w=0;y=u4(o,62616,0)|0;do{if((y|0)!=0){s=u9(y,1,f)|0;if((s|0)!=0){c[b+16>>2]=oj(s,c[f>>2]|0)|0;if((c[b+16>>2]|0)==0){d=5}}else{d=68}u_(y);if((d|0)!=0){break L1617}else{break}}}while(0);y=u4(o,62440,0)|0;do{if((y|0)!=0){s=u9(y,1,f)|0;if((s|0)!=0){if((c[f>>2]|0)>>>0>0){c[b+20>>2]=tJ(c[f>>2]|0)|0;if((c[b+20>>2]|0)!=0){B=c[b+20>>2]|0;A=s;z=c[f>>2]|0;Ac(B|0,A|0,z)|0;c[b+24>>2]=c[f>>2]}else{d=y$()|0}}}else{d=68}u_(y);if((d|0)!=0){break L1617}else{break}}}while(0);y=u4(o,62320,0)|0;do{if((y|0)!=0){s=u9(y,1,f)|0;if((s|0)!=0){if((c[f>>2]|0)>>>0>0){v=tJ(c[f>>2]|0)|0;if((v|0)!=0){z=v;A=s;B=c[f>>2]|0;Ac(z|0,A|0,B)|0;w=c[f>>2]|0}else{d=y$()|0}}}else{d=68}u_(y);if((d|0)!=0){break L1617}else{break}}}while(0);d=oo(a,c[b+4>>2]|0,c[b+16>>2]|0,x,c[j>>2]|0,c[b+20>>2]|0,c[b+24>>2]|0,v,w)|0;tQ(v)}else{t=1329}}while(0);if((t|0)==1329){d=65}}else{t=1365}}while(0);if((t|0)==1365){do{if((c[b+8>>2]|0)==3){if((l|0)==0){t=1399;break}if((c[b>>2]|0)!=2){t=1399;break}if((u6(l)|0)!=3){d=65}else{x=u9(l,1,f)|0;s=x;do{if((x|0)!=0){if((c[f>>2]|0)==0){t=1372;break}u=0;y=0;c[b+16>>2]=oj(s,c[f>>2]|0)|0;if((c[b+16>>2]|0)!=0){B=u9(l,2,k)|0;A=B;do{if((B|0)!=0){if((c[k>>2]|0)==0){t=1377;break}z=u4(o,59160,0)|0;do{if((z|0)!=0){s=u9(z,1,f)|0;if((s|0)!=0){c[b+28>>2]=aE(s|0,0,10)|0;u_(z);break}else{d=68;break L1617}}}while(0);z=u4(o,62320,0)|0;do{if((z|0)!=0){s=u9(z,1,f)|0;if((s|0)!=0){if((c[f>>2]|0)>>>0>0){u=tJ(c[f>>2]|0)|0;if((u|0)!=0){C=u;D=s;E=c[f>>2]|0;Ac(C|0,D|0,E)|0;y=c[f>>2]|0}else{d=y$()|0}}}else{d=68}u_(z);if((d|0)!=0){break L1617}else{break}}}while(0);d=op(a,(c[b+4>>2]|0)-1|0,c[b+16>>2]|0,A,c[k>>2]|0,c[b+28>>2]|0,u,y)|0;tQ(u)}else{t=1377}}while(0);if((t|0)==1377){d=65}}else{d=5}}else{t=1372}}while(0);if((t|0)==1372){d=65}}}else{t=1399}}while(0);if((t|0)==1399){do{if((c[b+8>>2]|0)==3){if((l|0)==0){t=1415;break}if((c[b>>2]|0)!=3){t=1415;break}if((u6(l)|0)!=3){d=65}else{x=u9(l,1,f)|0;s=x;do{if((x|0)!=0){if((c[f>>2]|0)==0){t=1406;break}c[b+16>>2]=oj(s,c[f>>2]|0)|0;if((c[b+16>>2]|0)!=0){c[a>>2]=vc(l,2,5)|0;if((c[a>>2]|0)==0){d=65}c[b+32>>2]=42;c[b+36>>2]=c[a>>2]}else{d=5}}else{t=1406}}while(0);if((t|0)==1406){d=65}}}else{t=1415}}while(0);if((t|0)==1415){d=70}}}}}}}t=1423}else{d=65;t=1423}}while(0);u_(o);u_(l);u_(r);if((d|0)!=0){tQ(c[b+20>>2]|0);c[b+20>>2]=0}else{c[b+12>>2]=n}p=d;q=p;i=e;return q|0}function nI(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;h=a;a=b;b=d;d=e;e=f;do{if((t_(1)|0)!=0){if((s5()|0)!=0){break}um(60104,(f=i,i=i+8|0,c[f>>2]=h,f)|0);i=f;j=0;while(1){if((j|0)>=(n6(h)|0)){break}rv(59848,c[d+(j<<2)>>2]|0);j=j+1|0}rv(64768,b)}}while(0);sW(122280)|0;f=us(c[30572]|0,h)|0;if((f|0)!=0){k=cO[c[(c[f+8>>2]|0)+40>>2]&31](h,a,b,d,e)|0;uu(f)}else{k=4}sX(122280)|0;if((k|0)!=0){l=k;i=g;return l|0}if((t_(1)|0)==0){l=k;i=g;return l|0}if((s5()|0)!=0){l=k;i=g;return l|0}j=0;while(1){if((j|0)>=(n9(h)|0)){break}rv(59840,c[a+(j<<2)>>2]|0);j=j+1|0}l=k;i=g;return l|0}function nJ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+8|0;g=f|0;h=a;a=b;b=d;d=e;if((((h|0)!=0^1)&1|0)==(((a|0)!=0^1)&1|0)){j=45;k=j;i=f;return k|0}if((h|0)!=0){c[h>>2]=0}e=nK(rE(5,0,0,g,b)|0)|0;if((e|0)!=0){j=e;k=j;i=f;return k|0}if((c[g>>2]|0)>>>0>d>>>0){j=67;k=j;i=f;return k|0}if((c[g>>2]|0)>>>0<d>>>0){l=d-(c[g>>2]|0)|0}else{l=0}d=l;l=(c[g>>2]|0)+d|0;do{if((a|0)!=0){m=a}else{do{if((b|0)!=0){if((c[b+12>>2]&1|0)==0){n=1470;break}o=tL(l)|0}else{n=1470}}while(0);if((n|0)==1470){o=tJ(l)|0}m=o;if((m|0)!=0){break}e=y$()|0;j=e;k=j;i=f;return k|0}}while(0);if((d|0)!=0){Ae(m|0,0,d|0)}c[g>>2]=(c[g>>2]|0)+d;e=nK(rE(5,m+d|0,(c[g>>2]|0)-d|0,0,b)|0)|0;if((e|0)!=0){tQ(m);j=e;k=j;i=f;return k|0}if((h|0)!=0){c[h>>2]=m}j=0;k=j;i=f;return k|0}function nK(a){a=a|0;return oi(a)|0}function nL(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}r9(c[b>>2]|0);c[b>>2]=0;b=b+4|0}return}function nM(a){a=a|0;return ok(32,a)|0}function nN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+112|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=e+48|0;n=e+56|0;o=e+96|0;p=e+104|0;q=a;a=d;c[f>>2]=0;c[g>>2]=0;c[h>>2]=0;c[j>>2]=0;c[k>>2]=0;c[o>>2]=0;c[p>>2]=0;c[q>>2]=0;c[n+20>>2]=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;d=nE(a,1,0,f,p)|0;do{if((d|0)==0){nF(n,1,nG(a)|0);d=nO(b,g,o,l,m,n)|0;if((d|0)!=0){break}if((c[(c[p>>2]|0)+24>>2]|0)!=(c[(c[o>>2]|0)+24>>2]|0)){d=70;break}d=nP(c[(c[p>>2]|0)+24>>2]|0,h,c[g>>2]|0,c[f>>2]|0,c[m>>2]|0)|0;if((d|0)!=0){break}r=c[n+8>>2]|0;if((r|0)==1){s=nG(a)|0;d=nQ(j,k,s,c[h>>2]|0)|0;r9(c[h>>2]|0);c[h>>2]=0;if((d|0)==0){s=c[j>>2]|0;t=vf(q,0,59440,(u=i,i=i+16|0,c[u>>2]=c[k>>2],c[u+8>>2]=s,u)|0)|0;i=u;d=nK(t)|0}}else if((r|0)==2){r=nG(a)|0;d=nR(j,k,r,c[n+16>>2]|0,c[h>>2]|0,c[n+20>>2]|0,c[n+24>>2]|0)|0;r9(c[h>>2]|0);c[h>>2]=0;if((d|0)==0){r=c[j>>2]|0;t=vf(q,0,59440,(u=i,i=i+16|0,c[u>>2]=c[k>>2],c[u+8>>2]=r,u)|0)|0;i=u;d=nK(t)|0}}else{t=vf(q,0,(c[l>>2]|0)!=0?57632:55760,(u=i,i=i+8|0,c[u>>2]=c[h>>2],u)|0)|0;i=u;d=nK(t)|0}}}while(0);tQ(c[j>>2]|0);if((c[f>>2]|0)!=0){nL(c[f>>2]|0);tQ(c[f>>2]|0)}r9(c[h>>2]|0);if((c[g>>2]|0)!=0){nL(c[g>>2]|0);tQ(c[g>>2]|0)}do{if((c[p>>2]|0)==0){if((c[o>>2]|0)!=0){break}v=n+20|0;w=c[v>>2]|0;tQ(w);x=d;y=nM(x)|0;i=e;return y|0}}while(0);sW(122280)|0;if((c[p>>2]|0)!=0){uu(c[p>>2]|0)}if((c[o>>2]|0)!=0){uu(c[o>>2]|0)}sX(122280)|0;v=n+20|0;w=c[v>>2]|0;tQ(w);x=d;y=nM(x)|0;i=e;return y|0}function nO(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;h=i;i=i+8|0;j=h|0;k=b;b=d;d=e;e=f;f=g;g=0;l=0;m=0;n=0;o=0;p=0;q=0;r=0;c[d>>2]=0;l=u4(a,63648,0)|0;L1964:do{if((l|0)!=0){m=u7(l,1)|0;if((m|0)==0){g=68;break}p=vb(m,0)|0;if((p|0)==0){g=65;break}do{if((a1(p|0,66424)|0)==0){c[d>>2]=1;a=(u6(m)|0)-1|0;L1975:while(1){if((a|0)<=0){s=1568;break}t=u9(m,a,j)|0;if((t|0)!=0){do{if((c[j>>2]|0)==3){if((Af(t|0,63320,3)|0)!=0){s=1545;break}if((c[f+8>>2]|0)!=4){s=1545;break}c[f+8>>2]=0}else{s=1545}}while(0);if((s|0)==1545){s=0;do{if((c[j>>2]|0)==5){if((Af(t|0,63208,5)|0)!=0){s=1549;break}if((c[f+8>>2]|0)!=4){s=1549;break}c[f+8>>2]=1}else{s=1549}}while(0);if((s|0)==1549){s=0;do{if((c[j>>2]|0)==4){if((Af(t|0,63016,4)|0)!=0){s=1553;break}if((c[f+8>>2]|0)!=4){s=1553;break}c[f+8>>2]=2}else{s=1553}}while(0);if((s|0)==1553){s=0;do{if((c[j>>2]|0)==3){if((Af(t|0,62864,3)|0)!=0){break}if((c[f+8>>2]|0)==4){s=1556;break L1975}}}while(0);if((c[j>>2]|0)!=11){s=1560;break}if((Af(t|0,62712,11)|0)!=0){s=1560;break}q=q|1}}}}a=a-1|0}if((s|0)==1556){g=70;break L1964}else if((s|0)==1560){g=72;break L1964}else if((s|0)==1568){u_(m);if((c[f+8>>2]|0)==2){m=u4(l,62616,0)|0;do{if((m|0)!=0){t=u9(m,1,j)|0;if((t|0)!=0){c[f+16>>2]=oj(t,c[j>>2]|0)|0;if((c[f+16>>2]|0)==0){g=5}}else{g=68}u_(m);if((g|0)!=0){break L1964}else{break}}}while(0);m=u4(l,62440,0)|0;do{if((m|0)!=0){t=u9(m,1,j)|0;if((t|0)!=0){if((c[j>>2]|0)>>>0>0){c[f+20>>2]=tJ(c[j>>2]|0)|0;if((c[f+20>>2]|0)!=0){u=c[f+20>>2]|0;v=t;w=c[j>>2]|0;Ac(u|0,v|0,w)|0;c[f+24>>2]=c[j>>2]}else{g=y$()|0}}}else{g=68}u_(m);if((g|0)!=0){break L1964}else{break}}}while(0)}a=2;L2049:while(1){w=u7(l,a)|0;m=w;if((w|0)==0){break}t=u9(m,0,j)|0;if((c[j>>2]|0)==9){if((Af(t|0,62616,9)|0)!=0){s=1595}}else{s=1595}do{if((s|0)==1595){s=0;if((c[j>>2]|0)==5){if((Af(t|0,62440,5)|0)==0){break}}if((c[j>>2]|0)!=15){s=1599;break L2049}if((Af(t|0,62320,15)|0)!=0){s=1599;break L2049}}}while(0);u_(m);a=a+1|0}if((m|0)==0){g=68;break L1964}tQ(p);p=vb(m,0)|0;if((p|0)!=0){u_(l);l=m;m=0;break}else{g=65;break L1964}}}}while(0);sW(122280)|0;o=nA(p)|0;sX(122280)|0;if((o|0)==0){g=4;break}n=c[o+8>>2]|0;a=c[n+16>>2]|0;r=tR((Ab(a|0)|0)+1|0,4)|0;if((r|0)!=0){g=og(l,a,r,0)|0;break}else{g=y$()|0;break}}else{g=65}}while(0);u_(l);u_(m);tQ(p);if((g|0)!=0){sW(122280)|0;uu(o);sX(122280)|0;tQ(r);tQ(c[f+20>>2]|0);c[f+20>>2]=0;x=g;i=h;return x|0}else{c[k>>2]=r;c[b>>2]=o;c[e>>2]=q;x=g;i=h;return x|0}return 0}function nP(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;h=a;a=b;b=d;d=e;e=f;c[a>>2]=0;do{if((t_(1)|0)!=0){if((s5()|0)!=0){break}um(63872,(f=i,i=i+8|0,c[f>>2]=h,f)|0);i=f;f=0;while(1){if((f|0)>=(n7(h)|0)){break}rv(64992,c[d+(f<<2)>>2]|0);f=f+1|0}f=0;while(1){if((f|0)>=(n9(h)|0)){break}rv(64768,c[b+(f<<2)>>2]|0);f=f+1|0}}}while(0);sW(122280)|0;f=us(c[30572]|0,h)|0;if((f|0)!=0){j=cO[c[(c[f+8>>2]|0)+44>>2]&31](h,a,b,d,e)|0;uu(f)}else{j=4}sX(122280)|0;if((j|0)!=0){k=j;i=g;return k|0}if((t_(1)|0)==0){k=j;i=g;return k|0}if((s5()|0)!=0){k=j;i=g;return k|0}rv(63720,c[a>>2]|0);k=j;i=g;return k|0}function nQ(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+8|0;j=h|0;k=b;b=e;e=0;l=((f+7|0)>>>0)/8|0;c[k>>2]=0;f=tL(l)|0;e=f;if((f|0)==0){m=y$()|0;n=m;i=h;return n|0}f=rE(5,e,l,j,g)|0;if((f|0)!=0){tQ(e);m=nK(f)|0;n=m;i=h;return n|0}l=c[j>>2]|0;if(l>>>0<4){tQ(e);m=155;n=m;i=h;return n|0}c[j>>2]=0;if((a[e|0]|0)==0){c[j>>2]=(c[j>>2]|0)+1}f=c[j>>2]|0;c[j>>2]=f+1;if((d[e+f|0]|0)!=2){tQ(e);m=155;n=m;i=h;return n|0}while(1){if((c[j>>2]|0)>>>0<l>>>0){o=(d[e+(c[j>>2]|0)|0]|0)!=0}else{o=0}if(!o){break}c[j>>2]=(c[j>>2]|0)+1}if(((c[j>>2]|0)+1|0)>>>0>=l>>>0){tQ(e);m=155;n=m;i=h;return n|0}c[j>>2]=(c[j>>2]|0)+1;Ad(e|0,e+(c[j>>2]|0)|0,l-(c[j>>2]|0)|0);c[k>>2]=e;c[b>>2]=l-(c[j>>2]|0);if((t_(1)|0)!=0){uo(64056,c[k>>2]|0,c[b>>2]|0)}m=0;n=m;i=h;return n|0}function nR(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;l=i;i=i+8|0;m=l|0;n=b;b=e;e=g;g=h;h=j;j=k;c[m>>2]=0;k=0;o=0;p=((f+7|0)>>>0)/8|0;f=0;c[n>>2]=0;if((h|0)!=0){if((j|0)==0){q=1671}}else{q=1671}if((q|0)==1671){h=123240;j=0}r=mI(e)|0;o=tJ(r)|0;if((o|0)==0){s=y$()|0;t=s;i=l;return t|0}mE(e,o,h,j);j=nJ(m,0,g,p)|0;if((j|0)!=0){tQ(o);s=155;t=s;i=l;return t|0}g=p;if(g>>>0<((r<<1)+2|0)>>>0){tQ(c[m>>2]|0);tQ(o);s=155;t=s;i=l;return t|0}k=tL(g-1|0)|0;if((k|0)==0){j=y$()|0;tQ(c[m>>2]|0);tQ(o);s=j;t=s;i=l;return t|0}j=k+r|0;p=(c[m>>2]|0)+1|0;h=(c[m>>2]|0)+1+r|0;u=g-1-r|0;if((oh(k,r,h,u,e)|0)!=0){f=1}g=0;while(1){if(g>>>0>=r>>>0){break}v=k+g|0;a[v]=(d[v]^d[p+g|0])&255;g=g+1|0}if((oh(j,u,k,r,e)|0)!=0){f=1}g=0;while(1){if(g>>>0>=u>>>0){break}e=j+g|0;a[e]=(d[e]^d[h+g|0])&255;g=g+1|0}if((Af(o|0,j|0,r|0)|0)!=0){f=1}g=r;while(1){if(g>>>0>=u>>>0){break}if((d[j+g|0]|0)==1){q=1697;break}g=g+1|0}if((g|0)==(u|0)){f=1}if((a[c[m>>2]|0]|0)!=0){f=1}tQ(o);tQ(c[m>>2]|0);if((f|0)!=0){tQ(k);s=155;t=s;i=l;return t|0}g=g+1|0;Ad(k|0,j+g|0,u-g|0);c[n>>2]=k;c[b>>2]=u-g;k=0;if((t_(1)|0)!=0){uo(64248,c[n>>2]|0,c[b>>2]|0)}s=0;t=s;i=l;return t|0}function nS(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=i;i=i+72|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=f+64|0;m=b;b=d;d=e;c[g>>2]=0;c[h>>2]=0;e=0;n=0;c[j>>2]=0;c[m>>2]=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;o=nE(d,1,0,g,j)|0;L2218:do{if((o|0)==0){if((c[j>>2]|0)==0){ug(76880,70280,3162,88120);return 0}n=c[(c[j>>2]|0)+8>>2]|0;if((c[n+4>>2]|0)!=0){p=c[c[n+4>>2]>>2]|0}else{p=0}q=p;if((q|0)!=0){if((a[q]|0)==0){r=1730}}else{r=1730}if((r|0)==1730){q=c[n>>2]|0}s=c[n+20>>2]|0;nF(k,2,nG(d)|0);o=nH(b,h,k)|0;if((o|0)!=0){break}e=tR((Ab(s|0)|0)+1|0,4)|0;if((e|0)==0){o=y$()|0;break}o=nT(c[(c[j>>2]|0)+24>>2]|0,e,c[h>>2]|0,c[g>>2]|0)|0;if((o|0)!=0){break}do{if((c[k+8>>2]|0)==3){r=1739}else{if((c[k+8>>2]|0)==1){r=1739;break}t=(Ab(q|0)|0)+20|0;u=Ab(s|0)|0;t=t+(u*10|0)|0;v=tJ(t)|0;t=v;w=v;if((w|0)==0){o=y$()|0;break L2218}t=ca(t|0,81288)|0;t=ca(t|0,q|0)|0;v=0;while(1){if((a[s+v|0]|0)==0){break}x=t;t=x+1|0;a[x]=40;x=t;t=x+1|0;a[x]=a[s+v|0]|0;t=ca(t|0,80264)|0;v=v+1|0}Ag(t|0,61208)|0;x=zd(u<<2)|0;if((x|0)==0){o=y$()|0;break L2218}v=0;while(1){if(v>>>0>=u>>>0){break}c[x+(v<<2)>>2]=e+(v<<2);v=v+1|0}o=vi(m,0,w,x)|0;ze(x);if((o|0)!=0){uf(70280,3249,88120);return 0}else{tQ(w);break}}}while(0);do{if((r|0)==1739){s=(((c[k+4>>2]|0)+7|0)>>>0)/8|0;o=nJ(l,0,c[e>>2]|0,s)|0;if((o|0)!=0){break L2218}v=c[l>>2]|0;u=vf(m,0,82944,(t=i,i=i+24|0,c[t>>2]=q,c[t+8>>2]=s,c[t+16>>2]=v,t)|0)|0;i=t;o=nK(u)|0;tQ(c[l>>2]|0);if((o|0)!=0){break L2218}else{break}}}while(0)}}while(0);if((c[g>>2]|0)!=0){nL(c[g>>2]|0);tQ(c[g>>2]|0)}if((c[h>>2]|0)!=0){r9(c[h>>2]|0)}if((e|0)==0){y=o;z=nM(y)|0;i=f;return z|0}nL(e);tQ(e);y=o;z=nM(y)|0;i=f;return z|0}function nT(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=a;a=b;b=d;d=e;do{if((t_(1)|0)!=0){if((s5()|0)!=0){break}um(65032,(e=i,i=i+8|0,c[e>>2]=g,e)|0);i=e;h=0;while(1){if((h|0)>=(n7(g)|0)){break}rv(64992,c[d+(h<<2)>>2]|0);h=h+1|0}rv(64768,b)}}while(0);sW(122280)|0;e=us(c[30572]|0,g)|0;if((e|0)!=0){j=cL[c[(c[e+8>>2]|0)+48>>2]&31](g,a,b,d)|0;uu(e)}else{j=4}sX(122280)|0;if((j|0)!=0){k=j;i=f;return k|0}if((t_(1)|0)==0){k=j;i=f;return k|0}if((s5()|0)!=0){k=j;i=f;return k|0}h=0;while(1){if((h|0)>=(n8(g)|0)){break}rv(64616,c[a+(h<<2)>>2]|0);h=h+1|0}k=j;i=f;return k|0}function nU(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+80|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=b;b=d;c[f>>2]=0;c[g>>2]=0;c[h>>2]=0;c[j>>2]=0;c[k>>2]=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;d=nE(b,0,0,h,f)|0;do{if((d|0)==0){d=nV(a,k,g)|0;if((d|0)!=0){break}if((c[(c[f>>2]|0)+24>>2]|0)!=(c[(c[g>>2]|0)+24>>2]|0)){d=70;break}nF(l,3,nG(b)|0);d=nH(m,j,l)|0;if((d|0)!=0){break}else{d=nW(c[(c[f>>2]|0)+24>>2]|0,c[j>>2]|0,c[k>>2]|0,c[h>>2]|0,c[l+32>>2]|0,l)|0;break}}}while(0);if((c[h>>2]|0)!=0){nL(c[h>>2]|0);tQ(c[h>>2]|0)}if((c[k>>2]|0)!=0){nL(c[k>>2]|0);tQ(c[k>>2]|0)}if((c[j>>2]|0)!=0){r9(c[j>>2]|0)}do{if((c[f>>2]|0)==0){if((c[g>>2]|0)!=0){break}n=d;o=nM(n)|0;i=e;return o|0}}while(0);sW(122280)|0;if((c[f>>2]|0)!=0){uu(c[f>>2]|0)}if((c[g>>2]|0)!=0){uu(c[g>>2]|0)}sX(122280)|0;n=d;o=nM(n)|0;i=e;return o|0}function nV(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b;b=d;d=0;f=u4(a,66688,0)|0;if((f|0)==0){g=65;h=g;return h|0}a=u7(f,1)|0;if((a|0)==0){u_(f);g=68;h=g;return h|0}i=vb(a,0)|0;if((i|0)==0){u_(f);u_(a);g=65;h=g;return h|0}do{if((a1(i|0,66424)|0)==0){tQ(i);u_(a);a=u7(f,2)|0;if((a|0)!=0){i=vb(a,0)|0;break}u_(f);g=65;h=g;return h|0}}while(0);sW(122280)|0;j=nA(i)|0;sX(122280)|0;tQ(i);i=0;if((j|0)==0){u_(a);u_(f);g=4;h=g;return h|0}i=c[(c[j+8>>2]|0)+20>>2]|0;k=tR((Ab(i|0)|0)+1|0,4)|0;if((k|0)==0){d=y$()|0}if((d|0)==0){d=og(f,i,k,0)|0}u_(a);u_(f);if((d|0)!=0){sW(122280)|0;uu(j);sX(122280)|0;tQ(k)}else{c[e>>2]=k;c[b>>2]=j}g=d;h=g;return h|0}function nW(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;j=a;a=b;b=d;d=e;e=f;f=g;do{if((t_(1)|0)!=0){if((s5()|0)!=0){break}um(67712,(g=i,i=i+8|0,c[g>>2]=j,g)|0);i=g;g=0;while(1){if((g|0)>=(n6(j)|0)){break}rv(67464,c[d+(g<<2)>>2]|0);g=g+1|0}g=0;while(1){if((g|0)>=(n8(j)|0)){break}rv(67136,c[b+(g<<2)>>2]|0);g=g+1|0}rv(66840,a)}}while(0);sW(122280)|0;g=us(c[30572]|0,j)|0;if((g|0)!=0){k=cG[c[(c[g+8>>2]|0)+52>>2]&15](j,a,b,d,e,f)|0;uu(g);l=sX(122280)|0;m=k;i=h;return m|0}else{k=4;l=sX(122280)|0;m=k;i=h;return m|0}return 0}function nX(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+16|0;d=b|0;e=b+8|0;c[d>>2]=0;c[e>>2]=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;f=nE(a,1,0,e,d)|0;if((f|0)!=0){g=f;h=nM(g)|0;i=b;return h|0}f=nY(c[(c[d>>2]|0)+24>>2]|0,c[e>>2]|0)|0;nL(c[e>>2]|0);tQ(c[e>>2]|0);g=f;h=nM(g)|0;i=b;return h|0}function nY(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;a=4;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;e=us(c[30572]|0,d)|0;if((e|0)==0){f=sX(122280)|0;g=a;return g|0}a=cN[c[(c[e+8>>2]|0)+36>>2]&63](d,b)|0;uu(e);f=sX(122280)|0;g=a;return g|0}function nZ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;e=i;i=i+304|0;f=e|0;g=e+8|0;h=e+56|0;j=e+64|0;k=e+72|0;l=e+128|0;m=e+184|0;n=b;b=0;o=0;p=0;q=0;r=0;s=0;t=0;u=0;v=0;w=0;c[h>>2]=0;c[j>>2]=0;x=0;y=0;c[g>>2]=0;c[n>>2]=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;p=u4(d,79456,0)|0;L2436:do{if((p|0)!=0){q=ve(p)|0;u_(p);p=q;q=0;if((p|0)==0){t=68;break}s=vb(p,0)|0;if((s|0)==0){t=65;break}sW(122280)|0;o=nA(s)|0;sX(122280)|0;tQ(s);s=0;if((o|0)==0){t=4;break}b=c[o+8>>2]|0;d=c[o+24>>2]|0;if((c[b+4>>2]|0)!=0){z=c[c[b+4>>2]>>2]|0}else{z=0}u=z;if((u|0)!=0){if((a[u]|0)==0){A=1902}}else{A=1902}if((A|0)==1902){u=c[b>>2]|0}w=c[b+8>>2]|0;v=c[b+12>>2]|0;if((Ab(v|0)|0)>>>0>=12){uf(70280,3476,88136);return 0}q=u4(p,78528,0)|0;L2460:do{if((q|0)!=0){B=u9(q,1,f)|0;do{if((B|0)!=0){if((c[f>>2]|0)>>>0>=49){break}C=k;D=B;E=c[f>>2]|0;Ac(C|0,D|0,E)|0;a[k+(c[f>>2]|0)|0]=0;y=aE(k|0,0,0)|0;u_(q);q=0;break L2460}}while(0);t=65;break L2436}else{y=65537}}while(0);q=u4(p,77544,0)|0;L2468:do{if((q|0)!=0){B=u9(q,1,f)|0;do{if((B|0)!=0){if((c[f>>2]|0)>>>0>=49){break}E=l;D=B;C=c[f>>2]|0;Ac(E|0,D|0,C)|0;a[l+(c[f>>2]|0)|0]=0;x=aE(l|0,0,0)|0;u_(q);q=0;break L2468}}while(0);t=65;break L2436}else{x=0}}while(0);t=n_(c[o+24>>2]|0,x,y,p,g|0,h,j)|0;u_(p);p=0;if((t|0)!=0){break}B=0;C=0;D=0;E=-1;F=Ab(w|0)|0;B=F+(Ab(v|0)|0)|0;if((c[h>>2]|0)!=0){G=0;while(1){if((c[(c[h>>2]|0)+(G<<2)>>2]|0)==0){break}B=B+1|0;G=G+1|0}}C=B;D=D+(B*10|0)|0;D=D+(((Ab(u|0)|0)<<1)+305)|0;if(B>>>0>30){uf(70280,3551,88136);return 0}B=0;F=tJ(D)|0;H=F;I=F;if((I|0)==0){t=y$()|0;break}H=ca(H|0,76584)|0;H=ca(H|0,75944)|0;H=ca(H|0,u|0)|0;G=0;while(1){if((a[w+G|0]|0)==0){break}F=H;H=F+1|0;a[F]=40;F=H;H=F+1|0;a[F]=a[w+G|0]|0;H=ca(H|0,62648)|0;F=B;B=F+1|0;c[m+(F<<2)>>2]=c[g+(G<<2)>>2];G=G+1|0}do{if((c[j>>2]|0)!=0){if((d|0)!=301){if((d|0)!=302){break}}E=B;H=ca(H|0,74936)|0}}while(0);H=ca(H|0,61208)|0;H=ca(H|0,74176)|0;H=ca(H|0,u|0)|0;G=0;while(1){if((a[v+G|0]|0)==0){break}d=H;H=d+1|0;a[d]=40;d=H;H=d+1|0;a[d]=a[v+G|0]|0;H=ca(H|0,62648)|0;d=B;B=d+1|0;c[m+(d<<2)>>2]=c[g+(G<<2)>>2];G=G+1|0}H=ca(H|0,61208)|0;c[g+(G<<2)>>2]=0;do{if((c[j>>2]|0)!=0){if((E|0)!=-1){A=1944;break}H=ca(H|0,74936)|0}else{A=1944}}while(0);if((A|0)==1944){do{if((c[h>>2]|0)!=0){if((c[c[h>>2]>>2]|0)==0){break}H=ca(H|0,73600)|0;G=0;while(1){if((c[(c[h>>2]|0)+(G<<2)>>2]|0)==0){break}H=ca(H|0,55760)|0;d=B;B=d+1|0;c[m+(d<<2)>>2]=c[(c[h>>2]|0)+(G<<2)>>2];G=G+1|0}H=ca(H|0,61208)|0}}while(0)}Ag(H|0,72408)|0;if((H-I|0)>>>0>=D>>>0){ug(71848,70280,3609,88136);return 0}while(1){if(B>>>0>=30){break}d=B;B=d+1|0;c[m+(d<<2)>>2]=0}B=Ab(w|0)|0;D=B+(Ab(v|0)|0)|0;B=tR(C+1|0,4)|0;if((B|0)==0){t=y$()|0;break}H=0;G=0;while(1){if((G|0)>=(D|0)){break}if((G|0)==(E|0)){d=H;H=d+1|0;c[B+(d<<2)>>2]=j}d=H;H=d+1|0;c[B+(d<<2)>>2]=m+(G<<2);G=G+1|0}do{if((c[j>>2]|0)!=0){if((E|0)!=-1){A=1969;break}c[B+(H<<2)>>2]=j}else{A=1969}}while(0);if((A|0)==1969){do{if((c[h>>2]|0)!=0){if((c[c[h>>2]>>2]|0)==0){break}while(1){if(G>>>0>=C>>>0){break}E=H;H=E+1|0;c[B+(E<<2)>>2]=(c[h>>2]|0)+(G<<2)+(-D<<2);G=G+1|0}}}while(0)}t=vi(n,0,I,B)|0;tQ(B);if((t|0)!=0){uf(70280,3641,88136);return 0}else{tQ(I);break}}else{t=65}}while(0);tQ(s);u_(c[j>>2]|0);nL(g|0);if((c[h>>2]|0)!=0){nL(c[h>>2]|0);tQ(c[h>>2]|0)}u_(r);u_(q);u_(p);if((o|0)==0){J=t;K=nM(J)|0;i=e;return K|0}sW(122280)|0;uu(o);sX(122280)|0;J=t;K=nM(J)|0;i=e;return K|0}function n_(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0;i=a;a=b;b=d;d=e;e=f;f=g;g=h;h=4;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;j=us(c[30572]|0,i)|0;if((j|0)==0){k=sX(122280)|0;l=h;return l|0}m=c[j+12>>2]|0;do{if((m|0)!=0){if((c[m+4>>2]|0)==0){n=1995;break}h=cB[c[m+4>>2]&15](i,a,b,d,e,f,g)|0}else{n=1995}}while(0);if((n|0)==1995){h=cO[c[(c[j+8>>2]|0)+32>>2]&31](i,a,b,e,f)|0}uu(j);k=sX(122280)|0;l=h;return l|0}function n$(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+48|0;f=e|0;g=e+8|0;h=e+16|0;j=b;b=d;d=0;k=0;l=0;m=0;n=0;c[f>>2]=0;o=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;d=u4(j,71592,0)|0;if((d|0)==0){d=u4(j,70952,0)|0}if((d|0)==0){d=u4(j,70632,0)|0}if((d|0)==0){d=u4(j,70248,0)|0}if((d|0)==0){p=0;q=p;i=e;return q|0}k=ve(d)|0;u_(d);d=k;k=0;n=vb(d,0)|0;L2604:do{if((n|0)!=0){sW(122280)|0;m=nA(n)|0;sX(122280)|0;if((m|0)==0){break}l=c[m+8>>2]|0;j=c[m+12>>2]|0;r=c[l+24>>2]|0;if((r|0)==0){break}if((mi(f,2,0)|0)!=0){break}do{if((j|0)!=0){if((c[j+8>>2]|0)==0){s=2025;break}if((cN[c[j+8>>2]&63](c[f>>2]|0,d)|0)!=0){break L2604}else{break}}else{s=2025}}while(0);do{if((s|0)==2025){j=0;t=r;while(1){if((a[t]|0)==0){s=2033;break}k=u4(d,t,1)|0;if((k|0)==0){s=2028;break}u=u9(k,1,g)|0;if((u|0)==0){s=2030;break}v=c[g>>2]|0;a4(h|0,30,69936,(w=i,i=i+16|0,c[w>>2]=a[t]|0,c[w+8>>2]=v,w)|0)|0;i=w;w=c[f>>2]|0;ms(w,h|0,Ab(h|0)|0);ms(c[f>>2]|0,u,c[g>>2]|0);u_(k);k=0;ms(c[f>>2]|0,72408,1);t=t+1|0;j=j+1|0}if((s|0)==2028){break L2604}else if((s|0)==2030){break L2604}else if((s|0)==2033){break}}}while(0);do{if((b|0)==0){b=tJ(20)|0;if((b|0)!=0){break}else{break L2604}}}while(0);r=b;j=mB(c[f>>2]|0,2)|0;Ac(r|0,j|0,20)|0;o=1}}while(0);tQ(n);u_(k);mq(c[f>>2]|0);u_(d);if((o|0)!=0){x=b}else{x=0}p=x;q=p;i=e;return q|0}function n0(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+16|0;f=e|0;g=e+8|0;h=a;a=b;b=d;c[f>>2]=0;d=0;c[g>>2]=0;j=0;k=0;l=1;if((b|0)!=0){c[b>>2]=0}sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;do{if((h|0)!=0){a=0;d=u4(h,71592,0)|0;if((d|0)!=0){l=0}if((d|0)==0){d=u4(h,70952,0)|0}if((d|0)==0){m=0;n=m;i=e;return n|0}o=ve(d)|0;u_(d);d=o;o=0;j=vb(d,0)|0;if((j|0)==0){break}if((nE(h,l,69632,f,g)|0)!=0){break}else{p=2067;break}}else{sW(122280)|0;c[g>>2]=nA(69264)|0;sX(122280)|0;if((c[g>>2]|0)!=0){p=2067;break}else{break}}}while(0);L2678:do{if((p|0)==2067){l=c[(c[g>>2]|0)+12>>2]|0;do{if((l|0)!=0){if((c[l+16>>2]|0)==0){break}k=cI[c[l+16>>2]&63](c[f>>2]|0,a,b)|0;break L2678}}while(0)}}while(0);if((c[f>>2]|0)!=0){nL(c[f>>2]|0);tQ(c[f>>2]|0)}if((c[g>>2]|0)!=0){sW(122280)|0;uu(c[g>>2]|0);sX(122280)|0}tQ(j);u_(d);m=k;n=m;i=e;return n|0}function n1(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;a=b;b=0;e=0;do{if((d|0)!=301){if((d|0)==302){break}f=0;g=f;return g|0}}while(0);sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;b=nA(69264)|0;sX(122280)|0;if((b|0)!=0){d=c[b+12>>2]|0;do{if((d|0)!=0){if((c[d+20>>2]|0)==0){break}e=cH[c[d+20>>2]&31](a)|0}}while(0);sW(122280)|0;uu(b);sX(122280)|0}f=e;g=f;return g|0}function n2(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=b;b=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;if((a|0)!=12){b=61;f=b;g=nM(f)|0;return g|0}do{if((e|0)!=0){if((d|0)!=4){h=2102;break}n3(c[e>>2]|0)}else{h=2102}}while(0);if((h|0)==2102){b=45}f=b;g=nM(f)|0;return g|0}function n3(a){a=a|0;var b=0,d=0;sW(122280)|0;b=us(c[30572]|0,a)|0;if((b|0)==0){d=sX(122280)|0;return}if((c[b+16>>2]&1|0)==0){a=b+16|0;c[a>>2]=c[a>>2]|1}uu(b);d=sX(122280)|0;return}function n4(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=a;a=e;e=0;switch(b|0){case 16:{c[a>>2]=n7(f)|0;break};case 8:{if((a|0)!=0){g=c[a>>2]|0}else{g=0}if((d|0)!=0){e=45}else{if((n5(f,g)|0)!=0){e=4}}break};case 34:{g=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;d=us(c[30572]|0,f)|0;if((d|0)!=0){g=c[(c[d+8>>2]|0)+28>>2]|0;uu(d)}sX(122280)|0;c[a>>2]=g;break};case 15:{c[a>>2]=n6(f)|0;break};case 18:{c[a>>2]=n9(f)|0;break};case 17:{c[a>>2]=n8(f)|0;break};default:{e=61}}return nM(e)|0}function n5(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b;b=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;e=us(c[30572]|0,a)|0;if((e|0)==0){b=4;f=sX(122280)|0;g=b;return g|0}a=c[e+8>>2]|0;if((d&1|0)!=0){if((c[a+28>>2]&1|0)!=0){h=2146}else{h=2148}}else{h=2146}do{if((h|0)==2146){if((d&2|0)!=0){if((c[a+28>>2]&2|0)==0){h=2148;break}}if((c[e+16>>2]&1|0)!=0){b=4}}}while(0);if((h|0)==2148){b=41}uu(e);f=sX(122280)|0;g=b;return g|0}function n6(a){a=a|0;var b=0,d=0,e=0,f=0;b=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;d=us(c[30572]|0,a)|0;if((d|0)==0){e=sX(122280)|0;f=b;return f|0}b=Ab(c[(c[d+8>>2]|0)+8>>2]|0)|0;uu(d);e=sX(122280)|0;f=b;return f|0}function n7(a){a=a|0;var b=0,d=0,e=0,f=0;b=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;d=us(c[30572]|0,a)|0;if((d|0)==0){e=sX(122280)|0;f=b;return f|0}b=Ab(c[(c[d+8>>2]|0)+12>>2]|0)|0;uu(d);e=sX(122280)|0;f=b;return f|0}function n8(a){a=a|0;var b=0,d=0,e=0,f=0;b=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;d=us(c[30572]|0,a)|0;if((d|0)==0){e=sX(122280)|0;f=b;return f|0}b=Ab(c[(c[d+8>>2]|0)+20>>2]|0)|0;uu(d);e=sX(122280)|0;f=b;return f|0}function n9(a){a=a|0;var b=0,d=0,e=0,f=0;b=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;d=us(c[30572]|0,a)|0;if((d|0)==0){e=sX(122280)|0;f=b;return f|0}b=Ab(c[(c[d+8>>2]|0)+16>>2]|0)|0;uu(d);e=sX(122280)|0;f=b;return f|0}function oa(){sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;return 0}function ob(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;e=us(c[30572]|0,a)|0;if((e|0)!=0){c[b>>2]=e;f=sX(122280)|0;g=d;return g|0}else{d=4;f=sX(122280)|0;g=d;return g|0}return 0}function oc(a){a=a|0;sW(122280)|0;uu(a);sX(122280)|0;return}function od(a,b){a=a|0;b=b|0;var d=0;d=0;sW(122280)|0;d=ux(c[30572]|0,a,b)|0;sX(122280)|0;return d|0}function oe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a;a=b;b=d;d=0;f=0;g=0;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;sW(122280)|0;d=us(c[30572]|0,e)|0;do{if((d|0)!=0){if((c[d+16>>2]&1|0)!=0){break}f=c[d+12>>2]|0}}while(0);sX(122280)|0;do{if((f|0)!=0){if((c[f>>2]|0)==0){h=2220;break}g=cI[c[f>>2]&63](e,a,b)|0}else{h=2220}}while(0);if((h|0)==2220){g=4;if((b|0)!=0){a=b;b=e;do{if((d|0)!=0){if((c[d+16>>2]&1|0)!=0){h=2224;break}i=69016}else{h=2224}}while(0);if((h|0)==2224){i=(d|0)!=0?68176:67928}cP[a&15](69088,b,76880,i)}}if((d|0)==0){j=g;k=nw(j)|0;return k|0}sW(122280)|0;uu(d);sX(122280)|0;j=g;k=nw(j)|0;return k|0}function of(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=b;b=d;sW(122280)|0;if((c[30772]|0)==0){nz();c[30772]=1}sX(122280)|0;d=0;f=0;g=0;h=us(c[30572]|0,a)|0;L2883:do{if((h|0)!=0){g=c[h+8>>2]|0;do{if((e|0)!=0){d=bP(c[g+16>>2]|0)|0;if((d|0)!=0){break}else{i=y$()|0;break L2883}}}while(0);do{if((b|0)!=0){f=bP(c[g+20>>2]|0)|0;if((f|0)!=0){break}else{i=y$()|0;break L2883}}}while(0);if((e|0)!=0){c[e>>2]=d}if((b|0)!=0){c[b>>2]=f}i=0}else{i=63}}while(0);uu(h);if((i|0)==0){j=i;return j|0}ze(d);ze(f);j=i;return j|0}function og(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;g=b;b=d;d=e;e=f;f=0;h=b;i=0;while(1){if((a[h]|0)!=0){j=(f|0)!=0^1}else{j=0}if(!j){break}k=u4(g,h,1)|0;if((k|0)!=0){c[d+(i<<2)>>2]=vc(k,1,5)|0;u_(k);if((c[d+(i<<2)>>2]|0)==0){f=65}}else{c[d+(i<<2)>>2]=0}h=h+1|0;i=i+1|0}if((f|0)==0){h=b;i=0;while(1){if((a[h]|0)==0){break}if((c[d+(i<<2)>>2]|0)==0){g=2271;break}h=h+1|0;i=i+1|0}if((a[h]|0)!=0){f=68;do{if((e|0)!=0){if((a1(e|0,66128)|0)!=0){break}if((a1(b|0,65896)|0)!=0){break}do{if((c[d>>2]|0)!=0){if((c[d+4>>2]|0)==0){break}if((c[d+8>>2]|0)==0){break}if((c[d+12>>2]|0)!=0){break}if((c[d+16>>2]|0)!=0){break}if((c[d+20>>2]|0)!=0){break}f=0}}while(0)}}while(0)}}if((f|0)==0){l=f;return l|0}b=0;while(1){if((b|0)>=(i|0)){break}if((c[d+(b<<2)>>2]|0)!=0){tQ(c[d+(b<<2)>>2]|0)}b=b+1|0}l=f;return l|0}function oh(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=i;i=i+16|0;j=h|0;k=h+8|0;l=b;b=d;d=e;e=f;f=g;g=mi(j,f,0)|0;if((g|0)!=0){m=oi(g)|0;n=m;i=h;return n|0}g=mI(f)|0;f=0;o=0;while(1){if(f>>>0>=b>>>0){break}if((o|0)!=0){mo(c[j>>2]|0)}a[k|0]=o>>24&255;a[k+1|0]=o>>16&255;a[k+2|0]=o>>8&255;a[k+3|0]=o&255;o=o+1|0;ms(c[j>>2]|0,d,e);ms(c[j>>2]|0,k|0,4);p=mB(c[j>>2]|0,0)|0;if((b-f|0)>>>0<g>>>0){q=b-f|0}else{q=g}r=q;s=l+f|0;t=p;p=r;Ac(s|0,t|0,p)|0;f=f+r|0}mq(c[j>>2]|0);m=0;n=m;i=h;return n|0}function oi(a){a=a|0;return a&65535|0}function oj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b;b=d;d=0;while(1){if((c[46320+(d<<3)>>2]|0)==0){break}if((Ab(c[46320+(d<<3)>>2]|0)|0)==(b|0)){if((Af(c[46320+(d<<3)>>2]|0,e|0,b|0)|0)==0){f=2318;break}}d=d+1|0}if((c[46320+(d<<3)>>2]|0)!=0){g=c[46324+(d<<3)>>2]|0;h=g;return h|0}d=tJ(b+1|0)|0;if((d|0)!=0){f=d;i=e;e=b;Ac(f|0,i|0,e)|0;a[d+b|0]=0;g=mc(d)|0;tQ(d)}else{g=0}h=g;return h|0}function ok(a,b){a=a|0;b=b|0;return ol(a,b)|0}function ol(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function om(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+8|0;k=j|0;l=b;b=e;e=f;f=g;g=h;h=0;m=0;c[k>>2]=((d+7|0)>>>0)/8|0;do{if((e+7|0)>>>0<=(c[k>>2]|0)>>>0){if((c[k>>2]|0)==0){break}d=tL(c[k>>2]|0)|0;m=d;if((d|0)==0){n=y$()|0;o=n;i=j;return o|0}d=0;p=d;d=p+1|0;a[m+p|0]=0;p=d;d=p+1|0;a[m+p|0]=2;p=(c[k>>2]|0)-3-e|0;if((p|0)<=0){ug(57880,70280,893,86936);return 0}do{if((f|0)!=0){if((g|0)!=(p|0)){tQ(m);n=45;o=n;i=j;return o|0}q=0;while(1){if(q>>>0>=g>>>0){r=2354;break}if((a[f+q|0]|0)==0){break}q=q+1|0}if((r|0)==2354){q=m+d|0;s=f;t=g;Ac(q|0,s|0,t)|0;d=d+g|0;break}tQ(m);n=45;o=n;i=j;return o|0}else{t=sH(p,1)|0;while(1){s=0;q=0;while(1){if((q|0)>=(p|0)){break}if((a[t+q|0]|0)==0){s=s+1|0}q=q+1|0}if((s|0)==0){break}s=s+(((s|0)/128|0)+3)|0;u=sH(s,1)|0;q=0;while(1){if((q|0)<(p|0)){v=(s|0)!=0}else{v=0}if(!v){break}if((a[t+q|0]|0)==0){w=s-1|0;s=w;a[t+q|0]=a[u+w|0]|0}if((a[t+q|0]|0)!=0){q=q+1|0}}tQ(u)}q=m+d|0;s=t;w=p;Ac(q|0,s|0,w)|0;d=d+p|0;tQ(t)}}while(0);p=d;d=p+1|0;a[m+p|0]=0;p=m+d|0;w=b;s=e;Ac(p|0,w|0,s)|0;d=d+e|0;if((d|0)!=(c[k>>2]|0)){ug(58256,70280,951,86936);return 0}s=rA(l,5,m,d,k)|0;if((s|0)!=0){h=nK(s)|0}else{if((t_(1)|0)!=0){rv(57672,c[l>>2]|0)}}tQ(m);n=h;o=n;i=j;return o|0}}while(0);n=66;o=n;i=j;return o|0}function on(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+120|0;j=h|0;k=h+104|0;l=h+112|0;m=b;b=e;e=f;f=g;g=0;n=0;c[k>>2]=((d+7|0)>>>0)/8|0;c[l>>2]=100;d=mI(f)|0;if((mJ(f,10,j|0,l)|0)!=0){o=69;p=o;i=h;return p|0}if((e|0)!=(d|0)){o=70;p=o;i=h;return p|0}do{if((d|0)!=0){if((d+(c[l>>2]|0)+4|0)>>>0>(c[k>>2]|0)>>>0){break}f=tJ(c[k>>2]|0)|0;n=f;if((f|0)==0){o=y$()|0;p=o;i=h;return p|0}f=0;q=f;f=q+1|0;a[n+q|0]=0;q=f;f=q+1|0;a[n+q|0]=1;q=(c[k>>2]|0)-e-(c[l>>2]|0)-3|0;if((q|0)<=1){ug(58376,70280,1104,86904);return 0}Ae(n+f|0,-1|0,q|0);f=f+q|0;q=f;f=q+1|0;a[n+q|0]=0;q=n+f|0;r=j;s=c[l>>2]|0;Ac(q|0,r|0,s)|0;f=f+(c[l>>2]|0)|0;s=n+f|0;r=b;q=e;Ac(s|0,r|0,q)|0;f=f+e|0;if((f|0)!=(c[k>>2]|0)){ug(58256,70280,1112,86904);return 0}q=rA(m,5,n,f,k)|0;if((q|0)!=0){g=nK(q)|0}else{if((t_(1)|0)!=0){rv(58072,c[m>>2]|0)}}tQ(n);o=g;p=o;i=h;return p|0}}while(0);o=66;p=o;i=h;return p|0}function oo(b,e,f,g,h,i,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;m=b;b=f;f=g;g=h;h=i;i=j;j=k;k=l;l=0;n=0;o=((e+7|0)>>>0)/8|0;c[m>>2]=0;if((h|0)!=0){if((i|0)==0){p=2419}}else{p=2419}if((p|0)==2419){h=123240;i=0}p=mI(b)|0;do{if(g>>>0<=(o-(p<<1)-2|0)>>>0){if((o|0)==0){break}n=tS(1,o)|0;if((n|0)==0){q=y$()|0;r=q;return r|0}mE(b,n+1+p|0,h,i);e=o-g-1|0;a[n+e|0]=1;s=n+e+1|0;t=f;u=g;Ac(s|0,t|0,u)|0;do{if((j|0)!=0){if((k|0)==(p|0)){u=n+1|0;t=j;s=p;Ac(u|0,t|0,s)|0;break}tQ(n);q=45;r=q;return r|0}else{sI(n+1|0,p,1)}}while(0);s=tL(o-p-1|0)|0;if((s|0)==0){l=y$()|0;tQ(n);q=l;r=q;return r|0}l=oh(s,o-p-1|0,n+1|0,p,b)|0;if((l|0)!=0){tQ(s);tQ(n);q=l;r=q;return r|0}e=p+1|0;t=s;while(1){if(e>>>0>=o>>>0){break}u=t;t=u+1|0;v=n+e|0;a[v]=((d[v]|0)^(d[u]|0))&255;e=e+1|0}tQ(s);u=tL(p)|0;if((u|0)==0){l=y$()|0;tQ(n);q=l;r=q;return r|0}l=oh(u,p,n+1+p|0,o-p-1|0,b)|0;if((l|0)!=0){tQ(u);tQ(n);q=l;r=q;return r|0}e=1;t=u;while(1){if(e>>>0>=(p+1|0)>>>0){break}v=t;t=v+1|0;w=n+e|0;a[w]=((d[w]|0)^(d[v]|0))&255;e=e+1|0}tQ(u);e=rA(m,5,n,o,0)|0;if((e|0)!=0){l=nK(e)|0}else{if((t_(1)|0)!=0){rv(58832,c[m>>2]|0)}}tQ(n);q=l;r=q;return r|0}}while(0);q=66;r=q;return r|0}function op(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;l=b;b=e;e=f;f=g;g=i;i=j;j=k;k=0;m=0;n=((b+7|0)>>>0)/8|0;o=0;p=mI(e)|0;if((p|0)==0){ug(59072,70280,1541,86872);return 0}q=p+8+g+(n-p-1)|0;o=tJ(q)|0;L3174:do{if((o|0)!=0){r=o+8|0;s=r+p|0;t=s+g|0;if((h|0)!=(p|0)){k=139;break}u=r;r=f;v=p;Ac(u|0,r|0,v)|0;if(n>>>0<(p+g+2|0)>>>0){k=66;break}m=tJ(n)|0;if((m|0)==0){k=y$()|0;break}v=m+n-1+(-p|0)|0;if((g|0)!=0){do{if((i|0)!=0){if((j|0)!=(g|0)){k=45;break L3174}else{r=s;u=i;w=g;Ac(r|0,u|0,w)|0;break}}else{sI(s,g,1)}}while(0)}Ae(o|0,0,8);mE(e,v,o,p+8+g|0);w=m+n-1+(-p|0)+(-g|0)-1|0;Ae(m|0,0,w-m|0);u=w;w=u+1|0;a[u]=1;u=w;r=s;x=g;Ac(u|0,r|0,x)|0;x=t;r=n-p-1|0;u=v;y=p;z=e;oh(x,r,u,y,z)|0;z=0;w=t;while(1){if(z>>>0>=(n-p-1|0)>>>0){break}y=m+z|0;a[y]=((d[y]|0)^(d[w]|0))&255;z=z+1|0;w=w+1|0}w=m|0;a[w]=(d[w]|0)&255>>(n<<3)-b&255;a[m+(n-1)|0]=-68;w=rA(l,5,m,n,0)|0;if((w|0)!=0){k=nK(w)|0}else{if((t_(1)|0)!=0){rv(58960,c[l>>2]|0)}}}else{k=y$()|0}}while(0);if((m|0)!=0){l=m;b=n;while(1){if((b|0)==0){break}a[l]=0;l=l+1|0;b=b-1|0}tQ(m)}if((o|0)==0){A=k;return A|0}m=o;b=q;while(1){if((b|0)==0){break}a[m]=0;m=m+1|0;b=b-1|0}tQ(o);A=k;return A|0}function oq(a,b){a=a|0;b=b|0;var d=0;d=a;return or(c[d+36>>2]|0,b,(c[d+4>>2]|0)-1|0,c[d+16>>2]|0,c[d+28>>2]|0)|0}function or(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+8|0;k=j|0;l=e;e=f;f=g;g=h;h=0;c[k>>2]=0;m=((e+7|0)>>>0)/8|0;n=0;o=mI(f)|0;if((o|0)==0){ug(59072,70280,1669,86856);return 0}p=o+8+g|0;if(p>>>0<(m-o-1|0)>>>0){p=m-o-1|0}p=p+o|0;n=tJ(p)|0;L3237:do{if((n|0)!=0){q=n;r=n+p+(-o|0)|0;h=nJ(0,r,b,o)|0;if((h|0)!=0){break}h=nJ(k,0,l,m)|0;if((h|0)!=0){break}if(m>>>0<(o+g+2|0)>>>0){h=66;break}if((d[(c[k>>2]|0)+(m-1)|0]|0)!=188){h=8;break}s=(c[k>>2]|0)+m-1+(-o|0)|0;if((d[c[k>>2]|0]&~(255>>(m<<3)-e)|0)!=0){h=8;break}t=q;u=m-o-1|0;v=s;w=o;x=f;oh(t,u,v,w,x)|0;x=0;w=q;while(1){if(x>>>0>=(m-o-1|0)>>>0){break}q=(c[k>>2]|0)+x|0;a[q]=(d[q]^d[w])&255;x=x+1|0;w=w+1|0}w=c[k>>2]|0;a[w]=d[w]&255>>(m<<3)-e&255;x=0;while(1){if(x>>>0<(m-o-g-2|0)>>>0){y=(a[(c[k>>2]|0)+x|0]|0)!=0^1}else{y=0}if(!y){break}x=x+1|0}do{if((x|0)==(m-o-g-2|0)){w=x;x=w+1|0;if((d[(c[k>>2]|0)+w|0]|0)!=1){break}w=(c[k>>2]|0)+x|0;Ae(n|0,0,8);q=n+8|0;v=r;u=o;Ac(q|0,v|0,u)|0;u=n+8+o|0;v=w;w=g;Ac(u|0,v|0,w)|0;mE(f,n,n,o+8+g|0);h=(Af(s|0,n|0,o|0)|0)!=0?8:0;break L3237}}while(0);h=8}else{h=y$()|0}}while(0);if((c[k>>2]|0)!=0){o=c[k>>2]|0;g=m;while(1){if((g|0)==0){break}a[o]=0;o=o+1|0;g=g-1|0}tQ(c[k>>2]|0)}if((n|0)==0){z=h;i=j;return z|0}k=n;g=p;while(1){if((g|0)==0){break}a[k]=0;k=k+1|0;g=g-1|0}tQ(n);z=h;i=j;return z|0}function os(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+24|0;h=g|0;j=b;b=d;d=e;e=f;f=0;k=b;l=0;while(1){if((a[k]|0)==0){break}c[d+(l<<2)>>2]=0;k=k+1|0;l=l+1|0}if((l|0)<5){ug(57208,70280,1872,86776);return 0}if((l|0)==5){c[d+20>>2]=0}k=b;l=0;while(1){if((a[k]|0)!=0){m=(f|0)!=0^1}else{m=0}if(!m){n=2575;break}o=u4(j,k,1)|0;if((o|0)!=0){c[d+(l<<2)>>2]=vc(o,1,5)|0;u_(o);if((c[d+(l<<2)>>2]|0)==0){n=2571;break}}else{c[d+(l<<2)>>2]=0}k=k+1|0;l=l+1|0}do{if((n|0)==2571){f=65}else if((n|0)==2575){o=u4(j,56832,5)|0;if((o|0)!=0){if((c[e+12>>2]|0)==0){u_(o);f=65;break}l=0;while(1){if(l>>>0>=6){break}c[h+(l<<2)>>2]=0;l=l+1|0}m=vb(o,1)|0;u_(o);if((m|0)==0){f=65;break}f=cN[c[e+12>>2]&63](m,h|0)|0;tQ(m);if((f|0)!=0){break}l=0;while(1){if(l>>>0>=6){break}if((c[d+(l<<2)>>2]|0)!=0){r9(c[h+(l<<2)>>2]|0)}else{c[d+(l<<2)>>2]=c[h+(l<<2)>>2]}l=l+1|0}}k=b;l=0;while(1){if((a[k]|0)==0){n=2601;break}if((c[d+(l<<2)>>2]|0)==0){n=2598;break}k=k+1|0;l=l+1|0}if((n|0)==2601){break}else if((n|0)==2598){f=68;break}}}while(0);if((f|0)==0){p=f;i=g;return p|0}k=b;l=0;while(1){if((a[k]|0)==0){break}if((c[d+(l<<2)>>2]|0)!=0){tQ(c[d+(l<<2)>>2]|0)}k=k+1|0;l=l+1|0}p=f;i=g;return p|0}function ot(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;a=b;b=c[d+4>>2]|0;e=Al(a|0,c[d>>2]|0)|0;while(1){if((e|0)!=0){f=(c[b>>2]|0)!=0}else{f=0}if(!f){break}d=b;b=d+4|0;e=Al(a|0,c[d>>2]|0)|0}return((e|0)!=0^1)&1|0}function ou(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;tb(70280,120,87584,0,56664);return 69}function ov(a,b){a=a|0;b=b|0;tb(70280,129,87728,0,56664);return 69}function ow(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;tb(70280,142,87648,0,56664);return 69}function ox(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;tb(70280,155,87712,0,56664);return 69}function oy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;tb(70280,167,87552,0,56664);return 69}function oz(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;tb(70280,182,87536,0,56664);return 69}function oA(a,b){a=a|0;b=b|0;tb(70280,191,87568,0,56664);return 0}function oB(a,b,c){a=a|0;b=b|0;c=c|0;return oE(a,b,c,1)|0}function oC(b,c,f){b=b|0;c=c|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;g=c;c=f;f=b;b=0;h=0;i=0;j=0;b=((b&65535)<<8|(d[c+1|0]|0))&65535;b=((b&65535)<<8|(d[c|0]|0))&65535;h=((h&65535)<<8|(d[c+3|0]|0))&65535;h=((h&65535)<<8|(d[c+2|0]|0))&65535;i=((i&65535)<<8|(d[c+5|0]|0))&65535;i=((i&65535)<<8|(d[c+4|0]|0))&65535;j=((j&65535)<<8|(d[c+7|0]|0))&65535;j=((j&65535)<<8|(d[c+6|0]|0))&65535;c=0;while(1){if((c|0)>=16){break}k=c<<2;b=(b&65535)+((h&65535&~(j&65535))+(i&65535&(j&65535))+(e[f+(k<<1)>>1]|0))&65535;b=((b&65535)<<1|(b&65535)>>15)&65535;h=(h&65535)+((i&65535&~(b&65535))+(j&65535&(b&65535))+(e[f+(k+1<<1)>>1]|0))&65535;h=((h&65535)<<2|(h&65535)>>14)&65535;i=(i&65535)+((j&65535&~(h&65535))+(b&65535&(h&65535))+(e[f+(k+2<<1)>>1]|0))&65535;i=((i&65535)<<3|(i&65535)>>13)&65535;j=(j&65535)+((b&65535&~(i&65535))+(h&65535&(i&65535))+(e[f+(k+3<<1)>>1]|0))&65535;j=((j&65535)<<5|(j&65535)>>11)&65535;if((c|0)==4){l=2631}else{if((c|0)==10){l=2631}}if((l|0)==2631){l=0;b=(b&65535)+(e[f+((j&63)<<1)>>1]|0)&65535;h=(h&65535)+(e[f+((b&63)<<1)>>1]|0)&65535;i=(i&65535)+(e[f+((h&63)<<1)>>1]|0)&65535;j=(j&65535)+(e[f+((i&63)<<1)>>1]|0)&65535}c=c+1|0}a[g|0]=b&65535&255;a[g+1|0]=(b&65535)>>8&255;a[g+2|0]=h&65535&255;a[g+3|0]=(h&65535)>>8&255;a[g+4|0]=i&65535&255;a[g+5|0]=(i&65535)>>8&255;a[g+6|0]=j&65535&255;a[g+7|0]=(j&65535)>>8&255;return}function oD(b,c,f){b=b|0;c=c|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;g=c;c=f;f=b;b=0;h=0;i=0;j=0;b=((b&65535)<<8|(d[c+1|0]|0))&65535;b=((b&65535)<<8|(d[c|0]|0))&65535;h=((h&65535)<<8|(d[c+3|0]|0))&65535;h=((h&65535)<<8|(d[c+2|0]|0))&65535;i=((i&65535)<<8|(d[c+5|0]|0))&65535;i=((i&65535)<<8|(d[c+4|0]|0))&65535;j=((j&65535)<<8|(d[c+7|0]|0))&65535;j=((j&65535)<<8|(d[c+6|0]|0))&65535;c=15;while(1){if((c|0)<0){break}k=c<<2;j=((j&65535)>>5|(j&65535)<<11)&65535;j=(j&65535)-((b&65535&~(i&65535))+(h&65535&(i&65535))+(e[f+(k+3<<1)>>1]|0))&65535;i=((i&65535)>>3|(i&65535)<<13)&65535;i=(i&65535)-((j&65535&~(h&65535))+(b&65535&(h&65535))+(e[f+(k+2<<1)>>1]|0))&65535;h=((h&65535)>>2|(h&65535)<<14)&65535;h=(h&65535)-((i&65535&~(b&65535))+(j&65535&(b&65535))+(e[f+(k+1<<1)>>1]|0))&65535;b=((b&65535)>>1|(b&65535)<<15)&65535;b=(b&65535)-((h&65535&~(j&65535))+(i&65535&(j&65535))+(e[f+(k<<1)>>1]|0))&65535;if((c|0)==5){l=2639}else{if((c|0)==11){l=2639}}if((l|0)==2639){l=0;j=(j&65535)-(e[f+((i&63)<<1)>>1]|0)&65535;i=(i&65535)-(e[f+((h&63)<<1)>>1]|0)&65535;h=(h&65535)-(e[f+((b&63)<<1)>>1]|0)&65535;b=(b&65535)-(e[f+((j&63)<<1)>>1]|0)&65535}c=c-1|0}a[g|0]=b&65535&255;a[g+1|0]=(b&65535)>>8&255;a[g+2|0]=h&65535&255;a[g+3|0]=(h&65535)>>8&255;a[g+4|0]=i&65535&255;a[g+5|0]=(i&65535)>>8&255;a[g+6|0]=j&65535&255;a[g+7|0]=(j&65535)>>8&255;return}function oE(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0;j=i;k=f;f=g;g=h;h=e;e=f<<3;if((c[30532]|0)==0){c[30532]=1;c[30530]=oF()|0;if((c[30530]|0)!=0){uj(76472,(l=i,i=i+8|0,c[l>>2]=c[30530],l)|0);i=l}}if((c[30530]|0)!=0){m=50;n=m;i=j;return n|0}if(f>>>0<5){m=44;n=m;i=j;return n|0}l=h|0;o=0;while(1){if(o>>>0>=f>>>0){break}a[l+o|0]=a[k+o|0]|0;o=o+1|0}o=f;while(1){if(o>>>0>=128){break}a[l+o|0]=a[29616+((d[l+(o-f)|0]|0)+(d[l+(o-1)|0]|0)&255)|0]|0;o=o+1|0}a[l|0]=a[29616+(d[l|0]|0)|0]|0;if((g|0)!=0){g=e+7>>3;o=128-g|0;f=a[29616+((d[l+o|0]|0)&255>>(7&-e))|0]|0;a[l+o|0]=f;while(1){e=o;o=e-1|0;if((e|0)==0){break}f=a[29616+(f&255^(d[l+(o+g)|0]|0))|0]|0;a[l+o|0]=f}}o=0;while(1){if(o>>>0>=64){break}b[h+(o<<1)>>1]=(a[l+(o<<1)|0]&255|(a[l+((o<<1)+1)|0]&255)<<8)&65535;o=o+1|0}m=0;n=m;i=j;return n|0}function oF(){var a=0,b=0,c=0,d=0,e=0;a=i;i=i+144|0;b=a|0;c=a+128|0;oE(b,122168,16,0)|0;oC(b,c|0,122160);if((Af(c|0,7344,8)|0)!=0){d=70160;e=d;i=a;return e|0}oE(b,122168,16,0)|0;oD(b,c|0,c|0);if((Af(c|0,122160,8)|0)!=0){d=66800;e=d;i=a;return e|0}oE(b,6480,16,0)|0;oC(b,c|0,122152);if((Af(c|0,7296,8)|0)!=0){d=64208;e=d;i=a;return e|0}oE(b,6480,16,0)|0;oD(b,c|0,c|0);if((Af(c|0,122152,8)|0)!=0){d=62576;e=d;i=a;return e|0}oE(b,6400,16,0)|0;oC(b,c|0,6288);if((Af(c|0,7256,8)|0)!=0){d=61160;e=d;i=a;return e|0}oE(b,6400,16,0)|0;oD(b,c|0,c|0);if((Af(c|0,6288,8)|0)!=0){d=59392;e=d;i=a;return e|0}else{d=0;e=d;i=a;return e|0}return 0}function oG(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=c;c=g;g=b;b=e;e=f;while(1){if((c|0)==0){break}oH(g,h,h);f=h;i=0;while(1){if((i|0)>=16){break}j=e;e=j+1|0;k=f;f=k+1|0;l=((d[k]|0)^(d[j]|0))&255;a[k]=l;k=b;b=k+1|0;a[k]=l;i=i+1|0}c=c-1|0}up(56);return}function oH(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=b;b=e;e=f;f=c[j+480>>2]|0;c[h>>2]=c[e>>2]^c[j>>2];c[h+4>>2]=c[e+4>>2]^c[j+4>>2];c[h+8>>2]=c[e+8>>2]^c[j+8>>2];c[h+12>>2]=c[e+12>>2]^c[j+12>>2];c[b>>2]=c[99880+((d[h|0]|0)<<2)>>2]^c[98856+((d[h+5|0]|0)<<2)>>2]^c[97832+((d[h+10|0]|0)<<2)>>2]^c[96808+((d[h+15|0]|0)<<2)>>2];c[b+4>>2]=c[99880+((d[h+4|0]|0)<<2)>>2]^c[98856+((d[h+9|0]|0)<<2)>>2]^c[97832+((d[h+14|0]|0)<<2)>>2]^c[96808+((d[h+3|0]|0)<<2)>>2];c[b+8>>2]=c[99880+((d[h+8|0]|0)<<2)>>2]^c[98856+((d[h+13|0]|0)<<2)>>2]^c[97832+((d[h+2|0]|0)<<2)>>2]^c[96808+((d[h+7|0]|0)<<2)>>2];c[b+12>>2]=c[99880+((d[h+12|0]|0)<<2)>>2]^c[98856+((d[h+1|0]|0)<<2)>>2]^c[97832+((d[h+6|0]|0)<<2)>>2]^c[96808+((d[h+11|0]|0)<<2)>>2];e=1;while(1){if((e|0)>=(f-1|0)){break}c[h>>2]=c[b>>2]^c[j+(e<<4)>>2];c[h+4>>2]=c[b+4>>2]^c[j+(e<<4)+4>>2];c[h+8>>2]=c[b+8>>2]^c[j+(e<<4)+8>>2];c[h+12>>2]=c[b+12>>2]^c[j+(e<<4)+12>>2];c[b>>2]=c[99880+((d[h|0]|0)<<2)>>2]^c[98856+((d[h+5|0]|0)<<2)>>2]^c[97832+((d[h+10|0]|0)<<2)>>2]^c[96808+((d[h+15|0]|0)<<2)>>2];c[b+4>>2]=c[99880+((d[h+4|0]|0)<<2)>>2]^c[98856+((d[h+9|0]|0)<<2)>>2]^c[97832+((d[h+14|0]|0)<<2)>>2]^c[96808+((d[h+3|0]|0)<<2)>>2];c[b+8>>2]=c[99880+((d[h+8|0]|0)<<2)>>2]^c[98856+((d[h+13|0]|0)<<2)>>2]^c[97832+((d[h+2|0]|0)<<2)>>2]^c[96808+((d[h+7|0]|0)<<2)>>2];c[b+12>>2]=c[99880+((d[h+12|0]|0)<<2)>>2]^c[98856+((d[h+1|0]|0)<<2)>>2]^c[97832+((d[h+6|0]|0)<<2)>>2]^c[96808+((d[h+11|0]|0)<<2)>>2];e=e+1|0}c[h>>2]=c[b>>2]^c[j+(f-1<<4)>>2];c[h+4>>2]=c[b+4>>2]^c[j+(f-1<<4)+4>>2];c[h+8>>2]=c[b+8>>2]^c[j+(f-1<<4)+8>>2];c[h+12>>2]=c[b+12>>2]^c[j+(f-1<<4)+12>>2];a[b|0]=a[99881+((d[h|0]|0)<<2)|0]|0;a[b+1|0]=a[99881+((d[h+5|0]|0)<<2)|0]|0;a[b+2|0]=a[99881+((d[h+10|0]|0)<<2)|0]|0;a[b+3|0]=a[99881+((d[h+15|0]|0)<<2)|0]|0;a[b+4|0]=a[99881+((d[h+4|0]|0)<<2)|0]|0;a[b+5|0]=a[99881+((d[h+9|0]|0)<<2)|0]|0;a[b+6|0]=a[99881+((d[h+14|0]|0)<<2)|0]|0;a[b+7|0]=a[99881+((d[h+3|0]|0)<<2)|0]|0;a[b+8|0]=a[99881+((d[h+8|0]|0)<<2)|0]|0;a[b+9|0]=a[99881+((d[h+13|0]|0)<<2)|0]|0;a[b+10|0]=a[99881+((d[h+2|0]|0)<<2)|0]|0;a[b+11|0]=a[99881+((d[h+7|0]|0)<<2)|0]|0;a[b+12|0]=a[99881+((d[h+12|0]|0)<<2)|0]|0;a[b+13|0]=a[99881+((d[h+1|0]|0)<<2)|0]|0;a[b+14|0]=a[99881+((d[h+6|0]|0)<<2)|0]|0;a[b+15|0]=a[99881+((d[h+11|0]|0)<<2)|0]|0;h=b;c[h>>2]=c[h>>2]^c[j+(f<<4)>>2];h=b+4|0;c[h>>2]=c[h>>2]^c[j+(f<<4)+4>>2];h=b+8|0;c[h>>2]=c[h>>2]^c[j+(f<<4)+8>>2];h=b+12|0;c[h>>2]=c[h>>2]^c[j+(f<<4)+12>>2];i=g;return}function oI(b,c,e,f,g,h){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0;i=c;c=g;g=h;h=b;b=e;e=f;while(1){if((c|0)==0){break}f=i;j=0;while(1){if((j|0)>=16){break}k=f;f=k+1|0;a[b+j|0]=((d[e+j|0]|0)^(d[k]|0))&255;j=j+1|0}oJ(h,b,b);j=i;f=b;Ac(j|0,f|0,16)|0;e=e+16|0;if((g|0)==0){b=b+16|0}c=c-1|0}up(56);return}function oJ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+32|0;e=d|0;f=d+16|0;g=a;a=b;b=c;do{if((b&15|0)==0){if((a&15|0)!=0){break}oH(g,a,b);i=d;return}}while(0);c=e;h=b;Ac(c|0,h|0,16)|0;oH(g,f|0,e|0);e=a;a=f;Ac(e|0,a|0,16)|0;i=d;return}function oK(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+16|0;j=h|0;k=c;c=g;g=b;b=e;e=f;while(1){if((c|0)==0){break}oH(g,j|0,k);f=j|0;l=0;while(1){if((l|0)>=16){break}m=e;e=m+1|0;n=f;f=n+1|0;o=(d[n]^d[m])&255;a[n]=o;n=b;b=n+1|0;a[n]=o;l=l+1|0}l=16;while(1){if((l|0)<=0){break}f=k+(l-1)|0;a[f]=(a[f]|0)+1&255;if((a[k+(l-1)|0]|0)!=0){p=2735;break}l=l-1|0}if((p|0)==2735){p=0}c=c-1|0}up(56);i=h;return}function oL(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=c;c=g;g=b;b=e;e=f;while(1){if((c|0)==0){break}oH(g,h,h);f=h;i=0;while(1){if((i|0)>=16){break}j=e;e=j+1|0;k=a[j]|0;j=b;b=j+1|0;a[j]=((d[f]|0)^k&255)&255;j=f;f=j+1|0;a[j]=k;i=i+1|0}c=c-1|0}up(56);return}function oM(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+16|0;j=h|0;k=c;c=g;g=b;b=e;e=f;while(1){if((c|0)==0){break}f=j;l=e;Ac(f|0,l|0,16)|0;oN(g,b,e);l=k;f=0;while(1){if((f|0)>=16){break}m=l;l=m+1|0;n=b+f|0;a[n]=((d[n]|0)^(d[m]|0))&255;f=f+1|0}f=k;l=j;Ac(f|0,l|0,16)|0;e=e+16|0;b=b+16|0;c=c-1|0}up(88);i=h;return}function oN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;f=e|0;g=e+16|0;h=a;a=b;b=d;if((c[h+484>>2]|0)==0){o$(h);up(64);c[h+484>>2]=1}do{if((b&15|0)==0){if((a&15|0)!=0){break}o0(h,a,b);i=e;return}}while(0);d=f;j=b;Ac(d|0,j|0,16)|0;o0(h,g|0,f|0);f=a;a=g;Ac(f|0,a|0,16)|0;i=e;return}function oO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=oZ(a,b,c)|0;up(164);return d|0}function oP(a,b,c){a=a|0;b=b|0;c=c|0;oJ(a,b,c);up(64);return}function oQ(a,b,c){a=a|0;b=b|0;c=c|0;oN(a,b,c);up(64);return}function oR(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=b;b=c;c=a;if((c|0)==8){e=oT(d,b)|0}else if((c|0)==7){e=oS(d,b)|0}else if((c|0)==9){e=oU(d,b)|0}else{e=12}return e|0}function oS(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=b;b=77472;d=oX()|0;L3570:do{if((d|0)==0){do{if((a|0)!=0){b=72360;d=oY(2)|0;if((d|0)!=0){break L3570}b=71840;d=oY(5)|0;if((d|0)!=0){break L3570}else{break}}}while(0);e=0;f=e;return f|0}}while(0);if((c|0)!=0){cP[c&15](76568,7,b,d)}e=50;f=e;return f|0}function oT(a,b){a=a|0;b=b|0;var c=0,d=0;a=b;b=oW()|0;if((b|0)==0){c=0;d=c;return d|0}if((a|0)!=0){cP[a&15](76568,8,77472,b)}c=50;d=c;return d|0}function oU(a,b){a=a|0;b=b|0;var c=0,d=0;a=b;b=oV()|0;if((b|0)==0){c=0;d=c;return d|0}if((a|0)!=0){cP[a&15](76568,9,77472,b)}c=50;d=c;return d|0}function oV(){var a=0,b=0,c=0,d=0,e=0;a=i;i=i+504|0;b=a|0;c=a+488|0;oO(b,7416,32)|0;oP(b,c|0,7400);if((Af(c|0,7448,16)|0)!=0){d=75912;e=d;i=a;return e|0}oQ(b,c|0,c|0);if((Af(c|0,7400,16)|0)!=0){d=74896;e=d;i=a;return e|0}else{d=0;e=d;i=a;return e|0}return 0}function oW(){var a=0,b=0,c=0,d=0,e=0;a=i;i=i+504|0;b=a|0;c=a+488|0;oO(b,7480,24)|0;oP(b,c|0,7464);if((Af(c|0,7504,16)|0)!=0){d=74144;e=d;i=a;return e|0}oQ(b,c|0,c|0);if((Af(c|0,7464,16)|0)!=0){d=73568;e=d;i=a;return e|0}else{d=0;e=d;i=a;return e|0}return 0}function oX(){var a=0,b=0,c=0,d=0,e=0;a=i;i=i+504|0;b=a|0;c=a+488|0;oO(b,7536,16)|0;oP(b,c|0,7520);if((Af(c|0,7552,16)|0)!=0){d=68408;e=d;i=a;return e|0}oQ(b,c|0,c|0);if((Af(c|0,7520,16)|0)!=0){d=67968;e=d;i=a;return e|0}else{d=0;e=d;i=a;return e|0}return 0}function oY(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;i=i+360|0;d=b|0;e=b+328|0;f=b+344|0;g=b+352|0;h=a;a=d;Ac(a|0,6928,328)|0;c[f>>2]=0;c[g>>2]=0;a=0;while(1){if(a>>>0>=2){break}if((c[d+(a*164|0)>>2]|0)==(h|0)){j=2840;break}a=a+1|0}if((a|0)==2){kW(c[f>>2]|0);kW(c[g>>2]|0);k=71520;l=k;i=b;return l|0}h=kR(f,7,c[d+(a*164|0)>>2]|0,0)|0;if((h|0)!=0){kW(c[f>>2]|0);kW(c[g>>2]|0);k=70920;l=k;i=b;return l|0}h=kR(g,7,c[d+(a*164|0)>>2]|0,0)|0;if((h|0)!=0){kW(c[f>>2]|0);kW(c[g>>2]|0);k=70920;l=k;i=b;return l|0}h=k$(c[f>>2]|0,d+(a*164|0)+4|0,16)|0;if((h|0)==0){h=k$(c[g>>2]|0,d+(a*164|0)+4|0,16)|0}if((h|0)!=0){kW(c[f>>2]|0);kW(c[g>>2]|0);k=70592;l=k;i=b;return l|0}h=k1(c[f>>2]|0,d+(a*164|0)+20|0,16)|0;if((h|0)==0){h=k1(c[g>>2]|0,d+(a*164|0)+20|0,16)|0}if((h|0)!=0){kW(c[f>>2]|0);kW(c[g>>2]|0);k=70216;l=k;i=b;return l|0}m=0;while(1){if(m>>>0>=4){j=2878;break}h=kX(c[f>>2]|0,e|0,16,d+(a*164|0)+36+(m<<5)|0,16)|0;if((h|0)!=0){j=2865;break}if((Af(e|0,d+(a*164|0)+36+(m<<5)+16|0,16)|0)!=0){j=2868;break}h=kZ(c[g>>2]|0,e|0,16,d+(a*164|0)+36+(m<<5)+16|0,16)|0;if((h|0)!=0){j=2871;break}if((Af(e|0,d+(a*164|0)+36+(m<<5)|0,16)|0)!=0){j=2874;break}m=m+1|0}if((j|0)==2878){kW(c[f>>2]|0);kW(c[g>>2]|0);k=0;l=k;i=b;return l|0}else if((j|0)==2874){kW(c[f>>2]|0);kW(c[g>>2]|0);k=69064;l=k;i=b;return l|0}else if((j|0)==2868){kW(c[f>>2]|0);kW(c[g>>2]|0);k=69576;l=k;i=b;return l|0}else if((j|0)==2865){kW(c[f>>2]|0);kW(c[g>>2]|0);k=69888;l=k;i=b;return l|0}else if((j|0)==2871){kW(c[f>>2]|0);kW(c[g>>2]|0);k=69248;l=k;i=b;return l|0}return 0}function oZ(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+64|0;h=g|0;j=g+32|0;k=b;b=e;e=f;f=0;do{if((s5()|0)==0){if((c[30744]|0)!=0){break}c[30744]=1;c[30738]=o_()|0;if((c[30738]|0)!=0){uj(67744,(l=i,i=i+8|0,c[l>>2]=c[30738],l)|0);i=l}}}while(0);if((c[30738]|0)!=0){m=50;n=m;i=g;return n|0}c[k+484>>2]=0;if((e|0)==16){o=10;p=4}else{do{if((e|0)==24){o=12;p=6}else{if((e|0)==32){o=14;p=8;break}else{m=44;n=m;i=g;return n|0}}}while(0)}c[k+480>>2]=o;l=0;while(1){if(l>>>0>=e>>>0){break}a[h+(l>>2<<2)+(l&3)|0]=a[b+l|0]|0;l=l+1|0}l=p-1|0;while(1){if((l|0)<0){break}c[j+(l<<2)>>2]=c[h+(l<<2)>>2];l=l-1|0}h=0;b=0;l=0;while(1){if((l|0)<(p|0)){q=(h|0)<(o+1|0)}else{q=0}if(!q){break}while(1){if((l|0)<(p|0)){r=(b|0)<4}else{r=0}if(!r){break}c[k+(h<<4)+(b<<2)>>2]=c[j+(l<<2)>>2];l=l+1|0;b=b+1|0}if((b|0)==4){h=h+1|0;b=0}}while(1){if((h|0)>=(o+1|0)){break}r=j|0;a[r]=((d[r]|0)^(d[105280+(d[j+(p-1<<2)+1|0]|0)|0]|0))&255;r=j+1|0;a[r]=((d[r]|0)^(d[105280+(d[j+(p-1<<2)+2|0]|0)|0]|0))&255;r=j+2|0;a[r]=((d[r]|0)^(d[105280+(d[j+(p-1<<2)+3|0]|0)|0]|0))&255;r=j+3|0;a[r]=((d[r]|0)^(d[105280+(d[j+(p-1<<2)|0]|0)|0]|0))&255;r=f;f=r+1|0;q=j|0;a[q]=((d[q]|0)^c[29960+(r<<2)>>2])&255;if((p|0)!=8){l=1;while(1){if((l|0)>=(p|0)){break}r=j+(l<<2)|0;c[r>>2]=c[r>>2]^c[j+(l-1<<2)>>2];l=l+1|0}}else{l=1;while(1){if((l|0)>=((p|0)/2|0|0)){break}r=j+(l<<2)|0;c[r>>2]=c[r>>2]^c[j+(l-1<<2)>>2];l=l+1|0}r=j+(((p|0)/2|0)<<2)|0;a[r]=((d[r]|0)^(d[105280+(d[j+(((p|0)/2|0)-1<<2)|0]|0)|0]|0))&255;r=j+(((p|0)/2|0)<<2)+1|0;a[r]=((d[r]|0)^(d[105280+(d[j+(((p|0)/2|0)-1<<2)+1|0]|0)|0]|0))&255;r=j+(((p|0)/2|0)<<2)+2|0;a[r]=((d[r]|0)^(d[105280+(d[j+(((p|0)/2|0)-1<<2)+2|0]|0)|0]|0))&255;r=j+(((p|0)/2|0)<<2)+3|0;a[r]=((d[r]|0)^(d[105280+(d[j+(((p|0)/2|0)-1<<2)+3|0]|0)|0]|0))&255;l=((p|0)/2|0)+1|0;while(1){if((l|0)>=(p|0)){break}r=j+(l<<2)|0;c[r>>2]=c[r>>2]^c[j+(l-1<<2)>>2];l=l+1|0}}l=0;while(1){if((l|0)<(p|0)){s=(h|0)<(o+1|0)}else{s=0}if(!s){break}while(1){if((l|0)<(p|0)){t=(b|0)<4}else{t=0}if(!t){break}c[k+(h<<4)+(b<<2)>>2]=c[j+(l<<2)>>2];l=l+1|0;b=b+1|0}if((b|0)==4){h=h+1|0;b=0}}}m=0;n=m;i=g;return n|0}function o_(){var a=0,b=0,c=0,d=0,e=0;a=oX()|0;b=a;do{if((a|0)==0){c=oW()|0;b=c;if((c|0)!=0){break}c=oV()|0;b=c;if((c|0)!=0){break}d=b;e=d;return e|0}}while(0);d=b;e=d;return e|0}function o$(a){a=a|0;var b=0,e=0,f=0;b=i;i=i+8|0;e=b|0;f=a;a=0;while(1){if((a|0)>=15){break}c[f+240+(a<<4)>>2]=c[f+(a<<4)>>2];c[f+240+(a<<4)+4>>2]=c[f+(a<<4)+4>>2];c[f+240+(a<<4)+8>>2]=c[f+(a<<4)+8>>2];c[f+240+(a<<4)+12>>2]=c[f+(a<<4)+12>>2];a=a+1|0}a=1;while(1){if((a|0)>=(c[f+480>>2]|0)){break}c[e>>2]=f+240+(a<<4);c[c[e>>2]>>2]=c[91688+((d[c[e>>2]|0]|0)<<2)>>2]^c[90664+((d[(c[e>>2]|0)+1|0]|0)<<2)>>2]^c[89640+((d[(c[e>>2]|0)+2|0]|0)<<2)>>2]^c[88616+((d[(c[e>>2]|0)+3|0]|0)<<2)>>2];c[e>>2]=f+240+(a<<4)+4;c[c[e>>2]>>2]=c[91688+((d[c[e>>2]|0]|0)<<2)>>2]^c[90664+((d[(c[e>>2]|0)+1|0]|0)<<2)>>2]^c[89640+((d[(c[e>>2]|0)+2|0]|0)<<2)>>2]^c[88616+((d[(c[e>>2]|0)+3|0]|0)<<2)>>2];c[e>>2]=f+240+(a<<4)+8;c[c[e>>2]>>2]=c[91688+((d[c[e>>2]|0]|0)<<2)>>2]^c[90664+((d[(c[e>>2]|0)+1|0]|0)<<2)>>2]^c[89640+((d[(c[e>>2]|0)+2|0]|0)<<2)>>2]^c[88616+((d[(c[e>>2]|0)+3|0]|0)<<2)>>2];c[e>>2]=f+240+(a<<4)+12;c[c[e>>2]>>2]=c[91688+((d[c[e>>2]|0]|0)<<2)>>2]^c[90664+((d[(c[e>>2]|0)+1|0]|0)<<2)>>2]^c[89640+((d[(c[e>>2]|0)+2|0]|0)<<2)>>2]^c[88616+((d[(c[e>>2]|0)+3|0]|0)<<2)>>2];a=a+1|0}i=b;return}function o0(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=b;b=e;e=f;f=c[j+480>>2]|0;c[h>>2]=c[e>>2]^c[j+240+(f<<4)>>2];c[h+4>>2]=c[e+4>>2]^c[j+240+(f<<4)+4>>2];c[h+8>>2]=c[e+8>>2]^c[j+240+(f<<4)+8>>2];c[h+12>>2]=c[e+12>>2]^c[j+240+(f<<4)+12>>2];c[b>>2]=c[95784+((d[h|0]|0)<<2)>>2]^c[94760+((d[h+13|0]|0)<<2)>>2]^c[93736+((d[h+10|0]|0)<<2)>>2]^c[92712+((d[h+7|0]|0)<<2)>>2];c[b+4>>2]=c[95784+((d[h+4|0]|0)<<2)>>2]^c[94760+((d[h+1|0]|0)<<2)>>2]^c[93736+((d[h+14|0]|0)<<2)>>2]^c[92712+((d[h+11|0]|0)<<2)>>2];c[b+8>>2]=c[95784+((d[h+8|0]|0)<<2)>>2]^c[94760+((d[h+5|0]|0)<<2)>>2]^c[93736+((d[h+2|0]|0)<<2)>>2]^c[92712+((d[h+15|0]|0)<<2)>>2];c[b+12>>2]=c[95784+((d[h+12|0]|0)<<2)>>2]^c[94760+((d[h+9|0]|0)<<2)>>2]^c[93736+((d[h+6|0]|0)<<2)>>2]^c[92712+((d[h+3|0]|0)<<2)>>2];e=f-1|0;while(1){if((e|0)<=1){break}c[h>>2]=c[b>>2]^c[j+240+(e<<4)>>2];c[h+4>>2]=c[b+4>>2]^c[j+240+(e<<4)+4>>2];c[h+8>>2]=c[b+8>>2]^c[j+240+(e<<4)+8>>2];c[h+12>>2]=c[b+12>>2]^c[j+240+(e<<4)+12>>2];c[b>>2]=c[95784+((d[h|0]|0)<<2)>>2]^c[94760+((d[h+13|0]|0)<<2)>>2]^c[93736+((d[h+10|0]|0)<<2)>>2]^c[92712+((d[h+7|0]|0)<<2)>>2];c[b+4>>2]=c[95784+((d[h+4|0]|0)<<2)>>2]^c[94760+((d[h+1|0]|0)<<2)>>2]^c[93736+((d[h+14|0]|0)<<2)>>2]^c[92712+((d[h+11|0]|0)<<2)>>2];c[b+8>>2]=c[95784+((d[h+8|0]|0)<<2)>>2]^c[94760+((d[h+5|0]|0)<<2)>>2]^c[93736+((d[h+2|0]|0)<<2)>>2]^c[92712+((d[h+15|0]|0)<<2)>>2];c[b+12>>2]=c[95784+((d[h+12|0]|0)<<2)>>2]^c[94760+((d[h+9|0]|0)<<2)>>2]^c[93736+((d[h+6|0]|0)<<2)>>2]^c[92712+((d[h+3|0]|0)<<2)>>2];e=e-1|0}c[h>>2]=c[b>>2]^c[j+256>>2];c[h+4>>2]=c[b+4>>2]^c[j+260>>2];c[h+8>>2]=c[b+8>>2]^c[j+264>>2];c[h+12>>2]=c[b+12>>2]^c[j+268>>2];a[b|0]=a[105024+(d[h|0]|0)|0]|0;a[b+1|0]=a[105024+(d[h+13|0]|0)|0]|0;a[b+2|0]=a[105024+(d[h+10|0]|0)|0]|0;a[b+3|0]=a[105024+(d[h+7|0]|0)|0]|0;a[b+4|0]=a[105024+(d[h+4|0]|0)|0]|0;a[b+5|0]=a[105024+(d[h+1|0]|0)|0]|0;a[b+6|0]=a[105024+(d[h+14|0]|0)|0]|0;a[b+7|0]=a[105024+(d[h+11|0]|0)|0]|0;a[b+8|0]=a[105024+(d[h+8|0]|0)|0]|0;a[b+9|0]=a[105024+(d[h+5|0]|0)|0]|0;a[b+10|0]=a[105024+(d[h+2|0]|0)|0]|0;a[b+11|0]=a[105024+(d[h+15|0]|0)|0]|0;a[b+12|0]=a[105024+(d[h+12|0]|0)|0]|0;a[b+13|0]=a[105024+(d[h+9|0]|0)|0]|0;a[b+14|0]=a[105024+(d[h+6|0]|0)|0]|0;a[b+15|0]=a[105024+(d[h+3|0]|0)|0]|0;h=b;c[h>>2]=c[h>>2]^c[j+240>>2];h=b+4|0;c[h>>2]=c[h>>2]^c[j+244>>2];h=b+8|0;c[h>>2]=c[h>>2]^c[j+248>>2];h=b+12|0;c[h>>2]=c[h>>2]^c[j+252>>2];i=g;return}function o1(a){a=a|0;var b=0;b=a;c[b>>2]=1732584193;c[b+4>>2]=-271733879;c[b+8>>2]=-1732584194;c[b+12>>2]=271733878;c[b+16>>2]=-1009589776;c[b+20>>2]=0;c[b+88>>2]=0;return}function o2(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=a;o3(d,a);c[b>>2]=c[d>>2];b=b+4|0;c[b>>2]=c[d+4>>2];b=b+4|0;c[b>>2]=c[d+8>>2];b=b+4|0;c[b>>2]=c[d+12>>2];b=b+4|0;c[b>>2]=c[d+16>>2];b=b+4|0;return}function o3(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+64|0;e=d|0;f=a;a=e;g=b;Ac(a|0,g|0,64)|0;g=c[f>>2]|0;a=c[f+4>>2]|0;b=c[f+8>>2]|0;h=c[f+12>>2]|0;j=c[f+16>>2]|0;k=g+(a^b^h)+(c[e>>2]|0)|0;g=(k<<11|k>>>21)+j|0;b=b<<10|b>>>22;k=j+(g^a^b)+(c[e+4>>2]|0)|0;j=(k<<14|k>>>18)+h|0;a=a<<10|a>>>22;k=h+(j^g^a)+(c[e+8>>2]|0)|0;h=(k<<15|k>>>17)+b|0;g=g<<10|g>>>22;k=b+(h^j^g)+(c[e+12>>2]|0)|0;b=(k<<12|k>>>20)+a|0;j=j<<10|j>>>22;k=a+(b^h^j)+(c[e+16>>2]|0)|0;a=(k<<5|k>>>27)+g|0;h=h<<10|h>>>22;k=g+(a^b^h)+(c[e+20>>2]|0)|0;g=(k<<8|k>>>24)+j|0;b=b<<10|b>>>22;k=j+(g^a^b)+(c[e+24>>2]|0)|0;j=(k<<7|k>>>25)+h|0;a=a<<10|a>>>22;k=h+(j^g^a)+(c[e+28>>2]|0)|0;h=(k<<9|k>>>23)+b|0;g=g<<10|g>>>22;k=b+(h^j^g)+(c[e+32>>2]|0)|0;b=(k<<11|k>>>21)+a|0;j=j<<10|j>>>22;k=a+(b^h^j)+(c[e+36>>2]|0)|0;a=(k<<13|k>>>19)+g|0;h=h<<10|h>>>22;k=g+(a^b^h)+(c[e+40>>2]|0)|0;g=(k<<14|k>>>18)+j|0;b=b<<10|b>>>22;k=j+(g^a^b)+(c[e+44>>2]|0)|0;j=(k<<15|k>>>17)+h|0;a=a<<10|a>>>22;k=h+(j^g^a)+(c[e+48>>2]|0)|0;h=(k<<6|k>>>26)+b|0;g=g<<10|g>>>22;k=b+(h^j^g)+(c[e+52>>2]|0)|0;b=(k<<7|k>>>25)+a|0;j=j<<10|j>>>22;k=a+(b^h^j)+(c[e+56>>2]|0)|0;a=(k<<9|k>>>23)+g|0;h=h<<10|h>>>22;k=g+(a^b^h)+(c[e+60>>2]|0)|0;g=(k<<8|k>>>24)+j|0;b=b<<10|b>>>22;k=j+(g&a|~g&b)+1518500249+(c[e+28>>2]|0)|0;j=(k<<7|k>>>25)+h|0;a=a<<10|a>>>22;k=h+(j&g|~j&a)+1518500249+(c[e+16>>2]|0)|0;h=(k<<6|k>>>26)+b|0;g=g<<10|g>>>22;k=b+(h&j|~h&g)+1518500249+(c[e+52>>2]|0)|0;b=(k<<8|k>>>24)+a|0;j=j<<10|j>>>22;k=a+(b&h|~b&j)+1518500249+(c[e+4>>2]|0)|0;a=(k<<13|k>>>19)+g|0;h=h<<10|h>>>22;k=g+(a&b|~a&h)+1518500249+(c[e+40>>2]|0)|0;g=(k<<11|k>>>21)+j|0;b=b<<10|b>>>22;k=j+(g&a|~g&b)+1518500249+(c[e+24>>2]|0)|0;j=(k<<9|k>>>23)+h|0;a=a<<10|a>>>22;k=h+(j&g|~j&a)+1518500249+(c[e+60>>2]|0)|0;h=(k<<7|k>>>25)+b|0;g=g<<10|g>>>22;k=b+(h&j|~h&g)+1518500249+(c[e+12>>2]|0)|0;b=(k<<15|k>>>17)+a|0;j=j<<10|j>>>22;k=a+(b&h|~b&j)+1518500249+(c[e+48>>2]|0)|0;a=(k<<7|k>>>25)+g|0;h=h<<10|h>>>22;k=g+(a&b|~a&h)+1518500249+(c[e>>2]|0)|0;g=(k<<12|k>>>20)+j|0;b=b<<10|b>>>22;k=j+(g&a|~g&b)+1518500249+(c[e+36>>2]|0)|0;j=(k<<15|k>>>17)+h|0;a=a<<10|a>>>22;k=h+(j&g|~j&a)+1518500249+(c[e+20>>2]|0)|0;h=(k<<9|k>>>23)+b|0;g=g<<10|g>>>22;k=b+(h&j|~h&g)+1518500249+(c[e+8>>2]|0)|0;b=(k<<11|k>>>21)+a|0;j=j<<10|j>>>22;k=a+(b&h|~b&j)+1518500249+(c[e+56>>2]|0)|0;a=(k<<7|k>>>25)+g|0;h=h<<10|h>>>22;k=g+(a&b|~a&h)+1518500249+(c[e+44>>2]|0)|0;g=(k<<13|k>>>19)+j|0;b=b<<10|b>>>22;k=j+(g&a|~g&b)+1518500249+(c[e+32>>2]|0)|0;j=(k<<12|k>>>20)+h|0;a=a<<10|a>>>22;k=h+((j|~g)^a)+1859775393+(c[e+12>>2]|0)|0;h=(k<<11|k>>>21)+b|0;g=g<<10|g>>>22;k=b+((h|~j)^g)+1859775393+(c[e+40>>2]|0)|0;b=(k<<13|k>>>19)+a|0;j=j<<10|j>>>22;k=a+((b|~h)^j)+1859775393+(c[e+56>>2]|0)|0;a=(k<<6|k>>>26)+g|0;h=h<<10|h>>>22;k=g+((a|~b)^h)+1859775393+(c[e+16>>2]|0)|0;g=(k<<7|k>>>25)+j|0;b=b<<10|b>>>22;k=j+((g|~a)^b)+1859775393+(c[e+36>>2]|0)|0;j=(k<<14|k>>>18)+h|0;a=a<<10|a>>>22;k=h+((j|~g)^a)+1859775393+(c[e+60>>2]|0)|0;h=(k<<9|k>>>23)+b|0;g=g<<10|g>>>22;k=b+((h|~j)^g)+1859775393+(c[e+32>>2]|0)|0;b=(k<<13|k>>>19)+a|0;j=j<<10|j>>>22;k=a+((b|~h)^j)+1859775393+(c[e+4>>2]|0)|0;a=(k<<15|k>>>17)+g|0;h=h<<10|h>>>22;k=g+((a|~b)^h)+1859775393+(c[e+8>>2]|0)|0;g=(k<<14|k>>>18)+j|0;b=b<<10|b>>>22;k=j+((g|~a)^b)+1859775393+(c[e+28>>2]|0)|0;j=(k<<8|k>>>24)+h|0;a=a<<10|a>>>22;k=h+((j|~g)^a)+1859775393+(c[e>>2]|0)|0;h=(k<<13|k>>>19)+b|0;g=g<<10|g>>>22;k=b+((h|~j)^g)+1859775393+(c[e+24>>2]|0)|0;b=(k<<6|k>>>26)+a|0;j=j<<10|j>>>22;k=a+((b|~h)^j)+1859775393+(c[e+52>>2]|0)|0;a=(k<<5|k>>>27)+g|0;h=h<<10|h>>>22;k=g+((a|~b)^h)+1859775393+(c[e+44>>2]|0)|0;g=(k<<12|k>>>20)+j|0;b=b<<10|b>>>22;k=j+((g|~a)^b)+1859775393+(c[e+20>>2]|0)|0;j=(k<<7|k>>>25)+h|0;a=a<<10|a>>>22;k=h+((j|~g)^a)+1859775393+(c[e+48>>2]|0)|0;h=(k<<5|k>>>27)+b|0;g=g<<10|g>>>22;k=b+(h&g|j&~g)-1894007588+(c[e+4>>2]|0)|0;b=(k<<11|k>>>21)+a|0;j=j<<10|j>>>22;k=a+(b&j|h&~j)-1894007588+(c[e+36>>2]|0)|0;a=(k<<12|k>>>20)+g|0;h=h<<10|h>>>22;k=g+(a&h|b&~h)-1894007588+(c[e+44>>2]|0)|0;g=(k<<14|k>>>18)+j|0;b=b<<10|b>>>22;k=j+(g&b|a&~b)-1894007588+(c[e+40>>2]|0)|0;j=(k<<15|k>>>17)+h|0;a=a<<10|a>>>22;k=h+(j&a|g&~a)-1894007588+(c[e>>2]|0)|0;h=(k<<14|k>>>18)+b|0;g=g<<10|g>>>22;k=b+(h&g|j&~g)-1894007588+(c[e+32>>2]|0)|0;b=(k<<15|k>>>17)+a|0;j=j<<10|j>>>22;k=a+(b&j|h&~j)-1894007588+(c[e+48>>2]|0)|0;a=(k<<9|k>>>23)+g|0;h=h<<10|h>>>22;k=g+(a&h|b&~h)-1894007588+(c[e+16>>2]|0)|0;g=(k<<8|k>>>24)+j|0;b=b<<10|b>>>22;k=j+(g&b|a&~b)-1894007588+(c[e+52>>2]|0)|0;j=(k<<9|k>>>23)+h|0;a=a<<10|a>>>22;k=h+(j&a|g&~a)-1894007588+(c[e+12>>2]|0)|0;h=(k<<14|k>>>18)+b|0;g=g<<10|g>>>22;k=b+(h&g|j&~g)-1894007588+(c[e+28>>2]|0)|0;b=(k<<5|k>>>27)+a|0;j=j<<10|j>>>22;k=a+(b&j|h&~j)-1894007588+(c[e+60>>2]|0)|0;a=(k<<6|k>>>26)+g|0;h=h<<10|h>>>22;k=g+(a&h|b&~h)-1894007588+(c[e+56>>2]|0)|0;g=(k<<8|k>>>24)+j|0;b=b<<10|b>>>22;k=j+(g&b|a&~b)-1894007588+(c[e+20>>2]|0)|0;j=(k<<6|k>>>26)+h|0;a=a<<10|a>>>22;k=h+(j&a|g&~a)-1894007588+(c[e+24>>2]|0)|0;h=(k<<5|k>>>27)+b|0;g=g<<10|g>>>22;k=b+(h&g|j&~g)-1894007588+(c[e+8>>2]|0)|0;b=(k<<12|k>>>20)+a|0;j=j<<10|j>>>22;k=a+(b^(h|~j))-1454113458+(c[e+16>>2]|0)|0;a=(k<<9|k>>>23)+g|0;h=h<<10|h>>>22;k=g+(a^(b|~h))-1454113458+(c[e>>2]|0)|0;g=(k<<15|k>>>17)+j|0;b=b<<10|b>>>22;k=j+(g^(a|~b))-1454113458+(c[e+20>>2]|0)|0;j=(k<<5|k>>>27)+h|0;a=a<<10|a>>>22;k=h+(j^(g|~a))-1454113458+(c[e+36>>2]|0)|0;h=(k<<11|k>>>21)+b|0;g=g<<10|g>>>22;k=b+(h^(j|~g))-1454113458+(c[e+28>>2]|0)|0;b=(k<<6|k>>>26)+a|0;j=j<<10|j>>>22;k=a+(b^(h|~j))-1454113458+(c[e+48>>2]|0)|0;a=(k<<8|k>>>24)+g|0;h=h<<10|h>>>22;k=g+(a^(b|~h))-1454113458+(c[e+8>>2]|0)|0;g=(k<<13|k>>>19)+j|0;b=b<<10|b>>>22;k=j+(g^(a|~b))-1454113458+(c[e+40>>2]|0)|0;j=(k<<12|k>>>20)+h|0;a=a<<10|a>>>22;k=h+(j^(g|~a))-1454113458+(c[e+56>>2]|0)|0;h=(k<<5|k>>>27)+b|0;g=g<<10|g>>>22;k=b+(h^(j|~g))-1454113458+(c[e+4>>2]|0)|0;b=(k<<12|k>>>20)+a|0;j=j<<10|j>>>22;k=a+(b^(h|~j))-1454113458+(c[e+12>>2]|0)|0;a=(k<<13|k>>>19)+g|0;h=h<<10|h>>>22;k=g+(a^(b|~h))-1454113458+(c[e+32>>2]|0)|0;g=(k<<14|k>>>18)+j|0;b=b<<10|b>>>22;k=j+(g^(a|~b))-1454113458+(c[e+44>>2]|0)|0;j=(k<<11|k>>>21)+h|0;a=a<<10|a>>>22;k=h+(j^(g|~a))-1454113458+(c[e+24>>2]|0)|0;h=(k<<8|k>>>24)+b|0;g=g<<10|g>>>22;k=b+(h^(j|~g))-1454113458+(c[e+60>>2]|0)|0;b=(k<<5|k>>>27)+a|0;j=j<<10|j>>>22;k=a+(b^(h|~j))-1454113458+(c[e+52>>2]|0)|0;a=(k<<6|k>>>26)+g|0;h=h<<10|h>>>22;l=g;m=a;n=b;o=h;p=j;g=c[f>>2]|0;a=c[f+4>>2]|0;b=c[f+8>>2]|0;h=c[f+12>>2]|0;j=c[f+16>>2]|0;k=g+(a^(b|~h))+1352829926+(c[e+20>>2]|0)|0;g=(k<<8|k>>>24)+j|0;b=b<<10|b>>>22;k=j+(g^(a|~b))+1352829926+(c[e+56>>2]|0)|0;j=(k<<9|k>>>23)+h|0;a=a<<10|a>>>22;k=h+(j^(g|~a))+1352829926+(c[e+28>>2]|0)|0;h=(k<<9|k>>>23)+b|0;g=g<<10|g>>>22;k=b+(h^(j|~g))+1352829926+(c[e>>2]|0)|0;b=(k<<11|k>>>21)+a|0;j=j<<10|j>>>22;k=a+(b^(h|~j))+1352829926+(c[e+36>>2]|0)|0;a=(k<<13|k>>>19)+g|0;h=h<<10|h>>>22;k=g+(a^(b|~h))+1352829926+(c[e+8>>2]|0)|0;g=(k<<15|k>>>17)+j|0;b=b<<10|b>>>22;k=j+(g^(a|~b))+1352829926+(c[e+44>>2]|0)|0;j=(k<<15|k>>>17)+h|0;a=a<<10|a>>>22;k=h+(j^(g|~a))+1352829926+(c[e+16>>2]|0)|0;h=(k<<5|k>>>27)+b|0;g=g<<10|g>>>22;k=b+(h^(j|~g))+1352829926+(c[e+52>>2]|0)|0;b=(k<<7|k>>>25)+a|0;j=j<<10|j>>>22;k=a+(b^(h|~j))+1352829926+(c[e+24>>2]|0)|0;a=(k<<7|k>>>25)+g|0;h=h<<10|h>>>22;k=g+(a^(b|~h))+1352829926+(c[e+60>>2]|0)|0;g=(k<<8|k>>>24)+j|0;b=b<<10|b>>>22;k=j+(g^(a|~b))+1352829926+(c[e+32>>2]|0)|0;j=(k<<11|k>>>21)+h|0;a=a<<10|a>>>22;k=h+(j^(g|~a))+1352829926+(c[e+4>>2]|0)|0;h=(k<<14|k>>>18)+b|0;g=g<<10|g>>>22;k=b+(h^(j|~g))+1352829926+(c[e+40>>2]|0)|0;b=(k<<14|k>>>18)+a|0;j=j<<10|j>>>22;k=a+(b^(h|~j))+1352829926+(c[e+12>>2]|0)|0;a=(k<<12|k>>>20)+g|0;h=h<<10|h>>>22;k=g+(a^(b|~h))+1352829926+(c[e+48>>2]|0)|0;g=(k<<6|k>>>26)+j|0;b=b<<10|b>>>22;k=j+(g&b|a&~b)+1548603684+(c[e+24>>2]|0)|0;j=(k<<9|k>>>23)+h|0;a=a<<10|a>>>22;k=h+(j&a|g&~a)+1548603684+(c[e+44>>2]|0)|0;h=(k<<13|k>>>19)+b|0;g=g<<10|g>>>22;k=b+(h&g|j&~g)+1548603684+(c[e+12>>2]|0)|0;b=(k<<15|k>>>17)+a|0;j=j<<10|j>>>22;k=a+(b&j|h&~j)+1548603684+(c[e+28>>2]|0)|0;a=(k<<7|k>>>25)+g|0;h=h<<10|h>>>22;k=g+(a&h|b&~h)+1548603684+(c[e>>2]|0)|0;g=(k<<12|k>>>20)+j|0;b=b<<10|b>>>22;k=j+(g&b|a&~b)+1548603684+(c[e+52>>2]|0)|0;j=(k<<8|k>>>24)+h|0;a=a<<10|a>>>22;k=h+(j&a|g&~a)+1548603684+(c[e+20>>2]|0)|0;h=(k<<9|k>>>23)+b|0;g=g<<10|g>>>22;k=b+(h&g|j&~g)+1548603684+(c[e+40>>2]|0)|0;b=(k<<11|k>>>21)+a|0;j=j<<10|j>>>22;k=a+(b&j|h&~j)+1548603684+(c[e+56>>2]|0)|0;a=(k<<7|k>>>25)+g|0;h=h<<10|h>>>22;k=g+(a&h|b&~h)+1548603684+(c[e+60>>2]|0)|0;g=(k<<7|k>>>25)+j|0;b=b<<10|b>>>22;k=j+(g&b|a&~b)+1548603684+(c[e+32>>2]|0)|0;j=(k<<12|k>>>20)+h|0;a=a<<10|a>>>22;k=h+(j&a|g&~a)+1548603684+(c[e+48>>2]|0)|0;h=(k<<7|k>>>25)+b|0;g=g<<10|g>>>22;k=b+(h&g|j&~g)+1548603684+(c[e+16>>2]|0)|0;b=(k<<6|k>>>26)+a|0;j=j<<10|j>>>22;k=a+(b&j|h&~j)+1548603684+(c[e+36>>2]|0)|0;a=(k<<15|k>>>17)+g|0;h=h<<10|h>>>22;k=g+(a&h|b&~h)+1548603684+(c[e+4>>2]|0)|0;g=(k<<13|k>>>19)+j|0;b=b<<10|b>>>22;k=j+(g&b|a&~b)+1548603684+(c[e+8>>2]|0)|0;j=(k<<11|k>>>21)+h|0;a=a<<10|a>>>22;k=h+((j|~g)^a)+1836072691+(c[e+60>>2]|0)|0;h=(k<<9|k>>>23)+b|0;g=g<<10|g>>>22;k=b+((h|~j)^g)+1836072691+(c[e+20>>2]|0)|0;b=(k<<7|k>>>25)+a|0;j=j<<10|j>>>22;k=a+((b|~h)^j)+1836072691+(c[e+4>>2]|0)|0;a=(k<<15|k>>>17)+g|0;h=h<<10|h>>>22;k=g+((a|~b)^h)+1836072691+(c[e+12>>2]|0)|0;g=(k<<11|k>>>21)+j|0;b=b<<10|b>>>22;k=j+((g|~a)^b)+1836072691+(c[e+28>>2]|0)|0;j=(k<<8|k>>>24)+h|0;a=a<<10|a>>>22;k=h+((j|~g)^a)+1836072691+(c[e+56>>2]|0)|0;h=(k<<6|k>>>26)+b|0;g=g<<10|g>>>22;k=b+((h|~j)^g)+1836072691+(c[e+24>>2]|0)|0;b=(k<<6|k>>>26)+a|0;j=j<<10|j>>>22;k=a+((b|~h)^j)+1836072691+(c[e+36>>2]|0)|0;a=(k<<14|k>>>18)+g|0;h=h<<10|h>>>22;k=g+((a|~b)^h)+1836072691+(c[e+44>>2]|0)|0;g=(k<<12|k>>>20)+j|0;b=b<<10|b>>>22;k=j+((g|~a)^b)+1836072691+(c[e+32>>2]|0)|0;j=(k<<13|k>>>19)+h|0;a=a<<10|a>>>22;k=h+((j|~g)^a)+1836072691+(c[e+48>>2]|0)|0;h=(k<<5|k>>>27)+b|0;g=g<<10|g>>>22;k=b+((h|~j)^g)+1836072691+(c[e+8>>2]|0)|0;b=(k<<14|k>>>18)+a|0;j=j<<10|j>>>22;k=a+((b|~h)^j)+1836072691+(c[e+40>>2]|0)|0;a=(k<<13|k>>>19)+g|0;h=h<<10|h>>>22;k=g+((a|~b)^h)+1836072691+(c[e>>2]|0)|0;g=(k<<13|k>>>19)+j|0;b=b<<10|b>>>22;k=j+((g|~a)^b)+1836072691+(c[e+16>>2]|0)|0;j=(k<<7|k>>>25)+h|0;a=a<<10|a>>>22;k=h+((j|~g)^a)+1836072691+(c[e+52>>2]|0)|0;h=(k<<5|k>>>27)+b|0;g=g<<10|g>>>22;k=b+(h&j|~h&g)+2053994217+(c[e+32>>2]|0)|0;b=(k<<15|k>>>17)+a|0;j=j<<10|j>>>22;k=a+(b&h|~b&j)+2053994217+(c[e+24>>2]|0)|0;a=(k<<5|k>>>27)+g|0;h=h<<10|h>>>22;k=g+(a&b|~a&h)+2053994217+(c[e+16>>2]|0)|0;g=(k<<8|k>>>24)+j|0;b=b<<10|b>>>22;k=j+(g&a|~g&b)+2053994217+(c[e+4>>2]|0)|0;j=(k<<11|k>>>21)+h|0;a=a<<10|a>>>22;k=h+(j&g|~j&a)+2053994217+(c[e+12>>2]|0)|0;h=(k<<14|k>>>18)+b|0;g=g<<10|g>>>22;k=b+(h&j|~h&g)+2053994217+(c[e+44>>2]|0)|0;b=(k<<14|k>>>18)+a|0;j=j<<10|j>>>22;k=a+(b&h|~b&j)+2053994217+(c[e+60>>2]|0)|0;a=(k<<6|k>>>26)+g|0;h=h<<10|h>>>22;k=g+(a&b|~a&h)+2053994217+(c[e>>2]|0)|0;g=(k<<14|k>>>18)+j|0;b=b<<10|b>>>22;k=j+(g&a|~g&b)+2053994217+(c[e+20>>2]|0)|0;j=(k<<6|k>>>26)+h|0;a=a<<10|a>>>22;k=h+(j&g|~j&a)+2053994217+(c[e+48>>2]|0)|0;h=(k<<9|k>>>23)+b|0;g=g<<10|g>>>22;k=b+(h&j|~h&g)+2053994217+(c[e+8>>2]|0)|0;b=(k<<12|k>>>20)+a|0;j=j<<10|j>>>22;k=a+(b&h|~b&j)+2053994217+(c[e+52>>2]|0)|0;a=(k<<9|k>>>23)+g|0;h=h<<10|h>>>22;k=g+(a&b|~a&h)+2053994217+(c[e+36>>2]|0)|0;g=(k<<12|k>>>20)+j|0;b=b<<10|b>>>22;k=j+(g&a|~g&b)+2053994217+(c[e+28>>2]|0)|0;j=(k<<5|k>>>27)+h|0;a=a<<10|a>>>22;k=h+(j&g|~j&a)+2053994217+(c[e+40>>2]|0)|0;h=(k<<15|k>>>17)+b|0;g=g<<10|g>>>22;k=b+(h&j|~h&g)+2053994217+(c[e+56>>2]|0)|0;b=(k<<8|k>>>24)+a|0;j=j<<10|j>>>22;k=a+(b^h^j)+(c[e+48>>2]|0)|0;a=(k<<8|k>>>24)+g|0;h=h<<10|h>>>22;k=g+(a^b^h)+(c[e+60>>2]|0)|0;g=(k<<5|k>>>27)+j|0;b=b<<10|b>>>22;k=j+(g^a^b)+(c[e+40>>2]|0)|0;j=(k<<12|k>>>20)+h|0;a=a<<10|a>>>22;k=h+(j^g^a)+(c[e+16>>2]|0)|0;h=(k<<9|k>>>23)+b|0;g=g<<10|g>>>22;k=b+(h^j^g)+(c[e+4>>2]|0)|0;b=(k<<12|k>>>20)+a|0;j=j<<10|j>>>22;k=a+(b^h^j)+(c[e+20>>2]|0)|0;a=(k<<5|k>>>27)+g|0;h=h<<10|h>>>22;k=g+(a^b^h)+(c[e+32>>2]|0)|0;g=(k<<14|k>>>18)+j|0;b=b<<10|b>>>22;k=j+(g^a^b)+(c[e+28>>2]|0)|0;j=(k<<6|k>>>26)+h|0;a=a<<10|a>>>22;k=h+(j^g^a)+(c[e+24>>2]|0)|0;h=(k<<8|k>>>24)+b|0;g=g<<10|g>>>22;k=b+(h^j^g)+(c[e+8>>2]|0)|0;b=(k<<13|k>>>19)+a|0;j=j<<10|j>>>22;k=a+(b^h^j)+(c[e+52>>2]|0)|0;a=(k<<6|k>>>26)+g|0;h=h<<10|h>>>22;k=g+(a^b^h)+(c[e+56>>2]|0)|0;g=(k<<5|k>>>27)+j|0;b=b<<10|b>>>22;k=j+(g^a^b)+(c[e>>2]|0)|0;j=(k<<15|k>>>17)+h|0;a=a<<10|a>>>22;k=h+(j^g^a)+(c[e+12>>2]|0)|0;h=(k<<13|k>>>19)+b|0;g=g<<10|g>>>22;k=b+(h^j^g)+(c[e+36>>2]|0)|0;b=(k<<11|k>>>21)+a|0;j=j<<10|j>>>22;k=a+(b^h^j)+(c[e+44>>2]|0)|0;a=(k<<11|k>>>21)+g|0;h=h<<10|h>>>22;k=(c[f+4>>2]|0)+h+n|0;c[f+4>>2]=(c[f+8>>2]|0)+j+o;c[f+8>>2]=(c[f+12>>2]|0)+g+p;c[f+12>>2]=(c[f+16>>2]|0)+a+l;c[f+16>>2]=(c[f>>2]|0)+b+m;c[f>>2]=k;i=d;return}function o4(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;i=i+96|0;e=d|0;o1(e);o5(e,b,c);o6(e);c=a;a=e+24|0;Ac(c|0,a|0,20)|0;i=d;return}function o5(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=e;e=d;d=b;if((c[d+88>>2]|0)==64){o3(d,d+24|0);up(128);c[d+88>>2]=0;b=d+20|0;c[b>>2]=(c[b>>2]|0)+1}if((e|0)==0){return}do{if((c[d+88>>2]|0)!=0){while(1){if((f|0)!=0){g=(c[d+88>>2]|0)<64}else{g=0}if(!g){break}b=e;e=b+1|0;h=a[b]|0;b=d+88|0;i=c[b>>2]|0;c[b>>2]=i+1;a[d+24+i|0]=h;f=f-1|0}o5(d,0,0);if((f|0)!=0){break}return}}while(0);while(1){if(f>>>0<64){break}o3(d,e);c[d+88>>2]=0;g=d+20|0;c[g>>2]=(c[g>>2]|0)+1;f=f-64|0;e=e+64|0}up(128);while(1){if((f|0)!=0){j=(c[d+88>>2]|0)<64}else{j=0}if(!j){break}g=e;e=g+1|0;h=a[g]|0;g=d+88|0;i=c[g>>2]|0;c[g>>2]=i+1;a[d+24+i|0]=h;f=f-1|0}return}function o6(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;o5(d,0,0);b=c[d+20>>2]|0;e=b<<6;f=b>>>26;b=e;g=e+(c[d+88>>2]|0)|0;e=g;if(g>>>0<b>>>0){f=f+1|0}b=e;e=e<<3;f=f<<3;f=f|b>>>29;if((c[d+88>>2]|0)<56){b=d+88|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+24+g|0]=-128;while(1){if((c[d+88>>2]|0)>=56){break}g=d+88|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+24+b|0]=0}}else{b=d+88|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+24+g|0]=-128;while(1){if((c[d+88>>2]|0)>=64){break}g=d+88|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+24+b|0]=0}o5(d,0,0);Ae(d+24|0,0,56)}a[d+80|0]=e&255;a[d+81|0]=e>>>8&255;a[d+82|0]=e>>>16&255;a[d+83|0]=e>>>24&255;a[d+84|0]=f&255;a[d+85|0]=f>>>8&255;a[d+86|0]=f>>>16&255;a[d+87|0]=f>>>24&255;o3(d,d+24|0);up(128);f=d+24|0;c[f>>2]=c[d>>2];f=f+4|0;c[f>>2]=c[d+4>>2];f=f+4|0;c[f>>2]=c[d+8>>2];f=f+4|0;c[f>>2]=c[d+12>>2];f=f+4|0;c[f>>2]=c[d+16>>2];f=f+4|0;return}function o7(a){a=a|0;return a+24|0}function o8(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return pg(a,b,c,0,d,e,0)|0}function o9(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;a=i;i=i+24|0;d=a|0;e=b;b=0;c[d>>2]=c[e>>2];c[d+4>>2]=c[e+4>>2];c[d+8>>2]=c[e+8>>2];c[d+12>>2]=c[e+12>>2];c[d+16>>2]=c[e+16>>2];c[d+20>>2]=c[e+20>>2];do{if((c[d+12>>2]|0)!=0){if((c[d+16>>2]|0)==0){break}if((c[d+20>>2]|0)==0){break}if((py(d)|0)==0){b=7}f=b;i=a;return f|0}}while(0);b=68;f=b;i=a;return f|0}function pa(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0;f=i;i=i+8|0;a=f|0;g=b;b=e;c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[g>>2]=r1(c[(c[a>>2]|0)+4>>2]|0)|0;pm(c[g>>2]|0,d,a);i=f;return 0}function pb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;a=i;i=i+24|0;g=a|0;h=b;b=d;d=e;e=f;f=0;j=0;k=0;c[g>>2]=c[d>>2];c[g+4>>2]=c[d+4>>2];c[g+8>>2]=c[d+8>>2];c[g+12>>2]=c[d+12>>2];c[g+16>>2]=c[d+16>>2];c[g+20>>2]=c[d+20>>2];d=sm(qR(c[g>>2]|0)|0)|0;do{if((e&1|0)==0){f=sm(qR(c[g>>2]|0)|0)|0;j=sm(qR(c[g>>2]|0)|0)|0;so(f,qR(c[g>>2]|0)|0,0);rh(f,f,c[g>>2]|0);if((rg(j,f,c[g>>2]|0)|0)!=0){break}l=63;m=l;i=a;return m|0}}while(0);if((e&1|0)!=0){k=c[b>>2]|0}else{k=pw(c[b>>2]|0,f,c[g+4>>2]|0,c[g>>2]|0)|0}pn(d,k,g);if((e&1|0)==0){b=sc(d)|0;sn(d);d=px(b,j,c[g>>2]|0)|0;sn(b)}if((e&1|0)==0){sn(k);sn(f);sn(j)}c[h>>2]=d;l=0;m=l;i=a;return m|0}function pc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;a=i;i=i+24|0;f=a|0;g=b;b=e;c[f>>2]=c[b>>2];c[f+4>>2]=c[b+4>>2];c[f+8>>2]=c[b+8>>2];c[f+12>>2]=c[b+12>>2];c[f+16>>2]=c[b+16>>2];c[f+20>>2]=c[b+20>>2];c[g>>2]=r1(c[(c[f>>2]|0)+4>>2]|0)|0;pn(c[g>>2]|0,d,f);i=a;return 0}function pd(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;a=i;i=i+8|0;h=a|0;j=e;e=f;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];j=sl(160)|0;pm(j,c[d>>2]|0,h);if((e|0)!=0){k=cN[e&63](g,j)|0;l=j;sn(l);m=k;i=a;return m|0}else{k=(q0(j,b)|0)!=0?8:0;l=j;sn(l);m=k;i=a;return m|0}return 0}function pe(a,b){a=a|0;b=b|0;return qR(c[b>>2]|0)|0}function pf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((a|0)==1){d=pq(c)|0;e=d;return e|0}else{d=4;e=d;return e|0}return 0}function pg(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;i=i+32|0;j=a|0;k=a+24|0;l=b;b=d;d=e;e=f;f=h;h=0;m=0;c[g>>2]=0;if((d|0)!=0){n=u4(d,61040,0)|0}else{n=0}g=n;if((g|0)==0){o=u4(d,59264,0)|0;if((o|0)!=0){m=1;u_(o)}}do{if((g|0)!=0){p=3420}else{if((m|0)!=0){p=3420;break}if((s5()|0)!=0){p=3420;break}o=u4(d,55672,0)|0;if((o|0)!=0){h=1;u_(o)}q=pj(j,l,b,h)|0}}while(0);if((p|0)==3420){q=pi(j,l,b,g,k)|0;u_(g);do{if((q|0)==0){if((f|0)==0){break}if((c[k>>2]|0)==0){break}q=uZ(f,57400,0,1)|0;if((q|0)!=0){sn(c[j>>2]|0);c[j>>2]=0;sn(c[j+4>>2]|0);c[j+4>>2]=0;sn(c[j+12>>2]|0);c[j+12>>2]=0;sn(c[j+16>>2]|0);c[j+16>>2]=0;sn(c[j+8>>2]|0);c[j+8>>2]=0;sn(c[j+20>>2]|0);c[j+20>>2]=0}}}while(0)}if((q|0)!=0){r=q;i=a;return r|0}c[e>>2]=c[j>>2];c[e+4>>2]=c[j+4>>2];c[e+8>>2]=c[j+8>>2];c[e+12>>2]=c[j+12>>2];c[e+16>>2]=c[j+16>>2];c[e+20>>2]=c[j+20>>2];r=q;i=a;return r|0}function ph(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+8|0;e=d|0;f=u4(b,62432,1)|0;if((f|0)==0){g=68;h=g;i=d;return h|0}b=u9(f,1,e)|0;if((b|0)!=0){ms(a,b,c[e>>2]|0);u_(f);g=0;h=g;i=d;return h|0}else{u_(f);g=68;h=g;i=d;return h|0}return 0}function pi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=i;i=i+104|0;h=g|0;j=g+8|0;k=g+16|0;l=g+24|0;m=g+32|0;n=g+40|0;o=g+48|0;p=a;a=b;b=d;d=e;e=f;c[e>>2]=0;if((b|0)==1){b=65537}do{if(a>>>0>=1024){if(((a>>>0)%256|0|0)!=0){break}if(b>>>0<3){q=55;r=q;i=g;return r|0}if((b&1|0)==0){q=55;r=q;i=g;return r|0}c[h>>2]=0;c[j>>2]=0;c[k>>2]=0;c[l>>2]=0;c[m>>2]=0;c[n>>2]=0;do{if((d|0)!=0){f=o;Ae(f|0,0,56);s=f;c[s>>2]=72320;c[s+8>>2]=71816;c[s+16>>2]=71512;c[s+24>>2]=70912;c[s+32>>2]=70584;c[s+40>>2]=70208;c[o+4>>2]=h;c[o+12>>2]=j;c[o+20>>2]=k;c[o+28>>2]=l;c[o+36>>2]=m;c[o+44>>2]=n;s=0;while(1){if((c[o+(s<<3)>>2]|0)==0){break}f=u4(d,c[o+(s<<3)>>2]|0,0)|0;if((f|0)!=0){t=vc(f,1,5)|0;c[c[o+(s<<3)+4>>2]>>2]=t;u_(f)}s=s+1|0}s=0;while(1){if((c[o+(s<<3)>>2]|0)==0){break}if((c[c[o+(s<<3)+4>>2]>>2]|0)==0){f=3467;break}s=s+1|0}if((c[o+(s<<3)>>2]|0)==0){break}s=0;while(1){if((c[o+(s<<3)>>2]|0)==0){break}sn(c[c[o+(s<<3)+4>>2]>>2]|0);s=s+1|0}q=128;r=q;i=g;return r|0}else{c[k>>2]=po((a>>>0)/2|0)|0;s=sm((a>>>0)/2|0)|0;do{sn(c[n>>2]|0);c[n>>2]=po((a>>>0)/2|0)|0;qN(s,c[k>>2]|0,c[n>>2]|0);}while((qR(s)|0)>>>0<=(((a>>>0)/2|0)-100|0)>>>0);sn(s);c[h>>2]=pp()|0;c[j>>2]=pp()|0;c[l>>2]=pp()|0;c[m>>2]=pp()|0}}while(0);f=sj(b)|0;t=nk(c[k>>2]|0,c[h>>2]|0,c[j>>2]|0,f,0,0)|0;u=nk(c[n>>2]|0,c[l>>2]|0,c[m>>2]|0,f,0,0)|0;sn(c[k>>2]|0);c[k>>2]=0;sn(c[h>>2]|0);c[h>>2]=0;sn(c[j>>2]|0);c[j>>2]=0;sn(c[n>>2]|0);c[n>>2]=0;sn(c[l>>2]|0);c[l>>2]=0;sn(c[m>>2]|0);c[m>>2]=0;do{if((t|0)!=0){if((u|0)==0){break}if((q0(t,u)|0)>0){sk(t,u);c[e>>2]=1}v=sl(a)|0;ro(v,t,u);w=sm((a>>>0)/2|0)|0;x=sm((a>>>0)/2|0)|0;y=sm(a)|0;qM(w,t,1);qM(x,u,1);ro(y,w,x);z=sm(a)|0;if((ra(z,f,y)|0)==0){ug(69856,82872,531,87192);return 0}A=z;B=w;C=x;ra(A,B,C)|0;C=w;w=0;sn(x);x=0;q4(C,y,z);sn(y);y=0;y=z;z=0;z=y;x=f;w=C;rg(z,x,w)|0;w=C;C=0;C=w;x=t;z=u;rg(C,x,z)|0;if((t_(1)|0)!=0){if((c[e>>2]|0)!=0){um(69552,(z=i,i=i+1|0,i=i+7&-8,c[z>>2]=0,z)|0);i=z}rv(69240,t);rv(69056,u);rv(68360,v);rv(67960,f);rv(67736,y);rv(67480,w)}c[p>>2]=v;c[p+4>>2]=f;c[p+12>>2]=t;c[p+16>>2]=u;c[p+8>>2]=y;c[p+20>>2]=w;if((pl(p,a-64|0)|0)!=0){sn(c[p>>2]|0);c[p>>2]=0;sn(c[p+4>>2]|0);c[p+4>>2]=0;sn(c[p+12>>2]|0);c[p+12>>2]=0;sn(c[p+16>>2]|0);c[p+16>>2]=0;sn(c[p+8>>2]|0);c[p+8>>2]=0;sn(c[p+20>>2]|0);c[p+20>>2]=0;tb(82872,576,87192,0,73528);q=50;r=q;i=g;return r|0}else{q=0;r=q;i=g;return r|0}}}while(0);sn(t);sn(u);sn(f);q=21;r=q;i=g;return r|0}}while(0);q=55;r=q;i=g;return r|0}function pj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=a;a=b;b=d;d=e;do{if((s5()|0)!=0){if(a>>>0<1024){g=55;h=g;return h|0}if((d|0)==0){break}g=55;h=g;return h|0}}while(0);e=(d|0)!=0?1:2;if((a&1|0)!=0){a=a+1|0}if((b|0)==1){b=65537}d=r1(1)|0;if((b|0)!=0){b=b|1;i=d;j=b;sf(i,j)|0}else{j=d;sf(j,41)|0}j=sl(a)|0;i=0;k=0;do{if((k|0)!=0){sn(k)}if((i|0)!=0){sn(i)}if((b|0)!=0){k=m7((a>>>0)/2|0,e,32,d)|0;i=m7((a>>>0)/2|0,e,32,d)|0}else{k=m7((a>>>0)/2|0,e,0,0)|0;i=m7((a>>>0)/2|0,e,0,0)|0}if((q0(k,i)|0)>0){sk(k,i)}ro(j,k,i);}while((qR(j)|0)!=(a|0));e=r4(c[k+4>>2]|0)|0;l=r4(c[k+4>>2]|0)|0;m=sm(a)|0;n=sm(a)|0;o=sm(a)|0;qM(e,k,1);qM(l,i,1);ro(m,e,l);ra(n,e,l)|0;q4(o,m,n);while(1){if(!((ra(e,d,m)|0)!=0^1)){break}if((b|0)!=0){p=3528;break}qK(d,d,2)}if((p|0)==3528){uf(82872,276,87208);return 0}p=sm(a)|0;rg(p,d,o)|0;b=sm(a)|0;rg(b,k,i)|0;if((t_(1)|0)!=0){rv(81184,k);rv(80192,i);rv(79360,m);rv(78456,n);rv(77432,o);rv(76560,j);rv(75896,d);rv(74872,p);rv(74128,b)}sn(e);sn(l);sn(m);sn(o);sn(n);c[f>>2]=j;c[f+4>>2]=d;c[f+12>>2]=k;c[f+16>>2]=i;c[f+8>>2]=p;c[f+20>>2]=b;if((pl(f,a-64|0)|0)!=0){sn(c[f>>2]|0);c[f>>2]=0;sn(c[f+4>>2]|0);c[f+4>>2]=0;sn(c[f+12>>2]|0);c[f+12>>2]=0;sn(c[f+16>>2]|0);c[f+16>>2]=0;sn(c[f+8>>2]|0);c[f+8>>2]=0;sn(c[f+20>>2]|0);c[f+20>>2]=0;tb(82872,323,87208,0,73528);g=50;h=g;return h|0}else{g=0;h=g;return h|0}return 0}function pk(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;qM(c,c,1);b=sd(c)|0;d=((ra(b,a,c)|0)!=0^1)&1;sn(b);qK(c,c,1);return d|0}function pl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+8|0;e=d|0;f=a;a=b;b=-1;g=sl(a)|0;h=sl(a)|0;j=sl(a)|0;k=sl(a)|0;c[e>>2]=c[f>>2];c[e+4>>2]=c[f+4>>2];so(g,a,0);pm(h,g,e);do{if((q0(h,g)|0)!=0){pn(j,h,f);if((q0(j,g)|0)!=0){break}so(g,a,0);pn(k,g,f);pm(j,k,e);if((q0(j,g)|0)!=0){break}qK(k,k,1);pm(j,k,e);if((q0(j,g)|0)!=0){b=0;break}else{break}}}while(0);sn(k);sn(j);sn(h);sn(g);i=d;return b|0}function pm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;if((e|0)==(a|0)){d=r1(c[a+4>>2]<<1)|0;rq(d,a,c[b+4>>2]|0,c[b>>2]|0);f=e;g=d;se(f,g)|0;r9(d);return}else{rq(e,a,c[b+4>>2]|0,c[b>>2]|0);return}}function pn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;do{if((c[b+12>>2]|0)!=0){if((c[b+16>>2]|0)==0){break}if((c[b+20>>2]|0)==0){break}d=r4((c[(c[b>>2]|0)+4>>2]|0)+1|0)|0;f=r4((c[(c[b>>2]|0)+4>>2]|0)+1|0)|0;g=r4((c[(c[b>>2]|0)+4>>2]|0)+1|0)|0;qM(g,c[b+12>>2]|0,1);q1(g,c[b+8>>2]|0,g);rq(d,a,g,c[b+12>>2]|0);qM(g,c[b+16>>2]|0,1);q1(g,c[b+8>>2]|0,g);rq(f,a,g,c[b+16>>2]|0);qN(g,f,d);if((c[g+8>>2]|0)!=0){qL(g,g,c[b+16>>2]|0)}rp(g,c[b+20>>2]|0,g,c[b+16>>2]|0);ro(g,g,c[b+12>>2]|0);qL(e,d,g);r9(g);r9(d);r9(f);return}}while(0);rq(e,a,c[b+8>>2]|0,c[b>>2]|0);return}function po(a){a=a|0;var b=0;b=a;a=sm(b)|0;so(a,b,2);qU(a,b-1|0);qT(a,b-2|0);if((qR(a)|0)==(b|0)){b=a;return b|0}else{ug(66848,82872,349,87280);return 0}return 0}function pp(){var a=0,b=0;a=sm(101)|0;so(a,101,2);qU(a,100);if((qR(a)|0)==101){b=a;return b|0}else{ug(67160,82872,364,87304);return 0}return 0}function pq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a;c[d>>2]=0;c[e>>2]=0;a=66704;g=vj(d,0,18816,Ab(18816)|0)|0;if((g|0)==0){g=vj(e,0,20768,Ab(20768)|0)|0}do{if((g|0)!=0){h=tA(g)|0}else{a=66464;g=nX(c[d>>2]|0)|0;if((g|0)!=0){h=tA(g)|0;break}a=66168;h=pr(c[e>>2]|0,c[d>>2]|0)|0;if((h|0)!=0){break}a=65904;h=ps(c[e>>2]|0,c[d>>2]|0)|0;if((h|0)!=0){break}u_(c[e>>2]|0);u_(c[d>>2]|0);j=0;k=j;i=b;return k|0}}while(0);u_(c[e>>2]|0);u_(c[d>>2]|0);if((f|0)!=0){cP[f&15](65424,1,a,h)}j=50;k=j;i=b;return k|0}function pr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+24|0;e=d|0;f=d+8|0;g=d+16|0;h=a;a=0;c[e>>2]=0;c[f>>2]=0;c[g>>2]=0;j=vj(e,0,6192,Ab(6192)|0)|0;if((j|0)==0){j=vj(f,0,6040,Ab(6040)|0)|0}do{if((j|0)!=0){a=64776}else{j=nS(g,c[e>>2]|0,b)|0;if((j|0)!=0){a=63024;break}j=nU(c[g>>2]|0,c[e>>2]|0,h)|0;if((j|0)!=0){a=62904;break}j=nU(c[g>>2]|0,c[f>>2]|0,h)|0;if((pu(j)|0)!=8){a=62768;break}else{break}}}while(0);u_(c[g>>2]|0);u_(c[f>>2]|0);u_(c[e>>2]|0);i=d;return a|0}function ps(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+24|0;e=d|0;f=d+8|0;g=d+16|0;h=b;b=0;j=0;c[e>>2]=0;c[f>>2]=0;k=0;c[g>>2]=0;l=0;m=0;j=sl(1e3)|0;so(j,1e3,0);n=vf(e,0,65e3,(o=i,i=i+8|0,c[o>>2]=j,o)|0)|0;i=o;o=n;do{if((o|0)!=0){b=64776}else{o=nD(f,c[e>>2]|0,a)|0;if((o|0)!=0){b=64656;break}k=pt(c[f>>2]|0)|0;if((k|0)==0){b=64472;break}if((q0(j,k)|0)==0){b=64288;break}o=nN(g,c[f>>2]|0,h)|0;if((o|0)!=0){b=64112;break}m=u4(c[g>>2]|0,63944,0)|0;if((m|0)!=0){l=vc(m,1,5)|0}else{l=vc(c[g>>2]|0,0,5)|0}if((l|0)==0){b=63744;break}if((q0(j,l)|0)!=0){b=63656;break}else{break}}}while(0);u_(m);sn(l);u_(c[g>>2]|0);sn(k);u_(c[f>>2]|0);u_(c[e>>2]|0);sn(j);i=d;return b|0}function pt(a){a=a|0;var b=0,c=0,d=0;b=u4(a,63392,0)|0;if((b|0)==0){c=0;d=c;return d|0}a=u4(b,63216,0)|0;u_(b);if((a|0)==0){c=0;d=c;return d|0}b=u4(a,66696,0)|0;u_(a);if((b|0)!=0){a=vc(b,1,0)|0;u_(b);c=a;d=c;return d|0}else{c=0;d=c;return d|0}return 0}function pu(a){a=a|0;return pv(a)|0}function pv(a){a=a|0;return a&65535|0}function pw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=d;d=sm(qR(e)|0)|0;f=sm(qR(e)|0)|0;rq(d,b,c,e);rp(f,d,a,e);sn(d);return f|0}function px(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=c;c=sm(qR(d)|0)|0;rp(c,b,a,d);return c|0}function py(a){a=a|0;var b=0,d=0;b=a;a=r1(c[(c[b+12>>2]|0)+4>>2]<<1)|0;ro(a,c[b+12>>2]|0,c[b+16>>2]|0);d=q0(a,c[b>>2]|0)|0;r9(a);return((d|0)!=0^1)&1|0}function pz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=pE(a,b,c)|0;up(40);return d|0}function pA(a,b,c){a=a|0;b=b|0;c=c|0;pD(a,b,c);up(24);return}function pB(a,b,c){a=a|0;b=b|0;c=c|0;pC(a,b,c);up(24);return}function pC(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=b;b=e;e=f;f=(d[e|0]|0)<<24^(d[e+1|0]|0)<<16^(d[e+2|0]|0)<<8^(d[e+3|0]|0);l=(d[e+4|0]|0)<<24^(d[e+5|0]|0)<<16^(d[e+6|0]|0)<<8^(d[e+7|0]|0);m=(d[e+8|0]|0)<<24^(d[e+9|0]|0)<<16^(d[e+10|0]|0)<<8^(d[e+11|0]|0);n=(d[e+12|0]|0)<<24^(d[e+13|0]|0)<<16^(d[e+14|0]|0)<<8^(d[e+15|0]|0);c[h>>2]=m^c[k+120>>2];c[j>>2]=n^c[k+124>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+112>>2];c[j>>2]=l^c[k+116>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+104>>2];c[j>>2]=n^c[k+108>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+96>>2];c[j>>2]=l^c[k+100>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+88>>2];c[j>>2]=n^c[k+92>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+80>>2];c[j>>2]=l^c[k+84>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+72>>2];c[j>>2]=n^c[k+76>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+64>>2];c[j>>2]=l^c[k+68>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+56>>2];c[j>>2]=n^c[k+60>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+48>>2];c[j>>2]=l^c[k+52>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+40>>2];c[j>>2]=n^c[k+44>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+32>>2];c[j>>2]=l^c[k+36>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+24>>2];c[j>>2]=n^c[k+28>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+16>>2];c[j>>2]=l^c[k+20>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+8>>2];c[j>>2]=n^c[k+12>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k>>2];c[j>>2]=l^c[k+4>>2];k=j;c[k>>2]=c[k>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];k=h;c[k>>2]=(c[k>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];k=j;c[k>>2]=(c[k>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];k=h;c[k>>2]=(c[k>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];a[b|0]=m>>>24&255;a[b+1|0]=m>>>16&255;a[b+2|0]=m>>>8&255;a[b+3|0]=m&255;a[b+4|0]=n>>>24&255;a[b+5|0]=n>>>16&255;a[b+6|0]=n>>>8&255;a[b+7|0]=n&255;a[b+8|0]=f>>>24&255;a[b+9|0]=f>>>16&255;a[b+10|0]=f>>>8&255;a[b+11|0]=f&255;a[b+12|0]=l>>>24&255;a[b+13|0]=l>>>16&255;a[b+14|0]=l>>>8&255;a[b+15|0]=l&255;i=g;return}
function qB(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=b;b=e;e=f;f=(d[e|0]|0)^(d[e+1|0]|0)<<8^(d[e+2|0]|0)<<16^(d[e+3|0]|0)<<24^c[g+4096>>2];h=(d[e+4|0]|0)^(d[e+5|0]|0)<<8^(d[e+6|0]|0)<<16^(d[e+7|0]|0)<<24^c[g+4100>>2];i=(d[e+8|0]|0)^(d[e+9|0]|0)<<8^(d[e+10|0]|0)<<16^(d[e+11|0]|0)<<24^c[g+4104>>2];j=(d[e+12|0]|0)^(d[e+13|0]|0)<<8^(d[e+14|0]|0)<<16^(d[e+15|0]|0)<<24^c[g+4108>>2];e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4132>>2]|0))|0;i=i^e+(c[g+4128>>2]|0);i=(i>>>1)+(i<<31)|0;j=(j<<1)+(j>>>31)^k;e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4140>>2]|0))|0;f=f^e+(c[g+4136>>2]|0);f=(f>>>1)+(f<<31)|0;h=(h<<1)+(h>>>31)^k;e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4148>>2]|0))|0;i=i^e+(c[g+4144>>2]|0);i=(i>>>1)+(i<<31)|0;j=(j<<1)+(j>>>31)^k;e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4156>>2]|0))|0;f=f^e+(c[g+4152>>2]|0);f=(f>>>1)+(f<<31)|0;h=(h<<1)+(h>>>31)^k;e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4164>>2]|0))|0;i=i^e+(c[g+4160>>2]|0);i=(i>>>1)+(i<<31)|0;j=(j<<1)+(j>>>31)^k;e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4172>>2]|0))|0;f=f^e+(c[g+4168>>2]|0);f=(f>>>1)+(f<<31)|0;h=(h<<1)+(h>>>31)^k;e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4180>>2]|0))|0;i=i^e+(c[g+4176>>2]|0);i=(i>>>1)+(i<<31)|0;j=(j<<1)+(j>>>31)^k;e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4188>>2]|0))|0;f=f^e+(c[g+4184>>2]|0);f=(f>>>1)+(f<<31)|0;h=(h<<1)+(h>>>31)^k;e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4196>>2]|0))|0;i=i^e+(c[g+4192>>2]|0);i=(i>>>1)+(i<<31)|0;j=(j<<1)+(j>>>31)^k;e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4204>>2]|0))|0;f=f^e+(c[g+4200>>2]|0);f=(f>>>1)+(f<<31)|0;h=(h<<1)+(h>>>31)^k;e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4212>>2]|0))|0;i=i^e+(c[g+4208>>2]|0);i=(i>>>1)+(i<<31)|0;j=(j<<1)+(j>>>31)^k;e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4220>>2]|0))|0;f=f^e+(c[g+4216>>2]|0);f=(f>>>1)+(f<<31)|0;h=(h<<1)+(h>>>31)^k;e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4228>>2]|0))|0;i=i^e+(c[g+4224>>2]|0);i=(i>>>1)+(i<<31)|0;j=(j<<1)+(j>>>31)^k;e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4236>>2]|0))|0;f=f^e+(c[g+4232>>2]|0);f=(f>>>1)+(f<<31)|0;h=(h<<1)+(h>>>31)^k;e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4244>>2]|0))|0;i=i^e+(c[g+4240>>2]|0);i=(i>>>1)+(i<<31)|0;j=(j<<1)+(j>>>31)^k;e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+(e+(c[g+4252>>2]|0))|0;f=f^e+(c[g+4248>>2]|0);f=(f>>>1)+(f<<31)|0;h=(h<<1)+(h>>>31)^k;i=i^c[g+4112>>2];a[b|0]=i&255;a[b+1|0]=i>>>8&255;a[b+2|0]=i>>>16&255;a[b+3|0]=i>>>24&255;j=j^c[g+4116>>2];a[b+4|0]=j&255;a[b+5|0]=j>>>8&255;a[b+6|0]=j>>>16&255;a[b+7|0]=j>>>24&255;f=f^c[g+4120>>2];a[b+8|0]=f&255;a[b+9|0]=f>>>8&255;a[b+10|0]=f>>>16&255;a[b+11|0]=f>>>24&255;h=h^c[g+4124>>2];a[b+12|0]=h&255;a[b+13|0]=h>>>8&255;a[b+14|0]=h>>>16&255;a[b+15|0]=h>>>24&255;return}function qC(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=b;b=e;e=f;f=0;j=0;k=0;l=0;m=0;n=0;o=0;p=0;q=0;r=0;s=0;t=0;u=0;v=0;w=0;x=0;if((e-16|16|0)!=16){y=44;z=y;i=g;return z|0}if((c[30734]|0)==0){c[30734]=1;c[30732]=qD()|0;if((c[30732]|0)!=0){uj(69224,(A=i,i=i+8|0,c[A>>2]=c[30732],A)|0);i=A}}if((c[30732]|0)!=0){y=50;z=y;i=g;return z|0}if((a[b|0]|0)!=0){B=a[30928+((d[b|0]|0)-1)|0]|0;f=(f&255^d[46424+(B&255)|0])&255;j=(j&255^d[(B&255)+46469|0])&255;k=(k&255^d[(B&255)+46425|0])&255;l=(l&255^d[(B&255)+46469|0])&255}if((a[b+1|0]|0)!=0){B=a[30928+((d[b+1|0]|0)-1)|0]|0;f=(f&255^d[(B&255)+46469|0])&255;j=(j&255^d[(B&255)+46588|0])&255;k=(k&255^d[(B&255)+46492|0])&255;l=(l&255^d[(B&255)+46562|0])&255}if((a[b+2|0]|0)!=0){B=a[30928+((d[b+2|0]|0)-1)|0]|0;f=(f&255^d[(B&255)+46562|0])&255;j=(j&255^d[(B&255)+46637|0])&255;k=(k&255^d[(B&255)+46615|0])&255;l=(l&255^d[(B&255)+46633|0])&255}if((a[b+3|0]|0)!=0){B=a[30928+((d[b+3|0]|0)-1)|0]|0;f=(f&255^d[(B&255)+46633|0])&255;j=(j&255^d[(B&255)+46551|0])&255;k=(k&255^d[(B&255)+46485|0])&255;l=(l&255^d[(B&255)+46577|0])&255}if((a[b+4|0]|0)!=0){B=a[30928+((d[b+4|0]|0)-1)|0]|0;f=(f&255^d[(B&255)+46577|0])&255;j=(j&255^d[(B&255)+46494|0])&255;k=(k&255^d[(B&255)+46526|0])&255;l=(l&255^d[(B&255)+46574|0])&255}if((a[b+5|0]|0)!=0){B=a[30928+((d[b+5|0]|0)-1)|0]|0;f=(f&255^d[(B&255)+46574|0])&255;j=(j&255^d[(B&255)+46484|0])&255;k=(k&255^d[(B&255)+46515|0])&255;l=(l&255^d[(B&255)+46661|0])&255}if((a[b+6|0]|0)!=0){B=a[30928+((d[b+6|0]|0)-1)|0]|0;f=(f&255^d[(B&255)+46661|0])&255;j=(j&255^d[(B&255)+46479|0])&255;k=(k&255^d[(B&255)+46503|0])&255;l=(l&255^d[(B&255)+46648|0])&255}if((a[b+7|0]|0)!=0){B=a[30928+((d[b+7|0]|0)-1)|0]|0;f=(f&255^d[(B&255)+46648|0])&255;j=(j&255^d[(B&255)+46632|0])&255;k=(k&255^d[(B&255)+46564|0])&255;l=(l&255^d[(B&255)+46447|0])&255}if((a[b+8|0]|0)!=0){B=a[30928+((d[b+8|0]|0)-1)|0]|0;m=(m&255^d[46424+(B&255)|0])&255;n=(n&255^d[(B&255)+46469|0])&255;o=(o&255^d[(B&255)+46425|0])&255;p=(p&255^d[(B&255)+46469|0])&255}if((a[b+9|0]|0)!=0){B=a[30928+((d[b+9|0]|0)-1)|0]|0;m=(m&255^d[(B&255)+46469|0])&255;n=(n&255^d[(B&255)+46588|0])&255;o=(o&255^d[(B&255)+46492|0])&255;p=(p&255^d[(B&255)+46562|0])&255}if((a[b+10|0]|0)!=0){B=a[30928+((d[b+10|0]|0)-1)|0]|0;m=(m&255^d[(B&255)+46562|0])&255;n=(n&255^d[(B&255)+46637|0])&255;o=(o&255^d[(B&255)+46615|0])&255;p=(p&255^d[(B&255)+46633|0])&255}if((a[b+11|0]|0)!=0){B=a[30928+((d[b+11|0]|0)-1)|0]|0;m=(m&255^d[(B&255)+46633|0])&255;n=(n&255^d[(B&255)+46551|0])&255;o=(o&255^d[(B&255)+46485|0])&255;p=(p&255^d[(B&255)+46577|0])&255}if((a[b+12|0]|0)!=0){B=a[30928+((d[b+12|0]|0)-1)|0]|0;m=(m&255^d[(B&255)+46577|0])&255;n=(n&255^d[(B&255)+46494|0])&255;o=(o&255^d[(B&255)+46526|0])&255;p=(p&255^d[(B&255)+46574|0])&255}if((a[b+13|0]|0)!=0){B=a[30928+((d[b+13|0]|0)-1)|0]|0;m=(m&255^d[(B&255)+46574|0])&255;n=(n&255^d[(B&255)+46484|0])&255;o=(o&255^d[(B&255)+46515|0])&255;p=(p&255^d[(B&255)+46661|0])&255}if((a[b+14|0]|0)!=0){B=a[30928+((d[b+14|0]|0)-1)|0]|0;m=(m&255^d[(B&255)+46661|0])&255;n=(n&255^d[(B&255)+46479|0])&255;o=(o&255^d[(B&255)+46503|0])&255;p=(p&255^d[(B&255)+46648|0])&255}if((a[b+15|0]|0)!=0){B=a[30928+((d[b+15|0]|0)-1)|0]|0;m=(m&255^d[(B&255)+46648|0])&255;n=(n&255^d[(B&255)+46632|0])&255;o=(o&255^d[(B&255)+46564|0])&255;p=(p&255^d[(B&255)+46447|0])&255}if((e|0)==32){if((a[b+16|0]|0)!=0){B=a[30928+((d[b+16|0]|0)-1)|0]|0;q=(q&255^d[46424+(B&255)|0])&255;r=(r&255^d[(B&255)+46469|0])&255;s=(s&255^d[(B&255)+46425|0])&255;t=(t&255^d[(B&255)+46469|0])&255}if((a[b+17|0]|0)!=0){B=a[30928+((d[b+17|0]|0)-1)|0]|0;q=(q&255^d[(B&255)+46469|0])&255;r=(r&255^d[(B&255)+46588|0])&255;s=(s&255^d[(B&255)+46492|0])&255;t=(t&255^d[(B&255)+46562|0])&255}if((a[b+18|0]|0)!=0){B=a[30928+((d[b+18|0]|0)-1)|0]|0;q=(q&255^d[(B&255)+46562|0])&255;r=(r&255^d[(B&255)+46637|0])&255;s=(s&255^d[(B&255)+46615|0])&255;t=(t&255^d[(B&255)+46633|0])&255}if((a[b+19|0]|0)!=0){B=a[30928+((d[b+19|0]|0)-1)|0]|0;q=(q&255^d[(B&255)+46633|0])&255;r=(r&255^d[(B&255)+46551|0])&255;s=(s&255^d[(B&255)+46485|0])&255;t=(t&255^d[(B&255)+46577|0])&255}if((a[b+20|0]|0)!=0){B=a[30928+((d[b+20|0]|0)-1)|0]|0;q=(q&255^d[(B&255)+46577|0])&255;r=(r&255^d[(B&255)+46494|0])&255;s=(s&255^d[(B&255)+46526|0])&255;t=(t&255^d[(B&255)+46574|0])&255}if((a[b+21|0]|0)!=0){B=a[30928+((d[b+21|0]|0)-1)|0]|0;q=(q&255^d[(B&255)+46574|0])&255;r=(r&255^d[(B&255)+46484|0])&255;s=(s&255^d[(B&255)+46515|0])&255;t=(t&255^d[(B&255)+46661|0])&255}if((a[b+22|0]|0)!=0){B=a[30928+((d[b+22|0]|0)-1)|0]|0;q=(q&255^d[(B&255)+46661|0])&255;r=(r&255^d[(B&255)+46479|0])&255;s=(s&255^d[(B&255)+46503|0])&255;t=(t&255^d[(B&255)+46648|0])&255}if((a[b+23|0]|0)!=0){B=a[30928+((d[b+23|0]|0)-1)|0]|0;q=(q&255^d[(B&255)+46648|0])&255;r=(r&255^d[(B&255)+46632|0])&255;s=(s&255^d[(B&255)+46564|0])&255;t=(t&255^d[(B&255)+46447|0])&255}if((a[b+24|0]|0)!=0){B=a[30928+((d[b+24|0]|0)-1)|0]|0;u=(u&255^d[46424+(B&255)|0])&255;v=(v&255^d[(B&255)+46469|0])&255;w=(w&255^d[(B&255)+46425|0])&255;x=(x&255^d[(B&255)+46469|0])&255}if((a[b+25|0]|0)!=0){B=a[30928+((d[b+25|0]|0)-1)|0]|0;u=(u&255^d[(B&255)+46469|0])&255;v=(v&255^d[(B&255)+46588|0])&255;w=(w&255^d[(B&255)+46492|0])&255;x=(x&255^d[(B&255)+46562|0])&255}if((a[b+26|0]|0)!=0){B=a[30928+((d[b+26|0]|0)-1)|0]|0;u=(u&255^d[(B&255)+46562|0])&255;v=(v&255^d[(B&255)+46637|0])&255;w=(w&255^d[(B&255)+46615|0])&255;x=(x&255^d[(B&255)+46633|0])&255}if((a[b+27|0]|0)!=0){B=a[30928+((d[b+27|0]|0)-1)|0]|0;u=(u&255^d[(B&255)+46633|0])&255;v=(v&255^d[(B&255)+46551|0])&255;w=(w&255^d[(B&255)+46485|0])&255;x=(x&255^d[(B&255)+46577|0])&255}if((a[b+28|0]|0)!=0){B=a[30928+((d[b+28|0]|0)-1)|0]|0;u=(u&255^d[(B&255)+46577|0])&255;v=(v&255^d[(B&255)+46494|0])&255;w=(w&255^d[(B&255)+46526|0])&255;x=(x&255^d[(B&255)+46574|0])&255}if((a[b+29|0]|0)!=0){B=a[30928+((d[b+29|0]|0)-1)|0]|0;u=(u&255^d[(B&255)+46574|0])&255;v=(v&255^d[(B&255)+46484|0])&255;w=(w&255^d[(B&255)+46515|0])&255;x=(x&255^d[(B&255)+46661|0])&255}if((a[b+30|0]|0)!=0){B=a[30928+((d[b+30|0]|0)-1)|0]|0;u=(u&255^d[(B&255)+46661|0])&255;v=(v&255^d[(B&255)+46479|0])&255;w=(w&255^d[(B&255)+46503|0])&255;x=(x&255^d[(B&255)+46648|0])&255}if((a[b+31|0]|0)!=0){B=a[30928+((d[b+31|0]|0)-1)|0]|0;u=(u&255^d[(B&255)+46648|0])&255;v=(v&255^d[(B&255)+46632|0])&255;w=(w&255^d[(B&255)+46564|0])&255;x=(x&255^d[(B&255)+46447|0])&255}C=0;D=0;E=1;while(1){if((D|0)>=256){break}c[h+(D<<2)>>2]=c[37960+((d[30416+(d[30416+(d[30160+(d[54696+E|0]^f&255)|0]^m&255)|0]^q&255)|0]^u&255)<<2)>>2];c[h+1024+(D<<2)>>2]=c[38984+((d[30416+(d[30160+(d[30160+(d[54696+C|0]^j&255)|0]^n&255)|0]^r&255)|0]^v&255)<<2)>>2];c[h+2048+(D<<2)>>2]=c[40008+((d[30160+(d[30416+(d[30416+(d[54696+C|0]^k&255)|0]^o&255)|0]^s&255)|0]^w&255)<<2)>>2];c[h+3072+(D<<2)>>2]=c[41032+((d[30160+(d[30160+(d[30416+(d[54696+E|0]^l&255)|0]^p&255)|0]^t&255)|0]^x&255)<<2)>>2];D=D+1|0;C=C+2|0;E=E+2|0}F=c[37960+((d[30416+(d[30416+(d[30160+(117^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(169^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(169^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(117^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(243^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(103^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(103^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(243^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4096>>2]=F;c[h+4100>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(198^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(179^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(179^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(198^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(244^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(232^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(232^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(244^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4104>>2]=F;c[h+4108>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(219^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(4^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(4^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(219^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(123^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(253^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(253^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(123^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4112>>2]=F;c[h+4116>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(251^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(163^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(163^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(251^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(200^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(118^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(118^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(200^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4120>>2]=F;c[h+4124>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(74^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(154^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(154^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(74^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(211^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(146^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(146^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(211^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4128>>2]=F;c[h+4132>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(230^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(128^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(128^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(230^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(107^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(120^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(120^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(107^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4136>>2]=F;c[h+4140>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(69^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(228^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(228^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(69^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(125^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(221^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(221^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(125^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4144>>2]=F;c[h+4148>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(232^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(209^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(209^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(232^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(75^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(56^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(56^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(75^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4152>>2]=F;c[h+4156>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(214^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(13^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(13^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(214^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(50^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(198^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(198^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(50^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4160>>2]=F;c[h+4164>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(216^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(53^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(53^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(216^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(253^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(152^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(152^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(253^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4168>>2]=F;c[h+4172>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(55^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(24^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(24^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(55^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(113^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(247^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(247^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(113^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4176>>2]=F;c[h+4180>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(241^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(236^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(236^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(241^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(225^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(108^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(108^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(225^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4184>>2]=F;c[h+4188>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(48^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(67^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(67^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(48^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(15^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(117^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(117^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(15^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4192>>2]=F;c[h+4196>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(248^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(55^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(55^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(248^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(27^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(38^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(38^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(27^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4200>>2]=F;c[h+4204>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(135^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(250^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(250^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(135^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(250^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(19^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(19^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(250^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4208>>2]=F;c[h+4212>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(6^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(148^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(148^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(6^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(63^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(72^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(72^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(63^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4216>>2]=F;c[h+4220>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(94^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(242^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(242^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(94^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(186^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(208^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(208^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(186^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4224>>2]=F;c[h+4228>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(174^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(139^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(139^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(174^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(91^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(48^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(48^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(91^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4232>>2]=F;c[h+4236>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(138^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(132^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(132^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(138^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(0^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(84^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(84^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(0^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4240>>2]=F;c[h+4244>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(d[30416+(d[30160+(188^d[b+24|0])|0]^d[b+16|0])|0]^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(223^d[b+25|0])|0]^d[b+17|0])|0]^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(223^d[b+26|0])|0]^d[b+18|0])|0]^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(188^d[b+27|0])|0]^d[b+19|0])|0]^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(d[30416+(d[30160+(157^d[b+28|0])|0]^d[b+20|0])|0]^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(d[30160+(d[30160+(35^d[b+29|0])|0]^d[b+21|0])|0]^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(d[30416+(d[30416+(35^d[b+30|0])|0]^d[b+22|0])|0]^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(d[30160+(d[30416+(157^d[b+31|0])|0]^d[b+23|0])|0]^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4248>>2]=F;c[h+4252>>2]=(G<<9)+(G>>>23)}else{C=0;D=0;E=1;while(1){if((D|0)>=256){break}c[h+(D<<2)>>2]=c[37960+((d[30416+(d[54696+C|0]^f&255)|0]^m&255)<<2)>>2];c[h+1024+(D<<2)>>2]=c[38984+((d[30416+(d[54696+E|0]^j&255)|0]^n&255)<<2)>>2];c[h+2048+(D<<2)>>2]=c[40008+((d[30160+(d[54696+C|0]^k&255)|0]^o&255)<<2)>>2];c[h+3072+(D<<2)>>2]=c[41032+((d[30160+(d[54696+E|0]^l&255)|0]^p&255)<<2)>>2];D=D+1|0;C=C+2|0;E=E+2|0}F=c[37960+((d[30416+(169^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(117^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(169^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(117^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(103^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(243^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(103^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(243^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4096>>2]=F;c[h+4100>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(179^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(198^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(179^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(198^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(232^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(244^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(232^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(244^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4104>>2]=F;c[h+4108>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(4^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(219^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(4^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(219^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(253^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(123^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(253^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(123^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4112>>2]=F;c[h+4116>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(163^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(251^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(163^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(251^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(118^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(200^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(118^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(200^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4120>>2]=F;c[h+4124>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(154^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(74^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(154^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(74^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(146^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(211^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(146^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(211^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4128>>2]=F;c[h+4132>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(128^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(230^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(128^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(230^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(120^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(107^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(120^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(107^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4136>>2]=F;c[h+4140>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(228^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(69^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(228^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(69^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(221^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(125^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(221^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(125^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4144>>2]=F;c[h+4148>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(209^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(232^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(209^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(232^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(56^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(75^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(56^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(75^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4152>>2]=F;c[h+4156>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(13^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(214^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(13^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(214^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(198^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(50^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(198^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(50^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4160>>2]=F;c[h+4164>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(53^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(216^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(53^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(216^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(152^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(253^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(152^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(253^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4168>>2]=F;c[h+4172>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(24^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(55^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(24^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(55^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(247^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(113^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(247^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(113^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4176>>2]=F;c[h+4180>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(236^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(241^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(236^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(241^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(108^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(225^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(108^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(225^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4184>>2]=F;c[h+4188>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(67^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(48^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(67^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(48^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(117^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(15^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(117^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(15^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4192>>2]=F;c[h+4196>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(55^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(248^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(55^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(248^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(38^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(27^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(38^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(27^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4200>>2]=F;c[h+4204>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(250^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(135^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(250^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(135^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(19^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(250^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(19^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(250^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4208>>2]=F;c[h+4212>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(148^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(6^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(148^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(6^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(72^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(63^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(72^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(63^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4216>>2]=F;c[h+4220>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(242^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(94^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(242^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(94^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(208^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(186^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(208^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(186^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4224>>2]=F;c[h+4228>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(139^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(174^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(139^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(174^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(48^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(91^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(48^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(91^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4232>>2]=F;c[h+4236>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(132^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(138^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(132^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(138^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(84^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(0^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(84^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(0^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4240>>2]=F;c[h+4244>>2]=(G<<9)+(G>>>23);F=c[37960+((d[30416+(223^d[b+8|0])|0]^d[b|0])<<2)>>2]^c[38984+((d[30416+(188^d[b+9|0])|0]^d[b+1|0])<<2)>>2]^c[40008+((d[30160+(223^d[b+10|0])|0]^d[b+2|0])<<2)>>2]^c[41032+((d[30160+(188^d[b+11|0])|0]^d[b+3|0])<<2)>>2];G=c[37960+((d[30416+(35^d[b+12|0])|0]^d[b+4|0])<<2)>>2]^c[38984+((d[30416+(157^d[b+13|0])|0]^d[b+5|0])<<2)>>2]^c[40008+((d[30160+(35^d[b+14|0])|0]^d[b+6|0])<<2)>>2]^c[41032+((d[30160+(157^d[b+15|0])|0]^d[b+7|0])<<2)>>2];G=(G<<8)+(G>>>24)|0;F=F+G|0;G=G+F|0;c[h+4248>>2]=F;c[h+4252>>2]=(G<<9)+(G>>>23)}y=0;z=y;i=g;return z|0}function qD(){var a=0,b=0,c=0,d=0,e=0;a=i;i=i+4272|0;b=a|0;c=a+4256|0;qx(b,6592,16)|0;qy(b,c|0,6320);if((Af(c|0,7352,16)|0)!=0){d=68976;e=d;i=a;return e|0}qz(b,c|0,c|0);if((Af(c|0,6320,16)|0)!=0){d=65856;e=d;i=a;return e|0}qx(b,6448,32)|0;qy(b,c|0,6296);if((Af(c|0,7280,16)|0)!=0){d=63608;e=d;i=a;return e|0}qz(b,c|0,c|0);if((Af(c|0,6296,16)|0)!=0){d=62056;e=d;i=a;return e|0}else{d=0;e=d;i=a;return e|0}return 0}function qE(a){a=a|0;Ae(a|0,0,168);return}function qF(a,b,c){a=a|0;b=b|0;c=c|0;qI(a,b,c);return}function qG(b){b=b|0;var d=0,e=0;d=b;qI(d,0,0);b=d+128|0;e=c[b>>2]|0;c[b>>2]=e+1;a[d+64+e|0]=-128;if((c[d+128>>2]|0)>>>0>32){while(1){if((c[d+128>>2]|0)>>>0>=64){break}e=d+128|0;b=c[e>>2]|0;c[e>>2]=b+1;a[d+64+b|0]=0}qI(d,0,0)}while(1){if((c[d+128>>2]|0)>>>0>=32){break}b=d+128|0;e=c[b>>2]|0;c[b>>2]=e+1;a[d+64+e|0]=0}e=d+64+(c[d+128>>2]|0)|0;b=d+132|0;Ac(e|0,b|0,32)|0;b=d+128|0;c[b>>2]=(c[b>>2]|0)+32;qI(d,0,0);b=0;while(1){if(b>>>0>=8){break}a[d+64+(b<<3)|0]=((c[d+(b<<3)+4>>2]|0)>>>24|0<<8)&255;a[d+64+((b<<3)+1)|0]=((c[d+(b<<3)+4>>2]|0)>>>16|0<<16)&255;a[d+64+((b<<3)+2)|0]=((c[d+(b<<3)+4>>2]|0)>>>8|0<<24)&255;a[d+64+((b<<3)+3)|0]=c[d+(b<<3)+4>>2]&255;e=d+(b<<3)|0;a[d+64+((b<<3)+4)|0]=((c[e>>2]|0)>>>24|c[e+4>>2]<<8)&255;e=d+(b<<3)|0;a[d+64+((b<<3)+5)|0]=((c[e>>2]|0)>>>16|c[e+4>>2]<<16)&255;e=d+(b<<3)|0;a[d+64+((b<<3)+6)|0]=((c[e>>2]|0)>>>8|c[e+4>>2]<<24)&255;a[d+64+((b<<3)+7)|0]=c[d+(b<<3)>>2]&255;b=b+1|0}return}function qH(a){a=a|0;return a+64|0}function qI(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;j=b;b=f;f=e;c[h>>2]=b;c[h+4>>2]=0;if((c[j+128>>2]|0)==64){qJ(j,j+64|0);c[j+128>>2]=0}if((f|0)==0){i=g;return}do{if((c[j+128>>2]|0)!=0){while(1){if((b|0)!=0){k=(c[j+128>>2]|0)>>>0<64}else{k=0}if(!k){break}e=f;f=e+1|0;l=a[e]|0;e=j+128|0;m=c[e>>2]|0;c[e>>2]=m+1;a[j+64+m|0]=l;b=b-1|0}qI(j,0,0);if((b|0)!=0){break}i=g;return}}while(0);while(1){if(b>>>0<64){break}qJ(j,f);c[j+128>>2]=0;b=b-64|0;f=f+64|0}while(1){if((b|0)!=0){n=(c[j+128>>2]|0)>>>0<64}else{n=0}if(!n){break}k=f;f=k+1|0;l=a[k]|0;k=j+128|0;m=c[k>>2]|0;c[k>>2]=m+1;a[j+64+m|0]=l;b=b-1|0}b=0;f=c[h>>2]|0;n=c[h+4>>2]<<3|f>>>29;c[h>>2]=f<<3|0>>>29;c[h+4>>2]=n;n=1;while(1){if(n>>>0>32){break}if(!((c[h>>2]|0)!=0|(c[h+4>>2]|0)!=0)){if((b|0)==0){f=696;break}}f=Am(d[j+132+(32-n)|0]|0,0,c[h>>2]&255,c[h+4>>2]&0)|0;l=Am(b,0,f,H)|0;b=l;a[j+132+(32-n)|0]=b&255;l=c[h+4>>2]|0;c[h>>2]=(c[h>>2]|0)>>>8|l<<24;c[h+4>>2]=l>>>8|0<<24;b=b>>>8;n=n+1|0}do{if(!((c[h>>2]|0)!=0|(c[h+4>>2]|0)!=0)){if((b|0)!=0){break}i=g;return}}while(0);ug(82712,73496,1351,86744);i=g;return}function qJ(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+256|0;f=e|0;g=e+64|0;h=e+128|0;j=e+192|0;k=a;a=b;b=0;while(1){if(b>>>0>=8){break}l=d[a+((b<<3)+4)|0]|0;m=d[a+((b<<3)+5)|0]|0;n=d[a+((b<<3)+6)|0]|0;o=(d[a+(b<<3)|0]|0)<<24|0>>>8|((d[a+((b<<3)+1)|0]|0)<<16|0>>>16)|((d[a+((b<<3)+2)|0]|0)<<8|0>>>24)|(d[a+((b<<3)+3)|0]|0)|(0<<24|l>>>8)|(0<<16|m>>>16)|(0<<8|n>>>24)|0;p=f+(b<<3)|0;c[p>>2]=0<<24|0>>>8|(0<<16|0>>>16)|(0<<8|0>>>24)|(l<<24|0>>>8)|(m<<16|0>>>16)|(n<<8|0>>>24)|(d[a+((b<<3)+7)|0]|0);c[p+4>>2]=o;b=b+1|0}b=0;while(1){if(b>>>0>=8){break}a=k+(b<<3)|0;o=c[a+4>>2]|0;p=g+(b<<3)|0;c[p>>2]=c[a>>2];c[p+4>>2]=o;b=b+1|0}b=0;while(1){if(b>>>0>=8){break}o=k+(b<<3)|0;p=c[o+4>>2]|0;a=h+(b<<3)|0;c[a>>2]=c[o>>2];c[a+4>>2]=p;b=b+1|0}b=0;while(1){if(b>>>0>=8){break}p=f+(b<<3)|0;a=h+(b<<3)|0;o=c[a+4>>2]^c[p+4>>2];c[a>>2]=c[a>>2]^c[p>>2];c[a+4>>2]=o;b=b+1|0}o=0;while(1){if(o>>>0>=10){break}a=119952+((((c[g+4>>2]|0)>>>24|0<<8)&255)<<3)|0;p=117904+((((c[g+60>>2]|0)>>>16|0<<16)&255)<<3)|0;n=115856+((((c[g+52>>2]|0)>>>8|0<<24)&255)<<3)|0;m=113808+((c[g+44>>2]&255)<<3)|0;l=g+32|0;q=111760+((((c[l>>2]|0)>>>24|c[l+4>>2]<<8)&255)<<3)|0;l=g+24|0;r=109712+((((c[l>>2]|0)>>>16|c[l+4>>2]<<16)&255)<<3)|0;l=g+16|0;s=107664+((((c[l>>2]|0)>>>8|c[l+4>>2]<<24)&255)<<3)|0;l=105616+((c[g+8>>2]&255)<<3)|0;t=30080+(o<<3)|0;u=c[a+4>>2]^c[p+4>>2]^c[n+4>>2]^c[m+4>>2]^c[q+4>>2]^c[r+4>>2]^c[s+4>>2]^c[l+4>>2]^c[t+4>>2];v=j|0;c[v>>2]=c[a>>2]^c[p>>2]^c[n>>2]^c[m>>2]^c[q>>2]^c[r>>2]^c[s>>2]^c[l>>2]^c[t>>2];c[v+4>>2]=u;u=119952+((((c[g+12>>2]|0)>>>24|0<<8)&255)<<3)|0;v=117904+((((c[g+4>>2]|0)>>>16|0<<16)&255)<<3)|0;t=115856+((((c[g+60>>2]|0)>>>8|0<<24)&255)<<3)|0;l=113808+((c[g+52>>2]&255)<<3)|0;s=g+40|0;r=111760+((((c[s>>2]|0)>>>24|c[s+4>>2]<<8)&255)<<3)|0;s=g+32|0;q=109712+((((c[s>>2]|0)>>>16|c[s+4>>2]<<16)&255)<<3)|0;s=g+24|0;m=107664+((((c[s>>2]|0)>>>8|c[s+4>>2]<<24)&255)<<3)|0;s=105616+((c[g+16>>2]&255)<<3)|0;n=c[u+4>>2]^c[v+4>>2]^c[t+4>>2]^c[l+4>>2]^c[r+4>>2]^c[q+4>>2]^c[m+4>>2]^c[s+4>>2];p=j+8|0;c[p>>2]=c[u>>2]^c[v>>2]^c[t>>2]^c[l>>2]^c[r>>2]^c[q>>2]^c[m>>2]^c[s>>2];c[p+4>>2]=n;n=119952+((((c[g+20>>2]|0)>>>24|0<<8)&255)<<3)|0;p=117904+((((c[g+12>>2]|0)>>>16|0<<16)&255)<<3)|0;s=115856+((((c[g+4>>2]|0)>>>8|0<<24)&255)<<3)|0;m=113808+((c[g+60>>2]&255)<<3)|0;q=g+48|0;r=111760+((((c[q>>2]|0)>>>24|c[q+4>>2]<<8)&255)<<3)|0;q=g+40|0;l=109712+((((c[q>>2]|0)>>>16|c[q+4>>2]<<16)&255)<<3)|0;q=g+32|0;t=107664+((((c[q>>2]|0)>>>8|c[q+4>>2]<<24)&255)<<3)|0;q=105616+((c[g+24>>2]&255)<<3)|0;v=c[n+4>>2]^c[p+4>>2]^c[s+4>>2]^c[m+4>>2]^c[r+4>>2]^c[l+4>>2]^c[t+4>>2]^c[q+4>>2];u=j+16|0;c[u>>2]=c[n>>2]^c[p>>2]^c[s>>2]^c[m>>2]^c[r>>2]^c[l>>2]^c[t>>2]^c[q>>2];c[u+4>>2]=v;v=119952+((((c[g+28>>2]|0)>>>24|0<<8)&255)<<3)|0;u=117904+((((c[g+20>>2]|0)>>>16|0<<16)&255)<<3)|0;q=115856+((((c[g+12>>2]|0)>>>8|0<<24)&255)<<3)|0;t=113808+((c[g+4>>2]&255)<<3)|0;l=g+56|0;r=111760+((((c[l>>2]|0)>>>24|c[l+4>>2]<<8)&255)<<3)|0;l=g+48|0;m=109712+((((c[l>>2]|0)>>>16|c[l+4>>2]<<16)&255)<<3)|0;l=g+40|0;s=107664+((((c[l>>2]|0)>>>8|c[l+4>>2]<<24)&255)<<3)|0;l=105616+((c[g+32>>2]&255)<<3)|0;p=c[v+4>>2]^c[u+4>>2]^c[q+4>>2]^c[t+4>>2]^c[r+4>>2]^c[m+4>>2]^c[s+4>>2]^c[l+4>>2];n=j+24|0;c[n>>2]=c[v>>2]^c[u>>2]^c[q>>2]^c[t>>2]^c[r>>2]^c[m>>2]^c[s>>2]^c[l>>2];c[n+4>>2]=p;p=119952+((((c[g+36>>2]|0)>>>24|0<<8)&255)<<3)|0;n=117904+((((c[g+28>>2]|0)>>>16|0<<16)&255)<<3)|0;l=115856+((((c[g+20>>2]|0)>>>8|0<<24)&255)<<3)|0;s=113808+((c[g+12>>2]&255)<<3)|0;m=g|0;r=111760+((((c[m>>2]|0)>>>24|c[m+4>>2]<<8)&255)<<3)|0;m=g+56|0;t=109712+((((c[m>>2]|0)>>>16|c[m+4>>2]<<16)&255)<<3)|0;m=g+48|0;q=107664+((((c[m>>2]|0)>>>8|c[m+4>>2]<<24)&255)<<3)|0;m=105616+((c[g+40>>2]&255)<<3)|0;u=c[p+4>>2]^c[n+4>>2]^c[l+4>>2]^c[s+4>>2]^c[r+4>>2]^c[t+4>>2]^c[q+4>>2]^c[m+4>>2];v=j+32|0;c[v>>2]=c[p>>2]^c[n>>2]^c[l>>2]^c[s>>2]^c[r>>2]^c[t>>2]^c[q>>2]^c[m>>2];c[v+4>>2]=u;u=119952+((((c[g+44>>2]|0)>>>24|0<<8)&255)<<3)|0;v=117904+((((c[g+36>>2]|0)>>>16|0<<16)&255)<<3)|0;m=115856+((((c[g+28>>2]|0)>>>8|0<<24)&255)<<3)|0;q=113808+((c[g+20>>2]&255)<<3)|0;t=g+8|0;r=111760+((((c[t>>2]|0)>>>24|c[t+4>>2]<<8)&255)<<3)|0;t=g|0;s=109712+((((c[t>>2]|0)>>>16|c[t+4>>2]<<16)&255)<<3)|0;t=g+56|0;l=107664+((((c[t>>2]|0)>>>8|c[t+4>>2]<<24)&255)<<3)|0;t=105616+((c[g+48>>2]&255)<<3)|0;n=c[u+4>>2]^c[v+4>>2]^c[m+4>>2]^c[q+4>>2]^c[r+4>>2]^c[s+4>>2]^c[l+4>>2]^c[t+4>>2];p=j+40|0;c[p>>2]=c[u>>2]^c[v>>2]^c[m>>2]^c[q>>2]^c[r>>2]^c[s>>2]^c[l>>2]^c[t>>2];c[p+4>>2]=n;n=119952+((((c[g+52>>2]|0)>>>24|0<<8)&255)<<3)|0;p=117904+((((c[g+44>>2]|0)>>>16|0<<16)&255)<<3)|0;t=115856+((((c[g+36>>2]|0)>>>8|0<<24)&255)<<3)|0;l=113808+((c[g+28>>2]&255)<<3)|0;s=g+16|0;r=111760+((((c[s>>2]|0)>>>24|c[s+4>>2]<<8)&255)<<3)|0;s=g+8|0;q=109712+((((c[s>>2]|0)>>>16|c[s+4>>2]<<16)&255)<<3)|0;s=g|0;m=107664+((((c[s>>2]|0)>>>8|c[s+4>>2]<<24)&255)<<3)|0;s=105616+((c[g+56>>2]&255)<<3)|0;v=c[n+4>>2]^c[p+4>>2]^c[t+4>>2]^c[l+4>>2]^c[r+4>>2]^c[q+4>>2]^c[m+4>>2]^c[s+4>>2];u=j+48|0;c[u>>2]=c[n>>2]^c[p>>2]^c[t>>2]^c[l>>2]^c[r>>2]^c[q>>2]^c[m>>2]^c[s>>2];c[u+4>>2]=v;v=119952+((((c[g+60>>2]|0)>>>24|0<<8)&255)<<3)|0;u=117904+((((c[g+52>>2]|0)>>>16|0<<16)&255)<<3)|0;s=115856+((((c[g+44>>2]|0)>>>8|0<<24)&255)<<3)|0;m=113808+((c[g+36>>2]&255)<<3)|0;q=g+24|0;r=111760+((((c[q>>2]|0)>>>24|c[q+4>>2]<<8)&255)<<3)|0;q=g+16|0;l=109712+((((c[q>>2]|0)>>>16|c[q+4>>2]<<16)&255)<<3)|0;q=g+8|0;t=107664+((((c[q>>2]|0)>>>8|c[q+4>>2]<<24)&255)<<3)|0;q=105616+((c[g>>2]&255)<<3)|0;p=c[v+4>>2]^c[u+4>>2]^c[s+4>>2]^c[m+4>>2]^c[r+4>>2]^c[l+4>>2]^c[t+4>>2]^c[q+4>>2];n=j+56|0;c[n>>2]=c[v>>2]^c[u>>2]^c[s>>2]^c[m>>2]^c[r>>2]^c[l>>2]^c[t>>2]^c[q>>2];c[n+4>>2]=p;b=0;while(1){if(b>>>0>=8){break}p=j+(b<<3)|0;n=c[p+4>>2]|0;q=g+(b<<3)|0;c[q>>2]=c[p>>2];c[q+4>>2]=n;b=b+1|0}n=119952+((((c[h+4>>2]|0)>>>24|0<<8)&255)<<3)|0;q=117904+((((c[h+60>>2]|0)>>>16|0<<16)&255)<<3)|0;p=115856+((((c[h+52>>2]|0)>>>8|0<<24)&255)<<3)|0;t=113808+((c[h+44>>2]&255)<<3)|0;l=h+32|0;r=111760+((((c[l>>2]|0)>>>24|c[l+4>>2]<<8)&255)<<3)|0;l=h+24|0;m=109712+((((c[l>>2]|0)>>>16|c[l+4>>2]<<16)&255)<<3)|0;l=h+16|0;s=107664+((((c[l>>2]|0)>>>8|c[l+4>>2]<<24)&255)<<3)|0;l=105616+((c[h+8>>2]&255)<<3)|0;u=g|0;v=c[n+4>>2]^c[q+4>>2]^c[p+4>>2]^c[t+4>>2]^c[r+4>>2]^c[m+4>>2]^c[s+4>>2]^c[l+4>>2]^c[u+4>>2];a=j|0;c[a>>2]=c[n>>2]^c[q>>2]^c[p>>2]^c[t>>2]^c[r>>2]^c[m>>2]^c[s>>2]^c[l>>2]^c[u>>2];c[a+4>>2]=v;v=119952+((((c[h+12>>2]|0)>>>24|0<<8)&255)<<3)|0;a=117904+((((c[h+4>>2]|0)>>>16|0<<16)&255)<<3)|0;u=115856+((((c[h+60>>2]|0)>>>8|0<<24)&255)<<3)|0;l=113808+((c[h+52>>2]&255)<<3)|0;s=h+40|0;m=111760+((((c[s>>2]|0)>>>24|c[s+4>>2]<<8)&255)<<3)|0;s=h+32|0;r=109712+((((c[s>>2]|0)>>>16|c[s+4>>2]<<16)&255)<<3)|0;s=h+24|0;t=107664+((((c[s>>2]|0)>>>8|c[s+4>>2]<<24)&255)<<3)|0;s=105616+((c[h+16>>2]&255)<<3)|0;p=g+8|0;q=c[v+4>>2]^c[a+4>>2]^c[u+4>>2]^c[l+4>>2]^c[m+4>>2]^c[r+4>>2]^c[t+4>>2]^c[s+4>>2]^c[p+4>>2];n=j+8|0;c[n>>2]=c[v>>2]^c[a>>2]^c[u>>2]^c[l>>2]^c[m>>2]^c[r>>2]^c[t>>2]^c[s>>2]^c[p>>2];c[n+4>>2]=q;q=119952+((((c[h+20>>2]|0)>>>24|0<<8)&255)<<3)|0;n=117904+((((c[h+12>>2]|0)>>>16|0<<16)&255)<<3)|0;p=115856+((((c[h+4>>2]|0)>>>8|0<<24)&255)<<3)|0;s=113808+((c[h+60>>2]&255)<<3)|0;t=h+48|0;r=111760+((((c[t>>2]|0)>>>24|c[t+4>>2]<<8)&255)<<3)|0;t=h+40|0;m=109712+((((c[t>>2]|0)>>>16|c[t+4>>2]<<16)&255)<<3)|0;t=h+32|0;l=107664+((((c[t>>2]|0)>>>8|c[t+4>>2]<<24)&255)<<3)|0;t=105616+((c[h+24>>2]&255)<<3)|0;u=g+16|0;a=c[q+4>>2]^c[n+4>>2]^c[p+4>>2]^c[s+4>>2]^c[r+4>>2]^c[m+4>>2]^c[l+4>>2]^c[t+4>>2]^c[u+4>>2];v=j+16|0;c[v>>2]=c[q>>2]^c[n>>2]^c[p>>2]^c[s>>2]^c[r>>2]^c[m>>2]^c[l>>2]^c[t>>2]^c[u>>2];c[v+4>>2]=a;a=119952+((((c[h+28>>2]|0)>>>24|0<<8)&255)<<3)|0;v=117904+((((c[h+20>>2]|0)>>>16|0<<16)&255)<<3)|0;u=115856+((((c[h+12>>2]|0)>>>8|0<<24)&255)<<3)|0;t=113808+((c[h+4>>2]&255)<<3)|0;l=h+56|0;m=111760+((((c[l>>2]|0)>>>24|c[l+4>>2]<<8)&255)<<3)|0;l=h+48|0;r=109712+((((c[l>>2]|0)>>>16|c[l+4>>2]<<16)&255)<<3)|0;l=h+40|0;s=107664+((((c[l>>2]|0)>>>8|c[l+4>>2]<<24)&255)<<3)|0;l=105616+((c[h+32>>2]&255)<<3)|0;p=g+24|0;n=c[a+4>>2]^c[v+4>>2]^c[u+4>>2]^c[t+4>>2]^c[m+4>>2]^c[r+4>>2]^c[s+4>>2]^c[l+4>>2]^c[p+4>>2];q=j+24|0;c[q>>2]=c[a>>2]^c[v>>2]^c[u>>2]^c[t>>2]^c[m>>2]^c[r>>2]^c[s>>2]^c[l>>2]^c[p>>2];c[q+4>>2]=n;n=119952+((((c[h+36>>2]|0)>>>24|0<<8)&255)<<3)|0;q=117904+((((c[h+28>>2]|0)>>>16|0<<16)&255)<<3)|0;p=115856+((((c[h+20>>2]|0)>>>8|0<<24)&255)<<3)|0;l=113808+((c[h+12>>2]&255)<<3)|0;s=h|0;r=111760+((((c[s>>2]|0)>>>24|c[s+4>>2]<<8)&255)<<3)|0;s=h+56|0;m=109712+((((c[s>>2]|0)>>>16|c[s+4>>2]<<16)&255)<<3)|0;s=h+48|0;t=107664+((((c[s>>2]|0)>>>8|c[s+4>>2]<<24)&255)<<3)|0;s=105616+((c[h+40>>2]&255)<<3)|0;u=g+32|0;v=c[n+4>>2]^c[q+4>>2]^c[p+4>>2]^c[l+4>>2]^c[r+4>>2]^c[m+4>>2]^c[t+4>>2]^c[s+4>>2]^c[u+4>>2];a=j+32|0;c[a>>2]=c[n>>2]^c[q>>2]^c[p>>2]^c[l>>2]^c[r>>2]^c[m>>2]^c[t>>2]^c[s>>2]^c[u>>2];c[a+4>>2]=v;v=119952+((((c[h+44>>2]|0)>>>24|0<<8)&255)<<3)|0;a=117904+((((c[h+36>>2]|0)>>>16|0<<16)&255)<<3)|0;u=115856+((((c[h+28>>2]|0)>>>8|0<<24)&255)<<3)|0;s=113808+((c[h+20>>2]&255)<<3)|0;t=h+8|0;m=111760+((((c[t>>2]|0)>>>24|c[t+4>>2]<<8)&255)<<3)|0;t=h|0;r=109712+((((c[t>>2]|0)>>>16|c[t+4>>2]<<16)&255)<<3)|0;t=h+56|0;l=107664+((((c[t>>2]|0)>>>8|c[t+4>>2]<<24)&255)<<3)|0;t=105616+((c[h+48>>2]&255)<<3)|0;p=g+40|0;q=c[v+4>>2]^c[a+4>>2]^c[u+4>>2]^c[s+4>>2]^c[m+4>>2]^c[r+4>>2]^c[l+4>>2]^c[t+4>>2]^c[p+4>>2];n=j+40|0;c[n>>2]=c[v>>2]^c[a>>2]^c[u>>2]^c[s>>2]^c[m>>2]^c[r>>2]^c[l>>2]^c[t>>2]^c[p>>2];c[n+4>>2]=q;q=119952+((((c[h+52>>2]|0)>>>24|0<<8)&255)<<3)|0;n=117904+((((c[h+44>>2]|0)>>>16|0<<16)&255)<<3)|0;p=115856+((((c[h+36>>2]|0)>>>8|0<<24)&255)<<3)|0;t=113808+((c[h+28>>2]&255)<<3)|0;l=h+16|0;r=111760+((((c[l>>2]|0)>>>24|c[l+4>>2]<<8)&255)<<3)|0;l=h+8|0;m=109712+((((c[l>>2]|0)>>>16|c[l+4>>2]<<16)&255)<<3)|0;l=h|0;s=107664+((((c[l>>2]|0)>>>8|c[l+4>>2]<<24)&255)<<3)|0;l=105616+((c[h+56>>2]&255)<<3)|0;u=g+48|0;a=c[q+4>>2]^c[n+4>>2]^c[p+4>>2]^c[t+4>>2]^c[r+4>>2]^c[m+4>>2]^c[s+4>>2]^c[l+4>>2]^c[u+4>>2];v=j+48|0;c[v>>2]=c[q>>2]^c[n>>2]^c[p>>2]^c[t>>2]^c[r>>2]^c[m>>2]^c[s>>2]^c[l>>2]^c[u>>2];c[v+4>>2]=a;a=119952+((((c[h+60>>2]|0)>>>24|0<<8)&255)<<3)|0;v=117904+((((c[h+52>>2]|0)>>>16|0<<16)&255)<<3)|0;u=115856+((((c[h+44>>2]|0)>>>8|0<<24)&255)<<3)|0;l=113808+((c[h+36>>2]&255)<<3)|0;s=h+24|0;m=111760+((((c[s>>2]|0)>>>24|c[s+4>>2]<<8)&255)<<3)|0;s=h+16|0;r=109712+((((c[s>>2]|0)>>>16|c[s+4>>2]<<16)&255)<<3)|0;s=h+8|0;t=107664+((((c[s>>2]|0)>>>8|c[s+4>>2]<<24)&255)<<3)|0;s=105616+((c[h>>2]&255)<<3)|0;p=g+56|0;n=c[a+4>>2]^c[v+4>>2]^c[u+4>>2]^c[l+4>>2]^c[m+4>>2]^c[r+4>>2]^c[t+4>>2]^c[s+4>>2]^c[p+4>>2];q=j+56|0;c[q>>2]=c[a>>2]^c[v>>2]^c[u>>2]^c[l>>2]^c[m>>2]^c[r>>2]^c[t>>2]^c[s>>2]^c[p>>2];c[q+4>>2]=n;b=0;while(1){if(b>>>0>=8){break}n=j+(b<<3)|0;q=c[n+4>>2]|0;p=h+(b<<3)|0;c[p>>2]=c[n>>2];c[p+4>>2]=q;b=b+1|0}o=o+1|0}b=0;while(1){if(b>>>0>=8){break}o=f+(b<<3)|0;j=k+(b<<3)|0;g=c[j+4>>2]^c[o+4>>2];c[j>>2]=c[j>>2]^c[o>>2];c[j+4>>2]=g;b=b+1|0}b=0;while(1){if(b>>>0>=8){break}f=h+(b<<3)|0;g=k+(b<<3)|0;j=c[g+4>>2]^c[f+4>>2];c[g>>2]=c[g>>2]^c[f>>2];c[g+4>>2]=j;b=b+1|0}i=e;return}function qK(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=a;a=b;b=d;d=c[a+4>>2]|0;f=c[a+8>>2]|0;g=0;h=d+1|0;if((c[e>>2]|0)<(h|0)){r7(e,h)}i=c[a+16>>2]|0;a=c[e+16>>2]|0;if((d|0)==0){c[a>>2]=b;h=(b|0)!=0?1:0;j=h;k=e;l=k+4|0;c[l>>2]=j;m=g;n=e;o=n+8|0;c[o>>2]=m;return}if((f|0)!=0){do{if((d|0)==1){if((c[i>>2]|0)>>>0>=b>>>0){p=754;break}c[a>>2]=b-(c[i>>2]|0);h=1}else{p=754}}while(0);if((p|0)==754){p=a;f=i;q=d;r=b;rd(p,f,q,r)|0;h=d-((c[a+(d-1<<2)>>2]|0)==0)|0;g=1}}else{r=rb(a,i,d,b)|0;c[a+(d<<2)>>2]=r;h=d+r|0}j=h;k=e;l=k+4|0;c[l>>2]=j;m=g;n=e;o=n+8|0;c[o>>2]=m;return}function qL(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=a;a=b;b=d;if((c[a+4>>2]|0)<(c[b+4>>2]|0)){f=c[b+4>>2]|0;g=c[b+8>>2]|0;h=c[a+4>>2]|0;i=c[a+8>>2]|0;j=f+1|0;if((c[e>>2]|0)<(j|0)){r7(e,j)}k=c[b+16>>2]|0;l=c[a+16>>2]|0}else{f=c[a+4>>2]|0;g=c[a+8>>2]|0;h=c[b+4>>2]|0;i=c[b+8>>2]|0;j=f+1|0;if((c[e>>2]|0)<(j|0)){r7(e,j)}k=c[a+16>>2]|0;l=c[b+16>>2]|0}b=c[e+16>>2]|0;a=0;if((h|0)==0){d=0;while(1){if((d|0)>=(f|0)){break}c[b+(d<<2)>>2]=c[k+(d<<2)>>2];d=d+1|0}j=f;a=g;m=j;n=e;o=n+4|0;c[o>>2]=m;p=a;q=e;r=q+8|0;c[r>>2]=p;return}if((g|0)!=(i|0)){if((f|0)!=(h|0)){i=b;d=k;s=f;t=l;u=h;re(i,d,s,t,u)|0;j=f;while(1){if((j|0)<=0){break}if((c[b+(j-1<<2)>>2]|0)!=0){v=785;break}j=j-1|0}a=g}else{if((rf(k,l,f)|0)<0){u=b;t=l;s=k;d=f;r$(u,t,s,d)|0;j=f;while(1){if((j|0)<=0){break}if((c[b+(j-1<<2)>>2]|0)!=0){v=794;break}j=j-1|0}if((g|0)==0){a=1}}else{r$(b,k,l,f)|0;j=f;while(1){if((j|0)<=0){break}if((c[b+(j-1<<2)>>2]|0)!=0){v=804;break}j=j-1|0}if((g|0)!=0){a=1}}}}else{v=rc(b,k,f,l,h)|0;c[b+(f<<2)>>2]=v;j=f+v|0;if((g|0)!=0){a=1}}m=j;n=e;o=n+4|0;c[o>>2]=m;p=a;q=e;r=q+8|0;c[r>>2]=p;return}function qM(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=a;a=b;b=d;d=c[a+4>>2]|0;f=c[a+8>>2]|0;g=0;h=d+1|0;if((c[e>>2]|0)<(h|0)){r7(e,h)}i=c[a+16>>2]|0;a=c[e+16>>2]|0;if((d|0)==0){c[a>>2]=b;h=(b|0)!=0?1:0;g=1;j=h;k=e;l=k+4|0;c[l>>2]=j;m=g;n=e;o=n+8|0;c[o>>2]=m;return}if((f|0)!=0){f=rb(a,i,d,b)|0;c[a+(d<<2)>>2]=f;h=d+f|0}else{do{if((d|0)==1){if((c[i>>2]|0)>>>0>=b>>>0){p=828;break}c[a>>2]=b-(c[i>>2]|0);h=1;g=1}else{p=828}}while(0);if((p|0)==828){p=a;f=i;i=d;q=b;rd(p,f,i,q)|0;h=d-((c[a+(d-1<<2)>>2]|0)==0)|0}}j=h;k=e;l=k+4|0;c[l>>2]=j;m=g;n=e;o=n+8|0;c[o>>2]=m;return}function qN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=sc(d)|0;c[e+8>>2]=((c[e+8>>2]|0)!=0^1)&1;qL(a,b,e);r9(e);return}function qO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a;qL(e,b,c);q1(e,e,d);return}function qP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a;qN(e,b,c);q1(e,e,d);return}function qQ(a){a=a|0;var b=0,d=0;b=a;do{if((b|0)!=0){if((c[b+12>>2]&4|0)==0){break}return}}while(0);while(1){if((c[b+4>>2]|0)!=0){d=(c[(c[b+16>>2]|0)+((c[b+4>>2]|0)-1<<2)>>2]|0)!=0^1}else{d=0}if(!d){break}a=b+4|0;c[a>>2]=(c[a>>2]|0)-1}return}function qR(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0;b=a;do{if((b|0)!=0){if((c[b+12>>2]&4|0)==0){break}e=c[b+8>>2]|0;f=e;return f|0}}while(0);qQ(b);if((c[b+4>>2]|0)!=0){a=c[(c[b+16>>2]|0)+((c[b+4>>2]|0)-1<<2)>>2]|0;if((a|0)!=0){g=a;if(g>>>0<65536){h=g>>>0<256?0:8}else{h=g>>>0<16777216?16:24}a=h;i=32-((d[85056+(g>>>(a>>>0))|0]|0)+a)|0}else{i=32}i=32-i+((c[b+4>>2]|0)-1<<5)|0}else{i=0}e=i;f=e;return f|0}function qS(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;a=b;b=(a>>>0)/32|0;if(b>>>0>=(c[d+4>>2]|0)>>>0){e=0;f=e;return f|0}else{e=(c[(c[d+16>>2]|0)+(b<<2)>>2]&1<<((a>>>0)%32|0)|0)!=0?1:0;f=e;return f|0}return 0}function qT(a,b){a=a|0;b=b|0;var d=0,e=0;d=a;a=b;b=(a>>>0)/32|0;if(b>>>0>=(c[d+4>>2]|0)>>>0){r7(d,b+1|0);c[d+4>>2]=b+1}e=(c[d+16>>2]|0)+(b<<2)|0;c[e>>2]=c[e>>2]|1<<((a>>>0)%32|0);return}function qU(a,b){a=a|0;b=b|0;var d=0,e=0;d=a;a=b;b=(a>>>0)/32|0;e=(a>>>0)%32|0;if(b>>>0>=(c[d+4>>2]|0)>>>0){r7(d,b+1|0);c[d+4>>2]=b+1}a=(c[d+16>>2]|0)+(b<<2)|0;c[a>>2]=c[a>>2]|1<<e;e=e+1|0;while(1){if(e>>>0>=32){break}a=(c[d+16>>2]|0)+(b<<2)|0;c[a>>2]=c[a>>2]&~(1<<e);e=e+1|0}c[d+4>>2]=b+1;return}function qV(a,b){a=a|0;b=b|0;var d=0,e=0;d=a;a=b;b=(a>>>0)/32|0;e=(a>>>0)%32|0;if(b>>>0>=(c[d+4>>2]|0)>>>0){return}while(1){if(e>>>0>=32){break}a=(c[d+16>>2]|0)+(b<<2)|0;c[a>>2]=c[a>>2]&~(1<<e);e=e+1|0}c[d+4>>2]=b+1;return}function qW(a,b){a=a|0;b=b|0;var d=0,e=0;d=a;a=b;b=(a>>>0)/32|0;if(b>>>0>=(c[d+4>>2]|0)>>>0){return}else{e=(c[d+16>>2]|0)+(b<<2)|0;c[e>>2]=c[e>>2]&~(1<<((a>>>0)%32|0));return}}function qX(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;a=b;b=c[d+16>>2]|0;e=c[d+4>>2]|0;if(a>>>0>=e>>>0){c[d+4>>2]=0;return}f=0;while(1){if(f>>>0>=(e-a|0)>>>0){break}c[b+(f<<2)>>2]=c[b+(f+a<<2)>>2];f=f+1|0}c[b+(f<<2)>>2]=0;f=d+4|0;c[f>>2]=(c[f>>2]|0)-a;return}function qY(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a;a=b;b=d;d=(b>>>0)/32|0;f=(b>>>0)%32|0;if((e|0)==(a|0)){if(d>>>0>=(c[e+4>>2]|0)>>>0){c[e+4>>2]=0;return}if((d|0)!=0){g=0;while(1){if(g>>>0>=((c[e+4>>2]|0)-d|0)>>>0){break}c[(c[e+16>>2]|0)+(g<<2)>>2]=c[(c[e+16>>2]|0)+(g+d<<2)>>2];g=g+1|0}c[(c[e+16>>2]|0)+(g<<2)>>2]=0;b=e+4|0;c[b>>2]=(c[b>>2]|0)-d}do{if((c[e+4>>2]|0)!=0){if((f|0)==0){break}b=c[e+16>>2]|0;h=c[e+16>>2]|0;i=c[e+4>>2]|0;j=f;r_(b,h,i,j)|0}}while(0)}else{if((d|0)!=0){k=c[a+4>>2]|0;c[e+8>>2]=c[a+8>>2];if((c[e>>2]|0)<(k|0)){r7(e,k)}c[e+4>>2]=k;g=0;while(1){if(g>>>0>=(c[a+4>>2]|0)>>>0){break}c[(c[e+16>>2]|0)+(g<<2)>>2]=c[(c[a+16>>2]|0)+(g<<2)>>2];g=g+1|0}c[e+4>>2]=g;if(d>>>0>=(c[e+4>>2]|0)>>>0){c[e+4>>2]=0;return}if((d|0)!=0){g=0;while(1){if(g>>>0>=((c[e+4>>2]|0)-d|0)>>>0){break}c[(c[e+16>>2]|0)+(g<<2)>>2]=c[(c[e+16>>2]|0)+(g+d<<2)>>2];g=g+1|0}c[(c[e+16>>2]|0)+(g<<2)>>2]=0;j=e+4|0;c[j>>2]=(c[j>>2]|0)-d}do{if((c[e+4>>2]|0)!=0){if((f|0)==0){break}d=c[e+16>>2]|0;j=c[e+16>>2]|0;i=c[e+4>>2]|0;h=f;r_(d,j,i,h)|0}}while(0)}else{k=c[a+4>>2]|0;c[e+8>>2]=c[a+8>>2];if((c[e>>2]|0)<(k|0)){r7(e,k)}c[e+4>>2]=k;if((k|0)!=0){if((f|0)!=0){k=c[e+16>>2]|0;h=c[a+16>>2]|0;i=c[e+4>>2]|0;j=f;r_(k,h,i,j)|0}else{g=0;while(1){if(g>>>0>=(c[e+4>>2]|0)>>>0){break}c[(c[e+16>>2]|0)+(g<<2)>>2]=c[(c[a+16>>2]|0)+(g<<2)>>2];g=g+1|0}}}}}while(1){if((c[e+4>>2]|0)<=0){break}if((c[(c[e+16>>2]|0)+((c[e+4>>2]|0)-1<<2)>>2]|0)!=0){g=962;break}g=e+4|0;c[g>>2]=(c[g>>2]|0)-1}return}function qZ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;a=b;b=c[d+4>>2]|0;do{if((a|0)!=0){if((b|0)==0){break}if((c[d>>2]|0)>>>0<(b+a|0)>>>0){r7(d,b+a|0)}e=c[d+16>>2]|0;f=b-1|0;while(1){if((f|0)<0){break}c[e+(f+a<<2)>>2]=c[e+(f<<2)>>2];f=f-1|0}f=0;while(1){if(f>>>0>=a>>>0){break}c[e+(f<<2)>>2]=0;f=f+1|0}f=d+4|0;c[f>>2]=(c[f>>2]|0)+a;return}}while(0);return}function q_(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;a=b;b=d;d=(b>>>0)/32|0;f=(b>>>0)%32|0;do{if((e|0)==(a|0)){if((b|0)!=0){break}return}}while(0);if((e|0)!=(a|0)){g=c[a+4>>2]|0;h=c[a+8>>2]|0;if((c[e>>2]|0)>>>0<(g+d+1|0)>>>0){r7(e,g+d+1|0)}i=c[e+16>>2]|0;j=c[a+16>>2]|0;k=0;while(1){if(k>>>0>=g>>>0){break}c[i+(k<<2)>>2]=c[j+(k<<2)>>2];k=k+1|0}c[e+4>>2]=g;c[e+12>>2]=c[a+12>>2];c[e+8>>2]=h}do{if((d|0)!=0){if((f|0)!=0){l=1006;break}qZ(e,d)}else{l=1006}}while(0);if((l|0)==1006){if((b|0)!=0){qZ(e,d+1|0);qY(e,e,32-f|0)}}while(1){if((c[e+4>>2]|0)<=0){break}if((c[(c[e+16>>2]|0)+((c[e+4>>2]|0)-1<<2)>>2]|0)!=0){l=1013;break}f=e+4|0;c[f>>2]=(c[f>>2]|0)-1}return}function q$(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;a=b;qQ(d);if((c[d+4>>2]|0)==0){e=-((a|0)!=0|0)|0;f=e;return f|0}if((c[d+8>>2]|0)!=0){e=-1;f=e;return f|0}if((c[d+4>>2]|0)!=1){e=1;f=e;return f|0}if((c[c[d+16>>2]>>2]|0)>>>0>a>>>0){e=1;f=e;return f|0}if((c[c[d+16>>2]>>2]|0)>>>0<a>>>0){e=-1;f=e;return f|0}else{e=0;f=e;return f|0}return 0}function q0(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;if((d|0)!=0){if((c[d+12>>2]&4|0)==0){e=1039}}else{e=1039}do{if((e|0)==1039){if((a|0)!=0){if((c[a+12>>2]&4|0)!=0){break}}qQ(d);qQ(a);b=c[d+4>>2]|0;f=c[a+4>>2]|0;do{if((c[d+8>>2]|0)==0){if((c[a+8>>2]|0)==0){break}g=1;h=g;return h|0}}while(0);do{if((c[d+8>>2]|0)!=0){if((c[a+8>>2]|0)!=0){break}g=-1;h=g;return h|0}}while(0);do{if((b|0)!=(f|0)){if((c[d+8>>2]|0)!=0){break}if((c[a+8>>2]|0)!=0){break}g=b-f|0;h=g;return h|0}}while(0);do{if((b|0)!=(f|0)){if((c[d+8>>2]|0)==0){break}if((c[a+8>>2]|0)==0){break}g=f+b|0;h=g;return h|0}}while(0);if((b|0)==0){g=0;h=g;return h|0}f=rf(c[d+16>>2]|0,c[a+16>>2]|0,b)|0;if((f|0)==0){g=0;h=g;return h|0}if((((f|0)<0?1:0)|0)==(((c[d+8>>2]|0)!=0?1:0)|0)){g=1;h=g;return h|0}g=-1;h=g;return h|0}}while(0);do{if((d|0)!=0){if((c[d+12>>2]&4|0)==0){break}if((a|0)!=0){if((c[a+12>>2]&4|0)!=0){break}}g=-1;h=g;return h|0}}while(0);if((d|0)!=0){if((c[d+12>>2]&4|0)==0){e=1048}}else{e=1048}do{if((e|0)==1048){if((a|0)==0){break}if((c[a+12>>2]&4|0)==0){break}g=1;h=g;return h|0}}while(0);do{if((c[d+8>>2]|0)==0){if((c[a+8>>2]|0)!=0){break}g=0;h=g;return h|0}}while(0);if((c[d+8>>2]|0)<(c[a+8>>2]|0)){g=-1;h=g;return h|0}if((c[d+8>>2]|0)>(c[a+8>>2]|0)){g=1;h=g;return h|0}else{g=Af(c[d+16>>2]|0,c[a+16>>2]|0,((c[d+8>>2]|0)+7|0)/8|0|0)|0;h=g;return h|0}return 0}function q1(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=a;a=b;b=d;d=c[b+8>>2]|0;f=0;if((e|0)==(b|0)){f=sc(b)|0;b=f}q2(e,a,b);do{if((((d|0)!=0?1:0)^((c[a+8>>2]|0)!=0?1:0)|0)!=0){if((c[e+4>>2]|0)==0){break}qL(e,e,b)}}while(0);if((f|0)==0){return}r9(f);return}function q2(a,b,c){a=a|0;b=b|0;c=c|0;q6(0,a,b,c);return}function q3(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=a;a=b;b=d;d=rL(c[a+16>>2]|0,c[a+4>>2]|0,b)|0;do{if((d|0)!=0){if((c[a+8>>2]|0)==0){break}d=b-d|0}}while(0);if((e|0)==0){f=d;return f|0}c[c[e+16>>2]>>2]=d;c[e+4>>2]=(d|0)!=0?1:0;f=d;return f|0}function q4(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;a=r1(c[e+4>>2]|0)|0;q5(e,a,b,d);r9(a);return}function q5(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a;a=b;b=d;d=e;e=c[d+8>>2]|0;g=0;if((f|0)==(d|0)){h=1118}else{if((a|0)==(d|0)){h=1118}}if((h|0)==1118){g=sc(d)|0;d=g}q6(f,a,b,d);do{if((e^c[b+8>>2]|0)!=0){if((c[a+4>>2]|0)==0){break}qM(f,f,1);qL(a,a,d)}}while(0);if((g|0)==0){return}r9(g);return}function q6(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;g=i;i=i+48|0;h=g|0;j=g+24|0;k=a;a=b;b=e;e=f;f=c[b+4>>2]|0;l=c[e+4>>2]|0;m=c[b+8>>2]|0;n=c[b+8>>2]^c[e+8>>2];o=0;p=f+1|0;r7(a,p);q=p-l|0;if((q|0)<=0){if((b|0)!=(a|0)){c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];r=0;while(1){if((r|0)>=(f|0)){break}c[(c[a+16>>2]|0)+(r<<2)>>2]=c[(c[b+16>>2]|0)+(r<<2)>>2];r=r+1|0}}if((k|0)!=0){c[k+4>>2]=0;c[k+8>>2]=0}i=g;return}if((k|0)!=0){r7(k,q)}r=c[b+16>>2]|0;b=c[e+16>>2]|0;s=c[a+16>>2]|0;if((l|0)==1){if((k|0)!=0){t=c[k+16>>2]|0;u=rN(t,r,f,c[b>>2]|0)|0;q=q-((c[t+(q-1<<2)>>2]|0)==0)|0;c[k+4>>2]=q;c[k+8>>2]=n}else{u=rL(r,f,c[b>>2]|0)|0}c[s>>2]=u;p=(u|0)!=0?1:0;c[a+4>>2]=p;c[a+8>>2]=m;i=g;return}if((k|0)!=0){t=c[k+16>>2]|0;if((t|0)==(r|0)){c[j+(o<<2)>>2]=f;if((k|0)!=0){v=(c[k+12>>2]&1|0)!=0}else{v=0}u=r2(f,v&1)|0;v=o;o=v+1|0;c[h+(v<<2)>>2]=u;r=u;u=0;while(1){if((u|0)>=(f|0)){break}c[r+(u<<2)>>2]=c[t+(u<<2)>>2];u=u+1|0}}}else{t=s+(l<<2)|0}u=c[b+(l-1<<2)>>2]|0;if(u>>>0<65536){w=u>>>0<256?0:8}else{w=u>>>0<16777216?16:24}v=w;w=32-((d[85056+(u>>>(v>>>0))|0]|0)+v)|0;if((w|0)!=0){c[j+(o<<2)>>2]=l;if((e|0)!=0){x=(c[e+12>>2]&1|0)!=0}else{x=0}v=r2(l,x&1)|0;x=o;o=x+1|0;c[h+(x<<2)>>2]=v;x=v;v=x;u=b;y=l;z=w;rO(v,u,y,z)|0;b=x;x=rO(s,r,f,w)|0;if((x|0)!=0){c[s+(f<<2)>>2]=x;p=f+1|0}else{p=f}}else{do{if((b|0)==(s|0)){A=1174}else{if((k|0)==0){break}if((b|0)==(t|0)){A=1174}}}while(0);if((A|0)==1174){c[j+(o<<2)>>2]=l;if((e|0)!=0){B=(c[e+12>>2]&1|0)!=0}else{B=0}e=r2(l,B&1)|0;B=o;o=B+1|0;c[h+(B<<2)>>2]=e;B=e;e=0;while(1){if((e|0)>=(l|0)){break}c[B+(e<<2)>>2]=c[b+(e<<2)>>2];e=e+1|0}b=B}if((s|0)!=(r|0)){B=0;while(1){if((B|0)>=(f|0)){break}c[s+(B<<2)>>2]=c[r+(B<<2)>>2];B=B+1|0}}p=f}f=rM(t,0,s,p,b,l)|0;if((k|0)!=0){q=p-l|0;if((f|0)!=0){c[t+(q<<2)>>2]=f;q=q+1|0}c[k+4>>2]=q;c[k+8>>2]=n}p=l;while(1){if((p|0)<=0){break}if((c[s+(p-1<<2)>>2]|0)!=0){A=1200;break}p=p-1|0}do{if((w|0)!=0){if((p|0)==0){break}A=s;l=s;n=p;k=w;r_(A,l,n,k)|0;p=p-((c[s+(p-1<<2)>>2]|0)==0?1:0)|0}}while(0);c[a+4>>2]=p;c[a+8>>2]=m;while(1){if((o|0)==0){break}o=o-1|0;r5(c[h+(o<<2)>>2]|0,c[j+(o<<2)>>2]|0)}i=g;return}function q7(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a;a=b;b=d;d=c[a+4>>2]|0;f=(b>>>0)/32|0;g=d-f|0;if((f|0)>=(d|0)){c[e+4>>2]=0;return}if((c[e>>2]|0)<(g|0)){r7(e,g)}d=c[e+16>>2]|0;b=(b>>>0)%32|0;if((b|0)!=0){h=d;i=(c[a+16>>2]|0)+(f<<2)|0;f=g;a=b;r_(h,i,f,a)|0;g=g-(((c[d+(g-1<<2)>>2]|0)!=0^1)&1)|0}else{a=0;while(1){if((a|0)>=(g|0)){break}c[d+(a<<2)>>2]=c[d+(a<<2)>>2];a=a+1|0}}c[e+4>>2]=g;return}function q8(a,b){a=a|0;b=b|0;var d=0;d=a;return((rL(c[d+16>>2]|0,c[d+4>>2]|0,b)|0)!=0^1)&1|0}function q9(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=a;a=b;b=d;d=e;e=f;if((e|0)==0){if((a|0)!=0){q6(h,a,b,d)}else{f=r1(c[h+4>>2]|0)|0;q6(h,f,b,d);r9(f)}i=g;return}if((e|0)>=0){ul(83136,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e}if((a|0)!=0){if((h|0)!=0){q5(h,a,b,d)}else{q1(a,b,d)}}else{q4(h,b,d)}i=g;return}function ra(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;a=sc(b)|0;b=sc(d)|0;c[a+8>>2]=0;c[b+8>>2]=0;while(1){if((q$(b,0)|0)==0){break}q1(e,a,b);se(a,b)|0;se(b,e)|0}se(e,a)|0;r9(a);r9(b);return((q$(e,1)|0)!=0^1)&1|0}function rb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a;a=b;b=d;d=e;e=a;a=e+4|0;g=c[e>>2]|0;d=d+g|0;e=f;f=e+4|0;c[e>>2]=d;do{if(d>>>0<g>>>0){while(1){e=b-1|0;b=e;if((e|0)==0){break}e=a;a=e+4|0;g=(c[e>>2]|0)+1|0;e=f;f=e+4|0;c[e>>2]=g;if((g|0)!=0){h=1259;break}}if((h|0)==1259){break}i=1;j=i;return j|0}}while(0);if((f|0)!=(a|0)){h=0;while(1){if((h|0)>=(b-1|0)){break}c[f+(h<<2)>>2]=c[a+(h<<2)>>2];h=h+1|0}}i=0;j=i;return j|0}function rc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=a;a=b;b=c;c=e;e=0;if((c|0)!=0){e=rK(f,a,d,c)|0}if((b-c|0)==0){g=e;return g|0}e=rb(f+(c<<2)|0,a+(c<<2)|0,b-c|0,e)|0;g=e;return g|0}function rd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a;a=b;b=d;d=e;e=a;a=e+4|0;g=c[e>>2]|0;d=g-d|0;e=f;f=e+4|0;c[e>>2]=d;do{if(d>>>0>g>>>0){while(1){e=b-1|0;b=e;if((e|0)==0){break}e=a;a=e+4|0;g=c[e>>2]|0;e=f;f=e+4|0;c[e>>2]=g-1;if((g|0)!=0){h=1284;break}}if((h|0)==1284){break}i=1;j=i;return j|0}}while(0);if((f|0)!=(a|0)){h=0;while(1){if((h|0)>=(b-1|0)){break}c[f+(h<<2)>>2]=c[a+(h<<2)>>2];h=h+1|0}}i=0;j=i;return j|0}function re(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=a;a=b;b=c;c=e;e=0;if((c|0)!=0){e=r$(f,a,d,c)|0}if((b-c|0)==0){g=e;return g|0}e=rd(f+(c<<2)|0,a+(c<<2)|0,b-c|0,e)|0;g=e;return g|0}function rf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a;a=b;b=d-1|0;while(1){if((b|0)<0){f=1311;break}g=c[e+(b<<2)>>2]|0;h=c[a+(b<<2)>>2]|0;if((g|0)!=(h|0)){break}b=b-1|0}if((f|0)==1311){i=0;j=i;return j|0}i=g>>>0>h>>>0?1:-1;j=i;return j|0}function rg(a,b,c){a=a|0;b=b|0;c=c|0;return bL(a|0,b|0,c|0)|0}function rh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;q1(e,b,d);c[e+8>>2]=0;return}function ri(a,b){a=a|0;b=b|0;var d=0;d=a;qQ(d);a=tX(1,28)|0;if((b|0)!=0){c[a>>2]=sc(d)|0;c[a+4>>2]=1}else{c[a>>2]=d}c[a+8>>2]=c[d+4>>2];b=r1((c[a+8>>2]|0)+1|0)|0;sf(b,1)|0;qZ(b,c[a+8>>2]<<1);q4(b,b,d);c[a+12>>2]=b;c[a+16>>2]=r1((c[a+8>>2]<<1)+1|0)|0;c[a+20>>2]=r1((c[a+8>>2]<<1)+1|0)|0;return a|0}function rj(a){a=a|0;var b=0;b=a;if((b|0)==0){return}r9(c[b+12>>2]|0);r9(c[b+16>>2]|0);r9(c[b+20>>2]|0);if((c[b+24>>2]|0)!=0){r9(c[b+24>>2]|0)}if((c[b+4>>2]|0)!=0){r9(c[b>>2]|0)}tQ(b);return}function rk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a;a=b;b=d;d=c[b>>2]|0;f=c[b+8>>2]|0;g=c[b+12>>2]|0;h=c[b+16>>2]|0;i=c[b+20>>2]|0;qQ(a);if((c[a+4>>2]|0)>(f<<1|0)){rh(e,a,d);return}se(i,a)|0;qX(i,f-1|0);ro(i,i,g);qX(i,f+1|0);se(h,a)|0;if((c[h+4>>2]|0)>(f+1|0)){c[h+4>>2]=f+1}ro(i,i,d);if((c[i+4>>2]|0)>(f+1|0)){c[i+4>>2]=f+1}qN(e,h,i);if((c[e+8>>2]|0)!=0){if((c[b+24>>2]|0)==0){c[b+24>>2]=r1(f+2|0)|0;i=c[b+24>>2]|0;sf(i,1)|0;qZ(c[b+24>>2]|0,f+1|0)}qL(e,e,c[b+24>>2]|0)}while(1){if((q0(e,d)|0)<0){break}qN(e,e,d)}return}function rl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a;ro(e,b,c);rk(e,e,d);return}function rm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a;a=b;b=d;d=c[a+4>>2]|0;f=c[a+8>>2]|0;do{if((d|0)!=0){if((b|0)==0){break}g=d+1|0;if((c[e>>2]|0)<(g|0)){r7(e,g)}g=c[e+16>>2]|0;h=rX(g,c[a+16>>2]|0,d,b)|0;if((h|0)!=0){i=d;d=i+1|0;c[g+(i<<2)>>2]=h}c[e+4>>2]=d;c[e+8>>2]=f;return}}while(0);c[e+4>>2]=0;c[e+8>>2]=0;return}function rn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a;a=b;b=d;d=c[a+4>>2]|0;f=c[a+8>>2]|0;if((d|0)==0){c[e+4>>2]=0;c[e+8>>2]=0;return}g=(b>>>0)/32|0;h=d+g+1|0;if((c[e>>2]|0)<(h|0)){r7(e,h)}i=c[e+16>>2]|0;h=d+g|0;j=f;b=(b>>>0)%32|0;if((b|0)!=0){f=rO(i+(g<<2)|0,c[a+16>>2]|0,d,b)|0;if((f|0)!=0){c[i+(h<<2)>>2]=f;h=h+1|0}}else{f=d-1|0;while(1){if((f|0)<0){break}c[i+(g<<2)+(f<<2)>>2]=c[(c[a+16>>2]|0)+(f<<2)>>2];f=f-1|0}}f=0;while(1){if((f|0)>=(g|0)){break}c[i+(f<<2)>>2]=0;f=f+1|0}c[e+4>>2]=h;c[e+8>>2]=j;return}function ro(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=a;a=b;b=d;d=0;f=0;g=0;if((c[a+4>>2]|0)<(c[b+4>>2]|0)){h=c[b+4>>2]|0;i=c[b+8>>2]|0;if((b|0)!=0){j=(c[b+12>>2]&1|0)!=0}else{j=0}k=j&1;l=c[b+16>>2]|0;m=c[a+4>>2]|0;n=c[a+8>>2]|0;if((a|0)!=0){o=(c[a+12>>2]&1|0)!=0}else{o=0}p=o&1;q=c[a+16>>2]|0}else{h=c[a+4>>2]|0;i=c[a+8>>2]|0;if((a|0)!=0){r=(c[a+12>>2]&1|0)!=0}else{r=0}k=r&1;l=c[a+16>>2]|0;m=c[b+4>>2]|0;n=c[b+8>>2]|0;if((b|0)!=0){s=(c[b+12>>2]&1|0)!=0}else{s=0}p=s&1;q=c[b+16>>2]|0}s=i^n;n=c[e+16>>2]|0;i=h+m|0;if((e|0)!=0){if((c[e+12>>2]&1|0)!=0){t=1402}else{t=1397}}else{t=1397}do{if((t|0)==1397){if((a|0)!=0){if((c[a+12>>2]&1|0)==0){t=1399}}else{t=1399}if((t|0)==1399){if((b|0)==0){t=1402;break}if((c[b+12>>2]&1|0)==0){t=1402;break}}n=r2(i,1)|0;d=2}}while(0);if((t|0)==1402){if((c[e>>2]|0)<(i|0)){do{if((n|0)==(l|0)){t=1405}else{if((n|0)==(q|0)){t=1405;break}r7(e,i);n=c[e+16>>2]|0}}while(0);if((t|0)==1405){if((e|0)!=0){u=(c[e+12>>2]&1|0)!=0}else{u=0}n=r2(i,u&1)|0;d=1}}else{if((n|0)==(l|0)){g=h;u=r2(h,k)|0;f=u;l=u;if((n|0)==(q|0)){q=l}u=0;while(1){if((u|0)>=(h|0)){break}c[l+(u<<2)>>2]=c[n+(u<<2)>>2];u=u+1|0}}else{if((n|0)==(q|0)){g=m;u=r2(m,p)|0;f=u;q=u;u=0;while(1){if((u|0)>=(m|0)){break}c[q+(u<<2)>>2]=c[n+(u<<2)>>2];u=u+1|0}}}}}if((m|0)!=0){i=i-((rV(n,l,h,q,m)|0)!=0?0:1)|0}else{i=0}if((d|0)!=0){if((d|0)==2){d=r2(i,0)|0;m=0;while(1){if((m|0)>=(i|0)){break}c[d+(m<<2)>>2]=c[n+(m<<2)>>2];m=m+1|0}r5(n,0);n=d}r6(e,n,i)}c[e+4>>2]=i;c[e+8>>2]=s;if((f|0)==0){return}r5(f,g);return}function rp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a;ro(e,b,c);q1(e,e,d);return}function rq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ct(a|0,b|0,c|0,d|0);return}function rr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=a;a=b;b=c[d+16>>2]|0;e=0;f=0;L1771:while(1){if((f|0)>=(c[d+4>>2]|0)){g=1461;break}h=c[b+(f<<2)>>2]|0;i=0;while(1){if((i|0)>=4){break}if((e|0)==(a|0)){g=1456;break L1771}i=i+1|0;e=e+1|0}f=f+1|0}if((g|0)==1456){j=h>>>(i<<3>>>0)&255;k=j;return k|0}else if((g|0)==1461){j=-1;k=j;return k|0}return 0}function rs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=a;a=b;b=d&255;d=c[e+16>>2]|0;f=0;g=0;L1787:while(1){if((g|0)>=(c[e>>2]|0)){h=1486;break}i=c[d+(g<<2)>>2]|0;j=0;while(1){if((j|0)>=4){break}if((f|0)==(a|0)){break L1787}j=j+1|0;f=f+1|0}g=g+1|0}if((h|0)==1486){b8()}if((j|0)==0){i=i&-256|b}else{if((j|0)==1){i=i&-65281|b<<8}else{if((j|0)==2){i=i&-16711681|b<<16}else{i=i&16777215|b<<24}}}if((c[e+4>>2]|0)>(g|0)){k=i;l=g;m=d;n=m+(l<<2)|0;c[n>>2]=k;return}c[e+4>>2]=g+1;k=i;l=g;m=d;n=m+(l<<2)|0;c[n>>2]=k;return}function rt(a){a=a|0;var b=0,e=0,f=0,g=0,h=0;b=a;a=0;e=0;while(1){if(e>>>0>=(c[b+4>>2]|0)>>>0){f=1503;break}if((c[(c[b+16>>2]|0)+(e<<2)>>2]|0)!=0){break}a=a+32|0;e=e+1|0}if((f|0)==1503){g=a;return g|0}f=c[(c[b+16>>2]|0)+(e<<2)>>2]|0;e=f&-f;if(e>>>0<65536){h=e>>>0<256?0:8}else{h=e>>>0<16777216?16:24}f=h;a=a+(31-(32-((d[85056+(e>>>(f>>>0))|0]|0)+f)))|0;g=a;return g|0}function ru(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;un(82864,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;if((d|0)==0){un(82672,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;i=b;return}if((c[d+8>>2]|0)!=0){un(73472,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a}e=c[d+4>>2]|0;while(1){if((e|0)<=0){break}un((e|0)!=(c[d+4>>2]|0)?68952:65832,(a=i,i=i+8|0,c[a>>2]=c[(c[d+16>>2]|0)+(e-1<<2)>>2],a)|0);i=a;e=e-1|0}if((c[d+4>>2]|0)==0){un(63600,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a}i=b;return}function rv(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;un(62040,(e=i,i=i+8|0,c[e>>2]=a,e)|0);i=e;ru(b);un(60568,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;i=d;return}function rw(a,b,c){a=a|0;b=b|0;c=c|0;return rx(a,b,c,0)|0}function rx(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=b;b=d;d=e;if((d|0)!=0){c[d>>2]=c[g+8>>2]}c[b>>2]=c[g+4>>2]<<2;if((c[b>>2]|0)!=0){h=c[b>>2]|0}else{h=1}d=h;do{if((f|0)!=0){i=1529}else{if((g|0)!=0){if((c[g+12>>2]&1|0)!=0){i=1529;break}}j=tJ(d)|0}}while(0);if((i|0)==1529){j=tL(d)|0}d=j;i=j;if((d|0)==0){k=0;l=k;return l|0}j=(c[g+4>>2]|0)-1|0;while(1){if((j|0)<0){break}f=c[(c[g+16>>2]|0)+(j<<2)>>2]|0;h=i;i=h+1|0;a[h]=f>>>24&255;h=i;i=h+1|0;a[h]=f>>>16&255;h=i;i=h+1|0;a[h]=f>>>8&255;h=i;i=h+1|0;a[h]=f&255;j=j-1|0}i=d;while(1){if((c[b>>2]|0)!=0){m=(a[i]|0)!=0^1}else{m=0}if(!m){break}i=i+1|0;j=b;c[j>>2]=(c[j>>2]|0)-1}if((i|0)!=(d|0)){Ad(d|0,i|0,c[b>>2]|0)}k=d;l=k;return l|0}function ry(a,b,c){a=a|0;b=b|0;c=c|0;return rx(a,b,c,1)|0}function rz(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=a;a=e;e=b;b=((a+4-1|0)>>>0)/4|0;if((c[g>>2]|0)<(b|0)){r7(g,b)}c[g+8>>2]=f;f=0;h=e+a-1|0;while(1){if(h>>>0<(e+4|0)>>>0){break}a=h;h=a-1|0;i=d[a]|0;a=h;h=a-1|0;i=i|(d[a]|0)<<8;a=h;h=a-1|0;i=i|(d[a]|0)<<16;a=h;h=a-1|0;i=i|(d[a]|0)<<24;a=f;f=a+1|0;c[(c[g+16>>2]|0)+(a<<2)>>2]=i}if(h>>>0>=e>>>0){a=h;h=a-1|0;i=d[a]|0;if(h>>>0>=e>>>0){a=h;h=a-1|0;i=i|(d[a]|0)<<8}if(h>>>0>=e>>>0){a=h;h=a-1|0;i=i|(d[a]|0)<<16}if(h>>>0>=e>>>0){e=h;h=e-1|0;i=i|(d[e]|0)<<24}e=f;f=e+1|0;c[(c[g+16>>2]|0)+(e<<2)>>2]=i}c[g+4>>2]=f;if((f|0)==(b|0)){return}else{ug(58800,56648,365,88176);return}}function rA(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+8|0;k=j|0;l=b;b=e;e=g;g=h;h=f;f=0;if((h|0)!=0){m=(tM(h)|0)!=0}else{m=0}n=m&1;if((b|0)==3){c[k>>2]=0}else{c[k>>2]=e}if((b|0)==1){m=h;if((n|0)!=0){o=r4((((c[k>>2]|0)+4-1|0)>>>0)/4|0)|0}else{o=r1((((c[k>>2]|0)+4-1|0)>>>0)/4|0)|0}f=o;do{if((c[k>>2]|0)!=0){c[f+8>>2]=((a[m]&128|0)!=0^1^1)&1;if((c[f+8>>2]|0)!=0){r9(f);p=rB(63)|0;q=p;i=j;return q|0}else{rz(f,m,c[k>>2]|0,0);break}}}while(0);if((l|0)!=0){qQ(f);c[l>>2]=f}else{r9(f)}p=0;q=p;i=j;return q|0}if((b|0)==5){if((n|0)!=0){r=r4((((c[k>>2]|0)+4-1|0)>>>0)/4|0)|0}else{r=r1((((c[k>>2]|0)+4-1|0)>>>0)/4|0)|0}f=r;if((c[k>>2]|0)!=0){rz(f,h,c[k>>2]|0,0)}if((l|0)!=0){qQ(f);c[l>>2]=f}else{r9(f)}p=0;q=p;i=j;return q|0}if((b|0)==2){f=rC(h,k,n)|0;if((g|0)!=0){c[g>>2]=c[k>>2]}do{if((l|0)!=0){if((f|0)==0){s=1605;break}qQ(f);c[l>>2]=f}else{s=1605}}while(0);if((s|0)==1605){if((f|0)!=0){r9(f);f=0}}if((f|0)!=0){t=0}else{t=rB(65)|0}p=t;q=p;i=j;return q|0}if((b|0)!=3){if((b|0)!=4){p=rB(45)|0;q=p;i=j;return q|0}if((e|0)!=0){p=rB(45)|0;q=p;i=j;return q|0}if((n|0)!=0){u=r4(0)|0}else{u=r1(0)|0}f=u;if((rD(f,h)|0)!=0){r9(f);p=rB(65)|0;q=p;i=j;return q|0}if((l|0)!=0){qQ(f);c[l>>2]=f}else{r9(f)}p=0;q=p;i=j;return q|0}u=h;do{if((c[k>>2]|0)!=0){if((c[k>>2]|0)>>>0>=4){break}p=rB(66)|0;q=p;i=j;return q|0}}while(0);h=(d[u|0]|0)<<24|(d[u+1|0]|0)<<16|(d[u+2|0]|0)<<8|(d[u+3|0]|0);u=u+4|0;if((c[k>>2]|0)!=0){c[k>>2]=(c[k>>2]|0)-4}do{if((c[k>>2]|0)!=0){if(h>>>0<=(c[k>>2]|0)>>>0){break}p=rB(67)|0;q=p;i=j;return q|0}}while(0);if((n|0)!=0){v=r4(((h+4-1|0)>>>0)/4|0)|0}else{v=r1(((h+4-1|0)>>>0)/4|0)|0}f=v;do{if((h|0)!=0){c[f+8>>2]=((a[u]&128|0)!=0^1^1)&1;if((c[f+8>>2]|0)!=0){r9(f);p=rB(63)|0;q=p;i=j;return q|0}else{rz(f,u,h,0);break}}}while(0);if((g|0)!=0){c[g>>2]=h+4}if((l|0)!=0){qQ(f);c[l>>2]=f}else{r9(f)}p=0;q=p;i=j;return q|0}function rB(a){a=a|0;return rJ(32,a)|0}function rC(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=a;a=b;b=0;g=0;if((c[a>>2]|0)>>>0<2){h=b;i=a;c[i>>2]=h;j=g;return j|0}k=(d[f|0]|0)<<8|(d[f+1|0]|0);if(k>>>0>16384){h=b;i=a;c[i>>2]=h;j=g;return j|0}f=f+2|0;b=2;l=((k+7|0)>>>0)/8|0;k=((l+4-1|0)>>>0)/4|0;if((e|0)!=0){m=r4(k)|0}else{m=r1(k)|0}g=m;m=4-((l>>>0)%4|0)|0;m=(m|0)%4|0;l=k;c[g+4>>2]=l;k=l;c[g+8>>2]=0;L2052:while(1){if((k|0)<=0){n=1679;break}l=0;while(1){if((m|0)>=4){break}e=b+1|0;b=e;if(e>>>0>(c[a>>2]|0)>>>0){n=1674;break L2052}l=l<<8;e=f;f=e+1|0;l=l|(d[e]|0);m=m+1|0}m=0;c[(c[g+16>>2]|0)+(k-1<<2)>>2]=l;k=k-1|0}if((n|0)==1674){r9(g);g=0;h=b;i=a;c[i>>2]=h;j=g;return j|0}else if((n|0)==1679){h=b;i=a;c[i>>2]=h;j=g;return j|0}return 0}function rD(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b;b=d;d=0;f=0;if((a[b]|0)==45){d=1;b=b+1|0}do{if((a[b]|0)==48){if((a[b+1|0]|0)!=120){break}b=b+2|0}}while(0);g=(Ab(b|0)|0)<<2;if(((g>>>0)%8|0|0)!=0){f=1}h=((g+7|0)>>>0)/8|0;g=((h+4-1|0)>>>0)/4|0;if((c[e>>2]|0)>>>0<g>>>0){r7(e,g)}i=4-((h>>>0)%4|0)|0;i=(i|0)%4|0;h=g;c[e+4>>2]=h;g=h;c[e+8>>2]=d;L2081:while(1){if((g|0)<=0){j=1733;break}d=0;while(1){if((i|0)>=4){break}if((f|0)!=0){k=48;f=0}else{h=b;b=h+1|0;k=a[h]|0}if((k|0)==0){j=1702;break L2081}h=b;b=h+1|0;l=a[h]|0;if((l|0)==0){j=1704;break L2081}do{if((k|0)>=48){if((k|0)>57){j=1708;break}m=k-48|0}else{j=1708}}while(0);if((j|0)==1708){j=0;do{if((k|0)>=97){if((k|0)>102){j=1711;break}m=k-97+10|0}else{j=1711}}while(0);if((j|0)==1711){j=0;if((k|0)<65){j=1714;break L2081}if((k|0)>70){j=1714;break L2081}m=k-65+10|0}}m=m<<4;do{if((l|0)>=48){if((l|0)>57){j=1720;break}m=m|l-48}else{j=1720}}while(0);if((j|0)==1720){j=0;do{if((l|0)>=97){if((l|0)>102){j=1723;break}m=m|l-97+10}else{j=1723}}while(0);if((j|0)==1723){j=0;if((l|0)<65){j=1726;break L2081}if((l|0)>70){j=1726;break L2081}m=m|l-65+10}}d=d<<8;d=d|m;i=i+1|0}i=0;c[(c[e+16>>2]|0)+(g-1<<2)>>2]=d;g=g-1|0}if((j|0)==1702){r8(e);n=1;o=n;return o|0}else if((j|0)==1704){r8(e);n=1;o=n;return o|0}else if((j|0)==1714){r8(e);n=1;o=n;return o|0}else if((j|0)==1726){r8(e);n=1;o=n;return o|0}else if((j|0)==1733){n=0;o=n;return o|0}return 0}function rE(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=j+8|0;l=j+16|0;m=j+24|0;n=j+32|0;o=j+40|0;p=b;b=e;e=g;g=h;h=qR(g)|0;if((e|0)==0){e=j|0}q=f;c[e>>2]=0;if((p|0)==1){f=0;if((c[g+8>>2]|0)!=0){r=rB(63)|0;s=r;i=j;return s|0}t=rw(g,k,0)|0;if((t|0)==0){r=rF()|0;s=r;i=j;return s|0}do{if((c[k>>2]|0)!=0){if((a[t]&128|0)==0){break}c[k>>2]=(c[k>>2]|0)+1;f=1}}while(0);do{if((b|0)!=0){if((c[k>>2]|0)>>>0<=q>>>0){break}tQ(t);r=rB(66)|0;s=r;i=j;return s|0}}while(0);if((b|0)!=0){u=b;if((f|0)!=0){v=u;u=v+1|0;a[v]=0}v=u;u=t;w=(c[k>>2]|0)-f|0;Ac(v|0,u|0,w)|0}tQ(t);c[e>>2]=c[k>>2];r=0;s=r;i=j;return s|0}if((p|0)==5){c[l>>2]=((h+7|0)>>>0)/8|0;do{if((b|0)!=0){if((c[l>>2]|0)>>>0<=q>>>0){break}r=rB(66)|0;s=r;i=j;return s|0}}while(0);do{if((b|0)!=0){k=rw(g,l,0)|0;if((k|0)!=0){t=b;w=k;u=c[l>>2]|0;Ac(t|0,w|0,u)|0;tQ(k);break}r=rF()|0;s=r;i=j;return s|0}}while(0);c[e>>2]=c[l>>2];r=0;s=r;i=j;return s|0}if((p|0)==2){c[m>>2]=((h+7|0)>>>0)/8|0;if((c[g+8>>2]|0)!=0){r=rB(45)|0;s=r;i=j;return s|0}do{if((b|0)!=0){if(((c[m>>2]|0)+2|0)>>>0<=q>>>0){break}r=rB(66)|0;s=r;i=j;return s|0}}while(0);do{if((b|0)!=0){l=b;a[l|0]=h>>>8&255;a[l+1|0]=h&255;k=rw(g,m,0)|0;if((k|0)!=0){u=l+2|0;l=k;w=c[m>>2]|0;Ac(u|0,l|0,w)|0;tQ(k);break}r=rF()|0;s=r;i=j;return s|0}}while(0);c[e>>2]=(c[m>>2]|0)+2;r=0;s=r;i=j;return s|0}if((p|0)==3){m=0;if((c[g+8>>2]|0)!=0){r=rB(63)|0;s=r;i=j;return s|0}h=rw(g,n,0)|0;if((h|0)==0){r=rF()|0;s=r;i=j;return s|0}do{if((c[n>>2]|0)!=0){if((a[h]&128|0)==0){break}c[n>>2]=(c[n>>2]|0)+1;m=1}}while(0);do{if((b|0)!=0){if(((c[n>>2]|0)+4|0)>>>0<=q>>>0){break}tQ(h);r=rB(66)|0;s=r;i=j;return s|0}}while(0);if((b|0)!=0){k=b;w=k;k=w+1|0;a[w]=(c[n>>2]|0)>>>24&255;w=k;k=w+1|0;a[w]=(c[n>>2]|0)>>>16&255;w=k;k=w+1|0;a[w]=(c[n>>2]|0)>>>8&255;w=k;k=w+1|0;a[w]=c[n>>2]&255;if((m|0)!=0){w=k;k=w+1|0;a[w]=0}w=k;k=h;l=(c[n>>2]|0)-m|0;Ac(w|0,k|0,l)|0}tQ(h);c[e>>2]=(c[n>>2]|0)+4;r=0;s=r;i=j;return s|0}if((p|0)!=4){r=rB(45)|0;s=r;i=j;return s|0}p=0;c[o>>2]=0;n=rw(g,o,0)|0;if((n|0)==0){r=rF()|0;s=r;i=j;return s|0}if((c[o>>2]|0)!=0){if((a[n]&128|0)!=0){x=1799}}else{x=1799}if((x|0)==1799){p=2}do{if((b|0)!=0){if(((c[o>>2]<<1)+p+(((c[g+8>>2]|0)!=0^1^1)&1)+1|0)>>>0<=q>>>0){break}tQ(n);r=rB(66)|0;s=r;i=j;return s|0}}while(0);if((b|0)!=0){q=b;if((c[g+8>>2]|0)!=0){x=q;q=x+1|0;a[x]=45}if((p|0)!=0){x=q;q=x+1|0;a[x]=48;x=q;q=x+1|0;a[x]=48}x=0;while(1){if(x>>>0>=(c[o>>2]|0)>>>0){break}h=d[n+x|0]|0;if(h>>>4>>>0<10){y=(h>>>4)+48|0}else{y=(h>>>4)+65-10|0}l=q;q=l+1|0;a[l]=y&255;h=h&15;if(h>>>0<10){z=h+48|0}else{z=h+65-10|0}h=q;q=h+1|0;a[h]=z&255;x=x+1|0}x=q;q=x+1|0;a[x]=0;c[e>>2]=q-b}else{c[e>>2]=(c[o>>2]<<1)+p+(((c[g+8>>2]|0)!=0^1^1)&1)+1}tQ(n);r=0;s=r;i=j;return s|0}function rF(){return rH(y$()|0)|0}function rG(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=a;a=b;b=d;d=e;c[a>>2]=0;e=rE(h,0,0,g,d)|0;if((e|0)!=0){j=e;k=j;i=f;return k|0}do{if((d|0)!=0){if((c[d+12>>2]&1|0)==0){l=1848;break}m=tL(c[g>>2]|0)|0}else{l=1848}}while(0);if((l|0)==1848){m=tJ(c[g>>2]|0)|0}c[a>>2]=m;if((c[a>>2]|0)==0){j=rF()|0;k=j;i=f;return k|0}e=rE(h,c[a>>2]|0,c[g>>2]|0,g,d)|0;if((e|0)!=0){tQ(c[a>>2]|0);c[a>>2]=0}else{if((b|0)!=0){c[b>>2]=c[g>>2]}}j=e;k=j;i=f;return k|0}function rH(a){a=a|0;return rI(1,a)|0}function rI(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function rJ(a,b){a=a|0;b=b|0;return rI(a,b)|0}function rK(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a;a=b;b=d;d=-e|0;a=a+(-d<<2)|0;b=b+(-d<<2)|0;f=f+(-d<<2)|0;e=0;do{g=c[b+(d<<2)>>2]|0;h=c[a+(d<<2)>>2]|0;g=g+e|0;e=g>>>0<e>>>0|0;g=g+h|0;e=e+(g>>>0<h>>>0)|0;c[f+(d<<2)>>2]=g;g=d+1|0;d=g;}while((g|0)!=0);return e|0}function rL(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=a;a=b;b=e;if((a|0)==0){g=0;h=g;return h|0}e=b;if(e>>>0<65536){i=e>>>0<256?0:8}else{i=e>>>0<16777216?16:24}j=i;i=32-((d[85056+(e>>>(j>>>0))|0]|0)+j)|0;if((i|0)==0){k=a-1|0;l=c[f+(k<<2)>>2]|0;if(l>>>0>=b>>>0){l=0}else{k=k-1|0}while(1){if((k|0)<0){break}m=c[f+(k<<2)>>2]|0;j=b>>>16;e=b&65535;n=(l>>>0)%(j>>>0)|0;o=(l>>>0)/(j>>>0)|0;p=ad(o,e)|0;n=n<<16|m>>>16;if(n>>>0<p>>>0){o=o-1|0;n=n+b|0;if(n>>>0>=b>>>0){if(n>>>0<p>>>0){o=o-1|0;n=n+b|0}}}n=n-p|0;q=(n>>>0)%(j>>>0)|0;r=(n>>>0)/(j>>>0)|0;p=ad(r,e)|0;q=q<<16|m&65535;if(q>>>0<p>>>0){r=r-1|0;q=q+b|0;if(q>>>0>=b>>>0){if(q>>>0<p>>>0){r=r-1|0;q=q+b|0}}}q=q-p|0;s=o<<16|r;l=q;k=k-1|0}g=l;h=g;return h|0}b=b<<i;q=c[f+(a-1<<2)>>2]|0;l=q>>>((32-i|0)>>>0);k=a-2|0;while(1){if((k|0)<0){break}m=c[f+(k<<2)>>2]|0;a=b>>>16;r=b&65535;o=(l>>>0)%(a>>>0)|0;p=(l>>>0)/(a>>>0)|0;e=ad(p,r)|0;o=o<<16|(q<<i|m>>>((32-i|0)>>>0))>>>16;if(o>>>0<e>>>0){p=p-1|0;o=o+b|0;if(o>>>0>=b>>>0){if(o>>>0<e>>>0){p=p-1|0;o=o+b|0}}}o=o-e|0;j=(o>>>0)%(a>>>0)|0;n=(o>>>0)/(a>>>0)|0;e=ad(n,r)|0;j=j<<16|(q<<i|m>>>((32-i|0)>>>0))&65535;if(j>>>0<e>>>0){n=n-1|0;j=j+b|0;if(j>>>0>=b>>>0){if(j>>>0<e>>>0){n=n-1|0;j=j+b|0}}}j=j-e|0;s=p<<16|n;l=j;q=m;k=k-1|0}k=b>>>16;m=b&65535;f=(l>>>0)%(k>>>0)|0;j=(l>>>0)/(k>>>0)|0;n=ad(j,m)|0;f=f<<16|q<<i>>>16;if(f>>>0<n>>>0){j=j-1|0;f=f+b|0;if(f>>>0>=b>>>0){if(f>>>0<n>>>0){j=j-1|0;f=f+b|0}}}f=f-n|0;p=(f>>>0)%(k>>>0)|0;e=(f>>>0)/(k>>>0)|0;n=ad(e,m)|0;p=p<<16|q<<i&65535;if(p>>>0<n>>>0){e=e-1|0;p=p+b|0;if(p>>>0>=b>>>0){if(p>>>0<n>>>0){e=e-1|0;p=p+b|0}}}p=p-n|0;s=j<<16|e;l=p;g=l>>>(i>>>0);h=g;return h|0}function rM(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;h=a;a=b;b=d;d=e;e=f;f=g;g=0;i=f;if((i|0)==0){j=1/(f|0)|0;k=j;return k|0}else if((i|0)==1){l=c[e>>2]|0;m=c[b+(d-1<<2)>>2]|0;if(m>>>0>=l>>>0){m=m-l|0;g=1}h=h+(a<<2)|0;n=d-2|0;while(1){if((n|0)<0){break}o=l>>>16;p=l&65535;q=(m>>>0)%(o>>>0)|0;r=(m>>>0)/(o>>>0)|0;s=ad(r,p)|0;q=q<<16|(c[b+(n<<2)>>2]|0)>>>16;if(q>>>0<s>>>0){r=r-1|0;q=q+l|0;if(q>>>0>=l>>>0){if(q>>>0<s>>>0){r=r-1|0;q=q+l|0}}}q=q-s|0;t=(q>>>0)%(o>>>0)|0;u=(q>>>0)/(o>>>0)|0;s=ad(u,p)|0;t=t<<16|c[b+(n<<2)>>2]&65535;if(t>>>0<s>>>0){u=u-1|0;t=t+l|0;if(t>>>0>=l>>>0){if(t>>>0<s>>>0){u=u-1|0;t=t+l|0}}}t=t-s|0;c[h+(n<<2)>>2]=r<<16|u;m=t;n=n-1|0}h=h+(-a<<2)|0;n=a-1|0;while(1){if((n|0)<0){break}t=l>>>16;u=l&65535;r=(m>>>0)%(t>>>0)|0;s=(m>>>0)/(t>>>0)|0;p=ad(s,u)|0;r=r<<16;if(r>>>0<p>>>0){s=s-1|0;r=r+l|0;if(r>>>0>=l>>>0){if(r>>>0<p>>>0){s=s-1|0;r=r+l|0}}}r=r-p|0;o=(r>>>0)%(t>>>0)|0;q=(r>>>0)/(t>>>0)|0;p=ad(q,u)|0;o=o<<16;if(o>>>0<p>>>0){q=q-1|0;o=o+l|0;if(o>>>0>=l>>>0){if(o>>>0<p>>>0){q=q-1|0;o=o+l|0}}}o=o-p|0;c[h+(n<<2)>>2]=s<<16|q;m=o;n=n-1|0}c[b>>2]=m}else if((i|0)==2){b=b+(d-2<<2)|0;i=c[e+4>>2]|0;m=c[e>>2]|0;n=c[b+4>>2]|0;l=c[b>>2]|0;do{if(n>>>0>=i>>>0){if(n>>>0<=i>>>0){if(l>>>0<m>>>0){break}}o=l-m|0;n=n-i-(o>>>0>l>>>0)|0;l=o;g=1}}while(0);o=a+d-2-1|0;while(1){if((o|0)<0){break}if((o|0)>=(a|0)){b=b-4|0}else{c[b>>2]=0}do{if((n|0)==(i|0)){v=-1;w=l+i|0;if(w>>>0>=i>>>0){n=m-((m|0)!=0?1:0)|0;l=-m|0;x=2017;break}q=(c[b>>2]|0)+m|0;n=w-m+(q>>>0<(c[b>>2]|0)>>>0)|0;l=q;c[h+(o<<2)>>2]=v}else{q=i>>>16;s=i&65535;p=(n>>>0)%(q>>>0)|0;u=(n>>>0)/(q>>>0)|0;t=ad(u,s)|0;p=p<<16|l>>>16;if(p>>>0<t>>>0){u=u-1|0;p=p+i|0;if(p>>>0>=i>>>0){if(p>>>0<t>>>0){u=u-1|0;p=p+i|0}}}p=p-t|0;r=(p>>>0)%(q>>>0)|0;y=(p>>>0)/(q>>>0)|0;t=ad(y,s)|0;r=r<<16|l&65535;if(r>>>0<t>>>0){y=y-1|0;r=r+i|0;if(r>>>0>=i>>>0){if(r>>>0<t>>>0){y=y-1|0;r=r+i|0}}}r=r-t|0;v=u<<16|y;w=r;r=m;y=v;u=r&65535;t=r>>>16;r=y&65535;s=y>>>16;y=ad(u,r)|0;q=ad(u,s)|0;u=ad(t,r)|0;r=ad(t,s)|0;q=q+(y>>>16)|0;q=q+u|0;if(q>>>0<u>>>0){r=r+65536|0}n=r+(q>>>16)|0;l=((q&65535)<<16)+(y&65535)|0;x=2017}}while(0);if((x|0)==2017){x=0;y=c[b>>2]|0;while(1){if(n>>>0<=w>>>0){if((n|0)!=(w|0)){break}if(l>>>0<=y>>>0){break}}v=v-1|0;q=l-m|0;n=n-(q>>>0>l>>>0)|0;l=q;w=w+i|0;if(w>>>0<i>>>0){x=2025;break}}if((x|0)==2025){x=0}c[h+(o<<2)>>2]=v;q=y-l|0;n=w-n-(q>>>0>y>>>0)|0;l=q}o=o-1|0}c[b+4>>2]=n;c[b>>2]=l}else{b=b+(d-f<<2)|0;l=c[e+(f-1<<2)>>2]|0;n=c[e+(f-2<<2)>>2]|0;o=c[b+(f-1<<2)>>2]|0;if(o>>>0>=l>>>0){if(o>>>0>l>>>0){x=2034}else{if((rf(b,e,f-1|0)|0)>=0){x=2034}}if((x|0)==2034){w=b;v=b;i=e;m=f;r$(w,v,i,m)|0;o=c[b+(f-1<<2)>>2]|0;g=1}}m=a+d-f-1|0;while(1){if((m|0)<0){break}if((m|0)>=(a|0)){b=b-4|0;z=c[b+(f<<2)>>2]|0}else{z=c[b+(f-1<<2)>>2]|0;d=f-1-1|0;while(1){if((d|0)<0){break}c[b+4+(d<<2)>>2]=c[b+(d<<2)>>2];d=d-1|0}c[b>>2]=0}if((o|0)==(l|0)){A=-1}else{d=l>>>16;y=l&65535;i=(o>>>0)%(d>>>0)|0;v=(o>>>0)/(d>>>0)|0;w=ad(v,y)|0;i=i<<16|(c[b+(f-1<<2)>>2]|0)>>>16;if(i>>>0<w>>>0){v=v-1|0;i=i+l|0;if(i>>>0>=l>>>0){if(i>>>0<w>>>0){v=v-1|0;i=i+l|0}}}i=i-w|0;q=(i>>>0)%(d>>>0)|0;r=(i>>>0)/(d>>>0)|0;w=ad(r,y)|0;q=q<<16|c[b+(f-1<<2)>>2]&65535;if(q>>>0<w>>>0){r=r-1|0;q=q+l|0;if(q>>>0>=l>>>0){if(q>>>0<w>>>0){r=r-1|0;q=q+l|0}}}q=q-w|0;A=v<<16|r;r=q;q=n;v=A;w=q&65535;y=q>>>16;q=v&65535;d=v>>>16;v=ad(w,q)|0;i=ad(w,d)|0;w=ad(y,q)|0;q=ad(y,d)|0;i=i+(v>>>16)|0;i=i+w|0;if(i>>>0<w>>>0){q=q+65536|0}w=q+(i>>>16)|0;o=((i&65535)<<16)+(v&65535)|0;while(1){if(w>>>0>r>>>0){B=1}else{if((w|0)==(r|0)){C=o>>>0>(c[b+(f-2<<2)>>2]|0)>>>0}else{C=0}B=C}if(!B){break}A=A-1|0;r=r+l|0;if(r>>>0<l>>>0){x=2074;break}w=w-(o>>>0<n>>>0)|0;o=o-n|0}if((x|0)==2074){x=0}}if((z|0)!=(rZ(b,e,f,A)|0)){w=b;r=b;v=e;i=f;rK(w,r,v,i)|0;A=A-1|0}c[h+(m<<2)>>2]=A;o=c[b+(f-1<<2)>>2]|0;m=m-1|0}}j=g;k=j;return k|0}function rN(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=a;a=b;b=e;e=f;if((b|0)==0){h=0;i=h;return i|0}f=e;if(f>>>0<65536){j=f>>>0<256?0:8}else{j=f>>>0<16777216?16:24}k=j;j=32-((d[85056+(f>>>(k>>>0))|0]|0)+k)|0;if((j|0)==0){l=b-1|0;m=c[a+(l<<2)>>2]|0;if(m>>>0>=e>>>0){m=0}else{k=l;l=k-1|0;c[g+(k<<2)>>2]=0}while(1){if((l|0)<0){break}n=c[a+(l<<2)>>2]|0;k=e>>>16;f=e&65535;o=(m>>>0)%(k>>>0)|0;p=(m>>>0)/(k>>>0)|0;q=ad(p,f)|0;o=o<<16|n>>>16;if(o>>>0<q>>>0){p=p-1|0;o=o+e|0;if(o>>>0>=e>>>0){if(o>>>0<q>>>0){p=p-1|0;o=o+e|0}}}o=o-q|0;r=(o>>>0)%(k>>>0)|0;s=(o>>>0)/(k>>>0)|0;q=ad(s,f)|0;r=r<<16|n&65535;if(r>>>0<q>>>0){s=s-1|0;r=r+e|0;if(r>>>0>=e>>>0){if(r>>>0<q>>>0){s=s-1|0;r=r+e|0}}}r=r-q|0;c[g+(l<<2)>>2]=p<<16|s;m=r;l=l-1|0}h=m;i=h;return i|0}e=e<<j;r=c[a+(b-1<<2)>>2]|0;m=r>>>((32-j|0)>>>0);l=b-2|0;while(1){if((l|0)<0){break}n=c[a+(l<<2)>>2]|0;b=e>>>16;s=e&65535;p=(m>>>0)%(b>>>0)|0;q=(m>>>0)/(b>>>0)|0;f=ad(q,s)|0;p=p<<16|(r<<j|n>>>((32-j|0)>>>0))>>>16;if(p>>>0<f>>>0){q=q-1|0;p=p+e|0;if(p>>>0>=e>>>0){if(p>>>0<f>>>0){q=q-1|0;p=p+e|0}}}p=p-f|0;k=(p>>>0)%(b>>>0)|0;o=(p>>>0)/(b>>>0)|0;f=ad(o,s)|0;k=k<<16|(r<<j|n>>>((32-j|0)>>>0))&65535;if(k>>>0<f>>>0){o=o-1|0;k=k+e|0;if(k>>>0>=e>>>0){if(k>>>0<f>>>0){o=o-1|0;k=k+e|0}}}k=k-f|0;c[g+(l+1<<2)>>2]=q<<16|o;m=k;r=n;l=l-1|0}l=e>>>16;n=e&65535;a=(m>>>0)%(l>>>0)|0;k=(m>>>0)/(l>>>0)|0;o=ad(k,n)|0;a=a<<16|r<<j>>>16;if(a>>>0<o>>>0){k=k-1|0;a=a+e|0;if(a>>>0>=e>>>0){if(a>>>0<o>>>0){k=k-1|0;a=a+e|0}}}a=a-o|0;q=(a>>>0)%(l>>>0)|0;f=(a>>>0)/(l>>>0)|0;o=ad(f,n)|0;q=q<<16|r<<j&65535;if(q>>>0<o>>>0){f=f-1|0;q=q+e|0;if(q>>>0>=e>>>0){if(q>>>0<o>>>0){f=f-1|0;q=q+e|0}}}q=q-o|0;c[g>>2]=k<<16|f;m=q;h=m>>>(j>>>0);i=h;return i|0}function rO(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a;a=b;b=e;f=f+4|0;e=32-b|0;g=d-1|0;d=c[a+(g<<2)>>2]|0;h=d>>>(e>>>0);i=d;while(1){j=g-1|0;g=j;if((j|0)<0){break}d=c[a+(g<<2)>>2]|0;c[f+(g<<2)>>2]=i<<b|d>>>(e>>>0);i=d}c[f+(g<<2)>>2]=i<<b;return h|0}function rP(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;d=c[a>>2]|0;if(d>>>0<=1){if((d|0)==1){f=0;while(1){if((f|0)>=(b|0)){break}c[e+(f<<2)>>2]=c[a+(f<<2)>>2];f=f+1|0}}else{f=0;while(1){if((f|0)>=(b|0)){break}c[e+(f<<2)>>2]=0;f=f+1|0}}g=0}else{g=rX(e,a,b,d)|0}c[e+(b<<2)>>2]=g;e=e+4|0;f=1;while(1){if((f|0)>=(b|0)){break}d=c[a+(f<<2)>>2]|0;if(d>>>0<=1){g=0;if((d|0)==1){g=rK(e,e,a,b)|0}}else{g=rY(e,a,b,d)|0}c[e+(b<<2)>>2]=g;e=e+4|0;f=f+1|0}return}function rQ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a;a=b;b=d;d=e;if((b&1|0)!=0){e=b-1|0;if((e|0)<16){rP(f,a,e)}else{rQ(f,a,e,d)}g=rY(f+(e<<2)|0,a,e,c[a+(e<<2)>>2]|0)|0;c[f+(e+e<<2)>>2]=g;g=rY(f+(e<<2)|0,a,b,c[a+(e<<2)>>2]|0)|0;c[f+(e+b<<2)>>2]=g;return}g=b>>1;if((g|0)<16){rP(f+(b<<2)|0,a+(g<<2)|0,g)}else{rQ(f+(b<<2)|0,a+(g<<2)|0,g,d)}if((rf(a+(g<<2)|0,a,g)|0)>=0){e=f;h=a+(g<<2)|0;i=a;j=g;r$(e,h,i,j)|0}else{j=f;i=a;h=a+(g<<2)|0;e=g;r$(j,i,h,e)|0}if((g|0)<16){rP(d,f,g)}else{rQ(d,f,g,d+(b<<2)|0)}e=0;while(1){if((e|0)>=(g|0)){break}c[f+(g<<2)+(e<<2)>>2]=c[f+(b<<2)+(e<<2)>>2];e=e+1|0}e=rK(f+(b<<2)|0,f+(b<<2)|0,f+(b<<2)+(g<<2)|0,g)|0;e=e-(r$(f+(g<<2)|0,f+(g<<2)|0,d,b)|0)|0;if((g|0)<16){rP(d,a,g)}else{rQ(d,a,g,d+(b<<2)|0)}e=e+(rK(f+(g<<2)|0,f+(g<<2)|0,d,b)|0)|0;if((e|0)!=0){a=f+(g<<2)+(b<<2)|0;h=f+(g<<2)+(b<<2)|0;i=g;j=e;rb(a,h,i,j)|0}j=0;while(1){if((j|0)>=(g|0)){break}c[f+(j<<2)>>2]=c[d+(j<<2)>>2];j=j+1|0}e=rK(f+(g<<2)|0,f+(g<<2)|0,d+(g<<2)|0,g)|0;if((e|0)!=0){e=f+(b<<2)|0;g=f+(b<<2)|0;f=b;rb(e,g,f,1)|0}return}function rR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=a;a=b;b=c;c=d;if((a|0)==(b|0)){if((c|0)<16){rP(e,a,c)}else{f=tM(a)|0;d=r2(c<<1,f)|0;rQ(e,a,c,d);r5(d,c<<1)}return}if((c|0)<16){d=e;g=a;h=b;i=c;rS(d,g,h,i)|0}else{if((tM(a)|0)!=0){j=1}else{j=(tM(b)|0)!=0}f=j&1;j=r2(c<<1,f)|0;rT(e,a,b,c,j);r5(j,c<<1)}return}function rS(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a;a=b;b=d;d=e;e=c[b>>2]|0;if(e>>>0<=1){if((e|0)==1){g=0;while(1){if((g|0)>=(d|0)){break}c[f+(g<<2)>>2]=c[a+(g<<2)>>2];g=g+1|0}}else{g=0;while(1){if((g|0)>=(d|0)){break}c[f+(g<<2)>>2]=0;g=g+1|0}}h=0}else{h=rX(f,a,d,e)|0}c[f+(d<<2)>>2]=h;f=f+4|0;g=1;while(1){if((g|0)>=(d|0)){break}e=c[b+(g<<2)>>2]|0;if(e>>>0<=1){h=0;if((e|0)==1){h=rK(f,f,a,d)|0}}else{h=rY(f,a,d,e)|0}c[f+(d<<2)>>2]=h;f=f+4|0;g=g+1|0}return h|0}function rT(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;g=a;a=b;b=d;d=e;e=f;if((d&1|0)!=0){f=d-1|0;if((f|0)<16){h=g;i=a;j=b;k=f;rS(h,i,j,k)|0}else{rT(g,a,b,f,e)}k=rY(g+(f<<2)|0,a,f,c[b+(f<<2)>>2]|0)|0;c[g+(f+f<<2)>>2]=k;k=rY(g+(f<<2)|0,b,d,c[a+(f<<2)>>2]|0)|0;c[g+(f+d<<2)>>2]=k;return}k=d>>1;if((k|0)<16){f=g+(d<<2)|0;j=a+(k<<2)|0;i=b+(k<<2)|0;h=k;rS(f,j,i,h)|0}else{rT(g+(d<<2)|0,a+(k<<2)|0,b+(k<<2)|0,k,e)}if((rf(a+(k<<2)|0,a,k)|0)>=0){h=g;i=a+(k<<2)|0;j=a;f=k;r$(h,i,j,f)|0;l=0}else{f=g;j=a;i=a+(k<<2)|0;h=k;r$(f,j,i,h)|0;l=1}if((rf(b+(k<<2)|0,b,k)|0)>=0){h=g+(k<<2)|0;i=b+(k<<2)|0;j=b;f=k;r$(h,i,j,f)|0;l=l^1}else{f=g+(k<<2)|0;j=b;i=b+(k<<2)|0;h=k;r$(f,j,i,h)|0}if((k|0)<16){h=e;i=g;j=g+(k<<2)|0;f=k;rS(h,i,j,f)|0}else{rT(e,g,g+(k<<2)|0,k,e+(d<<2)|0)}f=0;while(1){if((f|0)>=(k|0)){break}c[g+(k<<2)+(f<<2)>>2]=c[g+(d<<2)+(f<<2)>>2];f=f+1|0}f=rK(g+(d<<2)|0,g+(d<<2)|0,g+(d<<2)+(k<<2)|0,k)|0;if((l|0)!=0){f=f-(r$(g+(k<<2)|0,g+(k<<2)|0,e,d)|0)|0}else{f=f+(rK(g+(k<<2)|0,g+(k<<2)|0,e,d)|0)|0}if((k|0)<16){l=e;j=a;i=b;h=k;rS(l,j,i,h)|0}else{rT(e,a,b,k,e+(d<<2)|0)}f=f+(rK(g+(k<<2)|0,g+(k<<2)|0,e,d)|0)|0;if((f|0)!=0){b=g+(k<<2)+(d<<2)|0;a=g+(k<<2)+(d<<2)|0;h=k;i=f;rb(b,a,h,i)|0}i=0;while(1){if((i|0)>=(k|0)){break}c[g+(i<<2)>>2]=c[e+(i<<2)>>2];i=i+1|0}f=rK(g+(k<<2)|0,g+(k<<2)|0,e+(k<<2)|0,k)|0;if((f|0)!=0){f=g+(d<<2)|0;k=g+(d<<2)|0;g=d;rb(f,k,g,1)|0}return}function rU(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=a;a=b;b=d;d=e;e=f;f=g;if((c[f+4>>2]|0)!=0){if((c[f+12>>2]|0)<(e|0)){i=2325}}else{i=2325}if((i|0)==2325){if((c[f+4>>2]|0)!=0){r5(c[f+4>>2]|0,c[f+8>>2]|0)}c[f+8>>2]=e<<1;if((tM(a)|0)!=0){j=1}else{j=(tM(d)|0)!=0}c[f+4>>2]=r2(e<<1,j&1)|0;c[f+12>>2]=e}if((e|0)<16){j=h;g=a;k=d;l=e;rS(j,g,k,l)|0}else{rT(h,a,d,e,c[f+4>>2]|0)}h=h+(e<<2)|0;a=a+(e<<2)|0;b=b-e|0;if((b|0)>=(e|0)){if((c[f+16>>2]|0)!=0){if((c[f+24>>2]|0)<(e|0)){i=2338}}else{i=2338}if((i|0)==2338){if((c[f+16>>2]|0)!=0){r5(c[f+16>>2]|0,c[f+20>>2]|0)}c[f+20>>2]=e<<1;if((tM(a)|0)!=0){m=1}else{m=(tM(d)|0)!=0}c[f+16>>2]=r2(e<<1,m&1)|0;c[f+24>>2]=e}do{if((e|0)<16){m=c[f+16>>2]|0;i=a;l=d;k=e;rS(m,i,l,k)|0}else{rT(c[f+16>>2]|0,a,d,e,c[f+4>>2]|0)}n=rK(h,h,c[f+16>>2]|0,e)|0;rb(h+(e<<2)|0,(c[f+16>>2]|0)+(e<<2)|0,e,n)|0;h=h+(e<<2)|0;a=a+(e<<2)|0;b=b-e|0;}while((b|0)>=(e|0))}if((b|0)==0){return}if((b|0)<16){k=c[f+4>>2]|0;l=d;i=e;m=a;g=b;rV(k,l,i,m,g)|0}else{if((c[f>>2]|0)==0){c[f>>2]=tX(1,28)|0}rU(c[f+4>>2]|0,d,e,a,b,c[f>>2]|0)}n=rK(h,h,c[f+4>>2]|0,e)|0;rb(h+(e<<2)|0,(c[f+4>>2]|0)+(e<<2)|0,b,n)|0;return}function rV(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+32|0;h=g|0;j=a;a=b;b=d;d=e;e=f;if((e|0)>=16){Ae(h|0,0,28);rU(j,a,b,d,e,h);rW(h);k=c[j+(b<<2)+(e<<2)-4>>2]|0;l=k;i=g;return l|0}if((e|0)==0){k=0;l=k;i=g;return l|0}h=c[d>>2]|0;if(h>>>0<=1){if((h|0)==1){f=0;while(1){if((f|0)>=(b|0)){break}c[j+(f<<2)>>2]=c[a+(f<<2)>>2];f=f+1|0}}else{f=0;while(1){if((f|0)>=(b|0)){break}c[j+(f<<2)>>2]=0;f=f+1|0}}m=0}else{m=rX(j,a,b,h)|0}c[j+(b<<2)>>2]=m;j=j+4|0;f=1;while(1){if((f|0)>=(e|0)){break}h=c[d+(f<<2)>>2]|0;if(h>>>0<=1){m=0;if((h|0)==1){m=rK(j,j,a,b)|0}}else{m=rY(j,a,b,h)|0}c[j+(b<<2)>>2]=m;j=j+4|0;f=f+1|0}k=m;l=k;i=g;return l|0}function rW(a){a=a|0;var b=0;b=a;if((c[b+16>>2]|0)!=0){r5(c[b+16>>2]|0,c[b+20>>2]|0)}if((c[b+4>>2]|0)!=0){r5(c[b+4>>2]|0,c[b+8>>2]|0)}b=c[b>>2]|0;while(1){if((b|0)==0){break}a=c[b>>2]|0;if((c[b+16>>2]|0)!=0){r5(c[b+16>>2]|0,c[b+20>>2]|0)}if((c[b+4>>2]|0)!=0){r5(c[b+4>>2]|0,c[b+8>>2]|0)}tQ(b);b=a}return}function rX(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=a;a=b;b=e;e=-d|0;a=a+(-e<<2)|0;f=f+(-e<<2)|0;d=0;do{g=c[a+(e<<2)>>2]|0;h=b;i=g&65535;j=g>>>16;g=h&65535;k=h>>>16;h=ad(i,g)|0;l=ad(i,k)|0;i=ad(j,g)|0;g=ad(j,k)|0;l=l+(h>>>16)|0;l=l+i|0;if(l>>>0<i>>>0){g=g+65536|0}i=((l&65535)<<16)+(h&65535)|0;i=i+d|0;d=(i>>>0<d>>>0?1:0)+(g+(l>>>16))|0;c[f+(e<<2)>>2]=i;i=e+1|0;e=i;}while((i|0)!=0);return d|0}function rY(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=a;a=b;b=e;e=-d|0;f=f+(-e<<2)|0;a=a+(-e<<2)|0;d=0;do{g=c[a+(e<<2)>>2]|0;h=b;i=g&65535;j=g>>>16;g=h&65535;k=h>>>16;h=ad(i,g)|0;l=ad(i,k)|0;i=ad(j,g)|0;g=ad(j,k)|0;l=l+(h>>>16)|0;l=l+i|0;if(l>>>0<i>>>0){g=g+65536|0}i=((l&65535)<<16)+(h&65535)|0;i=i+d|0;d=(i>>>0<d>>>0?1:0)+(g+(l>>>16))|0;l=c[f+(e<<2)>>2]|0;i=l+i|0;d=d+(i>>>0<l>>>0?1:0)|0;c[f+(e<<2)>>2]=i;i=e+1|0;e=i;}while((i|0)!=0);return d|0}function rZ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=a;a=b;b=e;e=-d|0;f=f+(-e<<2)|0;a=a+(-e<<2)|0;d=0;do{g=c[a+(e<<2)>>2]|0;h=b;i=g&65535;j=g>>>16;g=h&65535;k=h>>>16;h=ad(i,g)|0;l=ad(i,k)|0;i=ad(j,g)|0;g=ad(j,k)|0;l=l+(h>>>16)|0;l=l+i|0;if(l>>>0<i>>>0){g=g+65536|0}i=((l&65535)<<16)+(h&65535)|0;i=i+d|0;d=(i>>>0<d>>>0?1:0)+(g+(l>>>16))|0;l=c[f+(e<<2)>>2]|0;i=l-i|0;d=d+(i>>>0>l>>>0?1:0)|0;c[f+(e<<2)>>2]=i;i=e+1|0;e=i;}while((i|0)!=0);return d|0}function r_(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a;a=b;b=d;d=e;f=f-4|0;e=32-d|0;g=c[a>>2]|0;h=g<<e;i=g;j=1;while(1){if((j|0)>=(b|0)){break}g=c[a+(j<<2)>>2]|0;c[f+(j<<2)>>2]=i>>>(d>>>0)|g<<e;i=g;j=j+1|0}c[f+(j<<2)>>2]=i>>>(d>>>0);return h|0}function r$(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a;a=b;b=d;d=-e|0;a=a+(-d<<2)|0;b=b+(-d<<2)|0;f=f+(-d<<2)|0;e=0;do{g=c[b+(d<<2)>>2]|0;h=c[a+(d<<2)>>2]|0;g=g+e|0;e=g>>>0<e>>>0|0;g=h-g|0;e=e+(g>>>0>h>>>0)|0;c[f+(d<<2)>>2]=g;g=d+1|0;d=g;}while((g|0)!=0);return e|0}function r0(){return 37809}function r1(a){a=a|0;var b=0,d=0;b=a;a=tU(20)|0;if((b|0)!=0){d=r2(b,0)|0}else{d=0}c[a+16>>2]=d;c[a>>2]=b;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;return a|0}function r2(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;if((d|0)!=0){e=d}else{e=1}a=e<<2;if((b|0)!=0){f=tW(a)|0}else{f=tU(a)|0}a=f;if((d|0)!=0){g=a;return g|0}c[a>>2]=0;g=a;return g|0}function r3(a){a=a|0;var b=0;b=a;tO(b);tO(c[b+16>>2]|0);return}function r4(a){a=a|0;var b=0,d=0;b=a;a=tU(20)|0;if((b|0)!=0){d=r2(b,1)|0}else{d=0}c[a+16>>2]=d;c[a>>2]=b;c[a+12>>2]=1;c[a+4>>2]=0;c[a+8>>2]=0;return a|0}function r5(b,c){b=b|0;c=c|0;var d=0,e=0;d=b;if((d|0)==0){return}b=c<<2;if((b|0)!=0){c=d;e=b;while(1){if((e|0)==0){break}a[c]=0;c=c+1|0;e=e-1|0}}tQ(d);return}function r6(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;r5(c[e+16>>2]|0,c[e>>2]|0);c[e+16>>2]=b;c[e>>2]=d;return}function r7(a,b){a=a|0;b=b|0;var d=0,e=0;d=a;a=b;if(a>>>0<=(c[d>>2]|0)>>>0){e=c[d+4>>2]|0;while(1){if(e>>>0>=(c[d>>2]|0)>>>0){break}c[(c[d+16>>2]|0)+(e<<2)>>2]=0;e=e+1|0}return}if((c[d+16>>2]|0)!=0){c[d+16>>2]=tV(c[d+16>>2]|0,a<<2)|0;e=c[d>>2]|0;while(1){if(e>>>0>=a>>>0){break}c[(c[d+16>>2]|0)+(e<<2)>>2]=0;e=e+1|0}}else{if((c[d+12>>2]&1|0)!=0){c[d+16>>2]=tY(a,4)|0}else{c[d+16>>2]=tX(a,4)|0}}c[d>>2]=a;return}function r8(a){a=a|0;var b=0;b=a;c[b+4>>2]=0;c[b+12>>2]=0;return}function r9(a){a=a|0;var b=0,d=0;b=i;d=a;if((d|0)==0){i=b;return}if((c[d+12>>2]&4|0)!=0){tQ(c[d+16>>2]|0)}else{r5(c[d+16>>2]|0,c[d>>2]|0)}if((c[d+12>>2]&-8|0)!=0){ul(82192,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a}tQ(d);i=b;return}function sa(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a;if((e|0)==0){e=r1(0)|0}if((c[e+12>>2]&4|0)!=0){tQ(c[e+16>>2]|0)}else{r5(c[e+16>>2]|0,c[e>>2]|0)}c[e+16>>2]=b;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=d;c[e+12>>2]=4;return e|0}function sb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=a;a=b;if((c[e+12>>2]&4|0)==0){ul(82528,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b;return 0}if((a|0)==0){f=e;g=f+16|0;h=c[g>>2]|0;j=h;i=d;return j|0}c[a>>2]=c[e+8>>2];f=e;g=f+16|0;h=c[g>>2]|0;j=h;i=d;return j|0}function sc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a;do{if((b|0)!=0){if((c[b+12>>2]&4|0)==0){break}if((tM(c[b+16>>2]|0)|0)!=0){d=tW(((c[b+8>>2]|0)+7|0)/8|0)|0}else{d=tU(((c[b+8>>2]|0)+7|0)/8|0)|0}a=d;e=a;f=c[b+16>>2]|0;g=((c[b+8>>2]|0)+7|0)/8|0;Ac(e|0,f|0,g)|0;h=sa(0,a,c[b+8>>2]|0)|0;i=h;return i|0}}while(0);if((b|0)!=0){do{if((b|0)!=0){if((c[b+12>>2]&1|0)==0){j=2533;break}k=r4(c[b+4>>2]|0)|0}else{j=2533}}while(0);if((j|0)==2533){k=r1(c[b+4>>2]|0)|0}h=k;c[h+4>>2]=c[b+4>>2];c[h+8>>2]=c[b+8>>2];c[h+12>>2]=c[b+12>>2];k=0;while(1){if((k|0)>=(c[h+4>>2]|0)){break}c[(c[h+16>>2]|0)+(k<<2)>>2]=c[(c[b+16>>2]|0)+(k<<2)>>2];k=k+1|0}}else{h=0}i=h;return i|0}function sd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;b=a;do{if((b|0)!=0){if((c[b+12>>2]&4|0)==0){break}a=((c[b+8>>2]|0)+7|0)/8|0;if((tM(c[b+16>>2]|0)|0)!=0){d=tL(a)|0}else{d=tJ(a)|0}e=d;f=e;g=c[b+16>>2]|0;h=a;Ac(f|0,g|0,h)|0;i=sa(0,e,c[b+8>>2]|0)|0;j=i;return j|0}}while(0);if((b|0)!=0){do{if((b|0)!=0){if((c[b+12>>2]&1|0)==0){k=2554;break}l=r4(c[b+4>>2]|0)|0}else{k=2554}}while(0);if((k|0)==2554){l=r1(c[b+4>>2]|0)|0}i=l;c[i+4>>2]=0;c[i+8>>2]=0;c[i+12>>2]=c[b+12>>2]}else{i=0}j=i;return j|0}function se(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;b=c[a+4>>2]|0;e=c[a+8>>2]|0;if((d|0)==0){d=r1(c[a+4>>2]|0)|0}if((c[d>>2]|0)<(b|0)){r7(d,b)}f=c[d+16>>2]|0;g=c[a+16>>2]|0;h=0;while(1){if((h|0)>=(b|0)){break}c[f+(h<<2)>>2]=c[g+(h<<2)>>2];h=h+1|0}c[d+4>>2]=b;c[d+12>>2]=c[a+12>>2];c[d+8>>2]=e;return d|0}function sf(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;if((d|0)==0){d=r1(1)|0}if((c[d>>2]|0)<1){r7(d,1)}c[c[d+16>>2]>>2]=a;c[d+4>>2]=(a|0)!=0?1:0;c[d+8>>2]=0;c[d+12>>2]=0;return d|0}function sg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;a=b;b=0;e=0;if((c[d+4>>2]|0)>1){b=67}else{if((c[d+4>>2]|0)==1){e=c[c[d+16>>2]>>2]|0}else{e=0}}if((b|0)!=0){f=b;return f|0}c[a>>2]=e;f=b;return f|0}function sh(a,b){a=a|0;b=b|0;var c=0;c=0;c=sg(a,b)|0;return si(c)|0}function si(a){a=a|0;return st(32,a)|0}function sj(a){a=a|0;var b=0;b=a;a=r1(1)|0;c[c[a+16>>2]>>2]=b;c[a+4>>2]=(b|0)!=0?1:0;c[a+8>>2]=0;return a|0}function sk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+24|0;e=d|0;f=a;a=b;b=e;g=f;c[b>>2]=c[g>>2];c[b+4>>2]=c[g+4>>2];c[b+8>>2]=c[g+8>>2];c[b+12>>2]=c[g+12>>2];c[b+16>>2]=c[g+16>>2];g=f;f=a;c[g>>2]=c[f>>2];c[g+4>>2]=c[f+4>>2];c[g+8>>2]=c[f+8>>2];c[g+12>>2]=c[f+12>>2];c[g+16>>2]=c[f+16>>2];f=a;a=e;c[f>>2]=c[a>>2];c[f+4>>2]=c[a+4>>2];c[f+8>>2]=c[a+8>>2];c[f+12>>2]=c[a+12>>2];c[f+16>>2]=c[a+16>>2];i=d;return}function sl(a){a=a|0;return r1(((a+32-1|0)>>>0)/32|0)|0}function sm(a){a=a|0;return r4(((a+32-1|0)>>>0)/32|0)|0}function sn(a){a=a|0;r9(a);return}function so(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=a;a=d;d=((b+7|0)>>>0)/8|0;if((a|0)==0){do{if((e|0)!=0){if((c[e+12>>2]&1|0)==0){f=2603;break}g=tW(d)|0}else{f=2603}}while(0);if((f|0)==2603){g=tU(d)|0}h=g;sM(h,d);i=e;j=h;k=d;rz(i,j,k,0);l=h;tQ(l);return}else{do{if((e|0)!=0){if((c[e+12>>2]&1|0)==0){f=2608;break}m=sH(d,a)|0}else{f=2608}}while(0);if((f|0)==2608){m=sF(d,a)|0}h=m;i=e;j=h;k=d;rz(i,j,k,0);l=h;tQ(l);return}}function sp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=b;if((e|0)==1){sq(a);i=d;return}ul(73408,(d=i,i=i+1|0,i=i+7&-8,c[d>>2]=0,d)|0);i=d}function sq(a){a=a|0;var b=0,d=0,e=0;b=a;if((c[b+12>>2]&1|0)!=0){return}a=b+12|0;c[a>>2]=c[a>>2]|1;a=c[b+16>>2]|0;if((c[b+4>>2]|0)==0){if((a|0)!=0){ug(68936,65816,197,86992)}return}d=r2(c[b+4>>2]|0,1)|0;e=0;while(1){if((e|0)>=(c[b+4>>2]|0)){break}c[d+(e<<2)>>2]=c[a+(e<<2)>>2];e=e+1|0}c[b+16>>2]=d;r5(a,c[b>>2]|0);return}function sr(a,b){a=a|0;b=b|0;var d=0;a=i;d=b;ul(73408,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b;i=a;return}function ss(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a;a=b;if((a|0)==1){f=c[e+12>>2]&1;g=f;i=d;return g|0}else if((a|0)==2){f=c[e+12>>2]&4;g=f;i=d;return g|0}else{ul(73408,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;return 0}return 0}function st(a,b){a=a|0;b=b|0;return su(a,b)|0}function su(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function sv(a,b){a=a|0;b=b|0;c[30590]=a;c[30580]=b;return}function sw(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((c[30590]|0)==0){return}cC[c[30590]&15](c[30580]|0,a,b,d,e);return}function sx(a){a=a|0;var b=0;b=a;if((s5()|0)!=0){yi(b);return}else{xQ(b);return}}function sy(){if((s5()|0)!=0){yo();return}else{xT();return}}function sz(){if((s5()|0)!=0){return}else{xU();return}}function sA(){if((s5()|0)!=0){return}else{xV();return}}function sB(a){a=a|0;if((s5()|0)!=0){return}else{xW(a);return}}function sC(a){a=a|0;var b=0,c=0;if((s5()|0)!=0){b=0;c=b;return c|0}else{b=xX(a)|0;c=b;return c|0}return 0}function sD(){var a=0,b=0;if((s5()|0)!=0){a=yp()|0;b=a;return b|0}else{a=xY()|0;b=a;return b|0}return 0}function sE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((s5()|0)!=0){d=0;e=d;return e|0}else{d=xZ(a,b,c)|0;e=d;return e|0}return 0}function sF(a,b){a=a|0;b=b|0;var c=0;c=a;a=tU(c)|0;sG(a,c,b);return a|0}function sG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=a;a=b;b=c;if((s5()|0)!=0){yr(d,a,b);return}else{x2(d,a,b);return}}function sH(a,b){a=a|0;b=b|0;var c=0;c=a;a=tW(c)|0;sG(a,c,b);return a|0}function sI(a,b,c){a=a|0;b=b|0;c=c|0;sG(a,b,c);return}function sJ(a){a=a|0;if((s5()|0)!=0){return}else{x4(a);return}}function sK(){if((s5()|0)!=0){return}else{x5();return}}function sL(){if((s5()|0)!=0){return}else{x8();return}}function sM(a,b){a=a|0;b=b|0;var c=0;c=a;a=b;if((s5()|0)!=0){yt(c,a);return}else{ya(c,a);return}}function sN(a){a=a|0;var b=0,c=0;if((s5()|0)!=0){b=yu(a)|0;c=b;return c|0}else{b=0;c=b;return c|0}return 0}function sO(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((s5()|0)!=0){i=yx(a,b,c,d,e,f,g,h)|0;j=i;return j|0}else{i=60;j=i;return j|0}return 0}function sP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((s5()|0)!=0){d=yz(a,b,c)|0;e=d;return e|0}else{d=60;e=d;return e|0}return 0}function sQ(a){a=a|0;if((s5()|0)==0){return}yA(a);return}function sR(){var a=0,b=0,d=0;a=0;do{if((c[30630]|0)!=0){if((c[30633]|0)!=0){a=cD[c[30633]&1]()|0}if((a|0)==0){a=cH[c[30634]&31](123160)|0;break}b=a;d=b;return d|0}}while(0);b=a;d=b;return d|0}function sS(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;if((b|0)==0){L3425:do{if((d|0)!=0){do{if((c[d+8>>2]|0)!=0){if((c[d+16>>2]|0)==0){break}if((c[d+20>>2]|0)==0){break}b=d;Ac(122528,b|0,56)|0;c[30630]=1;break L3425}}while(0);e=45;f=e;return f|0}else{c[30630]=0}}while(0);e=0;f=e;return f|0}b=0;if((d|0)!=0){b=c[d>>2]|0}do{if((c[30630]|0)==0){if((b&255|0)==0){break}e=60;f=e;return f|0}}while(0);do{if((c[30632]&255|0)!=1){if((b&255|0)==1){break}if((c[30632]&255|0)!=(b&255|0)){break}if(((c[30632]|0)>>>8&255|0)!=(b>>>8&255|0)){break}e=0;f=e;return f|0}}while(0);e=60;f=e;return f|0}function sT(a){a=a|0;var b=0,d=0,e=0;b=a;if((c[30630]|0)!=0){d=sU(b,0)|0;e=d;return e|0}else{c[b>>2]=0;d=0;e=d;return e|0}return 0}function sU(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;a=b;b=0;if((a|0)!=0){e=c[30636]|0;cH[e&31](123160)|0}if((c[d>>2]|0)==0){f=2809}else{if((a|0)==0){f=2809}}if((f|0)==2809){b=cH[c[30634]&31](d)|0}if((a|0)==0){g=b;return g|0}cH[c[30637]&31](123160)|0;g=b;return g|0}function sV(a){a=a|0;var b=0,d=0,e=0;b=a;if((c[30630]|0)==0){if((c[b>>2]|0)==0){}else{b4(80888,82288,173,86624);return 0}c[b>>2]=2;d=0;e=d;return e|0}if((c[30635]|0)==0){d=0;e=d;return e|0}cH[c[30636]&31](123160)|0;if((c[b>>2]|0)==0){a=c[30637]|0;cH[a&31](123160)|0;d=0;e=d;return e|0}else{a=c[30637]|0;cH[a&31](123160)|0;d=cH[c[30635]&31](b)|0;e=d;return e|0}return 0}function sW(a){a=a|0;var b=0,d=0,e=0;b=a;if((c[30630]|0)==0){if((c[b>>2]|0)==0){}else{b4(80888,82288,193,86600);return 0}c[b>>2]=1;d=0;e=d;return e|0}a=sU(b,1)|0;if((a|0)!=0){d=a;e=d;return e|0}else{d=cH[c[30636]&31](b)|0;e=d;return e|0}return 0}function sX(a){a=a|0;var b=0,d=0,e=0;b=a;if((c[30630]|0)==0){if((c[b>>2]|0)==1){}else{b4(73160,82288,213,86576);return 0}c[b>>2]=0;d=0;e=d;return e|0}a=sU(b,1)|0;if((a|0)!=0){d=a;e=d;return e|0}else{d=cH[c[30637]&31](b)|0;e=d;return e|0}return 0}function sY(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;do{if((c[30630]|0)!=0){if((c[30638]|0)==0){break}f=cI[c[30638]&63](e,a,b)|0;g=f;return g|0}}while(0);f=aU(e|0,a|0,b|0)|0;g=f;return g|0}function sZ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;do{if((c[30630]|0)!=0){if((c[30639]|0)==0){break}f=cI[c[30639]&63](e,a,b)|0;g=f;return g|0}}while(0);f=ck(e|0,a|0,b|0)|0;g=f;return g|0}function s_(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=a;a=b;b=d;d=e;e=f;do{if((c[30630]|0)!=0){if((c[30640]|0)==0){break}h=cO[c[30640]&31](g,a,b,d,e)|0;i=h;return i|0}}while(0);h=aC(g|0,a|0,b|0,d|0,e|0)|0;i=h;return i|0}function s$(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;do{if((c[30630]|0)!=0){if((c[30641]|0)==0){break}f=cI[c[30641]&63](e,a,b)|0;g=f;return g|0}}while(0);f=bw(e|0,a|0,b|0)|0;g=f;return g|0}function s0(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;do{if((c[30630]|0)!=0){if((c[30642]|0)==0){break}f=cI[c[30642]&63](e,a,b)|0;g=f;return g|0}}while(0);f=b7(e|0,a|0,b|0)|0;g=f;return g|0}function s1(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;do{if((c[30630]|0)!=0){if((c[30643]|0)==0){break}f=cI[c[30643]&63](e,a,b)|0;g=f;return g|0}}while(0);f=a9(e|0,a|0,b|0)|0;g=f;return g|0}function s2(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;do{if((c[30630]|0)!=0){if((c[30644]|0)==0){break}f=cI[c[30644]&63](e,a,b)|0;g=f;return g|0}}while(0);f=bD(e|0,a|0,b|0)|0;g=f;return g|0}function s3(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a;a=b;b=d;do{if((c[30630]|0)!=0){if((c[30645]|0)==0){break}f=cI[c[30645]&63](e,a,b)|0;g=f;return g|0}}while(0);f=cl(e|0,a|0,b|0)|0;g=f;return g|0}function s4(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+512|0;d=b|0;e=b+256|0;f=a;if((c[30962]|0)!=0){if((s5()|0)!=0){s6(5);s7()}if((c[30962]|0)!=0){ug(80832,82280,115,88232)}}c[30962]=1;L3582:do{if((f|0)!=0){if((c[30656]|0)!=0){ug(73136,82280,122,88232)}}else{if((bi(68704,0)|0)==0){if((c[30656]|0)!=0){ug(73136,82280,133,88232)}break}a=bJ(84152,65664)|0;if((a|0)!=0){do{if((bb(d|0,256,a|0)|0)!=0){if((bU(d|0)|0)==0){break}g=a;aB(g|0)|0;if((c[30656]|0)!=0){ug(73136,82280,152,88232)}break L3582}}while(0);g=a;aB(g|0)|0}else{g=c[(bX()|0)>>2]|0;h=g;do{if((g|0)!=2){if((h|0)==13){break}if((bi(63568,0)|0)!=0){break}j=bY(h|0)|0;uh(61928,(k=i,i=i+16|0,c[k>>2]=84152,c[k+8>>2]=j,k)|0);i=k;b8()}}while(0)}c[30656]=1}}while(0);if((c[30656]|0)!=0){i=b;return}d=sT(122784)|0;if((d|0)!=0){f=bY(d|0)|0;uh(60440,(k=i,i=i+8|0,c[k>>2]=f,k)|0);i=k;b8()}k=bJ(68704,65664)|0;if((k|0)!=0){do{if((bb(e|0,256,k|0)|0)!=0){if((bU(e|0)|0)==0){break}c[30720]=1}}while(0);e=k;aB(e|0)|0}s6(1);i=b;return}function s5(){return((c[30656]|0)!=0^1)&1|0}function s6(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;a=0;tc();e=c[30780]|0;switch(c[30780]|0){case 6:{break};case 4:{do{if((d|0)==6){f=2977}else{if((d|0)==4){f=2977;break}if((d|0)==5){f=2977;break}if((d|0)==2){f=2977}}}while(0);if((f|0)==2977){a=1}break};case 5:{if((d|0)==6){a=1}break};case 2:{do{if((d|0)==3){f=2965}else{if((d|0)==4){f=2965;break}if((d|0)==5){f=2965}}}while(0);if((f|0)==2965){a=1}break};case 3:{do{if((d|0)==6){f=2971}else{if((d|0)==2){f=2971;break}if((d|0)==4){f=2971;break}if((d|0)==5){f=2971}}}while(0);if((f|0)==2971){a=1}break};case 1:{do{if((d|0)==2){f=2960}else{if((d|0)==4){f=2960;break}if((d|0)==5){f=2960}}}while(0);if((f|0)==2960){a=1}break};case 0:{do{if((d|0)==1){f=2955}else{if((d|0)==4){f=2955;break}if((d|0)==5){f=2955}}}while(0);if((f|0)==2955){a=1}break};default:{}}if((a|0)!=0){c[30780]=d}td();if((a|0)!=0){if((uc(2)|0)!=0){f=2987}}else{f=2987}if((f|0)==2987){g=tp(e)|0;e=tp(d)|0;uh(79016,(h=i,i=i+24|0,c[h>>2]=g,c[h+8>>2]=e,c[h+16>>2]=(a|0)!=0?78160:77160,h)|0);i=h}if((a|0)==0){s7();i=b;return}if((d|0)==4){f=2992}else{if((d|0)==5){f=2992}}i=b;return}function s7(){aF(0)|0;b8();return}function s8(){var a=0;if((s5()|0)!=0){a=c[30720]|0}else{a=0}return a|0}function s9(){c[30720]=1;return}function ta(a){a=a|0;if((s5()|0)==0){ug(58672,82280,296,88264)}if((s8()|0)!=0){tb(82280,301,88264,0,a);return}tc();if((c[30688]|0)!=0){td();return}else{c[30688]=1;td();return}}function tb(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;h=d;d=e;e=f;if((s5()|0)==0){i=g;return}s6((d|0)!=0?5:4);if((h|0)!=0){j=h}else{j=123312}if((e|0)!=0){k=e}else{k=80040}uh(56456,(e=i,i=i+48|0,c[e>>2]=(d|0)!=0?83552:123312,c[e+8>>2]=a,c[e+16>>2]=b,c[e+24>>2]=(h|0)!=0?80800:123312,c[e+32>>2]=j,c[e+40>>2]=k,e)|0);i=e;i=g;return}function tc(){var a=0,b=0,d=0;a=i;b=sW(122784)|0;if((b|0)!=0){d=bY(b|0)|0;uh(67080,(b=i,i=i+8|0,c[b>>2]=d,b)|0);i=b;b8()}else{i=a;return}}function td(){var a=0,b=0,d=0;a=i;b=sX(122784)|0;if((b|0)!=0){d=bY(b|0)|0;uh(67392,(b=i,i=i+8|0,c[b>>2]=d,b)|0);i=b;b8()}else{i=a;return}}function te(){var a=0,b=0,d=0;if((s5()|0)!=0){tc();a=c[30688]|0;td();b=a;d=b;return d|0}else{b=0;d=b;return d|0}return 0}function tf(){var a=0,b=0;if((s5()|0)==0){a=1;b=a;return b|0}tc();if((c[30780]|0)==1){td();tg(0)|0;tc()}a=(c[30780]|0)==3|0;td();b=a;return b|0}function tg(a){a=a|0;var b=0,c=0,d=0;b=a;a=4;c=50;if((s5()|0)!=0){s6(2)}do{if((tj(b)|0)==0){if((tk(b)|0)!=0){break}if((tl(b)|0)!=0){break}if((tm()|0)!=0){break}if((tn(b)|0)!=0){break}if((to()|0)!=0){break}else{a=3;c=0;break}}}while(0);if((s5()|0)==0){d=c;return d|0}s6(a);d=c;return d|0}function th(){var a=0,b=0;if((s5()|0)!=0){tc();a=(c[30780]|0)==3|0;td();b=a;return b|0}else{a=1;b=a;return b|0}return 0}function ti(){var a=0,b=0,d=0;if((s5()|0)==0){a=1;b=a;return b|0}tc();if((c[30780]|0)==3){d=1}else{d=(c[30780]|0)==4}a=d&1;td();b=a;return b|0}function tj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a;a=0;d=0;while(1){if((c[29344+(d<<2)>>2]|0)==0){break}e=li(c[29344+(d<<2)>>2]|0,b,4)|0;f=c[29344+(d<<2)>>2]|0;if((e|0)!=0){g=y4(e)|0}else{g=0}tq(69184,f,0,g);if((e|0)!=0){a=1}d=d+1|0}return a|0}function tk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a;a=0;d=0;while(1){if((c[29320+(d<<2)>>2]|0)==0){break}e=mR(c[29320+(d<<2)>>2]|0,b,4)|0;f=c[29320+(d<<2)>>2]|0;if((e|0)!=0){g=y4(e)|0}else{g=0}tq(69816,f,0,g);if((e|0)!=0){a=1}d=d+1|0}return a|0}function tl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a;a=0;d=0;while(1){if((c[29296+(d<<2)>>2]|0)==0){break}e=xq(c[29296+(d<<2)>>2]|0,b,4)|0;f=c[29296+(d<<2)>>2]|0;if((e|0)!=0){g=y4(e)|0}else{g=0}tq(70152,f,0,g);if((e|0)!=0){a=1}d=d+1|0}return a|0}function tm(){var a=0,b=0;a=sN(4)|0;if((a|0)!=0){b=y4(a)|0}else{b=0}tq(67696,0,0,b);return((a|0)!=0^1^1)&1|0}function tn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a;a=0;d=0;while(1){if((c[29280+(d<<2)>>2]|0)==0){break}e=oe(c[29280+(d<<2)>>2]|0,b,4)|0;f=c[29280+(d<<2)>>2]|0;if((e|0)!=0){g=y4(e)|0}else{g=0}tq(70840,f,0,g);if((e|0)!=0){a=1}d=d+1|0}return a|0}function to(){return 0}function tp(a){a=a|0;var b=0;switch(a|0){case 0:{b=76456;break};case 2:{b=74696;break};case 4:{b=73456;break};case 1:{b=75440;break};case 6:{b=71784;break};case 5:{b=72176;break};case 3:{b=73960;break};default:{b=71472}}return b|0}function tq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=a;a=b;b=d;d=e;do{if((d|0)==0){if((uc(2)|0)!=0){break}i=f;return}}while(0);if((a1(g|0,70152)|0)!=0){h=g}else{h=69816}e=(a1(g|0,70152)|0)!=0^1?69512:123312;if((a1(g|0,69184)|0)!=0){if((a1(g|0,69816)|0)!=0){if((a1(g|0,70152)|0)!=0){if((a1(g|0,70840)|0)!=0){j=123312}else{j=nB(a)|0}k=j}else{k=mg(a)|0}l=k}else{l=mg(a)|0}m=l}else{m=kP(a)|0}if((d|0)!=0){n=d}else{n=68944}if((b|0)!=0){o=b}else{o=123312}uh(70472,(d=i,i=i+64|0,c[d>>2]=h,c[d+8>>2]=e,c[d+16>>2]=m,c[d+24>>2]=a,c[d+32>>2]=n,c[d+40>>2]=(b|0)!=0?68144:123312,c[d+48>>2]=o,c[d+56>>2]=(b|0)!=0?67904:123312,d)|0);i=d;i=f;return}function tr(){if((c[30798]|0)==0){ts()}return tf()|0}function ts(){var a=0;a=0;if((c[30798]|0)!=0){return}c[30798]=1;a=sR()|0;if((a|0)!=0){uf(72160,139,87128)}s4(c[30700]|0);t4(c[30760]|0);a=lg()|0;if((a|0)!=0){uf(72160,139,87128)}a=mN()|0;if((a|0)!=0){uf(72160,139,87128)}a=oa()|0;if((a|0)!=0){uf(72160,139,87128)}else{return}}function tt(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;e=d|0;f=d+8|0;g=d+16|0;h=d+24|0;j=d+32|0;k=d+40|0;l=b;b=80320;do{if((l|0)!=0){if((a[l|0]|0)!=1){break}if((a[l+1|0]|0)!=1){break}m=xA()|0;n=m;i=d;return n|0}}while(0);ts();if((l|0)==0){m=b;n=m;i=d;return n|0}if((tu(b,e,f,g)|0)==0){m=0;n=m;i=d;return n|0}if((tu(l,h,j,k)|0)==0){m=0;n=m;i=d;return n|0}L3941:do{if((c[e>>2]|0)<=(c[h>>2]|0)){if((c[e>>2]|0)==(c[h>>2]|0)){if((c[f>>2]|0)>(c[j>>2]|0)){break}}do{if((c[e>>2]|0)==(c[h>>2]|0)){if((c[f>>2]|0)!=(c[j>>2]|0)){break}if((c[g>>2]|0)>(c[k>>2]|0)){break L3941}}}while(0);do{if((c[e>>2]|0)==(c[h>>2]|0)){if((c[f>>2]|0)!=(c[j>>2]|0)){break}if((c[g>>2]|0)==(c[k>>2]|0)){break L3941}}}while(0);m=0;n=m;i=d;return n|0}}while(0);m=b;n=m;i=d;return n|0}function tu(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b;b=d;d=e;f=t2(f,c)|0;do{if((f|0)!=0){if((a[f]|0)!=46){break}f=f+1|0;f=t2(f,b)|0;do{if((f|0)!=0){if((a[f]|0)!=46){break}f=f+1|0;f=t2(f,d)|0;if((f|0)!=0){g=f;h=g;return h|0}else{g=0;h=g;return h|0}}}while(0);g=0;h=g;return h|0}}while(0);g=0;h=g;return h|0}function tv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=b;b=0;switch(a|0){case 30:{ts();uB(0);break};case 37:{ts();c[30654]=1;break};case 51:{if((sD()|0)!=0){b=1}break};case 59:{a=d;e=(y=c[a+4>>2]|0,c[a+4>>2]=y+8,c[(c[a>>2]|0)+y>>2]|0);a=d;f=(y=c[a+4>>2]|0,c[a+4>>2]=y+8,c[(c[a>>2]|0)+y>>2]|0);a=d;g=(y=c[a+4>>2]|0,c[a+4>>2]=y+8,c[(c[a>>2]|0)+y>>2]|0);if((tr()|0)!=0){b=sP(e,f,g)|0}else{b=176}break};case 44:{sA();break};case 24:{ts();g=d;uB((y=c[g+4>>2]|0,c[g+4>>2]=y+8,c[(c[g>>2]|0)+y>>2]|0));if(((uA()|0)&4|0)!=0){b=1}break};case 38:{if((c[30948]|0)==0){ts();sx(0);c[30948]=1;tr()|0}break};case 47:{g=d;b=sS((y=c[g+4>>2]|0,c[g+4>>2]=y+8,c[(c[g>>2]|0)+y>>2]|0),c[30798]|0)|0;if((b|0)==0){ts()}break};case 48:{sx(1);if((tr()|0)!=0){sL()}break};case 27:{uy(uA()|0|1);break};case 52:{b=tw(60)|0;break};case 49:{g=d;sB((y=c[g+4>>2]|0,c[g+4>>2]=y+8,c[(c[g>>2]|0)+y>>2]|0));break};case 53:{g=d;f=(y=c[g+4>>2]|0,c[g+4>>2]=y+8,c[(c[g>>2]|0)+y>>2]|0);tx((f|0)!=0?8:22,f);break};case 54:{if((th()|0)!=0){b=1}break};case 46:{if((tr()|0)!=0){sK()}break};case 28:{uy(uA()|0|2);break};case 45:{f=d;sJ((y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0));break};case 50:{sx(1);f=d;sC((((y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0)|0)!=0^1^1)&1)|0;break};case 64:{if((c[30798]|0)!=0){b=1}else{s9()}break};case 19:{f=d;ub((y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0));break};case 61:{break};case 62:{break};case 57:{ts();b=tg(1)|0;break};case 58:{f=d;g=(y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0);f=d;e=(y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0);f=d;a=(y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0);f=d;h=(y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0);f=d;i=(y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0);f=d;j=(y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0);f=d;k=(y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0);f=d;l=(y=c[f+4>>2]|0,c[f+4>>2]=y+8,c[(c[f>>2]|0)+y>>2]|0);if((tr()|0)!=0){b=sO(g,e,a,h,i,j,k,l)|0}else{b=176}break};case 13:{sy();break};case 55:{do{if((s5()|0)!=0){if((te()|0)!=0){break}if((c[30654]|0)!=0){break}b=1}}while(0);break};case 14:{uL();break};case 20:{l=d;c[30778]=c[30778]|(y=c[l+4>>2]|0,c[l+4>>2]=y+8,c[(c[l>>2]|0)+y>>2]|0);break};case 21:{l=d;c[30778]=c[30778]&~(y=c[l+4>>2]|0,c[l+4>>2]=y+8,c[(c[l>>2]|0)+y>>2]|0);break};case 56:{if((c[30798]|0)!=0){if((ti()|0)!=0){tg(1)|0}if((tf()|0)!=0){b=1}}else{c[30700]=1}break};case 36:{ts();break};case 40:{if((c[30798]|0)!=0){b=1}break};case 23:{break};case 31:{vw();break};case 39:{if((c[30948]|0)!=0){b=1}break};case 25:{ts();uK();break};case 29:{uy((uA()|0)&-3);break};case 22:{ts();sz();break};case 60:{l=d;sQ((y=c[l+4>>2]|0,c[l+4>>2]=y+8,c[(c[l>>2]|0)+y>>2]|0));break};case 63:{l=d;d=(y=c[l+4>>2]|0,c[l+4>>2]=y+8,c[(c[l>>2]|0)+y>>2]|0);l=0;while(1){if((c[46268+(l<<3)>>2]|0)==0){break}if((a1(c[46268+(l<<3)>>2]|0,d|0)|0)==0){m=3305;break}l=l+1|0}if((m|0)==3305){c[30760]=c[30760]|c[46264+(l<<3)>>2]}if((c[46268+(l<<3)>>2]|0)==0){b=88}break};default:{b=61}}return ty(b)|0}function tw(a){a=a|0;return t0(1,a)|0}function tx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a;a=b;cI[e&63](a,56440,(b=i,i=i+8|0,c[b>>2]=80320,b)|0)|0;i=b;cI[e&63](a,83536,(b=i,i=i+8|0,c[b>>2]=82560,b)|0)|0;i=b;cI[e&63](a,80784,(b=i,i=i+8|0,c[b>>2]=80016,b)|0)|0;i=b;cI[e&63](a,79e3,(b=i,i=i+8|0,c[b>>2]=78104,b)|0)|0;i=b;cI[e&63](a,77144,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0)|0;i=b;f=r0()|0;cI[e&63](a,76440,(b=i,i=i+8|0,c[b>>2]=f,b)|0)|0;i=b;f=t3()|0;cI[e&63](a,75424,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0)|0;i=b;g=0;while(1){if((c[46268+(g<<3)>>2]|0)==0){break}if((f&c[46264+(g<<3)>>2]|0)!=0){h=e;j=a;k=c[46268+(g<<3)>>2]|0;cI[h&63](j,74688,(b=i,i=i+8|0,c[b>>2]=k,b)|0)|0;i=b}g=g+1|0}cI[e&63](a,73952,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0)|0;i=b;g=(s5()|0)!=0?121:110;f=(s8()|0)!=0?121:110;cI[e&63](a,73432,(b=i,i=i+16|0,c[b>>2]=g,c[b+8>>2]=f,b)|0)|0;i=b;i=d;return}function ty(a){a=a|0;return t1(32,a)|0}function tz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=e|0;c[f>>2]=b;c[f+4>>2]=0;f=tv(a,e|0)|0;i=d;return f|0}function tA(a){a=a|0;return y4(a)|0}function tB(a){a=a|0;return y9(a)|0}function tC(a){a=a|0;return y_(a)|0}function tD(a){a=a|0;return y_(a)|0}function tE(a,b){a=a|0;b=b|0;return tF(a,b)|0}function tF(a,b){a=a|0;b=b|0;return t0(a,y_(b)|0)|0}function tG(a){a=a|0;return ty(y_(a)|0)|0}function tH(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;ts();if((s5()|0)!=0){ta(82248)}c[30804]=a;c[30802]=b;c[30682]=d;c[30566]=e;c[30698]=f;return}function tI(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;ts();if((s5()|0)!=0){uh(73088,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;i=d;return}else{c[30622]=a;c[30620]=b;i=d;return}}function tJ(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;c[d>>2]=0;tK(a,0,d)|0;i=b;return c[d>>2]|0}function tK(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a;a=d;d=0;do{if((b&1|0)!=0){if((tN()|0)!=0){f=3350;break}if((c[30802]|0)!=0){g=cH[c[30802]&31](e)|0}else{g=vy(e)|0}}else{f=3350}}while(0);if((f|0)==3350){if((c[30804]|0)!=0){g=cH[c[30804]&31](e)|0}else{g=vx(e)|0}}if((g|0)!=0){c[a>>2]=g;h=d;return h|0}if((c[(bX()|0)>>2]|0)==0){y3(12)}d=y_(c[(bX()|0)>>2]|0)|0;h=d;return h|0}function tL(a){a=a|0;var b=0,d=0;b=i;i=i+8|0;d=b|0;c[d>>2]=0;tK(a,1,d)|0;i=b;return c[d>>2]|0}function tM(a){a=a|0;var b=0,d=0,e=0;b=a;if((tN()|0)!=0){d=0;e=d;return e|0}if((c[30682]|0)!=0){d=cH[c[30682]&31](b)|0;e=d;return e|0}else{d=uI(b)|0;e=d;return e|0}return 0}function tN(){var a=0;do{if((c[30654]|0)!=0){if((s8()|0)!=0){c[30654]=0;a=0;break}else{a=c[30654]|0;break}}else{a=0}}while(0);return a|0}function tO(a){a=a|0;return}function tP(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a;a=b;if((d|0)==0){e=tJ(a)|0;f=e;return f|0}if((a|0)==0){tQ(d);e=0;f=e;return f|0}if((c[30566]|0)!=0){g=cN[c[30566]&63](d,a)|0}else{g=vz(d,a)|0}do{if((g|0)==0){if((c[(bX()|0)>>2]|0)!=0){break}y3(12)}}while(0);e=g;f=e;return f|0}function tQ(a){a=a|0;var b=0;b=a;if((b|0)==0){return}a=c[(bX()|0)>>2]|0;if((c[30698]|0)!=0){cE[c[30698]&127](b)}else{vB(b)}if((a|0)==0){return}y3(a);return}function tR(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=a;a=b;b=ad(c,a)|0;do{if((a|0)!=0){if(((b>>>0)/(a>>>0)|0|0)==(c|0)){break}y3(12);d=0;e=d;return e|0}}while(0);c=tJ(b)|0;if((c|0)!=0){Ae(c|0,0,b|0)}d=c;e=d;return e|0}function tS(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=a;a=b;b=ad(c,a)|0;do{if((a|0)!=0){if(((b>>>0)/(a>>>0)|0|0)==(c|0)){break}y3(12);d=0;e=d;return e|0}}while(0);c=tL(b)|0;if((c|0)!=0){Ae(c|0,0,b|0)}d=c;e=d;return e|0}function tT(a){a=a|0;var b=0,c=0,d=0;b=a;a=0;c=0;c=Ab(b|0)|0;if((tM(b)|0)!=0){a=tL(c+1|0)|0}else{a=tJ(c+1|0)|0}if((a|0)==0){d=a;return d|0}Ag(a|0,b|0)|0;d=a;return d|0}function tU(a){a=a|0;var b=0,d=0,e=0;b=a;while(1){a=tJ(b)|0;d=a;if(!((a|0)!=0^1)){e=3438;break}if((s5()|0)!=0){e=3436;break}if((c[30622]|0)==0){e=3436;break}if((cI[c[30622]&63](c[30620]|0,b,0)|0)==0){e=3436;break}}if((e|0)==3438){return d|0}else if((e|0)==3436){t8(y_(c[(bX()|0)>>2]|0)|0,0);return 0}return 0}function tV(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;while(1){b=tP(d,a)|0;e=b;if(!((b|0)!=0^1)){f=3446;break}if((s5()|0)!=0){f=3444;break}if((c[30622]|0)==0){f=3444;break}b=c[30622]|0;g=c[30620]|0;h=(tM(d)|0)!=0?3:2;if((cI[b&63](g,a,h)|0)==0){f=3444;break}}if((f|0)==3444){t8(y_(c[(bX()|0)>>2]|0)|0,0);return 0}else if((f|0)==3446){return e|0}return 0}function tW(a){a=a|0;var b=0,d=0,e=0;b=a;while(1){a=tL(b)|0;d=a;if(!((a|0)!=0^1)){e=3454;break}if((s5()|0)!=0){e=3452;break}if((c[30622]|0)==0){e=3452;break}if((cI[c[30622]&63](c[30620]|0,b,1)|0)==0){e=3452;break}}if((e|0)==3454){return d|0}else if((e|0)==3452){e=y_(c[(bX()|0)>>2]|0)|0;t8(e,t6(68672)|0);return 0}return 0}function tX(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=ad(d,a)|0;do{if((a|0)!=0){if(((b>>>0)/(a>>>0)|0|0)==(d|0)){break}y3(12);t8(y_(c[(bX()|0)>>2]|0)|0,0);return 0}}while(0);d=tU(b)|0;Ae(d|0,0,b|0);return d|0}function tY(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=ad(d,a)|0;do{if((a|0)!=0){if(((b>>>0)/(a>>>0)|0|0)==(d|0)){break}y3(12);t8(y_(c[(bX()|0)>>2]|0)|0,0);return 0}}while(0);d=tW(b)|0;Ae(d|0,0,b|0);return d|0}function tZ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a;do{a=tT(b)|0;d=a;if(!((a|0)!=0^1)){e=3473;break}a=Ab(b|0)|0;f=((tM(b)|0)!=0^1^1)&1;if((s5()|0)!=0){break}if((c[30622]|0)==0){break}}while((cI[c[30622]&63](c[30620]|0,a,f)|0)!=0);if((e|0)==3473){return d|0}d=y_(c[(bX()|0)>>2]|0)|0;if((f|0)!=0){g=t6(68672)|0;t8(d,g);return 0}else{g=0;t8(d,g);return 0}return 0}function t_(a){a=a|0;var b=0,d=0;if((s5()|0)!=0){b=0;d=b;return d|0}else{b=c[30778]&a;d=b;return d|0}return 0}function t$(a,b){a=a|0;b=b|0;var c=0;c=a;a=b;wk(c,a);w5(c,a);m6(c,a);sv(c,a);return}function t0(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function t1(a,b){a=a|0;b=b|0;return t0(a,b)|0}function t2(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=b;b=d;d=0;do{if((a[e]|0)==48){if(((a[e+1|0]|0)-48|0)>>>0>=10){break}f=0;g=f;return g|0}}while(0);while(1){if(((a[e]|0)-48|0)>>>0>=10){break}d=d*10|0;d=d+((a[e]|0)-48)|0;e=e+1|0}c[b>>2]=d;if((d|0)<0){h=0}else{h=e}f=h;g=f;return g|0}function t3(){return c[30690]|0}function t4(a){a=a|0;c[30690]=0;if((s5()|0)!=0){return}else{c[30690]=c[30690]&~a;return}}function t5(a){a=a|0;c[30512]=a;return}function t6(a){a=a|0;var b=0,d=0,e=0;b=a;if((c[30512]|0)!=0){d=cH[c[30512]&31](b)|0;e=d;return e|0}else{d=b;e=d;return e|0}return 0}function t7(a,b){a=a|0;b=b|0;c[30706]=b;c[30708]=a;return}function t8(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;if((a|0)==0){a=y4(d)|0}do{if((c[30708]|0)!=0){if((s5()|0)!=0){break}cJ[c[30708]&127](c[30706]|0,d,a)}}while(0);tb(79632,84,88328,1,a);t9(82152);t9(a);t9(73056);uK();b8();return}function t9(a){a=a|0;var b=0;b=a;ck(2,b|0,Ab(b|0)|0)|0;return}function ua(a,b){a=a|0;b=b|0;c[30676]=a;c[30674]=b;return}function ub(a){a=a|0;c[30510]=a;return}function uc(a){a=a|0;return(c[30510]|0)>=(a|0)|0}function ud(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e|0;g=f|0;c[g>>2]=d;c[g+4>>2]=0;ue(a,b,f|0);i=e;return}function ue(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=a;a=b;b=d;if((c[30676]|0)!=0){cP[c[30676]&15](c[30674]|0,f,a,b)}else{switch(f|0){case 20:{break};case 0:{break};case 10:{break};case 40:{aN(58648,c[q>>2]|0)|0;break};case 50:{aN(56424,c[q>>2]|0)|0;break};case 30:{break};case 100:{aN(83528,c[q>>2]|0)|0;break};default:{b9(c[q>>2]|0,82496,(d=i,i=i+8|0,c[d>>2]=f,d)|0)|0;i=d}}d=c[q>>2]|0;g=a;a=b;cA(d|0,g|0,a|0)|0}if((f|0)==40){tb(79632,139,88216,1,80752);uK();b8()}if((f|0)==50){tb(79632,139,88216,1,80752);uK();b8()}else{i=e;return}}function uf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;ud(50,68640,(f=i,i=i+24|0,c[f>>2]=a,c[f+8>>2]=b,c[f+16>>2]=d,f)|0);i=f;b8();i=e;return}function ug(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;ud(50,65608,(g=i,i=i+32|0,c[g>>2]=a,c[g+8>>2]=b,c[g+16>>2]=d,c[g+24>>2]=e,g)|0);i=g;b8();i=f;return}function uh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=e|0;c[f>>2]=b;c[f+4>>2]=0;ue(10,a,e|0);i=d;return}function ui(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=i;i=i+16|0;e=a|0;f=e|0;c[f>>2]=d;c[f+4>>2]=0;ue(10,b,e|0);i=a;return 0}function uj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=e|0;c[f>>2]=b;c[f+4>>2]=0;ue(30,a,e|0);i=d;return}function uk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=e|0;c[f>>2]=b;c[f+4>>2]=0;ue(40,a,e|0);b8();i=d;return}function ul(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=e|0;c[f>>2]=b;c[f+4>>2]=0;ue(50,a,e|0);b8();i=d;return}function um(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=e|0;c[f>>2]=b;c[f+4>>2]=0;ue(100,a,e|0);i=d;return}function un(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=a;if((f|0)==0){i=d;return}a=e|0;c[a>>2]=b;c[a+4>>2]=0;ue(0,f,e|0);i=d;return}function uo(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;h=b;b=e;e=f;do{if((h|0)!=0){if((a[h]|0)==0){break}um(63544,(j=i,i=i+8|0,c[j>>2]=h,j)|0);i=j}}while(0);if((e|0)!=0){f=b;un(61904,(j=i,i=i+8|0,c[j>>2]=d[f]|0,j)|0);i=j;e=e-1|0;f=f+1|0;while(1){b=e;e=b-1|0;if((b|0)==0){break}un(60416,(j=i,i=i+8|0,c[j>>2]=d[f]|0,j)|0);i=j;f=f+1|0}}if((h|0)==0){i=g;return}un(73056,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;i=g;return}function up(b){b=b|0;var c=0,d=0,e=0;c=i;i=i+64|0;d=b;b=c|0;e=64;while(1){if((e|0)==0){break}a[b]=0;b=b+1|0;e=e-1|0}d=d-64|0;if((d|0)<=0){i=c;return}up(d);i=c;return}function uq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+8|0;h=g|0;j=a;c[h>>2]=b;b=d;d=e;e=f;f=0;if((c[h>>2]|0)==0){f=ur(c[j>>2]|0,h)|0}if((f|0)==0){k=tJ(28)|0;if((k|0)==0){f=y_(c[(bX()|0)>>2]|0)|0}}if((f|0)!=0){l=f;i=g;return l|0}c[k+16>>2]=0;c[k+20>>2]=1;c[k+8>>2]=b;c[k+12>>2]=d;c[k+24>>2]=c[h>>2];c[k>>2]=c[j>>2];c[k+4>>2]=j;if((c[j>>2]|0)!=0){c[(c[j>>2]|0)+4>>2]=k}c[j>>2]=k;if((e|0)!=0){c[e>>2]=k}l=f;i=g;return l|0}function ur(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;b=0;e=600;while(1){if(e>>>0>=65500){break}if((e|0)==1024){e=4095}else{f=d;while(1){if((f|0)==0){break}if((e|0)==(c[f+24>>2]|0)){g=3607;break}f=c[f>>2]|0}if((g|0)==3607){g=0}if((f|0)==0){g=3611;break}}e=e+1|0}if(e>>>0<65500){c[a>>2]=e;h=b;return h|0}else{b=63;h=b;return h|0}return 0}function us(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=b;b=a;while(1){if((b|0)==0){e=3627;break}if((c[b+24>>2]|0)==(d|0)){break}b=c[b>>2]|0}if((e|0)==3627){f=b;return f|0}e=b+20|0;c[e>>2]=(c[e>>2]|0)+1;f=b;return f|0}function ut(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=b;b=d;d=a;while(1){if((d|0)==0){f=3637;break}if((cN[b&63](c[d+8>>2]|0,e)|0)!=0){break}d=c[d>>2]|0}if((f|0)==3637){g=d;return g|0}f=d+20|0;c[f>>2]=(c[f>>2]|0)+1;g=d;return g|0}function uu(a){a=a|0;var b=0,d=0;b=a;if((b|0)==0){return}a=b+20|0;d=(c[a>>2]|0)-1|0;c[a>>2]=d;if((d|0)!=0){return}uv(b);return}function uv(a){a=a|0;var b=0,d=0,e=0;b=a;c[c[b+4>>2]>>2]=c[b>>2];if((c[b>>2]|0)==0){d=b;e=d;tQ(e);return}c[(c[b>>2]|0)+4>>2]=c[b+4>>2];d=b;e=d;tQ(e);return}function uw(a){a=a|0;var b=0;b=a+20|0;c[b>>2]=(c[b>>2]|0)+1;return}function ux(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a;a=b;b=d;d=0;f=e;g=0;while(1){if((f|0)==0){break}f=c[f>>2]|0;g=g+1|0}if((a|0)==0){c[b>>2]=g;h=d;return h|0}if((g|0)>(c[b>>2]|0)){g=c[b>>2]|0}f=e;e=0;while(1){if((e|0)>=(g|0)){break}c[a+(e<<2)>>2]=c[f+24>>2];f=c[f>>2]|0;e=e+1|0}if((g|0)<(c[b>>2]|0)){c[b>>2]=g}h=d;return h|0}function uy(a){a=a|0;var b=0;b=a;sW(122200)|0;a=c[30520]|0;c[30652]=b&1;c[30520]=b&2;do{if((a|0)!=0){if((c[30520]|0)!=0){break}if((c[30528]|0)==0){break}c[30528]=0;uz()}}while(0);sX(122200)|0;return}function uz(){var a=0,b=0;a=i;if((c[30652]|0)!=0){i=a;return}uh(t6(83488)|0,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b;i=a;return}function uA(){var a=0;sW(122200)|0;a=(c[30652]|0)!=0?1:0;a=a|((c[30520]|0)!=0?2:0);a=a|((c[30646]|0)!=0?4:0);sX(122200)|0;return a|0}function uB(a){a=a|0;sW(122200)|0;uC(a);sX(122200)|0;return}function uC(a){a=a|0;var b=0,d=0,e=0;b=i;d=a;if((d|0)!=0){if(d>>>0<16384){d=16384}if((c[30604]|0)!=0){uj(65560,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e}else{uR(d);uS(c[30618]|0,d)}i=b;return}c[30762]=1;d=bR()|0;L4516:do{if((d|0)!=(bR()|0)){do{if((aP(d|0)|0)==0){a=bR()|0;if((a|0)!=(bR()|0)){break}if((aP(0)|0)==0){break}break L4516}}while(0);uk(68568,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e}}while(0);i=b;return}function uD(a){a=a|0;var b=0;sW(122200)|0;b=uE(a)|0;sX(122200)|0;return b|0}function uE(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;d=a;do{if((c[30604]|0)==0){uC(32768);if((c[30604]|0)!=0){break}uh(t6(82048)|0,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;y3(12);f=0;g=f;i=b;return g|0}}while(0);do{if((c[30646]|0)!=0){if((s5()|0)==0){break}uh(t6(73e3)|0,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;y3(12);f=0;g=f;i=b;return g|0}}while(0);do{if((c[30528]|0)!=0){if((c[30520]|0)!=0){break}c[30528]=0;uz()}}while(0);d=(((d+31|0)>>>0)/32|0)<<5;e=uQ(c[30618]|0,d)|0;if((e|0)!=0){uM(d,0)}if((e|0)!=0){h=e+8|0}else{h=0}f=h;g=f;i=b;return g|0}function uF(a){a=a|0;sW(122200)|0;uG(a);sX(122200)|0;return}function uG(b){b=b|0;var d=0,e=0,f=0;d=b;if((d|0)==0){return}b=d-8|0;d=c[b>>2]|0;e=b+8|0;f=d;while(1){if((f|0)==0){break}a[e]=-1;e=e+1|0;f=f-1|0}f=b+8|0;e=d;while(1){if((e|0)==0){break}a[f]=-86;f=f+1|0;e=e-1|0}e=b+8|0;f=d;while(1){if((f|0)==0){break}a[e]=85;e=e+1|0;f=f-1|0}f=b+8|0;e=d;while(1){if((e|0)==0){break}a[f]=0;f=f+1|0;e=e-1|0}uM(0,d);d=b+4|0;c[d>>2]=c[d>>2]&-2;uN(b);return}function uH(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=a;a=b;sW(122200)|0;b=c[d-8>>2]|0;if(a>>>0<b>>>0){e=d;f=sX(122200)|0;g=e;return g|0}e=uE(a)|0;if((e|0)!=0){h=e;i=d;j=b;Ac(h|0,i|0,j)|0;Ae(e+b|0,0,a-b|0);uG(d)}f=sX(122200)|0;g=e;return g|0}function uI(a){a=a|0;var b=0;if((c[30604]|0)!=0){b=(uJ(a)|0)!=0}else{b=0}return b&1|0}function uJ(a){a=a|0;var b=0,d=0,e=0;b=a;a=c[30618]|0;if(b>>>0<a>>>0){d=0;e=d&1;return e|0}d=b>>>0<(a+(c[30600]|0)|0)>>>0;e=d&1;return e|0}function uK(){var b=0,d=0;if((c[30604]|0)==0){return}b=c[30618]|0;d=c[30600]|0;while(1){if((d|0)==0){break}a[b]=-1;b=b+1|0;d=d-1|0}d=c[30618]|0;b=c[30600]|0;while(1){if((b|0)==0){break}a[d]=-86;d=d+1|0;b=b-1|0}b=c[30618]|0;d=c[30600]|0;while(1){if((d|0)==0){break}a[b]=85;b=b+1|0;d=d-1|0}d=c[30618]|0;b=c[30600]|0;while(1){if((b|0)==0){break}a[d]=0;d=d+1|0;b=b-1|0}if((c[30608]|0)!=0){b=c[30618]|0;d=c[30600]|0;bm(b|0,d|0)|0}c[30618]=0;c[30604]=0;c[30600]=0;c[30646]=0;return}function uL(){var a=0,b=0,d=0,e=0,f=0;a=i;sW(122200)|0;if((c[30604]|0)==0){b=sX(122200)|0;i=a;return}d=c[30600]|0;e=c[30782]|0;uh(79136,(f=i,i=i+24|0,c[f>>2]=c[30784],c[f+8>>2]=d,c[f+16>>2]=e,f)|0);i=f;b=sX(122200)|0;i=a;return}function uM(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;if((d|0)!=0){c[30784]=(c[30784]|0)+d;c[30782]=(c[30782]|0)+1}if((a|0)==0){return}c[30784]=(c[30784]|0)-a;c[30782]=(c[30782]|0)-1;return}function uN(a){a=a|0;var b=0,d=0,e=0;b=a;a=uO(b)|0;d=uP(b)|0;do{if((a|0)!=0){if((c[a+4>>2]&1|0)!=0){break}e=a|0;c[e>>2]=(c[e>>2]|0)+((c[b>>2]|0)+8);b=a}}while(0);if((d|0)==0){return}if((c[d+4>>2]&1|0)!=0){return}a=b|0;c[a>>2]=(c[a>>2]|0)+((c[d>>2]|0)+8);return}function uO(a){a=a|0;var b=0,d=0,e=0;b=a;if((b|0)==(c[30618]|0)){d=0;e=d;return e|0}d=c[30618]|0;while(1){a=uP(d)|0;if((a|0)==(b|0)){break}d=a}e=d;return e|0}function uP(a){a=a|0;var b=0,d=0;b=a;a=b+8+(c[b>>2]|0)|0;if((uJ(a)|0)!=0){d=a;return d|0}a=0;d=a;return d|0}function uQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=b;b=a;while(1){if((uJ(b)|0)==0){break}if((c[b+4>>2]&1|0)==0){if((c[b>>2]|0)>>>0>=d>>>0){e=3832;break}}b=uP(b)|0}if((e|0)==3832){e=b+4|0;c[e>>2]=c[e>>2]|1;if(((c[b>>2]|0)-d|0)>>>0>8){e=b+8+d|0;c[e>>2]=(c[b>>2]|0)-d-8;c[e+4>>2]=0;c[b>>2]=d;uN(e)}}if((uJ(b)|0)!=0){f=b;return f|0}y3(12);b=0;f=b;return f|0}function uR(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;c[30600]=a;if((c[30762]|0)!=0){ul(60384,(d=i,i=i+1|0,i=i+7&-8,c[d>>2]=0,d)|0);i=d}a=bN(30)|0;do{if((a|0)!=-1){if((a|0)<=0){e=3847;break}f=a}else{e=3847}}while(0);if((e|0)==3847){f=4096}e=f;c[30600]=(c[30600]|0)+e-1&~(e-1);c[30618]=bB(0,c[30600]|0,3,34,-1|0,0)|0;if((c[30618]|0)==-1){e=c[30600]|0;f=bY(c[(bX()|0)>>2]|0)|0;uh(58600,(d=i,i=i+16|0,c[d>>2]=e,c[d+8>>2]=f,d)|0);i=d}else{c[30608]=1;c[30604]=1}if((c[30604]|0)!=0){g=c[30618]|0;h=g;j=h;k=c[30600]|0;l=j;m=l|0;c[m>>2]=k;n=j;o=n+4|0;c[o>>2]=0;i=b;return}c[30618]=zd(c[30600]|0)|0;if((c[30618]|0)==0){uk(56384,(d=i,i=i+8|0,c[d>>2]=c[30600],d)|0);i=d}c[30604]=1;g=c[30618]|0;h=g;j=h;k=c[30600]|0;l=j;m=l|0;c[m>>2]=k;n=j;o=n+4|0;c[o>>2]=0;i=b;return}function uS(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=bR()|0;f=_mlock(a,b)|0;do{if((f|0)!=0){if((c[(bX()|0)>>2]|0)==0){break}f=c[(bX()|0)>>2]|0}}while(0);L4720:do{if((e|0)!=0){if((bR()|0)!=0){break}do{if((aP(e|0)|0)==0){b=bR()|0;if((b|0)!=(bR()|0)){break}if((aP(0)|0)==0){break}break L4720}}while(0);b=bY(c[(bX()|0)>>2]|0)|0;uk(63512,(g=i,i=i+8|0,c[g>>2]=b,g)|0);i=g}}while(0);if((f|0)==0){i=d;return}do{if((c[(bX()|0)>>2]|0)!=1){if((c[(bX()|0)>>2]|0)==11){break}if((c[(bX()|0)>>2]|0)==38){break}if((c[(bX()|0)>>2]|0)==12){break}e=bY(f|0)|0;uj(61880,(g=i,i=i+8|0,c[g>>2]=e,g)|0);i=g}}while(0);c[30528]=1;c[30646]=1;i=d;return}function uT(b){b=b|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b;b=0;if((h|0)==0){un(78728,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;i=f;return}k=h|0;while(1){h=d[k]|0;l=h;if((h|0)==0){break}k=k+1|0;h=l;if((h|0)==4){if((b|0)!=0){b=b-1|0}un(68552,(j=i,i=i+16|0,c[j>>2]=b<<1,c[j+8>>2]=123280,j)|0);i=j}else if((h|0)==3){un(81992,(j=i,i=i+16|0,c[j>>2]=b<<1,c[j+8>>2]=123280,j)|0);i=j;b=b+1|0}else if((h|0)==1){h=g;m=k;a[h]=a[m]|0;a[h+1|0]=a[m+1|0]|0;k=k+2|0;un(65544,(j=i,i=i+16|0,c[j>>2]=b<<1,c[j+8>>2]=123280,j)|0);i=j;uU(k,e[g>>1]|0,34);un(63504,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;k=k+(e[g>>1]|0)|0}else{un(61856,(j=i,i=i+24|0,c[j>>2]=b<<1,c[j+8>>2]=123280,c[j+16>>2]=l,j)|0);i=j}}i=f;return}function uU(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;h=b;b=e;e=f;while(1){if((b|0)==0){break}do{if((a[h]&128|0)!=0){j=3899}else{if((cy(d[h]|0)|0)!=0){j=3899;break}if((d[h]|0)==(e|0)){j=3899;break}un(72152,(k=i,i=i+8|0,c[k>>2]=d[h]|0,k)|0);i=k}}while(0);if((j|0)==3899){j=0;if((d[h]|0)==10){un(77136,(k=i,i=i+1|0,i=i+7&-8,c[k>>2]=0,k)|0);i=k}else{if((d[h]|0)==13){un(76432,(k=i,i=i+1|0,i=i+7&-8,c[k>>2]=0,k)|0);i=k}else{if((d[h]|0)==12){un(75416,(k=i,i=i+1|0,i=i+7&-8,c[k>>2]=0,k)|0);i=k}else{if((d[h]|0)==11){un(74680,(k=i,i=i+1|0,i=i+7&-8,c[k>>2]=0,k)|0);i=k}else{if((d[h]|0)==8){un(73944,(k=i,i=i+1|0,i=i+7&-8,c[k>>2]=0,k)|0);i=k}else{if((a[h]|0)!=0){un(83480,(k=i,i=i+8|0,c[k>>2]=d[h]|0,k)|0);i=k}else{un(73400,(k=i,i=i+1|0,i=i+7&-8,c[k>>2]=0,k)|0);i=k}}}}}}}b=b-1|0;h=h+1|0}i=g;return}function uV(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=a;a=b;b=d;d=e;e=f;if((k|0)==0){l=uW(45)|0;m=l;i=g;return m|0}c[k>>2]=0;do{if((d|0)>=0){if((d|0)>1){break}if((a|0)==0){break}do{if((b|0)!=0){n=3933}else{if((d|0)!=0){n=3933;break}b=uX(a,0,0,h)|0;if((b|0)!=0){break}l=c[h>>2]|0;m=l;i=g;return m|0}}while(0);if((n|0)==3933){do{if((b|0)==0){if((d|0)==0){break}b=Ab(a|0)|0}}while(0)}f=uY(j,0,a,b,0,0,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0)|0;i=o;c[h>>2]=f;if((c[h>>2]|0)!=0){l=c[h>>2]|0;m=l;i=g;return m|0}c[k>>2]=c[j>>2];if((e|0)!=0){cE[e&127](a)}l=uW(0)|0;m=l;i=g;return m|0}}while(0);l=uW(45)|0;m=l;i=g;return m|0}function uW(a){a=a|0;return vu(32,a)|0}function uX(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+16|0;h=a;a=b;b=e;e=f;f=0;j=0;k=0;l=0;if((b|0)==0){b=g|0}if((e|0)==0){e=g+8|0}c[e>>2]=uW(0)|0;c[b>>2]=0;if((h|0)==0){m=0;n=m;i=g;return n|0}if((d[h]|0|0)!=40){c[e>>2]=uW(204)|0;m=0;n=m;i=g;return n|0}o=h;while(1){if((a|0)!=0){if(k>>>0>=a>>>0){p=3960;break}}if((j|0)!=0){if((d[o]|0|0)==58){if((a|0)!=0){if((k+j|0)>>>0>=a>>>0){p=3965;break}}k=k+j|0;o=o+j|0;j=0}else{if((d[o]|0|0)<48){p=3970;break}if((d[o]|0|0)>57){p=3970;break}j=(j*10|0)+((d[o]|0)-48)|0}}else{if((d[o]|0|0)==40){if((f|0)!=0){p=3975;break}l=l+1|0}else{if((d[o]|0|0)==41){if((l|0)==0){p=3979;break}if((f|0)!=0){p=3981;break}h=l-1|0;l=h;if((h|0)==0){p=3983;break}}else{if((d[o]|0|0)==91){if((f|0)!=0){p=3987;break}f=o}else{if((d[o]|0|0)==93){if((f|0)==0){p=3991;break}f=0}else{if((d[o]|0|0)<48){p=3998;break}if((d[o]|0|0)>57){p=3998;break}if((d[o]|0|0)==48){p=3996;break}j=(d[o]|0)-48|0}}}}}o=o+1|0;k=k+1|0}if((p|0)==3983){j=k+1|0;k=j;m=j;n=m;i=g;return n|0}else if((p|0)==3960){c[b>>2]=k;c[e>>2]=uW(202)|0;m=0;n=m;i=g;return n|0}else if((p|0)==3991){c[b>>2]=k;c[e>>2]=uW(209)|0;m=0;n=m;i=g;return n|0}else if((p|0)==3979){c[b>>2]=k;c[e>>2]=uW(203)|0;m=0;n=m;i=g;return n|0}else if((p|0)==3965){c[b>>2]=k;c[e>>2]=uW(202)|0;m=0;n=m;i=g;return n|0}else if((p|0)==3981){c[b>>2]=k;c[e>>2]=uW(209)|0;m=0;n=m;i=g;return n|0}else if((p|0)==3970){c[b>>2]=k;c[e>>2]=uW(201)|0;m=0;n=m;i=g;return n|0}else if((p|0)==3996){c[b>>2]=k;c[e>>2]=uW(207)|0;m=0;n=m;i=g;return n|0}else if((p|0)==3987){c[b>>2]=k;c[e>>2]=uW(208)|0;m=0;n=m;i=g;return n|0}else if((p|0)==3975){c[b>>2]=k;c[e>>2]=uW(209)|0;m=0;n=m;i=g;return n|0}else if((p|0)==3998){do{if((d[o]|0|0)!=38){if((d[o]|0|0)==92){break}c[b>>2]=k;c[e>>2]=uW(205)|0;m=0;n=m;i=g;return n|0}}while(0);c[b>>2]=k;c[e>>2]=uW(210)|0;m=0;n=m;i=g;return n|0}return 0}function uY(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=j|0;l=k|0;c[l>>2]=h;c[l+4>>2]=0;l=vg(a,b,d,e,f,g,k|0)|0;i=j;return l|0}function uZ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return uV(a,b,c,d,0)|0}function u_(b){b=b|0;var c=0,f=0,g=0,h=0,j=0;c=i;i=i+8|0;f=c|0;g=b;if((g|0)==0){i=c;return}if((tM(g)|0)!=0){b=g|0;while(1){h=d[b]|0;if((h|0)==0){break}b=b+1|0;j=h;if((j|0)==1){j=f;h=b;a[j]=a[h]|0;a[j+1|0]=a[h+1|0]|0;b=b+2|0;b=b+(e[f>>1]|0)|0}}f=g|0;h=b-g|0;while(1){if((h|0)==0){break}a[f]=0;f=f+1|0;h=h-1|0}}tQ(g);i=c;return}function u$(a,b){a=a|0;b=b|0;uf(60376,318,87992);return 0}function u0(a){a=a|0;uf(60376,334,88032);return 0}function u1(a,b){a=a|0;b=b|0;uf(60376,347,87880);return 0}function u2(a,b){a=a|0;b=b|0;uf(60376,363,88008);return 0}function u3(a,b){a=a|0;b=b|0;uf(60376,374,87928);return 0}function u4(c,f,g){c=c|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+8|0;j=h|0;k=c;c=f;f=g;if((k|0)==0){l=0;m=l;i=h;return m|0}if((f|0)==0){f=Ab(c|0)|0}g=k|0;L4956:while(1){if((d[g]|0|0)==0){n=4085;break}do{if((d[g]|0|0)==3){if((d[g+1|0]|0|0)!=1){n=4080;break}o=g;g=g+2|0;k=j;p=g;a[k]=a[p]|0;a[k+1|0]=a[p+1|0]|0;g=g+2|0;if((e[j>>1]|0|0)==(f|0)){if((Af(g|0,c|0,f|0)|0)==0){break L4956}}g=g+(e[j>>1]|0)|0}else{n=4080}}while(0);if((n|0)==4080){n=0;if((d[g]|0|0)==1){p=j;k=g+1|0;g=k;a[p]=a[k]|0;a[p+1|0]=a[k+1|0]|0;g=g+2|0;g=g+(e[j>>1]|0)|0}else{g=g+1|0}}}if((n|0)==4085){l=0;m=l;i=h;return m|0}f=1;g=g+(e[j>>1]|0)|0;while(1){if((f|0)==0){break}if((d[g]|0|0)==1){c=j;k=g+1|0;g=k;a[c]=a[k]|0;a[c+1|0]=a[k+1|0]|0;g=g+((e[j>>1]|0)+2)|0;g=g-1|0}else{if((d[g]|0|0)==3){f=f+1|0}else{if((d[g]|0|0)==4){f=f-1|0}else{if((d[g]|0|0)==0){n=4070;break}}}}g=g+1|0}if((n|0)==4070){uf(60376,431,87968);return 0}b[j>>1]=g-o&65535;g=tJ((e[j>>1]|0)+1|0)|0;if((g|0)!=0){n=g|0;f=n;k=o;o=e[j>>1]|0;Ac(f|0,k|0,o)|0;n=n+(e[j>>1]|0)|0;j=n;n=j+1|0;a[j]=0;l=u5(g)|0;m=l;i=h;return m|0}else{l=0;m=l;i=h;return m|0}return 0}function u5(a){a=a|0;var b=0,c=0,e=0;b=a;if((b|0)==0){c=0;e=c;return e|0}a=b|0;if((d[a]|0|0)==0){u_(b);c=0;e=c;return e|0}do{if((d[a]|0|0)==3){if((d[a+1|0]|0|0)!=4){break}u_(b);c=0;e=c;return e|0}}while(0);c=b;e=c;return e|0}function u6(b){b=b|0;var c=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;c=i;i=i+8|0;f=c|0;g=b;b=0;h=0;if((g|0)==0){j=0;k=j;i=c;return k|0}l=g|0;while(1){g=d[l]|0;m=g;if((g|0)==0){break}l=l+1|0;if((m|0)==1){g=f;n=l;a[g]=a[n]|0;a[g+1|0]=a[n+1|0]|0;l=l+((e[f>>1]|0)+2)|0;if((h|0)==1){b=b+1|0}}else{if((m|0)==3){if((h|0)==1){b=b+1|0}h=h+1|0}else{if((m|0)==4){h=h-1|0}}}}j=b;k=j;i=c;return k|0}function u7(c,f){c=c|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+8|0;h=g|0;j=c;c=f;f=0;do{if((j|0)!=0){if((d[j|0]|0|0)!=3){break}k=j|0;while(1){if((c|0)<=0){break}k=k+1|0;if((d[k]|0|0)==1){l=h;m=k+1|0;k=m;a[l]=a[m]|0;a[l+1|0]=a[m+1|0]|0;k=k+((e[h>>1]|0)+2)|0;k=k-1|0;if((f|0)==0){c=c-1|0}}else{if((d[k]|0|0)==3){f=f+1|0}else{if((d[k]|0|0)==4){f=f-1|0;if((f|0)==0){c=c-1|0}}else{if((d[k]|0|0)==0){n=4141;break}}}}}if((n|0)==4141){o=0;p=o;i=g;return p|0}k=k+1|0;do{if((d[k]|0|0)==1){m=h;l=k;a[m]=a[l]|0;a[m+1|0]=a[l+1|0]|0;q=tJ((e[h>>1]|0)+6|0)|0;if((q|0)!=0){r=q|0;a[r]=3;r=r+1|0;l=r;m=k;s=(e[h>>1]|0)+3|0;Ac(l|0,m|0,s)|0;r=r+((e[h>>1]|0)+3)|0;a[r]=4;r=r+1|0;a[r]=0;break}o=0;p=o;i=g;return p|0}else{do{if((d[k]|0|0)==3){s=k;f=1;do{k=k+1|0;if((d[k]|0|0)==1){m=h;l=k+1|0;k=l;a[m]=a[l]|0;a[m+1|0]=a[l+1|0]|0;k=k+((e[h>>1]|0)+2)|0;k=k-1|0}else{if((d[k]|0|0)==3){f=f+1|0}else{if((d[k]|0|0)==4){f=f-1|0}else{if((d[k]|0|0)==0){n=4159;break}}}}}while((f|0)!=0);if((n|0)==4159){uf(60376,617,87952);return 0}b[h>>1]=k+1-s&65535;q=tJ((e[h>>1]|0)+1|0)|0;if((q|0)!=0){r=q|0;l=r;m=s;t=e[h>>1]|0;Ac(l|0,m|0,t)|0;r=r+(e[h>>1]|0)|0;t=r;r=t+1|0;a[t]=0;break}o=0;p=o;i=g;return p|0}else{q=0}}while(0)}}while(0);o=u5(q)|0;p=o;i=g;return p|0}}while(0);o=0;p=o;i=g;return p|0}function u8(a){a=a|0;return u7(a,0)|0}function u9(a,b,c){a=a|0;b=b|0;c=c|0;return va(a,b,c)|0}function va(b,f,g){b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+8|0;j=h|0;k=b;b=f;f=g;g=0;c[f>>2]=0;if((k|0)==0){l=0;m=l;i=h;return m|0}n=k|0;do{if((d[n]|0|0)==3){n=n+1|0}else{if((b|0)==0){break}l=0;m=l;i=h;return m|0}}while(0);while(1){if((b|0)<=0){break}if((d[n]|0|0)==1){k=j;o=n+1|0;n=o;a[k]=a[o]|0;a[k+1|0]=a[o+1|0]|0;n=n+((e[j>>1]|0)+2)|0;n=n-1|0;if((g|0)==0){b=b-1|0}}else{if((d[n]|0|0)==3){g=g+1|0}else{if((d[n]|0|0)==4){g=g-1|0;if((g|0)==0){b=b-1|0}}else{if((d[n]|0|0)==0){p=4199;break}}}}n=n+1|0}if((p|0)==4199){l=0;m=l;i=h;return m|0}if((d[n]|0|0)==1){p=j;b=n+1|0;n=b;a[p]=a[b]|0;a[p+1|0]=a[b+1|0]|0;c[f>>2]=e[j>>1]|0;l=n+2|0;m=l;i=h;return m|0}else{l=0;m=l;i=h;return m|0}return 0}function vb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+8|0;f=e|0;g=va(b,d,f)|0;do{if((g|0)!=0){if((c[f>>2]|0)>>>0<1){break}if(((c[f>>2]|0)+1|0)>>>0<1){break}d=tJ((c[f>>2]|0)+1|0)|0;if((d|0)!=0){b=d;h=g;j=c[f>>2]|0;Ac(b|0,h|0,j)|0;a[d+(c[f>>2]|0)|0]=0;k=d;l=k;i=e;return l|0}else{k=0;l=k;i=e;return l|0}}}while(0);k=0;l=k;i=e;return l|0}function vc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e|0;g=e+8|0;h=d;if((h|0)==0){h=1}d=va(a,b,f)|0;if((d|0)==0){j=0;k=j;i=e;return k|0}if((rA(g,h,d,c[f>>2]|0,0)|0)!=0){j=0;k=j;i=e;return k|0}else{j=c[g>>2]|0;k=j;i=e;return k|0}return 0}function vd(c){c=c|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+8|0;g=f|0;h=c;c=0;j=1;do{if((h|0)!=0){if((d[h|0]|0|0)!=3){break}k=h|0;while(1){if((j|0)<=0){break}k=k+1|0;if((d[k]|0|0)==1){l=g;m=k+1|0;k=m;a[l]=a[m]|0;a[l+1|0]=a[m+1|0]|0;k=k+((e[g>>1]|0)+2)|0;k=k-1|0;if((c|0)==0){j=j-1|0}}else{if((d[k]|0|0)==3){c=c+1|0}else{if((d[k]|0|0)==4){c=c-1|0;if((c|0)==0){j=j-1|0}}else{if((d[k]|0|0)==0){n=4251;break}}}}}if((n|0)==4251){o=0;p=o;i=f;return p|0}k=k+1|0;m=k;c=0;do{if((d[k]|0|0)==1){l=g;q=k+1|0;k=q;a[l]=a[q]|0;a[l+1|0]=a[q+1|0]|0;k=k+((e[g>>1]|0)+2)|0;k=k-1|0}else{if((d[k]|0|0)==3){c=c+1|0}else{if((d[k]|0|0)==4){c=c-1|0}else{if((d[k]|0|0)==0){n=4264;break}}}}k=k+1|0;}while((c|0)!=0);if((n|0)==4264){o=0;p=o;i=f;return p|0}b[g>>1]=k-m&65535;q=tJ((e[g>>1]|0)+3|0)|0;if((q|0)!=0){l=q|0;r=l;l=r+1|0;a[r]=3;r=l;s=m;t=e[g>>1]|0;Ac(r|0,s|0,t)|0;l=l+(e[g>>1]|0)|0;t=l;l=t+1|0;a[t]=4;t=l;l=t+1|0;a[t]=0;o=u5(q)|0;p=o;i=f;return p|0}else{o=0;p=o;i=f;return p|0}}}while(0);o=0;p=o;i=f;return p|0}function ve(a){a=a|0;var b=0;b=vd(a)|0;a=u8(b)|0;u_(b);return a|0}function vf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=d;d=g|0;c[d>>2]=e;c[d+4>>2]=0;d=vg(a,b,h,Ab(h|0)|0,1,0,g|0)|0;i=f;return d|0}function vg(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0;l=i;i=i+216|0;m=l+8|0;n=l+24|0;o=l+32|0;p=l+40|0;q=l+48|0;r=l+56|0;s=l+64|0;t=l+72|0;u=l+80|0;v=l+88|0;w=l+96|0;x=l+104|0;z=l+112|0;A=l+152|0;B=l+160|0;C=l+200|0;D=l+208|0;E=d;d=e;e=f;f=g;g=h;h=j;j=k;k=0;F=0;G=0;H=0;I=0;J=0;K=0;L=0;M=0;N=0;O=0;P=0;Q=0;if((d|0)==0){d=l|0}c[m+4>>2]=f+2;do{if((e|0)!=0){if((f|0)==0){R=4287;break}if((tM(e)|0)==0){R=4287;break}c[m>>2]=tL((c[m+4>>2]|0)+1-1|0)|0}else{R=4287}}while(0);if((R|0)==4287){c[m>>2]=tJ((c[m+4>>2]|0)+1-1|0)|0}do{if((c[m>>2]|0)!=0){c[m+8>>2]=c[m>>2];S=e;T=f;L5255:while(1){if((T|0)==0){R=4599;break}do{if((H|0)!=0){if((I|0)!=0){R=4304;break}if((be(704,a[S]|0)|0)!=0){break}O=S-H|0;U=vp(m,O)|0;if((U|0)!=0){R=4298;break L5255}V=m+8|0;W=c[V>>2]|0;c[V>>2]=W+1;a[W]=1;b[n>>1]=O&65535;W=c[m+8>>2]|0;V=n;a[W]=a[V]|0;a[W+1|0]=a[V+1|0]|0;V=m+8|0;c[V>>2]=(c[V>>2]|0)+2;V=c[m+8>>2]|0;W=H;X=O;Ac(V|0,W|0,X)|0;X=m+8|0;c[X>>2]=(c[X>>2]|0)+O;H=0;R=4304}else{R=4304}}while(0);if((R|0)==4304){R=0;if((G|0)!=0){if((N|0)!=0){switch(a[S]|0){case 120:{if(T>>>0<=2){R=4328;break L5255}if((a[S+1|0]|0)>=48){if((a[S+1|0]|0)>57){R=4318}}else{R=4318}do{if((R|0)==4318){R=0;if((a[S+1|0]|0)>=65){if((a[S+1|0]|0)<=70){break}}if((a[S+1|0]|0)<97){R=4328;break L5255}if((a[S+1|0]|0)>102){R=4328;break L5255}}}while(0);if((a[S+2|0]|0)>=48){if((a[S+2|0]|0)>57){R=4324}}else{R=4324}do{if((R|0)==4324){R=0;if((a[S+2|0]|0)>=65){if((a[S+2|0]|0)<=70){break}}if((a[S+2|0]|0)<97){R=4328;break L5255}if((a[S+2|0]|0)>102){R=4328;break L5255}}}while(0);S=S+2|0;T=T-2|0;N=0;break};case 13:{do{if((T|0)!=0){if((a[S+1|0]|0)!=10){break}S=S+1|0;T=T-1|0}}while(0);N=0;break};case 10:{do{if((T|0)!=0){if((a[S+1|0]|0)!=13){break}S=S+1|0;T=T-1|0}}while(0);N=0;break};case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:{if(T>>>0<=2){R=4313;break L5255}if((a[S+1|0]|0)<48){R=4313;break L5255}if((a[S+1|0]|0)>55){R=4313;break L5255}if((a[S+2|0]|0)<48){R=4313;break L5255}if((a[S+2|0]|0)>55){R=4313;break L5255}S=S+2|0;T=T-2|0;N=0;break};case 98:case 116:case 118:case 110:case 102:case 114:case 34:case 39:case 92:{N=0;break};default:{R=4338;break L5255}}}else{if((a[S]|0)==92){N=1}else{if((a[S]|0)==34){G=G+1|0;Y=vp(m,S-G|0)|0;if((Y|0)!=0){R=4345;break}X=m+8|0;W=c[X>>2]|0;c[X>>2]=W+1;a[W]=1;W=c[m+8>>2]|0;b[o>>1]=0;X=c[m+8>>2]|0;V=o;a[X]=a[V]|0;a[X+1|0]=a[V+1|0]|0;V=m+8|0;c[V>>2]=(c[V>>2]|0)+2;V=vq(G,S-G|0,c[m+8>>2]|0)|0;X=m+8|0;c[X>>2]=(c[X>>2]|0)+V;b[p>>1]=V&65535;V=W;X=p;a[V]=a[X]|0;a[V+1|0]=a[X+1|0]|0;W=W+2|0;G=0}}}}else{if((I|0)!=0){if((bh(a[S]|0)|0)!=0){M=M+1|0}else{if((a[S]|0)==35){if((M&1|0)!=0){R=4360;break}O=(M|0)/2|0;Z=vp(m,O)|0;if((Z|0)!=0){R=4363;break}W=m+8|0;X=c[W>>2]|0;c[W>>2]=X+1;a[X]=1;b[q>>1]=O&65535;X=c[m+8>>2]|0;W=q;a[X]=a[W]|0;a[X+1|0]=a[W+1|0]|0;W=m+8|0;c[W>>2]=(c[W>>2]|0)+2;I=I+1|0;while(1){if(I>>>0>=S>>>0){break}if((vr(I)|0)==0){W=(vs(I)|0)&255;X=m+8|0;V=c[X>>2]|0;c[X>>2]=V+1;a[V]=W;I=I+1|0}I=I+1|0}I=0}else{if((vr(S)|0)==0){R=4375;break}}}}else{if((J|0)!=0){if((a[S]|0)==124){J=0}}else{if((F|0)!=0){do{if((a[S]|0)>=48){if((a[S]|0)>57){R=4387;break}}else{R=4387}}while(0);if((R|0)==4387){R=0;if((a[S]|0)==58){O=bU(F|0)|0;F=0;if(O>>>0>(T-1|0)>>>0){R=4389;break}_=vp(m,O)|0;if((_|0)!=0){R=4392;break}W=m+8|0;V=c[W>>2]|0;c[W>>2]=V+1;a[V]=1;b[r>>1]=O&65535;V=c[m+8>>2]|0;W=r;a[V]=a[W]|0;a[V+1|0]=a[W+1|0]|0;W=m+8|0;c[W>>2]=(c[W>>2]|0)+2;W=c[m+8>>2]|0;V=S+1|0;X=O;Ac(W|0,V|0,X)|0;X=m+8|0;c[X>>2]=(c[X>>2]|0)+O;T=T-O|0;S=S+O|0}else{if((a[S]|0)==34){F=0;G=S;N=0}else{if((a[S]|0)==35){F=0;I=S;M=0}else{if((a[S]|0)!=124){R=4403;break}F=0;J=S}}}}}else{if((L|0)!=0){do{if((a[S]|0)==109){R=4412}else{if((a[S]|0)==77){R=4412;break}if((a[S]|0)==115){if((h|0)!=0){X=P;P=X+1|0;$=c[c[h+(X<<2)>>2]>>2]|0}else{X=j;$=(y=c[X+4>>2]|0,c[X+4>>2]=y+8,c[(c[X>>2]|0)+y>>2]|0)}X=Ab($|0)|0;aa=vp(m,X)|0;if((aa|0)!=0){R=4458;break L5255}V=m+8|0;W=c[V>>2]|0;c[V>>2]=W+1;a[W]=1;b[w>>1]=X&65535;W=c[m+8>>2]|0;V=w;a[W]=a[V]|0;a[W+1|0]=a[V+1|0]|0;V=m+8|0;c[V>>2]=(c[V>>2]|0)+2;V=c[m+8>>2]|0;W=$;ab=X;Ac(V|0,W|0,ab)|0;ab=m+8|0;c[ab>>2]=(c[ab>>2]|0)+X}else{if((a[S]|0)==98){if((h|0)!=0){X=P;P=X+1|0;ac=c[c[h+(X<<2)>>2]>>2]|0}else{X=j;ac=(y=c[X+4>>2]|0,c[X+4>>2]=y+8,c[(c[X>>2]|0)+y>>2]|0)}if((h|0)!=0){X=P;P=X+1|0;ad=c[c[h+(X<<2)>>2]>>2]|0}else{X=j;ad=(y=c[X+4>>2]|0,c[X+4>>2]=y+8,c[(c[X>>2]|0)+y>>2]|0)}ae=vp(m,ac)|0;if((ae|0)!=0){R=4476;break L5255}do{if((ac|0)!=0){if((tM(c[m>>2]|0)|0)!=0){break}if((tM(ad)|0)==0){break}X=tL((c[m+4>>2]|0)+1-1|0)|0;if((X|0)==0){R=4482;break L5255}ab=X|0;W=ab;V=c[m>>2]|0;af=(c[m+8>>2]|0)-(c[m>>2]|0)|0;Ac(W|0,V|0,af)|0;c[m+8>>2]=ab+((c[m+8>>2]|0)-(c[m>>2]|0));tQ(c[m>>2]|0);c[m>>2]=X}}while(0);X=m+8|0;ab=c[X>>2]|0;c[X>>2]=ab+1;a[ab]=1;b[x>>1]=ac&65535;ab=c[m+8>>2]|0;X=x;a[ab]=a[X]|0;a[ab+1|0]=a[X+1|0]|0;X=m+8|0;c[X>>2]=(c[X>>2]|0)+2;X=c[m+8>>2]|0;ab=ad;af=ac;Ac(X|0,ab|0,af)|0;af=m+8|0;c[af>>2]=(c[af>>2]|0)+ac}else{if((a[S]|0)==100){if((h|0)!=0){af=P;P=af+1|0;ag=c[c[h+(af<<2)>>2]>>2]|0}else{af=j;ag=(y=c[af+4>>2]|0,c[af+4>>2]=y+8,c[(c[af>>2]|0)+y>>2]|0)}af=z|0;ab=ag;bk(af|0,80008,(ah=i,i=i+8|0,c[ah>>2]=ab,ah)|0)|0;i=ah;ab=Ab(z|0)|0;ai=vp(m,ab)|0;if((ai|0)!=0){R=4495;break L5255}af=m+8|0;X=c[af>>2]|0;c[af>>2]=X+1;a[X]=1;b[A>>1]=ab&65535;X=c[m+8>>2]|0;af=A;a[X]=a[af]|0;a[X+1|0]=a[af+1|0]|0;af=m+8|0;c[af>>2]=(c[af>>2]|0)+2;af=c[m+8>>2]|0;X=z;V=ab;Ac(af|0,X|0,V)|0;V=m+8|0;c[V>>2]=(c[V>>2]|0)+ab}else{if((a[S]|0)==117){if((h|0)!=0){ab=P;P=ab+1|0;aj=c[c[h+(ab<<2)>>2]>>2]|0}else{ab=j;aj=(y=c[ab+4>>2]|0,c[ab+4>>2]=y+8,c[(c[ab>>2]|0)+y>>2]|0)}ab=B|0;V=aj;bk(ab|0,78992,(ah=i,i=i+8|0,c[ah>>2]=V,ah)|0)|0;i=ah;V=Ab(B|0)|0;ak=vp(m,V)|0;if((ak|0)!=0){R=4508;break L5255}ab=m+8|0;X=c[ab>>2]|0;c[ab>>2]=X+1;a[X]=1;b[C>>1]=V&65535;X=c[m+8>>2]|0;ab=C;a[X]=a[ab]|0;a[X+1|0]=a[ab+1|0]|0;ab=m+8|0;c[ab>>2]=(c[ab>>2]|0)+2;ab=c[m+8>>2]|0;X=B;af=V;Ac(ab|0,X|0,af)|0;af=m+8|0;c[af>>2]=(c[af>>2]|0)+V}else{if((a[S]|0)!=83){R=4526;break L5255}if((h|0)!=0){V=P;P=V+1|0;al=c[c[h+(V<<2)>>2]>>2]|0}else{V=j;al=(y=c[V+4>>2]|0,c[V+4>>2]=y+8,c[(c[V>>2]|0)+y>>2]|0)}V=vt(al,D)|0;if((V|0)!=0){am=vp(m,V)|0;if((am|0)!=0){R=4522;break L5255}af=c[m+8>>2]|0;X=al+(c[D>>2]|0)|0;ab=V;Ac(af|0,X|0,ab)|0;ab=m+8|0;c[ab>>2]=(c[ab>>2]|0)+V}}}}}}}while(0);if((R|0)==4412){R=0;c[s>>2]=0;V=(a[S]|0)==109?1:5;if((h|0)!=0){ab=P;P=ab+1|0;an=c[c[h+(ab<<2)>>2]>>2]|0}else{ab=j;an=(y=c[ab+4>>2]|0,c[ab+4>>2]=y+8,c[(c[ab>>2]|0)+y>>2]|0)}if((ss(an,2)|0)!=0){ab=sb(an,t)|0;c[s>>2]=(((c[t>>2]|0)+7|0)>>>0)/8|0;do{if((ab|0)!=0){if((c[s>>2]|0)==0){break}ao=vp(m,c[s>>2]|0)|0;if((ao|0)!=0){R=4422;break L5255}do{if((tM(c[m>>2]|0)|0)==0){if((ss(an,1)|0)==0){break}X=tL((c[m+4>>2]|0)+1-1|0)|0;if((X|0)==0){R=4427;break L5255}af=X|0;W=af;ap=c[m>>2]|0;aq=(c[m+8>>2]|0)-(c[m>>2]|0)|0;Ac(W|0,ap|0,aq)|0;c[m+8>>2]=af+((c[m+8>>2]|0)-(c[m>>2]|0));tQ(c[m>>2]|0);c[m>>2]=X}}while(0);X=m+8|0;af=c[X>>2]|0;c[X>>2]=af+1;a[af]=1;b[u>>1]=c[s>>2]&65535;af=c[m+8>>2]|0;X=u;a[af]=a[X]|0;a[af+1|0]=a[X+1|0]|0;X=m+8|0;c[X>>2]=(c[X>>2]|0)+2;X=c[m+8>>2]|0;af=ab;aq=c[s>>2]|0;Ac(X|0,af|0,aq)|0;aq=m+8|0;c[aq>>2]=(c[aq>>2]|0)+(c[s>>2]|0)}}while(0)}else{if((rE(V,0,0,s,an)|0)!=0){R=4434;break}ar=vp(m,c[s>>2]|0)|0;if((ar|0)!=0){R=4437;break}do{if((tM(c[m>>2]|0)|0)==0){if((ss(an,1)|0)==0){break}ab=tL((c[m+4>>2]|0)+1-1|0)|0;if((ab|0)==0){R=4442;break L5255}aq=ab|0;af=aq;X=c[m>>2]|0;ap=(c[m+8>>2]|0)-(c[m>>2]|0)|0;Ac(af|0,X|0,ap)|0;c[m+8>>2]=aq+((c[m+8>>2]|0)-(c[m>>2]|0));tQ(c[m>>2]|0);c[m>>2]=ab}}while(0);ab=m+8|0;aq=c[ab>>2]|0;c[ab>>2]=aq+1;a[aq]=1;b[v>>1]=c[s>>2]&65535;aq=c[m+8>>2]|0;ab=v;a[aq]=a[ab]|0;a[aq+1|0]=a[ab+1|0]|0;ab=m+8|0;c[ab>>2]=(c[ab>>2]|0)+2;if((rE(V,c[m+8>>2]|0,c[s>>2]|0,s,an)|0)!=0){R=4447;break}ab=m+8|0;c[ab>>2]=(c[ab>>2]|0)+(c[s>>2]|0)}}L=0}else{if((a[S]|0)==40){if((K|0)!=0){R=4535;break}as=vp(m,0)|0;if((as|0)!=0){R=4538;break}ab=m+8|0;aq=c[ab>>2]|0;c[ab>>2]=aq+1;a[aq]=3;Q=Q+1|0}else{if((a[S]|0)==41){if((K|0)!=0){R=4543;break}at=vp(m,0)|0;if((at|0)!=0){R=4546;break}aq=m+8|0;ab=c[aq>>2]|0;c[aq>>2]=ab+1;a[ab]=4;Q=Q-1|0}else{if((a[S]|0)==34){G=S;N=0}else{if((a[S]|0)==35){I=S;M=0}else{if((a[S]|0)==124){J=S}else{if((a[S]|0)==91){if((K|0)!=0){R=4557;break}K=S}else{if((a[S]|0)==93){if((K|0)==0){R=4561;break}K=0}else{do{if((a[S]|0)>=48){if((a[S]|0)>57){R=4568;break}if((a[S]|0)==48){R=4566;break L5255}F=S}else{R=4568}}while(0);if((R|0)==4568){R=0;if((be(704,a[S]|0)|0)!=0){H=S}else{if((vr(S)|0)==0){if((a[S]|0)==123){R=4573;break}if((be(78096,a[S]|0)|0)!=0){R=4575;break}if((g|0)==0){R=4579;break}if((a[S]|0)!=37){R=4579;break}L=S}}}}}}}}}}}}}}}}S=S+1|0;T=T-1|0}if((R|0)==4345){k=Y;c[d>>2]=S-e;break}else if((R|0)==4375){c[d>>2]=S-e;k=211;break}else if((R|0)==4298){k=U;c[d>>2]=S-e;break}else if((R|0)==4546){k=at;c[d>>2]=S-e;break}else if((R|0)==4535){c[d>>2]=S-e;k=209;break}else if((R|0)==4538){k=as;c[d>>2]=S-e;break}else if((R|0)==4543){c[d>>2]=S-e;k=209;break}else if((R|0)==4422){k=ao;c[d>>2]=S-e;break}else if((R|0)==4508){k=ak;c[d>>2]=S-e;break}else if((R|0)==4447){uf(60376,1340,86760);return 0}else if((R|0)==4434){uf(60376,1313,86760);return 0}else if((R|0)==4495){k=ai;c[d>>2]=S-e;break}else if((R|0)==4573){c[d>>2]=S-e;k=210;break}else if((R|0)==4575){c[d>>2]=S-e;k=210;break}else if((R|0)==4579){c[d>>2]=S-e;k=205;break}else if((R|0)==4338){c[d>>2]=S-e;k=206;break}else if((R|0)==4458){k=aa;c[d>>2]=S-e;break}else if((R|0)==4328){c[d>>2]=S-e;k=206;break}else if((R|0)==4522){k=am;c[d>>2]=S-e;break}else if((R|0)==4526){c[d>>2]=S-e;k=201;break}else if((R|0)==4313){c[d>>2]=S-e;k=206;break}else if((R|0)==4476){k=ae;c[d>>2]=S-e;break}else if((R|0)==4403){c[d>>2]=S-e;k=201;break}else if((R|0)==4427){k=y_(c[(bX()|0)>>2]|0)|0;break}else if((R|0)==4437){k=ar;c[d>>2]=S-e;break}else if((R|0)==4442){k=y_(c[(bX()|0)>>2]|0)|0;break}else if((R|0)==4360){c[d>>2]=S-e;k=212;break}else if((R|0)==4363){k=Z;c[d>>2]=S-e;break}else if((R|0)==4557){c[d>>2]=S-e;k=208;break}else if((R|0)==4561){c[d>>2]=S-e;k=209;break}else if((R|0)==4566){c[d>>2]=S-e;k=207;break}else if((R|0)==4599){T=vp(m,0)|0;if((T|0)!=0){k=T;c[d>>2]=S-e;break}T=m+8|0;V=c[T>>2]|0;c[T>>2]=V+1;a[V]=0;do{if((Q|0)!=0){if((k|0)!=0){break}k=203}}while(0);break}else if((R|0)==4482){k=y_(c[(bX()|0)>>2]|0)|0;break}else if((R|0)==4389){c[d>>2]=S-e;k=202;break}else if((R|0)==4392){k=_;c[d>>2]=S-e;break}}else{k=y_(c[(bX()|0)>>2]|0)|0;c[d>>2]=0}}while(0);if((k|0)==0){c[E>>2]=u5(c[m>>2]|0)|0;au=k;av=uW(au)|0;i=l;return av|0}if((c[m>>2]|0)!=0){if((tM(c[m>>2]|0)|0)!=0){d=c[m>>2]|0;e=(c[m+4>>2]|0)+1-1|0;while(1){if((e|0)==0){break}a[d]=0;d=d+1|0;e=e-1|0}}tQ(c[m>>2]|0)}c[E>>2]=0;au=k;av=uW(au)|0;i=l;return av|0}function vh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=c;return vg(a,b,e,Ab(e|0)|0,1,0,d)|0}function vi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=d;d=uY(a,b,g,Ab(g|0)|0,1,e,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0)|0;i=e;i=f;return d|0}function vj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=uY(a,b,d,e,0,0,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0)|0;i=e;i=f;return g|0}function vk(b,f,g,h){b=b|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+32|0;k=j|0;l=j+8|0;m=b;b=f;f=g;g=h;h=0;n=0;if((m|0)!=0){o=m|0}else{o=83712}m=o;o=f;L5661:while(1){if((d[m]|0|0)==0){p=4693;break}q=d[m]|0;if((q|0)==3){m=m+1|0;if((b|0)!=1){if((n|0)!=0){h=h+1|0}h=h+n|0}h=h+1|0;if((f|0)!=0){if(h>>>0>=g>>>0){p=4637;break}if((b|0)!=1){if((n|0)!=0){r=o;o=r+1|0;a[r]=10}s=0;while(1){if((s|0)>=(n|0)){break}r=o;o=r+1|0;a[r]=32;s=s+1|0}}r=o;o=r+1|0;a[r]=40}n=n+1|0}else if((q|0)==4){m=m+1|0;h=h+1|0;if((f|0)!=0){if(h>>>0>=g>>>0){p=4650;break}r=o;o=r+1|0;a[r]=41}n=n-1|0;do{if((d[m]|0|0)!=3){if((d[m]|0|0)==0){break}if((b|0)==1){break}h=h+1|0;h=h+n|0;if((f|0)!=0){if(h>>>0>=g>>>0){p=4657;break L5661}r=o;o=r+1|0;a[r]=10;s=0;while(1){if((s|0)>=(n|0)){break}r=o;o=r+1|0;a[r]=32;s=s+1|0}}}}while(0)}else if((q|0)==1){m=m+1|0;r=k;t=m;a[r]=a[t]|0;a[r+1|0]=a[t+1|0]|0;m=m+2|0;if((b|0)==3){t=vl(m,e[k>>1]|0)|0;r=t;if((t|0)==1){u=vm(m,e[k>>1]|0,0)|0}else if((t|0)==2){u=vn(m,e[k>>1]|0,0)|0}else{u=vo(m,e[k>>1]|0,0)|0}h=h+u|0;if((f|0)!=0){if(h>>>0>=g>>>0){p=4672;break}t=r;if((t|0)==1){r=m;v=e[k>>1]|0;w=o;vm(r,v,w)|0}else if((t|0)==2){vn(m,e[k>>1]|0,o)|0}else{vo(m,e[k>>1]|0,o)|0}o=o+u|0}if((d[m+(e[k>>1]|0)|0]|0|0)!=4){h=h+1|0;if((f|0)!=0){if(h>>>0>=g>>>0){p=4681;break}t=o;o=t+1|0;a[t]=32}}}else{t=l|0;w=e[k>>1]|0;bk(t|0,58592,(t=i,i=i+8|0,c[t>>2]=w,t)|0)|0;i=t;t=Ab(l|0)|0;h=h+(t+(e[k>>1]|0))|0;if((f|0)!=0){if(h>>>0>=g>>>0){p=4687;break}o=ca(o|0,l|0)|0;t=o;w=m;v=e[k>>1]|0;Ac(t|0,w|0,v)|0;o=o+(e[k>>1]|0)|0}}m=m+(e[k>>1]|0)|0}else{p=4691;break}}if((p|0)==4650){x=0;y=x;i=j;return y|0}else if((p|0)==4657){x=0;y=x;i=j;return y|0}else if((p|0)==4672){x=0;y=x;i=j;return y|0}else if((p|0)==4681){x=0;y=x;i=j;return y|0}else if((p|0)==4687){x=0;y=x;i=j;return y|0}else if((p|0)==4691){uf(60376,1884,87904);return 0}else if((p|0)==4693){if((b|0)!=1){h=h+1|0;do{if((f|0)!=0){if(h>>>0<g>>>0){b=o;o=b+1|0;a[b]=10;break}x=0;y=x;i=j;return y|0}}while(0)}do{if((f|0)!=0){if(h>>>0<g>>>0){b=o;o=b+1|0;a[b]=0;break}x=0;y=x;i=j;return y|0}else{h=h+1|0}}while(0);x=h;y=x;i=j;return y|0}else if((p|0)==4637){x=0;y=x;i=j;return y|0}return 0}function vl(a,b){a=a|0;b=b|0;var c=0,e=0,f=0,g=0,h=0;c=a;a=b;b=1;if((a|0)==0){e=1;f=e;return f|0}g=c;while(1){if((a|0)==0){break}do{if((d[g]|0|0)<32){h=4722}else{if((d[g]|0|0)<127){break}if((d[g]|0|0)<=160){h=4722}}}while(0);if((h|0)==4722){h=0;if((be(82480,d[g]|0|0)|0)==0){h=4723;break}}do{if((b|0)!=0){if((d[g]|0|0)>=65){if((d[g]|0|0)<=90){break}}if((d[g]|0|0)>=97){if((d[g]|0|0)<=122){break}}if((d[g]|0|0)>=48){if((d[g]|0|0)<=57){break}}if((be(80736,d[g]|0|0)|0)!=0){break}b=0}}while(0);g=g+1|0;a=a-1|0}if((h|0)==4723){e=0;f=e;return f|0}g=c;do{if((b|0)!=0){if((d[g]|0|0)>=48){if((d[g]|0|0)<=57){break}}e=2;f=e;return f|0}}while(0);e=1;f=e;return f|0}function vm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;h=b;b=e;e=f;if((e|0)==0){f=2;while(1){if((b|0)==0){break}switch(d[h]|0|0){case 8:case 9:case 11:case 10:case 12:case 13:case 34:case 39:case 92:{f=f+2|0;break};default:{do{if((d[h]|0|0)<32){j=4774}else{if((d[h]|0|0)>=127){if((d[h]|0|0)<=160){j=4774;break}}f=f+1|0}}while(0);if((j|0)==4774){j=0;f=f+4|0}}}b=b-1|0;h=h+1|0}k=f;l=k;i=g;return l|0}f=e;m=f;f=m+1|0;a[m]=34;while(1){if((b|0)==0){break}switch(d[h]|0|0){case 8:{m=f;f=m+1|0;a[m]=92;m=f;f=m+1|0;a[m]=98;break};case 34:{m=f;f=m+1|0;a[m]=92;m=f;f=m+1|0;a[m]=34;break};case 39:{m=f;f=m+1|0;a[m]=92;m=f;f=m+1|0;a[m]=39;break};case 9:{m=f;f=m+1|0;a[m]=92;m=f;f=m+1|0;a[m]=116;break};case 92:{m=f;f=m+1|0;a[m]=92;m=f;f=m+1|0;a[m]=92;break};case 11:{m=f;f=m+1|0;a[m]=92;m=f;f=m+1|0;a[m]=118;break};case 13:{m=f;f=m+1|0;a[m]=92;m=f;f=m+1|0;a[m]=114;break};case 12:{m=f;f=m+1|0;a[m]=92;m=f;f=m+1|0;a[m]=102;break};case 10:{m=f;f=m+1|0;a[m]=92;m=f;f=m+1|0;a[m]=110;break};default:{do{if((d[h]|0|0)<32){j=4761}else{if((d[h]|0|0)>=127){if((d[h]|0|0)<=160){j=4761;break}}m=f;f=m+1|0;a[m]=a[h]|0}}while(0);if((j|0)==4761){j=0;m=f;n=d[h]|0;bk(m|0,83480,(m=i,i=i+8|0,c[m>>2]=n,m)|0)|0;i=m;f=f+4|0}}}b=b-1|0;h=h+1|0}h=f;f=h+1|0;a[h]=34;k=f-e|0;l=k;i=g;return l|0}function vn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=b;b=c;if((b|0)==0){e=d;return e|0}c=b;b=a;a=d;Ac(c|0,b|0,a)|0;e=d;return e|0}function vo(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;h=b;b=e;e=f;if((e|0)==0){j=b;k=j<<1;l=k+2|0;i=g;return l|0}f=e;e=f+1|0;a[f]=35;f=0;while(1){if(f>>>0>=b>>>0){break}bk(e|0,56376,(m=i,i=i+8|0,c[m>>2]=d[h+f|0]|0,m)|0)|0;i=m;f=f+1|0;e=e+2|0}f=e;e=f+1|0;a[f]=35;j=b;k=j<<1;l=k+2|0;i=g;return l|0}function vp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a;a=b;b=(c[d+8>>2]|0)-(c[d>>2]|0)|0;do{if((b+a+3|0)>>>0>=(c[d+4>>2]|0)>>>0){e=(c[d+4>>2]|0)+(a+3<<1)|0;if(e>>>0<=(c[d+4>>2]|0)>>>0){f=67;g=f;return g|0}h=tP(c[d>>2]|0,e+1-1|0)|0;if((h|0)!=0){c[d+4>>2]=e;c[d+8>>2]=h+b;c[d>>2]=h;break}f=y_(c[(bX()|0)>>2]|0)|0;g=f;return g|0}}while(0);f=0;g=f;return g|0}function vq(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=e;e=0;g=b;b=f;h=c;while(1){if((h|0)==0){break}if((e|0)!=0){switch(d[g]|0|0){case 39:{c=b;b=c+1|0;a[c]=39;break};case 110:{c=b;b=c+1|0;a[c]=10;break};case 102:{c=b;b=c+1|0;a[c]=12;break};case 34:{c=b;b=c+1|0;a[c]=34;break};case 13:{do{if(h>>>0>1){if((d[g+1|0]|0|0)!=10){break}g=g+1|0;h=h-1|0}}while(0);break};case 114:{c=b;b=c+1|0;a[c]=13;break};case 10:{do{if(h>>>0>1){if((d[g+1|0]|0|0)!=13){break}g=g+1|0;h=h-1|0}}while(0);break};case 118:{c=b;b=c+1|0;a[c]=11;break};case 98:{c=b;b=c+1|0;a[c]=8;break};case 120:{L5927:do{if(h>>>0>2){if((d[g+1|0]|0|0)>=48){if((d[g+1|0]|0|0)>57){i=4832}}else{i=4832}do{if((i|0)==4832){i=0;if((d[g+1|0]|0|0)>=65){if((d[g+1|0]|0|0)<=70){break}}if((d[g+1|0]|0|0)<97){break L5927}if((d[g+1|0]|0|0)>102){break L5927}}}while(0);if((d[g+2|0]|0|0)>=48){if((d[g+2|0]|0|0)>57){i=4838}}else{i=4838}do{if((i|0)==4838){i=0;if((d[g+2|0]|0|0)>=65){if((d[g+2|0]|0|0)<=70){break}}if((d[g+2|0]|0|0)<97){break L5927}if((d[g+2|0]|0|0)>102){break L5927}}}while(0);g=g+1|0;h=h-1|0;if((d[g]|0|0)<=57){j=(d[g]|0)-48|0}else{if((d[g]|0|0)<=70){k=(d[g]|0)-65+10|0}else{k=(d[g]|0)-97+10|0}j=k}c=j<<4;if((d[g+1|0]|0|0)<=57){l=(d[g+1|0]|0)-48|0}else{if((d[g+1|0]|0|0)<=70){m=(d[g+1|0]|0)-65+10|0}else{m=(d[g+1|0]|0)-97+10|0}l=m}n=b;b=n+1|0;a[n]=c+l&255;g=g+1|0;h=h-1|0}}while(0);break};case 92:{c=b;b=c+1|0;a[c]=92;break};case 116:{c=b;b=c+1|0;a[c]=9;break};default:{do{if(h>>>0>2){if((d[g]|0|0)<48){break}if((d[g]|0|0)>55){break}if((d[g+1|0]|0|0)<48){break}if((d[g+1|0]|0|0)>55){break}if((d[g+2|0]|0|0)<48){break}if((d[g+2|0]|0|0)>55){break}c=b;b=c+1|0;a[c]=((d[g]|0)-48<<6)+((d[g+1|0]|0)-48<<3)+((d[g+2|0]|0)-48)&255;g=g+2|0;h=h-2|0}}while(0)}}e=0}else{if((d[g]|0|0)==92){e=1}else{c=b;b=c+1|0;a[c]=a[g]|0}}h=h-1|0;g=g+1|0}return b-f|0}function vr(b){b=b|0;var c=0;switch(a[b]|0){case 32:case 9:case 11:case 12:case 13:case 10:{c=1;break};default:{c=0}}return c|0}function vs(a){a=a|0;var b=0,c=0,e=0;b=a;a=0;do{if((d[b]|0|0)>=48){if((d[b]|0|0)>57){c=4880;break}a=(d[b]|0)-48<<4}else{c=4880}}while(0);if((c|0)==4880){do{if((d[b]|0|0)>=65){if((d[b]|0|0)>70){c=4883;break}a=(d[b]|0)+10-65<<4}else{c=4883}}while(0);if((c|0)==4883){do{if((d[b]|0|0)>=97){if((d[b]|0|0)>102){break}a=(d[b]|0)+10-97<<4}}while(0)}}b=b+1|0;do{if((d[b]|0|0)>=48){if((d[b]|0|0)>57){break}a=a+((d[b]|0)-48)|0;e=a;return e|0}}while(0);do{if((d[b]|0|0)>=65){if((d[b]|0|0)>70){c=4894;break}a=a+((d[b]|0)+10-65)|0}else{c=4894}}while(0);if((c|0)==4894){do{if((d[b]|0|0)>=97){if((d[b]|0|0)>102){break}a=a+((d[b]|0)+10-97)|0}}while(0)}e=a;return e|0}function vt(b,f){b=b|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+8|0;h=g|0;j=b;b=f;f=0;c[b>>2]=0;do{if((j|0)!=0){k=j|0;while(1){l=d[k]|0;m=l;if((l|0)==0){n=4918;break}k=k+1|0;if((m|0)==1){l=h;o=k;a[l]=a[o]|0;a[l+1|0]=a[o+1|0]|0;k=k+((e[h>>1]|0)+2)|0}else{if((m|0)==3){if((f|0)==0){c[b>>2]=k-1-j}f=f+1|0}else{if((m|0)==4){f=f-1|0;if((f|0)==0){break}}}}}if((n|0)==4918){break}p=k-j|0;q=p;i=g;return q|0}}while(0);p=0;q=p;i=g;return q|0}function vu(a,b){a=a|0;b=b|0;return vv(a,b)|0}function vv(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;if((c|0)==0){d=0;return d|0}else{d=(a&127)<<24|c&65535;return d|0}return 0}function vw(){c[30514]=1;return}function vx(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;if((d|0)==0){y3(22);e=0;f=e;return f|0}if((c[30514]|0)==0){e=zd(d)|0;f=e;return f|0}b=zd(d+5|0)|0;g=b;if((b|0)!=0){a[g|0]=d&255;a[g+1|0]=d>>>8&255;a[g+2|0]=d>>>16&255;a[g+3|0]=85;a[g+(d+4)|0]=-86;e=g+4|0;f=e;return f|0}else{e=0;f=e;return f|0}return 0}function vy(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;if((d|0)==0){y3(22);e=0;f=e;return f|0}if((c[30514]|0)==0){e=uD(d)|0;f=e;return f|0}b=uD(d+5|0)|0;g=b;if((b|0)!=0){a[g|0]=d&255;a[g+1|0]=d>>>8&255;a[g+2|0]=d>>>16&255;a[g+3|0]=-52;a[g+(d+4)|0]=-86;e=g+4|0;f=e;return f|0}else{e=0;f=e;return f|0}return 0}
function pD(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=b;b=e;e=f;f=(d[e|0]|0)<<24^(d[e+1|0]|0)<<16^(d[e+2|0]|0)<<8^(d[e+3|0]|0);l=(d[e+4|0]|0)<<24^(d[e+5|0]|0)<<16^(d[e+6|0]|0)<<8^(d[e+7|0]|0);m=(d[e+8|0]|0)<<24^(d[e+9|0]|0)<<16^(d[e+10|0]|0)<<8^(d[e+11|0]|0);n=(d[e+12|0]|0)<<24^(d[e+13|0]|0)<<16^(d[e+14|0]|0)<<8^(d[e+15|0]|0);c[h>>2]=m^c[k>>2];c[j>>2]=n^c[k+4>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+8>>2];c[j>>2]=l^c[k+12>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+16>>2];c[j>>2]=n^c[k+20>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+24>>2];c[j>>2]=l^c[k+28>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+32>>2];c[j>>2]=n^c[k+36>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+40>>2];c[j>>2]=l^c[k+44>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+48>>2];c[j>>2]=n^c[k+52>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+56>>2];c[j>>2]=l^c[k+60>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+64>>2];c[j>>2]=n^c[k+68>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+72>>2];c[j>>2]=l^c[k+76>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+80>>2];c[j>>2]=n^c[k+84>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+88>>2];c[j>>2]=l^c[k+92>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+96>>2];c[j>>2]=n^c[k+100>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+104>>2];c[j>>2]=l^c[k+108>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];c[h>>2]=m^c[k+112>>2];c[j>>2]=n^c[k+116>>2];e=j;c[e>>2]=c[e>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];e=j;c[e>>2]=(c[e>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];e=h;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);f=f^c[h>>2];l=l^c[j>>2];c[h>>2]=f^c[k+120>>2];c[j>>2]=l^c[k+124>>2];k=j;c[k>>2]=c[k>>2]^c[h>>2];c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];k=h;c[k>>2]=(c[k>>2]|0)+(c[j>>2]|0);c[h>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];k=j;c[k>>2]=(c[k>>2]|0)+(c[h>>2]|0);c[j>>2]=c[103976+((d[j|0]|0)<<2)>>2]^c[102952+((d[j+1|0]|0)<<2)>>2]^c[101928+((d[j+2|0]|0)<<2)>>2]^c[100904+((d[j+3|0]|0)<<2)>>2];k=h;c[k>>2]=(c[k>>2]|0)+(c[j>>2]|0);m=m^c[h>>2];n=n^c[j>>2];a[b|0]=m>>>24&255;a[b+1|0]=m>>>16&255;a[b+2|0]=m>>>8&255;a[b+3|0]=m&255;a[b+4|0]=n>>>24&255;a[b+5|0]=n>>>16&255;a[b+6|0]=n>>>8&255;a[b+7|0]=n&255;a[b+8|0]=f>>>24&255;a[b+9|0]=f>>>16&255;a[b+10|0]=f>>>8&255;a[b+11|0]=f&255;a[b+12|0]=l>>>24&255;a[b+13|0]=l>>>16&255;a[b+14|0]=l>>>8&255;a[b+15|0]=l&255;i=g;return}function pE(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f|0;h=f+8|0;j=b;b=e;e=a|0;if((c[30742]|0)==0){c[30742]=1;c[30736]=pF()|0;if((c[30736]|0)!=0){uj(74928,(a=i,i=i+8|0,c[a>>2]=c[30736],a)|0);i=a}}if((c[30736]|0)!=0){k=50;l=k;i=f;return l|0}if((b|0)!=16){k=44;l=k;i=f;return l|0}b=(d[j|0]|0)<<24^(d[j+1|0]|0)<<16^(d[j+2|0]|0)<<8^(d[j+3|0]|0);a=(d[j+4|0]|0)<<24^(d[j+5|0]|0)<<16^(d[j+6|0]|0)<<8^(d[j+7|0]|0);m=(d[j+8|0]|0)<<24^(d[j+9|0]|0)<<16^(d[j+10|0]|0)<<8^(d[j+11|0]|0);n=(d[j+12|0]|0)<<24^(d[j+13|0]|0)<<16^(d[j+14|0]|0)<<8^(d[j+15|0]|0);j=0;while(1){if((j|0)>=16){break}c[g>>2]=b+m-(c[105536+(j<<2)>>2]|0);c[h>>2]=a+(c[105536+(j<<2)>>2]|0)-n;o=e;e=o+4|0;c[o>>2]=c[103976+((d[g|0]|0)<<2)>>2]^c[102952+((d[g+1|0]|0)<<2)>>2]^c[101928+((d[g+2|0]|0)<<2)>>2]^c[100904+((d[g+3|0]|0)<<2)>>2];o=e;e=o+4|0;c[o>>2]=c[103976+((d[h|0]|0)<<2)>>2]^c[102952+((d[h+1|0]|0)<<2)>>2]^c[101928+((d[h+2|0]|0)<<2)>>2]^c[100904+((d[h+3|0]|0)<<2)>>2];if(((j|0)%2|0|0)==0){c[g>>2]=b;b=b>>>8^a<<24;a=a>>>8^c[g>>2]<<24}else{c[g>>2]=m;m=m<<8^n>>>24;n=n<<8^(c[g>>2]|0)>>>24}j=j+1|0}k=0;l=k;i=f;return l|0}function pF(){var a=0,b=0,c=0,d=0,e=0;a=i;i=i+144|0;b=a|0;c=a+128|0;pz(b,6544,16)|0;pA(b,c|0,6352);if((Af(c|0,7368,16)|0)!=0){d=69600;e=d;i=a;return e|0}pB(b,c|0,c|0);if((Af(c|0,6352,16)|0)!=0){d=66496;e=d;i=a;return e|0}else{d=0;e=d;i=a;return e|0}return 0}function pG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=b;b=d;d=a;a=0;if((c[30536]|0)==0){c[30534]=pL()|0;if((c[30534]|0)!=0){uj(66432,(g=i,i=i+8|0,c[g>>2]=c[30534],g)|0);i=g}c[30536]=1}if((c[30534]|0)!=0){a=50;h=a;i=e;return h|0}else{pM(d,f,b);up(32);h=a;i=e;return h|0}return 0}function pH(a,b,c){a=a|0;b=b|0;c=c|0;pK(a,c,b);up(32);return}function pI(a,b,c){a=a|0;b=b|0;c=c|0;pJ(a,c,b);up(32);return}function pJ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e|0;g=e+16|0;h=a;a=d;d=32;j=g;k=b;Ac(j|0,k|0,16)|0;k=g|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=g+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=g+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=g+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d-1|0;k=c[g>>2]&c[g+4>>2];j=c[g+12>>2]&(c[g>>2]|c[g+4>>2]);c[f+12>>2]=(c[g+8>>2]|k)^j;b=c[g+4>>2]^j;j=c[g+4>>2]^c[g+12>>2];l=c[g>>2]|c[g+12>>2];c[f+4>>2]=c[g>>2]^(b|~(c[g+12>>2]^c[f+12>>2]));m=c[g+8>>2]&l;c[f>>2]=c[g+8>>2]^b^(c[g+12>>2]|c[f+4>>2]);c[f+8>>2]=m^(k|j);j=f|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=f+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=f+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=f+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;j=c[f>>2]^c[f+8>>2];k=~c[f+8>>2];m=c[f+12>>2]|c[f+4>>2]&j;b=c[f>>2]&(c[f+4>>2]|k);c[g+4>>2]=c[f+4>>2]^c[f+12>>2]^(c[f>>2]|k);c[g>>2]=~(b^m);l=j^c[f+4>>2]&c[g>>2];n=c[f+12>>2]|k;c[g+12>>2]=c[f>>2]^c[g+4>>2]^(b^j&m);c[g+8>>2]=n^l;l=g|0;c[l>>2]=c[l>>2]^c[h+(d<<4)>>2];l=g+4|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+4>>2];l=g+8|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+8>>2];l=g+12|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;l=c[f>>2]&c[f+12>>2];n=c[f+8>>2]^l;m=c[f>>2]&c[f+8>>2];c[g>>2]=c[f>>2]^c[f+12>>2]^c[f+4>>2]&n;j=c[f>>2]&c[g>>2];b=~c[f+4>>2];c[g+4>>2]=l^c[g>>2]^(c[f+4>>2]|m);m=c[g>>2]|c[g+4>>2];c[g+12>>2]=n^(b|j);c[g+8>>2]=c[f+4>>2]^c[f+12>>2]^(n^m);m=g|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=g+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=g+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=g+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;m=c[f+4>>2]|c[f+12>>2];n=c[f>>2]&m;j=c[f+4>>2]^(c[f+8>>2]|c[f+12>>2]);b=c[f>>2]&j;c[g+4>>2]=c[f+8>>2]^c[f+12>>2]^b;l=c[g+4>>2]|~n;k=c[f+8>>2]|c[f>>2]^b;c[g+12>>2]=n^(c[f+12>>2]^j);n=c[f>>2]^j;c[g+8>>2]=m^l^k;c[g>>2]=n^l;l=g|0;c[l>>2]=c[l>>2]^c[h+(d<<4)>>2];l=g+4|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+4>>2];l=g+8|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+8>>2];l=g+12|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;l=c[f+8>>2]|c[f+12>>2];n=c[f>>2]|c[f+12>>2];k=c[f+8>>2]^n;m=c[f>>2]^c[f+12>>2];j=c[f+4>>2]&l;c[g+8>>2]=m^(c[f+4>>2]^n)&k;n=c[f>>2]^k;c[g>>2]=j^k;k=c[f>>2]&c[g+8>>2];c[g+4>>2]=c[f+4>>2]^n&(c[g>>2]|m);c[g+12>>2]=l^m^(c[f+4>>2]|k);k=g|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=g+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=g+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=g+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;k=c[f+8>>2]^c[f+12>>2];m=c[f>>2]&c[f+8>>2];c[g>>2]=c[f>>2]^c[f+12>>2]^(c[f+4>>2]|k);l=c[f>>2]|c[f+8>>2];n=~c[f+12>>2]|m;m=c[f+4>>2]&(c[f+12>>2]|c[g>>2]);c[g+12>>2]=c[f+4>>2]&l^n;c[g+4>>2]=l&k^m;c[g+8>>2]=c[g>>2]^c[g+4>>2]^(n^c[f+8>>2]&c[g+12>>2]);n=g|0;c[n>>2]=c[n>>2]^c[h+(d<<4)>>2];n=g+4|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+4>>2];n=g+8|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+8>>2];n=g+12|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;n=c[f>>2]^c[f+4>>2];m=c[f>>2]&c[f+8>>2];k=c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]);l=n&(c[f>>2]|k);j=c[f+12>>2]&(c[f+4>>2]^l);c[g+8>>2]=~((c[f+12>>2]|m)^l);c[g+4>>2]=(k|m)^j;j=c[f>>2]|c[g+8>>2];m=l^c[g+4>>2];c[g+12>>2]=n^k;c[g>>2]=j^(c[f+8>>2]^m);m=g|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=g+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=g+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=g+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;m=c[f+8>>2]^c[f+12>>2];j=c[f+4>>2]|c[f+8>>2];k=(c[f>>2]|c[f+4>>2])^m;n=c[f>>2]|c[f+8>>2]&m;c[g+8>>2]=~k;m=c[f+12>>2]|c[g+8>>2];c[g+4>>2]=j&(c[f+4>>2]^c[f+12>>2])^n;n=c[g+4>>2]^(c[f>>2]|k);l=j^m;m=c[f>>2]^c[f+8>>2];c[g+12>>2]=l^n;c[g>>2]=m^(l|k&n);n=g|0;c[n>>2]=c[n>>2]^c[h+(d<<4)>>2];n=g+4|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+4>>2];n=g+8|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+8>>2];n=g+12|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;n=c[f>>2]&c[f+4>>2];k=c[f+12>>2]&(c[f>>2]|c[f+4>>2]);c[g+12>>2]=(c[f+8>>2]|n)^k;l=c[f+4>>2]^k;k=c[f+4>>2]^c[f+12>>2];m=c[f>>2]|c[f+12>>2];c[g+4>>2]=c[f>>2]^(l|~(c[f+12>>2]^c[g+12>>2]));j=c[f+8>>2]&m;c[g>>2]=c[f+8>>2]^l^(c[f+12>>2]|c[g+4>>2]);c[g+8>>2]=j^(n|k);k=g|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=g+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=g+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=g+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;k=c[f>>2]^c[f+8>>2];n=~c[f+8>>2];j=c[f+12>>2]|c[f+4>>2]&k;l=c[f>>2]&(c[f+4>>2]|n);c[g+4>>2]=c[f+4>>2]^c[f+12>>2]^(c[f>>2]|n);c[g>>2]=~(l^j);m=k^c[f+4>>2]&c[g>>2];b=c[f+12>>2]|n;c[g+12>>2]=c[f>>2]^c[g+4>>2]^(l^k&j);c[g+8>>2]=b^m;m=g|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=g+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=g+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=g+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;m=c[f>>2]&c[f+12>>2];b=c[f+8>>2]^m;j=c[f>>2]&c[f+8>>2];c[g>>2]=c[f>>2]^c[f+12>>2]^c[f+4>>2]&b;k=c[f>>2]&c[g>>2];l=~c[f+4>>2];c[g+4>>2]=m^c[g>>2]^(c[f+4>>2]|j);j=c[g>>2]|c[g+4>>2];c[g+12>>2]=b^(l|k);c[g+8>>2]=c[f+4>>2]^c[f+12>>2]^(b^j);j=g|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=g+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=g+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=g+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;j=c[f+4>>2]|c[f+12>>2];b=c[f>>2]&j;k=c[f+4>>2]^(c[f+8>>2]|c[f+12>>2]);l=c[f>>2]&k;c[g+4>>2]=c[f+8>>2]^c[f+12>>2]^l;m=c[g+4>>2]|~b;n=c[f+8>>2]|c[f>>2]^l;c[g+12>>2]=b^(c[f+12>>2]^k);b=c[f>>2]^k;c[g+8>>2]=j^m^n;c[g>>2]=b^m;m=g|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=g+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=g+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=g+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;m=c[f+8>>2]|c[f+12>>2];b=c[f>>2]|c[f+12>>2];n=c[f+8>>2]^b;j=c[f>>2]^c[f+12>>2];k=c[f+4>>2]&m;c[g+8>>2]=j^(c[f+4>>2]^b)&n;b=c[f>>2]^n;c[g>>2]=k^n;n=c[f>>2]&c[g+8>>2];c[g+4>>2]=c[f+4>>2]^b&(c[g>>2]|j);c[g+12>>2]=m^j^(c[f+4>>2]|n);n=g|0;c[n>>2]=c[n>>2]^c[h+(d<<4)>>2];n=g+4|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+4>>2];n=g+8|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+8>>2];n=g+12|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;n=c[f+8>>2]^c[f+12>>2];j=c[f>>2]&c[f+8>>2];c[g>>2]=c[f>>2]^c[f+12>>2]^(c[f+4>>2]|n);m=c[f>>2]|c[f+8>>2];b=~c[f+12>>2]|j;j=c[f+4>>2]&(c[f+12>>2]|c[g>>2]);c[g+12>>2]=c[f+4>>2]&m^b;c[g+4>>2]=m&n^j;c[g+8>>2]=c[g>>2]^c[g+4>>2]^(b^c[f+8>>2]&c[g+12>>2]);b=g|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=g+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=g+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=g+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;b=c[f>>2]^c[f+4>>2];j=c[f>>2]&c[f+8>>2];n=c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]);m=b&(c[f>>2]|n);k=c[f+12>>2]&(c[f+4>>2]^m);c[g+8>>2]=~((c[f+12>>2]|j)^m);c[g+4>>2]=(n|j)^k;k=c[f>>2]|c[g+8>>2];j=m^c[g+4>>2];c[g+12>>2]=b^n;c[g>>2]=k^(c[f+8>>2]^j);j=g|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=g+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=g+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=g+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;j=c[f+8>>2]^c[f+12>>2];k=c[f+4>>2]|c[f+8>>2];n=(c[f>>2]|c[f+4>>2])^j;b=c[f>>2]|c[f+8>>2]&j;c[g+8>>2]=~n;j=c[f+12>>2]|c[g+8>>2];c[g+4>>2]=k&(c[f+4>>2]^c[f+12>>2])^b;b=c[g+4>>2]^(c[f>>2]|n);m=k^j;j=c[f>>2]^c[f+8>>2];c[g+12>>2]=m^b;c[g>>2]=j^(m|n&b);b=g|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=g+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=g+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=g+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;b=c[f>>2]&c[f+4>>2];n=c[f+12>>2]&(c[f>>2]|c[f+4>>2]);c[g+12>>2]=(c[f+8>>2]|b)^n;m=c[f+4>>2]^n;n=c[f+4>>2]^c[f+12>>2];j=c[f>>2]|c[f+12>>2];c[g+4>>2]=c[f>>2]^(m|~(c[f+12>>2]^c[g+12>>2]));k=c[f+8>>2]&j;c[g>>2]=c[f+8>>2]^m^(c[f+12>>2]|c[g+4>>2]);c[g+8>>2]=k^(b|n);n=g|0;c[n>>2]=c[n>>2]^c[h+(d<<4)>>2];n=g+4|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+4>>2];n=g+8|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+8>>2];n=g+12|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;n=c[f>>2]^c[f+8>>2];b=~c[f+8>>2];k=c[f+12>>2]|c[f+4>>2]&n;m=c[f>>2]&(c[f+4>>2]|b);c[g+4>>2]=c[f+4>>2]^c[f+12>>2]^(c[f>>2]|b);c[g>>2]=~(m^k);j=n^c[f+4>>2]&c[g>>2];l=c[f+12>>2]|b;c[g+12>>2]=c[f>>2]^c[g+4>>2]^(m^n&k);c[g+8>>2]=l^j;j=g|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=g+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=g+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=g+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;j=c[f>>2]&c[f+12>>2];l=c[f+8>>2]^j;k=c[f>>2]&c[f+8>>2];c[g>>2]=c[f>>2]^c[f+12>>2]^c[f+4>>2]&l;n=c[f>>2]&c[g>>2];m=~c[f+4>>2];c[g+4>>2]=j^c[g>>2]^(c[f+4>>2]|k);k=c[g>>2]|c[g+4>>2];c[g+12>>2]=l^(m|n);c[g+8>>2]=c[f+4>>2]^c[f+12>>2]^(l^k);k=g|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=g+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=g+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=g+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;k=c[f+4>>2]|c[f+12>>2];l=c[f>>2]&k;n=c[f+4>>2]^(c[f+8>>2]|c[f+12>>2]);m=c[f>>2]&n;c[g+4>>2]=c[f+8>>2]^c[f+12>>2]^m;j=c[g+4>>2]|~l;b=c[f+8>>2]|c[f>>2]^m;c[g+12>>2]=l^(c[f+12>>2]^n);l=c[f>>2]^n;c[g+8>>2]=k^j^b;c[g>>2]=l^j;j=g|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=g+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=g+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=g+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;j=c[f+8>>2]|c[f+12>>2];l=c[f>>2]|c[f+12>>2];b=c[f+8>>2]^l;k=c[f>>2]^c[f+12>>2];n=c[f+4>>2]&j;c[g+8>>2]=k^(c[f+4>>2]^l)&b;l=c[f>>2]^b;c[g>>2]=n^b;b=c[f>>2]&c[g+8>>2];c[g+4>>2]=c[f+4>>2]^l&(c[g>>2]|k);c[g+12>>2]=j^k^(c[f+4>>2]|b);b=g|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=g+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=g+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=g+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;b=c[f+8>>2]^c[f+12>>2];k=c[f>>2]&c[f+8>>2];c[g>>2]=c[f>>2]^c[f+12>>2]^(c[f+4>>2]|b);j=c[f>>2]|c[f+8>>2];l=~c[f+12>>2]|k;k=c[f+4>>2]&(c[f+12>>2]|c[g>>2]);c[g+12>>2]=c[f+4>>2]&j^l;c[g+4>>2]=j&b^k;c[g+8>>2]=c[g>>2]^c[g+4>>2]^(l^c[f+8>>2]&c[g+12>>2]);l=g|0;c[l>>2]=c[l>>2]^c[h+(d<<4)>>2];l=g+4|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+4>>2];l=g+8|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+8>>2];l=g+12|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;l=c[f>>2]^c[f+4>>2];k=c[f>>2]&c[f+8>>2];b=c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]);j=l&(c[f>>2]|b);n=c[f+12>>2]&(c[f+4>>2]^j);c[g+8>>2]=~((c[f+12>>2]|k)^j);c[g+4>>2]=(b|k)^n;n=c[f>>2]|c[g+8>>2];k=j^c[g+4>>2];c[g+12>>2]=l^b;c[g>>2]=n^(c[f+8>>2]^k);k=g|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=g+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=g+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=g+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;k=c[f+8>>2]^c[f+12>>2];n=c[f+4>>2]|c[f+8>>2];b=(c[f>>2]|c[f+4>>2])^k;l=c[f>>2]|c[f+8>>2]&k;c[g+8>>2]=~b;k=c[f+12>>2]|c[g+8>>2];c[g+4>>2]=n&(c[f+4>>2]^c[f+12>>2])^l;l=c[g+4>>2]^(c[f>>2]|b);j=n^k;k=c[f>>2]^c[f+8>>2];c[g+12>>2]=j^l;c[g>>2]=k^(j|b&l);l=g|0;c[l>>2]=c[l>>2]^c[h+(d<<4)>>2];l=g+4|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+4>>2];l=g+8|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+8>>2];l=g+12|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;l=c[f>>2]&c[f+4>>2];b=c[f+12>>2]&(c[f>>2]|c[f+4>>2]);c[g+12>>2]=(c[f+8>>2]|l)^b;j=c[f+4>>2]^b;b=c[f+4>>2]^c[f+12>>2];k=c[f>>2]|c[f+12>>2];c[g+4>>2]=c[f>>2]^(j|~(c[f+12>>2]^c[g+12>>2]));n=c[f+8>>2]&k;c[g>>2]=c[f+8>>2]^j^(c[f+12>>2]|c[g+4>>2]);c[g+8>>2]=n^(l|b);b=g|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=g+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=g+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=g+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;b=c[f>>2]^c[f+8>>2];l=~c[f+8>>2];n=c[f+12>>2]|c[f+4>>2]&b;j=c[f>>2]&(c[f+4>>2]|l);c[g+4>>2]=c[f+4>>2]^c[f+12>>2]^(c[f>>2]|l);c[g>>2]=~(j^n);k=b^c[f+4>>2]&c[g>>2];m=c[f+12>>2]|l;c[g+12>>2]=c[f>>2]^c[g+4>>2]^(j^b&n);c[g+8>>2]=m^k;k=g|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=g+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=g+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=g+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;k=c[f>>2]&c[f+12>>2];m=c[f+8>>2]^k;n=c[f>>2]&c[f+8>>2];c[g>>2]=c[f>>2]^c[f+12>>2]^c[f+4>>2]&m;b=c[f>>2]&c[g>>2];j=~c[f+4>>2];c[g+4>>2]=k^c[g>>2]^(c[f+4>>2]|n);n=c[g>>2]|c[g+4>>2];c[g+12>>2]=m^(j|b);c[g+8>>2]=c[f+4>>2]^c[f+12>>2]^(m^n);n=g|0;c[n>>2]=c[n>>2]^c[h+(d<<4)>>2];n=g+4|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+4>>2];n=g+8|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+8>>2];n=g+12|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;n=c[f+4>>2]|c[f+12>>2];m=c[f>>2]&n;b=c[f+4>>2]^(c[f+8>>2]|c[f+12>>2]);j=c[f>>2]&b;c[g+4>>2]=c[f+8>>2]^c[f+12>>2]^j;k=c[g+4>>2]|~m;l=c[f+8>>2]|c[f>>2]^j;c[g+12>>2]=m^(c[f+12>>2]^b);m=c[f>>2]^b;c[g+8>>2]=n^k^l;c[g>>2]=m^k;k=g|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=g+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=g+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=g+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;k=c[f+8>>2]|c[f+12>>2];m=c[f>>2]|c[f+12>>2];l=c[f+8>>2]^m;n=c[f>>2]^c[f+12>>2];b=c[f+4>>2]&k;c[g+8>>2]=n^(c[f+4>>2]^m)&l;m=c[f>>2]^l;c[g>>2]=b^l;l=c[f>>2]&c[g+8>>2];c[g+4>>2]=c[f+4>>2]^m&(c[g>>2]|n);c[g+12>>2]=k^n^(c[f+4>>2]|l);l=g|0;c[l>>2]=c[l>>2]^c[h+(d<<4)>>2];l=g+4|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+4>>2];l=g+8|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+8>>2];l=g+12|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;l=c[f+8>>2]^c[f+12>>2];n=c[f>>2]&c[f+8>>2];c[g>>2]=c[f>>2]^c[f+12>>2]^(c[f+4>>2]|l);k=c[f>>2]|c[f+8>>2];m=~c[f+12>>2]|n;n=c[f+4>>2]&(c[f+12>>2]|c[g>>2]);c[g+12>>2]=c[f+4>>2]&k^m;c[g+4>>2]=k&l^n;c[g+8>>2]=c[g>>2]^c[g+4>>2]^(m^c[f+8>>2]&c[g+12>>2]);m=g|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=g+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=g+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=g+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;m=c[f>>2]^c[f+4>>2];n=c[f>>2]&c[f+8>>2];l=c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]);k=m&(c[f>>2]|l);b=c[f+12>>2]&(c[f+4>>2]^k);c[g+8>>2]=~((c[f+12>>2]|n)^k);c[g+4>>2]=(l|n)^b;b=c[f>>2]|c[g+8>>2];n=k^c[g+4>>2];c[g+12>>2]=m^l;c[g>>2]=b^(c[f+8>>2]^n);n=g|0;c[n>>2]=c[n>>2]^c[h+(d<<4)>>2];n=g+4|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+4>>2];n=g+8|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+8>>2];n=g+12|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>22|c[f+8>>2]<<10;c[f>>2]=(c[f>>2]|0)>>>5|c[f>>2]<<27;c[f+8>>2]=c[f+8>>2]^c[f+12>>2]^c[f+4>>2]<<7;c[f>>2]=c[f>>2]^c[f+4>>2]^c[f+12>>2];c[f+12>>2]=(c[f+12>>2]|0)>>>7|c[f+12>>2]<<25;c[f+4>>2]=(c[f+4>>2]|0)>>>1|c[f+4>>2]<<31;c[f+12>>2]=c[f+12>>2]^c[f+8>>2]^c[f>>2]<<3;c[f+4>>2]=c[f+4>>2]^c[f>>2]^c[f+8>>2];c[f+8>>2]=(c[f+8>>2]|0)>>>3|c[f+8>>2]<<29;c[f>>2]=(c[f>>2]|0)>>>13|c[f>>2]<<19;n=c[f+8>>2]^c[f+12>>2];b=c[f+4>>2]|c[f+8>>2];l=(c[f>>2]|c[f+4>>2])^n;m=c[f>>2]|c[f+8>>2]&n;c[g+8>>2]=~l;n=c[f+12>>2]|c[g+8>>2];c[g+4>>2]=b&(c[f+4>>2]^c[f+12>>2])^m;m=c[g+4>>2]^(c[f>>2]|l);k=b^n;n=c[f>>2]^c[f+8>>2];c[g+12>>2]=k^m;c[g>>2]=n^(k|l&m);m=g|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=g+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=g+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=g+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d-1|0;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];f=a;a=g;Ac(f|0,a|0,16)|0;i=e;return}function pK(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e|0;g=e+16|0;h=a;a=d;d=0;j=f;k=b;Ac(j|0,k|0,16)|0;k=f|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=f+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=f+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=f+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d+1|0;k=c[f>>2]^c[f+4>>2];c[g+12>>2]=(c[f>>2]|c[f+12>>2])^(c[f+4>>2]^c[f+8>>2]);j=c[f>>2]^c[f+12>>2];b=c[f+4>>2]|c[f+8>>2];l=k&b;c[g+8>>2]=l^c[f+12>>2]&(c[f+8>>2]|c[g+12>>2]);k=c[f+8>>2]^c[f+12>>2];m=c[f+4>>2]&j;c[g>>2]=~(j^(b^l&c[g+8>>2]));c[g+4>>2]=k^(c[g>>2]^m);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];m=f|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=f+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=f+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=f+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d+1|0;m=c[f>>2]|c[f+12>>2];k=c[f+8>>2]^c[f+12>>2];l=c[f>>2]|~c[f+4>>2];b=c[f+4>>2]|c[f+12>>2]&(c[f>>2]^c[f+8>>2]);c[g+8>>2]=k^l;j=m&k^b;b=c[g+8>>2]^(m^j);m=c[f+4>>2]&c[f+12>>2];c[g+12>>2]=~j;c[g+4>>2]=m^b;c[g>>2]=c[f+8>>2]^l&(j|c[g+4>>2]);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];j=f|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=f+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=f+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=f+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d+1|0;j=c[f>>2]|c[f+8>>2];l=c[f>>2]^c[f+4>>2];b=c[f+12>>2]^j;c[g>>2]=l^b;m=c[f+8>>2]^c[g>>2];k=b^(c[f+4>>2]|m);c[g+4>>2]=(l|k)^j&(c[f+4>>2]^m);m=c[f>>2]|c[f+12>>2];j=c[f+4>>2]^(k^c[g+4>>2]);c[g+12>>2]=~k;c[g+8>>2]=m^j;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];j=f|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=f+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=f+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=f+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d+1|0;j=c[f>>2]|c[f+12>>2];m=(c[f>>2]^c[f+8>>2])&j;k=c[f+4>>2]|c[f>>2]&c[f+12>>2];l=c[f+12>>2]^m;b=c[f+8>>2]|c[f>>2]&c[f+4>>2];n=j^c[f+12>>2]&k;c[g+12>>2]=b^(c[f+4>>2]^l);j=c[f>>2]|l;l=c[f+4>>2]&(c[f+12>>2]|c[g+12>>2]);c[g+8>>2]=b^n;c[g>>2]=j^l;c[g+4>>2]=k^m;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];m=f|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=f+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=f+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=f+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d+1|0;m=c[f>>2]^(c[f+4>>2]|c[f+8>>2]);k=c[f+4>>2]^c[f+12>>2];l=c[f+12>>2]|m;j=c[f+12>>2]&(c[f>>2]|c[f+4>>2]);c[g+12>>2]=m^j;n=c[g+12>>2]&k;b=c[f+4>>2]&c[f+8>>2];o=c[f+8>>2]^j^k&l;j=c[f>>2]&l;c[g+8>>2]=(b|m)^n;c[g+4>>2]=j^(b|k^n);c[g>>2]=~o;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];o=f|0;c[o>>2]=c[o>>2]^c[h+(d<<4)>>2];o=f+4|0;c[o>>2]=c[o>>2]^c[h+(d<<4)+4>>2];o=f+8|0;c[o>>2]=c[o>>2]^c[h+(d<<4)+8>>2];o=f+12|0;c[o>>2]=c[o>>2]^c[h+(d<<4)+12>>2];d=d+1|0;o=c[f+4>>2]^c[f+12>>2];n=c[f>>2]&o;k=n^(c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]));c[g>>2]=~k;b=c[f>>2]^o;j=c[f+12>>2]|c[g>>2];m=n|c[g>>2];n=o^(c[f+4>>2]|b);c[g+8>>2]=(c[f+4>>2]|k)^(b|c[f+12>>2]^j);c[g+4>>2]=b^j;c[g+12>>2]=m^n;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];n=f|0;c[n>>2]=c[n>>2]^c[h+(d<<4)>>2];n=f+4|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+4>>2];n=f+8|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+8>>2];n=f+12|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+12>>2];d=d+1|0;n=c[f>>2]^c[f+12>>2];m=c[f+4>>2]|c[f+8>>2];c[g+4>>2]=~(c[f>>2]&c[f+12>>2]^(c[f+4>>2]^c[f+8>>2]));j=n&m;m=c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]);c[g+8>>2]=~((c[f>>2]|c[f+8>>2])^(j^c[f+4>>2]&c[g+4>>2]));b=c[g+4>>2]&n;c[g+12>>2]=m^j;c[g>>2]=c[f>>2]^c[f+4>>2]^(c[g+8>>2]^b);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];b=f|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=f+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=f+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=f+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d+1|0;b=c[f>>2]&c[f+8>>2];j=~c[f+12>>2];m=c[f+4>>2]|b;n=c[f>>2]&c[f+4>>2];c[g+12>>2]=c[f>>2]&j^(c[f+8>>2]^m);k=m&c[g+12>>2];c[g+4>>2]=(c[f+12>>2]|n)^(c[f>>2]^(c[f+8>>2]|c[g+12>>2]));m=k|c[f+4>>2]^c[g+4>>2];c[g>>2]=c[f+8>>2]^n^(j|b^c[g+4>>2]);c[g+8>>2]=c[f>>2]^m;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];m=f|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=f+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=f+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=f+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d+1|0;m=c[f>>2]^c[f+4>>2];c[g+12>>2]=(c[f>>2]|c[f+12>>2])^(c[f+4>>2]^c[f+8>>2]);b=c[f>>2]^c[f+12>>2];j=c[f+4>>2]|c[f+8>>2];n=m&j;c[g+8>>2]=n^c[f+12>>2]&(c[f+8>>2]|c[g+12>>2]);m=c[f+8>>2]^c[f+12>>2];k=c[f+4>>2]&b;c[g>>2]=~(b^(j^n&c[g+8>>2]));c[g+4>>2]=m^(c[g>>2]^k);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];k=f|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=f+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=f+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=f+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d+1|0;k=c[f>>2]|c[f+12>>2];m=c[f+8>>2]^c[f+12>>2];n=c[f>>2]|~c[f+4>>2];j=c[f+4>>2]|c[f+12>>2]&(c[f>>2]^c[f+8>>2]);c[g+8>>2]=m^n;b=k&m^j;j=c[g+8>>2]^(k^b);k=c[f+4>>2]&c[f+12>>2];c[g+12>>2]=~b;c[g+4>>2]=k^j;c[g>>2]=c[f+8>>2]^n&(b|c[g+4>>2]);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];b=f|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=f+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=f+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=f+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d+1|0;b=c[f>>2]|c[f+8>>2];n=c[f>>2]^c[f+4>>2];j=c[f+12>>2]^b;c[g>>2]=n^j;k=c[f+8>>2]^c[g>>2];m=j^(c[f+4>>2]|k);c[g+4>>2]=(n|m)^b&(c[f+4>>2]^k);k=c[f>>2]|c[f+12>>2];b=c[f+4>>2]^(m^c[g+4>>2]);c[g+12>>2]=~m;c[g+8>>2]=k^b;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];b=f|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=f+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=f+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=f+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d+1|0;b=c[f>>2]|c[f+12>>2];k=(c[f>>2]^c[f+8>>2])&b;m=c[f+4>>2]|c[f>>2]&c[f+12>>2];n=c[f+12>>2]^k;j=c[f+8>>2]|c[f>>2]&c[f+4>>2];o=b^c[f+12>>2]&m;c[g+12>>2]=j^(c[f+4>>2]^n);b=c[f>>2]|n;n=c[f+4>>2]&(c[f+12>>2]|c[g+12>>2]);c[g+8>>2]=j^o;c[g>>2]=b^n;c[g+4>>2]=m^k;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];k=f|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=f+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=f+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=f+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d+1|0;k=c[f>>2]^(c[f+4>>2]|c[f+8>>2]);m=c[f+4>>2]^c[f+12>>2];n=c[f+12>>2]|k;b=c[f+12>>2]&(c[f>>2]|c[f+4>>2]);c[g+12>>2]=k^b;o=c[g+12>>2]&m;j=c[f+4>>2]&c[f+8>>2];l=c[f+8>>2]^b^m&n;b=c[f>>2]&n;c[g+8>>2]=(j|k)^o;c[g+4>>2]=b^(j|m^o);c[g>>2]=~l;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];l=f|0;c[l>>2]=c[l>>2]^c[h+(d<<4)>>2];l=f+4|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+4>>2];l=f+8|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+8>>2];l=f+12|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+12>>2];d=d+1|0;l=c[f+4>>2]^c[f+12>>2];o=c[f>>2]&l;m=o^(c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]));c[g>>2]=~m;j=c[f>>2]^l;b=c[f+12>>2]|c[g>>2];k=o|c[g>>2];o=l^(c[f+4>>2]|j);c[g+8>>2]=(c[f+4>>2]|m)^(j|c[f+12>>2]^b);c[g+4>>2]=j^b;c[g+12>>2]=k^o;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];o=f|0;c[o>>2]=c[o>>2]^c[h+(d<<4)>>2];o=f+4|0;c[o>>2]=c[o>>2]^c[h+(d<<4)+4>>2];o=f+8|0;c[o>>2]=c[o>>2]^c[h+(d<<4)+8>>2];o=f+12|0;c[o>>2]=c[o>>2]^c[h+(d<<4)+12>>2];d=d+1|0;o=c[f>>2]^c[f+12>>2];k=c[f+4>>2]|c[f+8>>2];c[g+4>>2]=~(c[f>>2]&c[f+12>>2]^(c[f+4>>2]^c[f+8>>2]));b=o&k;k=c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]);c[g+8>>2]=~((c[f>>2]|c[f+8>>2])^(b^c[f+4>>2]&c[g+4>>2]));j=c[g+4>>2]&o;c[g+12>>2]=k^b;c[g>>2]=c[f>>2]^c[f+4>>2]^(c[g+8>>2]^j);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];j=f|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=f+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=f+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=f+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d+1|0;j=c[f>>2]&c[f+8>>2];b=~c[f+12>>2];k=c[f+4>>2]|j;o=c[f>>2]&c[f+4>>2];c[g+12>>2]=c[f>>2]&b^(c[f+8>>2]^k);m=k&c[g+12>>2];c[g+4>>2]=(c[f+12>>2]|o)^(c[f>>2]^(c[f+8>>2]|c[g+12>>2]));k=m|c[f+4>>2]^c[g+4>>2];c[g>>2]=c[f+8>>2]^o^(b|j^c[g+4>>2]);c[g+8>>2]=c[f>>2]^k;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];k=f|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=f+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=f+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=f+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d+1|0;k=c[f>>2]^c[f+4>>2];c[g+12>>2]=(c[f>>2]|c[f+12>>2])^(c[f+4>>2]^c[f+8>>2]);j=c[f>>2]^c[f+12>>2];b=c[f+4>>2]|c[f+8>>2];o=k&b;c[g+8>>2]=o^c[f+12>>2]&(c[f+8>>2]|c[g+12>>2]);k=c[f+8>>2]^c[f+12>>2];m=c[f+4>>2]&j;c[g>>2]=~(j^(b^o&c[g+8>>2]));c[g+4>>2]=k^(c[g>>2]^m);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];m=f|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=f+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=f+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=f+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d+1|0;m=c[f>>2]|c[f+12>>2];k=c[f+8>>2]^c[f+12>>2];o=c[f>>2]|~c[f+4>>2];b=c[f+4>>2]|c[f+12>>2]&(c[f>>2]^c[f+8>>2]);c[g+8>>2]=k^o;j=m&k^b;b=c[g+8>>2]^(m^j);m=c[f+4>>2]&c[f+12>>2];c[g+12>>2]=~j;c[g+4>>2]=m^b;c[g>>2]=c[f+8>>2]^o&(j|c[g+4>>2]);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];j=f|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=f+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=f+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=f+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d+1|0;j=c[f>>2]|c[f+8>>2];o=c[f>>2]^c[f+4>>2];b=c[f+12>>2]^j;c[g>>2]=o^b;m=c[f+8>>2]^c[g>>2];k=b^(c[f+4>>2]|m);c[g+4>>2]=(o|k)^j&(c[f+4>>2]^m);m=c[f>>2]|c[f+12>>2];j=c[f+4>>2]^(k^c[g+4>>2]);c[g+12>>2]=~k;c[g+8>>2]=m^j;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];j=f|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=f+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=f+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=f+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d+1|0;j=c[f>>2]|c[f+12>>2];m=(c[f>>2]^c[f+8>>2])&j;k=c[f+4>>2]|c[f>>2]&c[f+12>>2];o=c[f+12>>2]^m;b=c[f+8>>2]|c[f>>2]&c[f+4>>2];l=j^c[f+12>>2]&k;c[g+12>>2]=b^(c[f+4>>2]^o);j=c[f>>2]|o;o=c[f+4>>2]&(c[f+12>>2]|c[g+12>>2]);c[g+8>>2]=b^l;c[g>>2]=j^o;c[g+4>>2]=k^m;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];m=f|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=f+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=f+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=f+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d+1|0;m=c[f>>2]^(c[f+4>>2]|c[f+8>>2]);k=c[f+4>>2]^c[f+12>>2];o=c[f+12>>2]|m;j=c[f+12>>2]&(c[f>>2]|c[f+4>>2]);c[g+12>>2]=m^j;l=c[g+12>>2]&k;b=c[f+4>>2]&c[f+8>>2];n=c[f+8>>2]^j^k&o;j=c[f>>2]&o;c[g+8>>2]=(b|m)^l;c[g+4>>2]=j^(b|k^l);c[g>>2]=~n;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];n=f|0;c[n>>2]=c[n>>2]^c[h+(d<<4)>>2];n=f+4|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+4>>2];n=f+8|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+8>>2];n=f+12|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+12>>2];d=d+1|0;n=c[f+4>>2]^c[f+12>>2];l=c[f>>2]&n;k=l^(c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]));c[g>>2]=~k;b=c[f>>2]^n;j=c[f+12>>2]|c[g>>2];m=l|c[g>>2];l=n^(c[f+4>>2]|b);c[g+8>>2]=(c[f+4>>2]|k)^(b|c[f+12>>2]^j);c[g+4>>2]=b^j;c[g+12>>2]=m^l;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];l=f|0;c[l>>2]=c[l>>2]^c[h+(d<<4)>>2];l=f+4|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+4>>2];l=f+8|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+8>>2];l=f+12|0;c[l>>2]=c[l>>2]^c[h+(d<<4)+12>>2];d=d+1|0;l=c[f>>2]^c[f+12>>2];m=c[f+4>>2]|c[f+8>>2];c[g+4>>2]=~(c[f>>2]&c[f+12>>2]^(c[f+4>>2]^c[f+8>>2]));j=l&m;m=c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]);c[g+8>>2]=~((c[f>>2]|c[f+8>>2])^(j^c[f+4>>2]&c[g+4>>2]));b=c[g+4>>2]&l;c[g+12>>2]=m^j;c[g>>2]=c[f>>2]^c[f+4>>2]^(c[g+8>>2]^b);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];b=f|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=f+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=f+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=f+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d+1|0;b=c[f>>2]&c[f+8>>2];j=~c[f+12>>2];m=c[f+4>>2]|b;l=c[f>>2]&c[f+4>>2];c[g+12>>2]=c[f>>2]&j^(c[f+8>>2]^m);k=m&c[g+12>>2];c[g+4>>2]=(c[f+12>>2]|l)^(c[f>>2]^(c[f+8>>2]|c[g+12>>2]));m=k|c[f+4>>2]^c[g+4>>2];c[g>>2]=c[f+8>>2]^l^(j|b^c[g+4>>2]);c[g+8>>2]=c[f>>2]^m;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];m=f|0;c[m>>2]=c[m>>2]^c[h+(d<<4)>>2];m=f+4|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+4>>2];m=f+8|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+8>>2];m=f+12|0;c[m>>2]=c[m>>2]^c[h+(d<<4)+12>>2];d=d+1|0;m=c[f>>2]^c[f+4>>2];c[g+12>>2]=(c[f>>2]|c[f+12>>2])^(c[f+4>>2]^c[f+8>>2]);b=c[f>>2]^c[f+12>>2];j=c[f+4>>2]|c[f+8>>2];l=m&j;c[g+8>>2]=l^c[f+12>>2]&(c[f+8>>2]|c[g+12>>2]);m=c[f+8>>2]^c[f+12>>2];k=c[f+4>>2]&b;c[g>>2]=~(b^(j^l&c[g+8>>2]));c[g+4>>2]=m^(c[g>>2]^k);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];k=f|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=f+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=f+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=f+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d+1|0;k=c[f>>2]|c[f+12>>2];m=c[f+8>>2]^c[f+12>>2];l=c[f>>2]|~c[f+4>>2];j=c[f+4>>2]|c[f+12>>2]&(c[f>>2]^c[f+8>>2]);c[g+8>>2]=m^l;b=k&m^j;j=c[g+8>>2]^(k^b);k=c[f+4>>2]&c[f+12>>2];c[g+12>>2]=~b;c[g+4>>2]=k^j;c[g>>2]=c[f+8>>2]^l&(b|c[g+4>>2]);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];b=f|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=f+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=f+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=f+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d+1|0;b=c[f>>2]|c[f+8>>2];l=c[f>>2]^c[f+4>>2];j=c[f+12>>2]^b;c[g>>2]=l^j;k=c[f+8>>2]^c[g>>2];m=j^(c[f+4>>2]|k);c[g+4>>2]=(l|m)^b&(c[f+4>>2]^k);k=c[f>>2]|c[f+12>>2];b=c[f+4>>2]^(m^c[g+4>>2]);c[g+12>>2]=~m;c[g+8>>2]=k^b;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];b=f|0;c[b>>2]=c[b>>2]^c[h+(d<<4)>>2];b=f+4|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+4>>2];b=f+8|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+8>>2];b=f+12|0;c[b>>2]=c[b>>2]^c[h+(d<<4)+12>>2];d=d+1|0;b=c[f>>2]|c[f+12>>2];k=(c[f>>2]^c[f+8>>2])&b;m=c[f+4>>2]|c[f>>2]&c[f+12>>2];l=c[f+12>>2]^k;j=c[f+8>>2]|c[f>>2]&c[f+4>>2];n=b^c[f+12>>2]&m;c[g+12>>2]=j^(c[f+4>>2]^l);b=c[f>>2]|l;l=c[f+4>>2]&(c[f+12>>2]|c[g+12>>2]);c[g+8>>2]=j^n;c[g>>2]=b^l;c[g+4>>2]=m^k;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];k=f|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=f+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=f+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=f+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d+1|0;k=c[f>>2]^(c[f+4>>2]|c[f+8>>2]);m=c[f+4>>2]^c[f+12>>2];l=c[f+12>>2]|k;b=c[f+12>>2]&(c[f>>2]|c[f+4>>2]);c[g+12>>2]=k^b;n=c[g+12>>2]&m;j=c[f+4>>2]&c[f+8>>2];o=c[f+8>>2]^b^m&l;b=c[f>>2]&l;c[g+8>>2]=(j|k)^n;c[g+4>>2]=b^(j|m^n);c[g>>2]=~o;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];o=f|0;c[o>>2]=c[o>>2]^c[h+(d<<4)>>2];o=f+4|0;c[o>>2]=c[o>>2]^c[h+(d<<4)+4>>2];o=f+8|0;c[o>>2]=c[o>>2]^c[h+(d<<4)+8>>2];o=f+12|0;c[o>>2]=c[o>>2]^c[h+(d<<4)+12>>2];d=d+1|0;o=c[f+4>>2]^c[f+12>>2];n=c[f>>2]&o;m=n^(c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]));c[g>>2]=~m;j=c[f>>2]^o;b=c[f+12>>2]|c[g>>2];k=n|c[g>>2];n=o^(c[f+4>>2]|j);c[g+8>>2]=(c[f+4>>2]|m)^(j|c[f+12>>2]^b);c[g+4>>2]=j^b;c[g+12>>2]=k^n;c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];n=f|0;c[n>>2]=c[n>>2]^c[h+(d<<4)>>2];n=f+4|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+4>>2];n=f+8|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+8>>2];n=f+12|0;c[n>>2]=c[n>>2]^c[h+(d<<4)+12>>2];d=d+1|0;n=c[f>>2]^c[f+12>>2];k=c[f+4>>2]|c[f+8>>2];c[g+4>>2]=~(c[f>>2]&c[f+12>>2]^(c[f+4>>2]^c[f+8>>2]));b=n&k;k=c[f+8>>2]^(c[f+4>>2]|c[f+12>>2]);c[g+8>>2]=~((c[f>>2]|c[f+8>>2])^(b^c[f+4>>2]&c[g+4>>2]));j=c[g+4>>2]&n;c[g+12>>2]=k^b;c[g>>2]=c[f>>2]^c[f+4>>2]^(c[g+8>>2]^j);c[g>>2]=c[g>>2]<<13|(c[g>>2]|0)>>>19;c[g+8>>2]=c[g+8>>2]<<3|(c[g+8>>2]|0)>>>29;c[g+4>>2]=c[g+4>>2]^c[g>>2]^c[g+8>>2];c[g+12>>2]=c[g+12>>2]^c[g+8>>2]^c[g>>2]<<3;c[g+4>>2]=c[g+4>>2]<<1|(c[g+4>>2]|0)>>>31;c[g+12>>2]=c[g+12>>2]<<7|(c[g+12>>2]|0)>>>25;c[g>>2]=c[g>>2]^c[g+4>>2]^c[g+12>>2];c[g+8>>2]=c[g+8>>2]^c[g+12>>2]^c[g+4>>2]<<7;c[g>>2]=c[g>>2]<<5|(c[g>>2]|0)>>>27;c[g+8>>2]=c[g+8>>2]<<22|(c[g+8>>2]|0)>>>10;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];j=f|0;c[j>>2]=c[j>>2]^c[h+(d<<4)>>2];j=f+4|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+4>>2];j=f+8|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+8>>2];j=f+12|0;c[j>>2]=c[j>>2]^c[h+(d<<4)+12>>2];d=d+1|0;j=c[f>>2]&c[f+8>>2];b=~c[f+12>>2];k=c[f+4>>2]|j;n=c[f>>2]&c[f+4>>2];c[g+12>>2]=c[f>>2]&b^(c[f+8>>2]^k);m=k&c[g+12>>2];c[g+4>>2]=(c[f+12>>2]|n)^(c[f>>2]^(c[f+8>>2]|c[g+12>>2]));k=m|c[f+4>>2]^c[g+4>>2];c[g>>2]=c[f+8>>2]^n^(b|j^c[g+4>>2]);c[g+8>>2]=c[f>>2]^k;k=g|0;c[k>>2]=c[k>>2]^c[h+(d<<4)>>2];k=g+4|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+4>>2];k=g+8|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+8>>2];k=g+12|0;c[k>>2]=c[k>>2]^c[h+(d<<4)+12>>2];d=d+1|0;d=a;a=g;Ac(d|0,a|0,16)|0;i=e;return}function pL(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0;a=i;i=i+544|0;b=a|0;d=a+528|0;e=0;while(1){if((c[3320+(e*68|0)>>2]|0)==0){f=3708;break}pM(b,3324+(e*68|0)|0,c[3320+(e*68|0)>>2]|0);pK(b,3356+(e*68|0)|0,d|0);if((Af(d|0,3372+(e*68|0)|0,16)|0)!=0){g=c[3320+(e*68|0)>>2]|0;if((g|0)==16){f=3696;break}else if((g|0)==24){f=3697;break}else if((g|0)==32){f=3698;break}}pJ(b,3372+(e*68|0)|0,d|0);if((Af(d|0,3356+(e*68|0)|0,16)|0)!=0){g=c[3320+(e*68|0)>>2]|0;if((g|0)==32){f=3704;break}else if((g|0)==16){f=3702;break}else if((g|0)==24){f=3703;break}}e=e+1|0}if((f|0)==3704){h=55632;j=h;i=a;return j|0}else if((f|0)==3702){h=59080;j=h;i=a;return j|0}else if((f|0)==3696){h=63904;j=h;i=a;return j|0}else if((f|0)==3703){h=57224;j=h;i=a;return j|0}else if((f|0)==3697){h=62336;j=h;i=a;return j|0}else if((f|0)==3708){h=0;j=h;i=a;return j|0}else if((f|0)==3698){h=60904;j=h;i=a;return j|0}return 0}function pM(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;i=i+32|0;e=d|0;pN(b,c,e|0);pO(e|0,a|0);up(1088);i=d;return}function pN(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=b;b=d;d=b;f=a;a=e;Ac(d|0,f|0,a)|0;e=(e>>>0)/4|0;a=e;if((a|0)>=8){return}c[b+(a<<2)>>2]=1;a=a+1|0;while(1){if((a|0)>=8){break}c[b+(a<<2)>>2]=0;a=a+1|0}return}function pO(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+1088|0;e=d+560|0;f=a;a=b;b=d+32|0;g=0;while(1){if((g|0)>=8){break}c[b+(g-8<<2)>>2]=c[f+(g<<2)>>2];g=g+1|0}g=0;while(1){if((g|0)>=132){break}c[b+(g<<2)>>2]=(c[b+(g-8<<2)>>2]^c[b+(g-5<<2)>>2]^c[b+(g-3<<2)>>2]^c[b+(g-1<<2)>>2]^-1640531527^g)<<11|(c[b+(g-8<<2)>>2]^c[b+(g-5<<2)>>2]^c[b+(g-3<<2)>>2]^c[b+(g-1<<2)>>2]^-1640531527^g)>>>21;g=g+1|0}f=c[b>>2]|c[b+12>>2];h=(c[b>>2]^c[b+8>>2])&f;j=c[b+4>>2]|c[b>>2]&c[b+12>>2];k=c[b+12>>2]^h;l=c[b+8>>2]|c[b>>2]&c[b+4>>2];m=f^c[b+12>>2]&j;c[e+12>>2]=l^(c[b+4>>2]^k);f=c[b>>2]|k;k=c[b+4>>2]&(c[b+12>>2]|c[e+12>>2]);c[e+8>>2]=l^m;c[e>>2]=f^k;c[e+4>>2]=j^h;h=c[b+16>>2]|c[b+24>>2];j=c[b+16>>2]^c[b+20>>2];k=c[b+28>>2]^h;c[e+16>>2]=j^k;f=c[b+24>>2]^c[e+16>>2];m=k^(c[b+20>>2]|f);c[e+20>>2]=(j|m)^h&(c[b+20>>2]^f);f=c[b+16>>2]|c[b+28>>2];h=c[b+20>>2]^(m^c[e+20>>2]);c[e+28>>2]=~m;c[e+24>>2]=f^h;h=c[b+32>>2]|c[b+44>>2];f=c[b+40>>2]^c[b+44>>2];m=c[b+32>>2]|~c[b+36>>2];j=c[b+36>>2]|c[b+44>>2]&(c[b+32>>2]^c[b+40>>2]);c[e+40>>2]=f^m;k=h&f^j;j=c[e+40>>2]^(h^k);h=c[b+36>>2]&c[b+44>>2];c[e+44>>2]=~k;c[e+36>>2]=h^j;c[e+32>>2]=c[b+40>>2]^m&(k|c[e+36>>2]);k=c[b+48>>2]^c[b+52>>2];c[e+60>>2]=(c[b+48>>2]|c[b+60>>2])^(c[b+52>>2]^c[b+56>>2]);m=c[b+48>>2]^c[b+60>>2];j=c[b+52>>2]|c[b+56>>2];h=k&j;c[e+56>>2]=h^c[b+60>>2]&(c[b+56>>2]|c[e+60>>2]);k=c[b+56>>2]^c[b+60>>2];f=c[b+52>>2]&m;c[e+48>>2]=~(m^(j^h&c[e+56>>2]));c[e+52>>2]=k^(c[e+48>>2]^f);f=c[b+64>>2]&c[b+72>>2];k=~c[b+76>>2];h=c[b+68>>2]|f;j=c[b+64>>2]&c[b+68>>2];c[e+76>>2]=c[b+64>>2]&k^(c[b+72>>2]^h);m=h&c[e+76>>2];c[e+68>>2]=(c[b+76>>2]|j)^(c[b+64>>2]^(c[b+72>>2]|c[e+76>>2]));h=m|c[b+68>>2]^c[e+68>>2];c[e+64>>2]=c[b+72>>2]^j^(k|f^c[e+68>>2]);c[e+72>>2]=c[b+64>>2]^h;h=c[b+80>>2]^c[b+92>>2];f=c[b+84>>2]|c[b+88>>2];c[e+84>>2]=~(c[b+80>>2]&c[b+92>>2]^(c[b+84>>2]^c[b+88>>2]));k=h&f;f=c[b+88>>2]^(c[b+84>>2]|c[b+92>>2]);c[e+88>>2]=~((c[b+80>>2]|c[b+88>>2])^(k^c[b+84>>2]&c[e+84>>2]));j=c[e+84>>2]&h;c[e+92>>2]=f^k;c[e+80>>2]=c[b+80>>2]^c[b+84>>2]^(c[e+88>>2]^j);j=c[b+100>>2]^c[b+108>>2];k=c[b+96>>2]&j;f=k^(c[b+104>>2]^(c[b+100>>2]|c[b+108>>2]));c[e+96>>2]=~f;h=c[b+96>>2]^j;m=c[b+108>>2]|c[e+96>>2];l=k|c[e+96>>2];k=j^(c[b+100>>2]|h);c[e+104>>2]=(c[b+100>>2]|f)^(h|c[b+108>>2]^m);c[e+100>>2]=h^m;c[e+108>>2]=l^k;k=c[b+112>>2]^(c[b+116>>2]|c[b+120>>2]);l=c[b+116>>2]^c[b+124>>2];m=c[b+124>>2]|k;h=c[b+124>>2]&(c[b+112>>2]|c[b+116>>2]);c[e+124>>2]=k^h;f=c[e+124>>2]&l;j=c[b+116>>2]&c[b+120>>2];n=c[b+120>>2]^h^l&m;h=c[b+112>>2]&m;c[e+120>>2]=(j|k)^f;c[e+116>>2]=h^(j|l^f);c[e+112>>2]=~n;n=c[b+128>>2]|c[b+140>>2];f=(c[b+128>>2]^c[b+136>>2])&n;l=c[b+132>>2]|c[b+128>>2]&c[b+140>>2];j=c[b+140>>2]^f;h=c[b+136>>2]|c[b+128>>2]&c[b+132>>2];k=n^c[b+140>>2]&l;c[e+140>>2]=h^(c[b+132>>2]^j);n=c[b+128>>2]|j;j=c[b+132>>2]&(c[b+140>>2]|c[e+140>>2]);c[e+136>>2]=h^k;c[e+128>>2]=n^j;c[e+132>>2]=l^f;f=c[b+144>>2]|c[b+152>>2];l=c[b+144>>2]^c[b+148>>2];j=c[b+156>>2]^f;c[e+144>>2]=l^j;n=c[b+152>>2]^c[e+144>>2];k=j^(c[b+148>>2]|n);c[e+148>>2]=(l|k)^f&(c[b+148>>2]^n);n=c[b+144>>2]|c[b+156>>2];f=c[b+148>>2]^(k^c[e+148>>2]);c[e+156>>2]=~k;c[e+152>>2]=n^f;f=c[b+160>>2]|c[b+172>>2];n=c[b+168>>2]^c[b+172>>2];k=c[b+160>>2]|~c[b+164>>2];l=c[b+164>>2]|c[b+172>>2]&(c[b+160>>2]^c[b+168>>2]);c[e+168>>2]=n^k;j=f&n^l;l=c[e+168>>2]^(f^j);f=c[b+164>>2]&c[b+172>>2];c[e+172>>2]=~j;c[e+164>>2]=f^l;c[e+160>>2]=c[b+168>>2]^k&(j|c[e+164>>2]);j=c[b+176>>2]^c[b+180>>2];c[e+188>>2]=(c[b+176>>2]|c[b+188>>2])^(c[b+180>>2]^c[b+184>>2]);k=c[b+176>>2]^c[b+188>>2];l=c[b+180>>2]|c[b+184>>2];f=j&l;c[e+184>>2]=f^c[b+188>>2]&(c[b+184>>2]|c[e+188>>2]);j=c[b+184>>2]^c[b+188>>2];n=c[b+180>>2]&k;c[e+176>>2]=~(k^(l^f&c[e+184>>2]));c[e+180>>2]=j^(c[e+176>>2]^n);n=c[b+192>>2]&c[b+200>>2];j=~c[b+204>>2];f=c[b+196>>2]|n;l=c[b+192>>2]&c[b+196>>2];c[e+204>>2]=c[b+192>>2]&j^(c[b+200>>2]^f);k=f&c[e+204>>2];c[e+196>>2]=(c[b+204>>2]|l)^(c[b+192>>2]^(c[b+200>>2]|c[e+204>>2]));f=k|c[b+196>>2]^c[e+196>>2];c[e+192>>2]=c[b+200>>2]^l^(j|n^c[e+196>>2]);c[e+200>>2]=c[b+192>>2]^f;f=c[b+208>>2]^c[b+220>>2];n=c[b+212>>2]|c[b+216>>2];c[e+212>>2]=~(c[b+208>>2]&c[b+220>>2]^(c[b+212>>2]^c[b+216>>2]));j=f&n;n=c[b+216>>2]^(c[b+212>>2]|c[b+220>>2]);c[e+216>>2]=~((c[b+208>>2]|c[b+216>>2])^(j^c[b+212>>2]&c[e+212>>2]));l=c[e+212>>2]&f;c[e+220>>2]=n^j;c[e+208>>2]=c[b+208>>2]^c[b+212>>2]^(c[e+216>>2]^l);l=c[b+228>>2]^c[b+236>>2];j=c[b+224>>2]&l;n=j^(c[b+232>>2]^(c[b+228>>2]|c[b+236>>2]));c[e+224>>2]=~n;f=c[b+224>>2]^l;k=c[b+236>>2]|c[e+224>>2];h=j|c[e+224>>2];j=l^(c[b+228>>2]|f);c[e+232>>2]=(c[b+228>>2]|n)^(f|c[b+236>>2]^k);c[e+228>>2]=f^k;c[e+236>>2]=h^j;j=c[b+240>>2]^(c[b+244>>2]|c[b+248>>2]);h=c[b+244>>2]^c[b+252>>2];k=c[b+252>>2]|j;f=c[b+252>>2]&(c[b+240>>2]|c[b+244>>2]);c[e+252>>2]=j^f;n=c[e+252>>2]&h;l=c[b+244>>2]&c[b+248>>2];m=c[b+248>>2]^f^h&k;f=c[b+240>>2]&k;c[e+248>>2]=(l|j)^n;c[e+244>>2]=f^(l|h^n);c[e+240>>2]=~m;m=c[b+256>>2]|c[b+268>>2];n=(c[b+256>>2]^c[b+264>>2])&m;h=c[b+260>>2]|c[b+256>>2]&c[b+268>>2];l=c[b+268>>2]^n;f=c[b+264>>2]|c[b+256>>2]&c[b+260>>2];j=m^c[b+268>>2]&h;c[e+268>>2]=f^(c[b+260>>2]^l);m=c[b+256>>2]|l;l=c[b+260>>2]&(c[b+268>>2]|c[e+268>>2]);c[e+264>>2]=f^j;c[e+256>>2]=m^l;c[e+260>>2]=h^n;n=c[b+272>>2]|c[b+280>>2];h=c[b+272>>2]^c[b+276>>2];l=c[b+284>>2]^n;c[e+272>>2]=h^l;m=c[b+280>>2]^c[e+272>>2];j=l^(c[b+276>>2]|m);c[e+276>>2]=(h|j)^n&(c[b+276>>2]^m);m=c[b+272>>2]|c[b+284>>2];n=c[b+276>>2]^(j^c[e+276>>2]);c[e+284>>2]=~j;c[e+280>>2]=m^n;n=c[b+288>>2]|c[b+300>>2];m=c[b+296>>2]^c[b+300>>2];j=c[b+288>>2]|~c[b+292>>2];h=c[b+292>>2]|c[b+300>>2]&(c[b+288>>2]^c[b+296>>2]);c[e+296>>2]=m^j;l=n&m^h;h=c[e+296>>2]^(n^l);n=c[b+292>>2]&c[b+300>>2];c[e+300>>2]=~l;c[e+292>>2]=n^h;c[e+288>>2]=c[b+296>>2]^j&(l|c[e+292>>2]);l=c[b+304>>2]^c[b+308>>2];c[e+316>>2]=(c[b+304>>2]|c[b+316>>2])^(c[b+308>>2]^c[b+312>>2]);j=c[b+304>>2]^c[b+316>>2];h=c[b+308>>2]|c[b+312>>2];n=l&h;c[e+312>>2]=n^c[b+316>>2]&(c[b+312>>2]|c[e+316>>2]);l=c[b+312>>2]^c[b+316>>2];m=c[b+308>>2]&j;c[e+304>>2]=~(j^(h^n&c[e+312>>2]));c[e+308>>2]=l^(c[e+304>>2]^m);m=c[b+320>>2]&c[b+328>>2];l=~c[b+332>>2];n=c[b+324>>2]|m;h=c[b+320>>2]&c[b+324>>2];c[e+332>>2]=c[b+320>>2]&l^(c[b+328>>2]^n);j=n&c[e+332>>2];c[e+324>>2]=(c[b+332>>2]|h)^(c[b+320>>2]^(c[b+328>>2]|c[e+332>>2]));n=j|c[b+324>>2]^c[e+324>>2];c[e+320>>2]=c[b+328>>2]^h^(l|m^c[e+324>>2]);c[e+328>>2]=c[b+320>>2]^n;n=c[b+336>>2]^c[b+348>>2];m=c[b+340>>2]|c[b+344>>2];c[e+340>>2]=~(c[b+336>>2]&c[b+348>>2]^(c[b+340>>2]^c[b+344>>2]));l=n&m;m=c[b+344>>2]^(c[b+340>>2]|c[b+348>>2]);c[e+344>>2]=~((c[b+336>>2]|c[b+344>>2])^(l^c[b+340>>2]&c[e+340>>2]));h=c[e+340>>2]&n;c[e+348>>2]=m^l;c[e+336>>2]=c[b+336>>2]^c[b+340>>2]^(c[e+344>>2]^h);h=c[b+356>>2]^c[b+364>>2];l=c[b+352>>2]&h;m=l^(c[b+360>>2]^(c[b+356>>2]|c[b+364>>2]));c[e+352>>2]=~m;n=c[b+352>>2]^h;j=c[b+364>>2]|c[e+352>>2];f=l|c[e+352>>2];l=h^(c[b+356>>2]|n);c[e+360>>2]=(c[b+356>>2]|m)^(n|c[b+364>>2]^j);c[e+356>>2]=n^j;c[e+364>>2]=f^l;l=c[b+368>>2]^(c[b+372>>2]|c[b+376>>2]);f=c[b+372>>2]^c[b+380>>2];j=c[b+380>>2]|l;n=c[b+380>>2]&(c[b+368>>2]|c[b+372>>2]);c[e+380>>2]=l^n;m=c[e+380>>2]&f;h=c[b+372>>2]&c[b+376>>2];k=c[b+376>>2]^n^f&j;n=c[b+368>>2]&j;c[e+376>>2]=(h|l)^m;c[e+372>>2]=n^(h|f^m);c[e+368>>2]=~k;k=c[b+384>>2]|c[b+396>>2];m=(c[b+384>>2]^c[b+392>>2])&k;f=c[b+388>>2]|c[b+384>>2]&c[b+396>>2];h=c[b+396>>2]^m;n=c[b+392>>2]|c[b+384>>2]&c[b+388>>2];l=k^c[b+396>>2]&f;c[e+396>>2]=n^(c[b+388>>2]^h);k=c[b+384>>2]|h;h=c[b+388>>2]&(c[b+396>>2]|c[e+396>>2]);c[e+392>>2]=n^l;c[e+384>>2]=k^h;c[e+388>>2]=f^m;m=c[b+400>>2]|c[b+408>>2];f=c[b+400>>2]^c[b+404>>2];h=c[b+412>>2]^m;c[e+400>>2]=f^h;k=c[b+408>>2]^c[e+400>>2];l=h^(c[b+404>>2]|k);c[e+404>>2]=(f|l)^m&(c[b+404>>2]^k);k=c[b+400>>2]|c[b+412>>2];m=c[b+404>>2]^(l^c[e+404>>2]);c[e+412>>2]=~l;c[e+408>>2]=k^m;m=c[b+416>>2]|c[b+428>>2];k=c[b+424>>2]^c[b+428>>2];l=c[b+416>>2]|~c[b+420>>2];f=c[b+420>>2]|c[b+428>>2]&(c[b+416>>2]^c[b+424>>2]);c[e+424>>2]=k^l;h=m&k^f;f=c[e+424>>2]^(m^h);m=c[b+420>>2]&c[b+428>>2];c[e+428>>2]=~h;c[e+420>>2]=m^f;c[e+416>>2]=c[b+424>>2]^l&(h|c[e+420>>2]);h=c[b+432>>2]^c[b+436>>2];c[e+444>>2]=(c[b+432>>2]|c[b+444>>2])^(c[b+436>>2]^c[b+440>>2]);l=c[b+432>>2]^c[b+444>>2];f=c[b+436>>2]|c[b+440>>2];m=h&f;c[e+440>>2]=m^c[b+444>>2]&(c[b+440>>2]|c[e+444>>2]);h=c[b+440>>2]^c[b+444>>2];k=c[b+436>>2]&l;c[e+432>>2]=~(l^(f^m&c[e+440>>2]));c[e+436>>2]=h^(c[e+432>>2]^k);k=c[b+448>>2]&c[b+456>>2];h=~c[b+460>>2];m=c[b+452>>2]|k;f=c[b+448>>2]&c[b+452>>2];c[e+460>>2]=c[b+448>>2]&h^(c[b+456>>2]^m);l=m&c[e+460>>2];c[e+452>>2]=(c[b+460>>2]|f)^(c[b+448>>2]^(c[b+456>>2]|c[e+460>>2]));m=l|c[b+452>>2]^c[e+452>>2];c[e+448>>2]=c[b+456>>2]^f^(h|k^c[e+452>>2]);c[e+456>>2]=c[b+448>>2]^m;m=c[b+464>>2]^c[b+476>>2];k=c[b+468>>2]|c[b+472>>2];c[e+468>>2]=~(c[b+464>>2]&c[b+476>>2]^(c[b+468>>2]^c[b+472>>2]));h=m&k;k=c[b+472>>2]^(c[b+468>>2]|c[b+476>>2]);c[e+472>>2]=~((c[b+464>>2]|c[b+472>>2])^(h^c[b+468>>2]&c[e+468>>2]));f=c[e+468>>2]&m;c[e+476>>2]=k^h;c[e+464>>2]=c[b+464>>2]^c[b+468>>2]^(c[e+472>>2]^f);f=c[b+484>>2]^c[b+492>>2];h=c[b+480>>2]&f;k=h^(c[b+488>>2]^(c[b+484>>2]|c[b+492>>2]));c[e+480>>2]=~k;m=c[b+480>>2]^f;l=c[b+492>>2]|c[e+480>>2];n=h|c[e+480>>2];h=f^(c[b+484>>2]|m);c[e+488>>2]=(c[b+484>>2]|k)^(m|c[b+492>>2]^l);c[e+484>>2]=m^l;c[e+492>>2]=n^h;h=c[b+496>>2]^(c[b+500>>2]|c[b+504>>2]);n=c[b+500>>2]^c[b+508>>2];l=c[b+508>>2]|h;m=c[b+508>>2]&(c[b+496>>2]|c[b+500>>2]);c[e+508>>2]=h^m;k=c[e+508>>2]&n;f=c[b+500>>2]&c[b+504>>2];j=c[b+504>>2]^m^n&l;m=c[b+496>>2]&l;c[e+504>>2]=(f|h)^k;c[e+500>>2]=m^(f|n^k);c[e+496>>2]=~j;j=c[b+512>>2]|c[b+524>>2];k=(c[b+512>>2]^c[b+520>>2])&j;n=c[b+516>>2]|c[b+512>>2]&c[b+524>>2];f=c[b+524>>2]^k;m=c[b+520>>2]|c[b+512>>2]&c[b+516>>2];h=j^c[b+524>>2]&n;c[e+524>>2]=m^(c[b+516>>2]^f);j=c[b+512>>2]|f;f=c[b+516>>2]&(c[b+524>>2]|c[e+524>>2]);c[e+520>>2]=m^h;c[e+512>>2]=j^f;c[e+516>>2]=n^k;g=0;while(1){if((g|0)>=33){break}k=0;while(1){if((k|0)>=4){break}c[a+(g<<4)+(k<<2)>>2]=c[e+((g<<2)+k<<2)>>2];k=k+1|0}g=g+1|0}i=d;return}function pP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;i=i+96|0;e=d|0;pQ(e);pR(e,b,c);pS(e);c=a;a=e+24|0;Ac(c|0,a|0,20)|0;i=d;return}function pQ(a){a=a|0;var b=0;b=a;c[b>>2]=1732584193;c[b+4>>2]=-271733879;c[b+8>>2]=-1732584194;c[b+12>>2]=271733878;c[b+16>>2]=-1009589776;c[b+20>>2]=0;c[b+88>>2]=0;return}function pR(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=e;e=d;d=b;if((c[d+88>>2]|0)==64){pW(d,d+24|0,1);up(104);c[d+88>>2]=0;b=d+20|0;c[b>>2]=(c[b>>2]|0)+1}if((e|0)==0){return}do{if((c[d+88>>2]|0)!=0){while(1){if((f|0)!=0){g=(c[d+88>>2]|0)<64}else{g=0}if(!g){break}b=e;e=b+1|0;h=a[b]|0;b=d+88|0;i=c[b>>2]|0;c[b>>2]=i+1;a[d+24+i|0]=h;f=f-1|0}pR(d,0,0);if((f|0)!=0){break}return}}while(0);g=(f>>>0)/64|0;if((g|0)!=0){pW(d,e,g);c[d+88>>2]=0;h=d+20|0;c[h>>2]=(c[h>>2]|0)+g;f=f-(g<<6)|0;e=e+(g<<6)|0}up(104);while(1){if((f|0)!=0){j=(c[d+88>>2]|0)<64}else{j=0}if(!j){break}g=e;e=g+1|0;h=a[g]|0;g=d+88|0;i=c[g>>2]|0;c[g>>2]=i+1;a[d+24+i|0]=h;f=f-1|0}return}function pS(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;pR(d,0,0);b=c[d+20>>2]|0;e=b<<6;f=b>>>26;b=e;g=e+(c[d+88>>2]|0)|0;e=g;if(g>>>0<b>>>0){f=f+1|0}b=e;e=e<<3;f=f<<3;f=f|b>>>29;if((c[d+88>>2]|0)<56){b=d+88|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+24+g|0]=-128;while(1){if((c[d+88>>2]|0)>=56){break}g=d+88|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+24+b|0]=0}}else{b=d+88|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+24+g|0]=-128;while(1){if((c[d+88>>2]|0)>=64){break}g=d+88|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+24+b|0]=0}pR(d,0,0);Ae(d+24|0,0,56)}a[d+80|0]=f>>>24&255;a[d+81|0]=f>>>16&255;a[d+82|0]=f>>>8&255;a[d+83|0]=f&255;a[d+84|0]=e>>>24&255;a[d+85|0]=e>>>16&255;a[d+86|0]=e>>>8&255;a[d+87|0]=e&255;pW(d,d+24|0,1);up(104);e=d+24|0;f=e;e=f+1|0;a[f]=(c[d>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d>>2]&255;f=e;e=f+1|0;a[f]=(c[d+4>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+4>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+4>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+4>>2]&255;f=e;e=f+1|0;a[f]=(c[d+8>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+8>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+8>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+8>>2]&255;f=e;e=f+1|0;a[f]=(c[d+12>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+12>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+12>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+12>>2]&255;f=e;e=f+1|0;a[f]=(c[d+16>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+16>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+16>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+16>>2]&255;return}function pT(a){a=a|0;return a+24|0}function pU(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((a|0)==2){d=pV(b,c)|0;e=d;return e|0}else{d=5;e=d;return e|0}return 0}function pV(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=b;b=74712;d=xp(2,0,69520,3,66400,20)|0;L91:do{if((d|0)==0){do{if((a|0)!=0){b=63856;d=xp(2,0,62256,56,60872,20)|0;if((d|0)!=0){break L91}b=59056;d=xp(2,1,0,0,57184,20)|0;if((d|0)!=0){break L91}else{break}}}while(0);e=0;f=e;return f|0}}while(0);if((c|0)!=0){cP[c&15](55608,2,b,d)}e=50;f=e;return f|0}function pW(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+64|0;g=f|0;h=b;b=d;d=e;while(1){if((d|0)==0){break}e=0;j=g|0;while(1){if((e|0)>=16){break}k=b;b=k+1|0;a[j+3|0]=a[k]|0;k=b;b=k+1|0;a[j+2|0]=a[k]|0;k=b;b=k+1|0;a[j+1|0]=a[k]|0;k=b;b=k+1|0;a[j|0]=a[k]|0;e=e+1|0;j=j+4|0}j=c[h>>2]|0;e=c[h+4>>2]|0;k=c[h+8>>2]|0;l=c[h+12>>2]|0;m=c[h+16>>2]|0;m=m+((j<<5|j>>>27)+(l^e&(k^l))+1518500249+(c[g>>2]|0))|0;e=e<<30|e>>>2;l=l+((m<<5|m>>>27)+(k^j&(e^k))+1518500249+(c[g+4>>2]|0))|0;j=j<<30|j>>>2;k=k+((l<<5|l>>>27)+(e^m&(j^e))+1518500249+(c[g+8>>2]|0))|0;m=m<<30|m>>>2;e=e+((k<<5|k>>>27)+(j^l&(m^j))+1518500249+(c[g+12>>2]|0))|0;l=l<<30|l>>>2;j=j+((e<<5|e>>>27)+(m^k&(l^m))+1518500249+(c[g+16>>2]|0))|0;k=k<<30|k>>>2;m=m+((j<<5|j>>>27)+(l^e&(k^l))+1518500249+(c[g+20>>2]|0))|0;e=e<<30|e>>>2;l=l+((m<<5|m>>>27)+(k^j&(e^k))+1518500249+(c[g+24>>2]|0))|0;j=j<<30|j>>>2;k=k+((l<<5|l>>>27)+(e^m&(j^e))+1518500249+(c[g+28>>2]|0))|0;m=m<<30|m>>>2;e=e+((k<<5|k>>>27)+(j^l&(m^j))+1518500249+(c[g+32>>2]|0))|0;l=l<<30|l>>>2;j=j+((e<<5|e>>>27)+(m^k&(l^m))+1518500249+(c[g+36>>2]|0))|0;k=k<<30|k>>>2;m=m+((j<<5|j>>>27)+(l^e&(k^l))+1518500249+(c[g+40>>2]|0))|0;e=e<<30|e>>>2;l=l+((m<<5|m>>>27)+(k^j&(e^k))+1518500249+(c[g+44>>2]|0))|0;j=j<<30|j>>>2;k=k+((l<<5|l>>>27)+(e^m&(j^e))+1518500249+(c[g+48>>2]|0))|0;m=m<<30|m>>>2;e=e+((k<<5|k>>>27)+(j^l&(m^j))+1518500249+(c[g+52>>2]|0))|0;l=l<<30|l>>>2;j=j+((e<<5|e>>>27)+(m^k&(l^m))+1518500249+(c[g+56>>2]|0))|0;k=k<<30|k>>>2;m=m+((j<<5|j>>>27)+(l^e&(k^l))+1518500249+(c[g+60>>2]|0))|0;e=e<<30|e>>>2;n=c[g>>2]^c[g+8>>2]^c[g+32>>2]^c[g+52>>2];o=n<<1|n>>>31;c[g>>2]=o;l=l+((m<<5|m>>>27)+(k^j&(e^k))+1518500249+o)|0;j=j<<30|j>>>2;n=c[g+4>>2]^c[g+12>>2]^c[g+36>>2]^c[g+56>>2];o=n<<1|n>>>31;c[g+4>>2]=o;k=k+((l<<5|l>>>27)+(e^m&(j^e))+1518500249+o)|0;m=m<<30|m>>>2;n=c[g+8>>2]^c[g+16>>2]^c[g+40>>2]^c[g+60>>2];o=n<<1|n>>>31;c[g+8>>2]=o;e=e+((k<<5|k>>>27)+(j^l&(m^j))+1518500249+o)|0;l=l<<30|l>>>2;n=c[g+12>>2]^c[g+20>>2]^c[g+44>>2]^c[g>>2];o=n<<1|n>>>31;c[g+12>>2]=o;j=j+((e<<5|e>>>27)+(m^k&(l^m))+1518500249+o)|0;k=k<<30|k>>>2;n=c[g+16>>2]^c[g+24>>2]^c[g+48>>2]^c[g+4>>2];o=n<<1|n>>>31;c[g+16>>2]=o;m=m+((j<<5|j>>>27)+(e^k^l)+1859775393+o)|0;e=e<<30|e>>>2;n=c[g+20>>2]^c[g+28>>2]^c[g+52>>2]^c[g+8>>2];o=n<<1|n>>>31;c[g+20>>2]=o;l=l+((m<<5|m>>>27)+(j^e^k)+1859775393+o)|0;j=j<<30|j>>>2;n=c[g+24>>2]^c[g+32>>2]^c[g+56>>2]^c[g+12>>2];o=n<<1|n>>>31;c[g+24>>2]=o;k=k+((l<<5|l>>>27)+(m^j^e)+1859775393+o)|0;m=m<<30|m>>>2;n=c[g+28>>2]^c[g+36>>2]^c[g+60>>2]^c[g+16>>2];o=n<<1|n>>>31;c[g+28>>2]=o;e=e+((k<<5|k>>>27)+(l^m^j)+1859775393+o)|0;l=l<<30|l>>>2;n=c[g+32>>2]^c[g+40>>2]^c[g>>2]^c[g+20>>2];o=n<<1|n>>>31;c[g+32>>2]=o;j=j+((e<<5|e>>>27)+(k^l^m)+1859775393+o)|0;k=k<<30|k>>>2;n=c[g+36>>2]^c[g+44>>2]^c[g+4>>2]^c[g+24>>2];o=n<<1|n>>>31;c[g+36>>2]=o;m=m+((j<<5|j>>>27)+(e^k^l)+1859775393+o)|0;e=e<<30|e>>>2;n=c[g+40>>2]^c[g+48>>2]^c[g+8>>2]^c[g+28>>2];o=n<<1|n>>>31;c[g+40>>2]=o;l=l+((m<<5|m>>>27)+(j^e^k)+1859775393+o)|0;j=j<<30|j>>>2;n=c[g+44>>2]^c[g+52>>2]^c[g+12>>2]^c[g+32>>2];o=n<<1|n>>>31;c[g+44>>2]=o;k=k+((l<<5|l>>>27)+(m^j^e)+1859775393+o)|0;m=m<<30|m>>>2;n=c[g+48>>2]^c[g+56>>2]^c[g+16>>2]^c[g+36>>2];o=n<<1|n>>>31;c[g+48>>2]=o;e=e+((k<<5|k>>>27)+(l^m^j)+1859775393+o)|0;l=l<<30|l>>>2;n=c[g+52>>2]^c[g+60>>2]^c[g+20>>2]^c[g+40>>2];o=n<<1|n>>>31;c[g+52>>2]=o;j=j+((e<<5|e>>>27)+(k^l^m)+1859775393+o)|0;k=k<<30|k>>>2;n=c[g+56>>2]^c[g>>2]^c[g+24>>2]^c[g+44>>2];o=n<<1|n>>>31;c[g+56>>2]=o;m=m+((j<<5|j>>>27)+(e^k^l)+1859775393+o)|0;e=e<<30|e>>>2;n=c[g+60>>2]^c[g+4>>2]^c[g+28>>2]^c[g+48>>2];o=n<<1|n>>>31;c[g+60>>2]=o;l=l+((m<<5|m>>>27)+(j^e^k)+1859775393+o)|0;j=j<<30|j>>>2;n=c[g>>2]^c[g+8>>2]^c[g+32>>2]^c[g+52>>2];o=n<<1|n>>>31;c[g>>2]=o;k=k+((l<<5|l>>>27)+(m^j^e)+1859775393+o)|0;m=m<<30|m>>>2;n=c[g+4>>2]^c[g+12>>2]^c[g+36>>2]^c[g+56>>2];o=n<<1|n>>>31;c[g+4>>2]=o;e=e+((k<<5|k>>>27)+(l^m^j)+1859775393+o)|0;l=l<<30|l>>>2;n=c[g+8>>2]^c[g+16>>2]^c[g+40>>2]^c[g+60>>2];o=n<<1|n>>>31;c[g+8>>2]=o;j=j+((e<<5|e>>>27)+(k^l^m)+1859775393+o)|0;k=k<<30|k>>>2;n=c[g+12>>2]^c[g+20>>2]^c[g+44>>2]^c[g>>2];o=n<<1|n>>>31;c[g+12>>2]=o;m=m+((j<<5|j>>>27)+(e^k^l)+1859775393+o)|0;e=e<<30|e>>>2;n=c[g+16>>2]^c[g+24>>2]^c[g+48>>2]^c[g+4>>2];o=n<<1|n>>>31;c[g+16>>2]=o;l=l+((m<<5|m>>>27)+(j^e^k)+1859775393+o)|0;j=j<<30|j>>>2;n=c[g+20>>2]^c[g+28>>2]^c[g+52>>2]^c[g+8>>2];o=n<<1|n>>>31;c[g+20>>2]=o;k=k+((l<<5|l>>>27)+(m^j^e)+1859775393+o)|0;m=m<<30|m>>>2;n=c[g+24>>2]^c[g+32>>2]^c[g+56>>2]^c[g+12>>2];o=n<<1|n>>>31;c[g+24>>2]=o;e=e+((k<<5|k>>>27)+(l^m^j)+1859775393+o)|0;l=l<<30|l>>>2;n=c[g+28>>2]^c[g+36>>2]^c[g+60>>2]^c[g+16>>2];o=n<<1|n>>>31;c[g+28>>2]=o;j=j+((e<<5|e>>>27)+(k^l^m)+1859775393+o)|0;k=k<<30|k>>>2;n=c[g+32>>2]^c[g+40>>2]^c[g>>2]^c[g+20>>2];o=n<<1|n>>>31;c[g+32>>2]=o;m=m+((j<<5|j>>>27)+(e&k|l&(e|k))-1894007588+o)|0;e=e<<30|e>>>2;n=c[g+36>>2]^c[g+44>>2]^c[g+4>>2]^c[g+24>>2];o=n<<1|n>>>31;c[g+36>>2]=o;l=l+((m<<5|m>>>27)+(j&e|k&(j|e))-1894007588+o)|0;j=j<<30|j>>>2;n=c[g+40>>2]^c[g+48>>2]^c[g+8>>2]^c[g+28>>2];o=n<<1|n>>>31;c[g+40>>2]=o;k=k+((l<<5|l>>>27)+(m&j|e&(m|j))-1894007588+o)|0;m=m<<30|m>>>2;n=c[g+44>>2]^c[g+52>>2]^c[g+12>>2]^c[g+32>>2];o=n<<1|n>>>31;c[g+44>>2]=o;e=e+((k<<5|k>>>27)+(l&m|j&(l|m))-1894007588+o)|0;l=l<<30|l>>>2;n=c[g+48>>2]^c[g+56>>2]^c[g+16>>2]^c[g+36>>2];o=n<<1|n>>>31;c[g+48>>2]=o;j=j+((e<<5|e>>>27)+(k&l|m&(k|l))-1894007588+o)|0;k=k<<30|k>>>2;n=c[g+52>>2]^c[g+60>>2]^c[g+20>>2]^c[g+40>>2];o=n<<1|n>>>31;c[g+52>>2]=o;m=m+((j<<5|j>>>27)+(e&k|l&(e|k))-1894007588+o)|0;e=e<<30|e>>>2;n=c[g+56>>2]^c[g>>2]^c[g+24>>2]^c[g+44>>2];o=n<<1|n>>>31;c[g+56>>2]=o;l=l+((m<<5|m>>>27)+(j&e|k&(j|e))-1894007588+o)|0;j=j<<30|j>>>2;n=c[g+60>>2]^c[g+4>>2]^c[g+28>>2]^c[g+48>>2];o=n<<1|n>>>31;c[g+60>>2]=o;k=k+((l<<5|l>>>27)+(m&j|e&(m|j))-1894007588+o)|0;m=m<<30|m>>>2;n=c[g>>2]^c[g+8>>2]^c[g+32>>2]^c[g+52>>2];o=n<<1|n>>>31;c[g>>2]=o;e=e+((k<<5|k>>>27)+(l&m|j&(l|m))-1894007588+o)|0;l=l<<30|l>>>2;n=c[g+4>>2]^c[g+12>>2]^c[g+36>>2]^c[g+56>>2];o=n<<1|n>>>31;c[g+4>>2]=o;j=j+((e<<5|e>>>27)+(k&l|m&(k|l))-1894007588+o)|0;k=k<<30|k>>>2;n=c[g+8>>2]^c[g+16>>2]^c[g+40>>2]^c[g+60>>2];o=n<<1|n>>>31;c[g+8>>2]=o;m=m+((j<<5|j>>>27)+(e&k|l&(e|k))-1894007588+o)|0;e=e<<30|e>>>2;n=c[g+12>>2]^c[g+20>>2]^c[g+44>>2]^c[g>>2];o=n<<1|n>>>31;c[g+12>>2]=o;l=l+((m<<5|m>>>27)+(j&e|k&(j|e))-1894007588+o)|0;j=j<<30|j>>>2;n=c[g+16>>2]^c[g+24>>2]^c[g+48>>2]^c[g+4>>2];o=n<<1|n>>>31;c[g+16>>2]=o;k=k+((l<<5|l>>>27)+(m&j|e&(m|j))-1894007588+o)|0;m=m<<30|m>>>2;n=c[g+20>>2]^c[g+28>>2]^c[g+52>>2]^c[g+8>>2];o=n<<1|n>>>31;c[g+20>>2]=o;e=e+((k<<5|k>>>27)+(l&m|j&(l|m))-1894007588+o)|0;l=l<<30|l>>>2;n=c[g+24>>2]^c[g+32>>2]^c[g+56>>2]^c[g+12>>2];o=n<<1|n>>>31;c[g+24>>2]=o;j=j+((e<<5|e>>>27)+(k&l|m&(k|l))-1894007588+o)|0;k=k<<30|k>>>2;n=c[g+28>>2]^c[g+36>>2]^c[g+60>>2]^c[g+16>>2];o=n<<1|n>>>31;c[g+28>>2]=o;m=m+((j<<5|j>>>27)+(e&k|l&(e|k))-1894007588+o)|0;e=e<<30|e>>>2;n=c[g+32>>2]^c[g+40>>2]^c[g>>2]^c[g+20>>2];o=n<<1|n>>>31;c[g+32>>2]=o;l=l+((m<<5|m>>>27)+(j&e|k&(j|e))-1894007588+o)|0;j=j<<30|j>>>2;n=c[g+36>>2]^c[g+44>>2]^c[g+4>>2]^c[g+24>>2];o=n<<1|n>>>31;c[g+36>>2]=o;k=k+((l<<5|l>>>27)+(m&j|e&(m|j))-1894007588+o)|0;m=m<<30|m>>>2;n=c[g+40>>2]^c[g+48>>2]^c[g+8>>2]^c[g+28>>2];o=n<<1|n>>>31;c[g+40>>2]=o;e=e+((k<<5|k>>>27)+(l&m|j&(l|m))-1894007588+o)|0;l=l<<30|l>>>2;n=c[g+44>>2]^c[g+52>>2]^c[g+12>>2]^c[g+32>>2];o=n<<1|n>>>31;c[g+44>>2]=o;j=j+((e<<5|e>>>27)+(k&l|m&(k|l))-1894007588+o)|0;k=k<<30|k>>>2;n=c[g+48>>2]^c[g+56>>2]^c[g+16>>2]^c[g+36>>2];o=n<<1|n>>>31;c[g+48>>2]=o;m=m+((j<<5|j>>>27)+(e^k^l)-899497514+o)|0;e=e<<30|e>>>2;n=c[g+52>>2]^c[g+60>>2]^c[g+20>>2]^c[g+40>>2];o=n<<1|n>>>31;c[g+52>>2]=o;l=l+((m<<5|m>>>27)+(j^e^k)-899497514+o)|0;j=j<<30|j>>>2;n=c[g+56>>2]^c[g>>2]^c[g+24>>2]^c[g+44>>2];o=n<<1|n>>>31;c[g+56>>2]=o;k=k+((l<<5|l>>>27)+(m^j^e)-899497514+o)|0;m=m<<30|m>>>2;n=c[g+60>>2]^c[g+4>>2]^c[g+28>>2]^c[g+48>>2];o=n<<1|n>>>31;c[g+60>>2]=o;e=e+((k<<5|k>>>27)+(l^m^j)-899497514+o)|0;l=l<<30|l>>>2;n=c[g>>2]^c[g+8>>2]^c[g+32>>2]^c[g+52>>2];o=n<<1|n>>>31;c[g>>2]=o;j=j+((e<<5|e>>>27)+(k^l^m)-899497514+o)|0;k=k<<30|k>>>2;n=c[g+4>>2]^c[g+12>>2]^c[g+36>>2]^c[g+56>>2];o=n<<1|n>>>31;c[g+4>>2]=o;m=m+((j<<5|j>>>27)+(e^k^l)-899497514+o)|0;e=e<<30|e>>>2;n=c[g+8>>2]^c[g+16>>2]^c[g+40>>2]^c[g+60>>2];o=n<<1|n>>>31;c[g+8>>2]=o;l=l+((m<<5|m>>>27)+(j^e^k)-899497514+o)|0;j=j<<30|j>>>2;n=c[g+12>>2]^c[g+20>>2]^c[g+44>>2]^c[g>>2];o=n<<1|n>>>31;c[g+12>>2]=o;k=k+((l<<5|l>>>27)+(m^j^e)-899497514+o)|0;m=m<<30|m>>>2;n=c[g+16>>2]^c[g+24>>2]^c[g+48>>2]^c[g+4>>2];o=n<<1|n>>>31;c[g+16>>2]=o;e=e+((k<<5|k>>>27)+(l^m^j)-899497514+o)|0;l=l<<30|l>>>2;n=c[g+20>>2]^c[g+28>>2]^c[g+52>>2]^c[g+8>>2];o=n<<1|n>>>31;c[g+20>>2]=o;j=j+((e<<5|e>>>27)+(k^l^m)-899497514+o)|0;k=k<<30|k>>>2;n=c[g+24>>2]^c[g+32>>2]^c[g+56>>2]^c[g+12>>2];o=n<<1|n>>>31;c[g+24>>2]=o;m=m+((j<<5|j>>>27)+(e^k^l)-899497514+o)|0;e=e<<30|e>>>2;n=c[g+28>>2]^c[g+36>>2]^c[g+60>>2]^c[g+16>>2];o=n<<1|n>>>31;c[g+28>>2]=o;l=l+((m<<5|m>>>27)+(j^e^k)-899497514+o)|0;j=j<<30|j>>>2;n=c[g+32>>2]^c[g+40>>2]^c[g>>2]^c[g+20>>2];o=n<<1|n>>>31;c[g+32>>2]=o;k=k+((l<<5|l>>>27)+(m^j^e)-899497514+o)|0;m=m<<30|m>>>2;n=c[g+36>>2]^c[g+44>>2]^c[g+4>>2]^c[g+24>>2];o=n<<1|n>>>31;c[g+36>>2]=o;e=e+((k<<5|k>>>27)+(l^m^j)-899497514+o)|0;l=l<<30|l>>>2;n=c[g+40>>2]^c[g+48>>2]^c[g+8>>2]^c[g+28>>2];o=n<<1|n>>>31;c[g+40>>2]=o;j=j+((e<<5|e>>>27)+(k^l^m)-899497514+o)|0;k=k<<30|k>>>2;n=c[g+44>>2]^c[g+52>>2]^c[g+12>>2]^c[g+32>>2];o=n<<1|n>>>31;c[g+44>>2]=o;m=m+((j<<5|j>>>27)+(e^k^l)-899497514+o)|0;e=e<<30|e>>>2;n=c[g+48>>2]^c[g+56>>2]^c[g+16>>2]^c[g+36>>2];o=n<<1|n>>>31;c[g+48>>2]=o;l=l+((m<<5|m>>>27)+(j^e^k)-899497514+o)|0;j=j<<30|j>>>2;n=c[g+52>>2]^c[g+60>>2]^c[g+20>>2]^c[g+40>>2];o=n<<1|n>>>31;c[g+52>>2]=o;k=k+((l<<5|l>>>27)+(m^j^e)-899497514+o)|0;m=m<<30|m>>>2;n=c[g+56>>2]^c[g>>2]^c[g+24>>2]^c[g+44>>2];o=n<<1|n>>>31;c[g+56>>2]=o;e=e+((k<<5|k>>>27)+(l^m^j)-899497514+o)|0;l=l<<30|l>>>2;n=c[g+60>>2]^c[g+4>>2]^c[g+28>>2]^c[g+48>>2];o=n<<1|n>>>31;c[g+60>>2]=o;j=j+((e<<5|e>>>27)+(k^l^m)-899497514+o)|0;k=k<<30|k>>>2;o=h|0;c[o>>2]=(c[o>>2]|0)+j;j=h+4|0;c[j>>2]=(c[j>>2]|0)+e;e=h+8|0;c[e>>2]=(c[e>>2]|0)+k;k=h+12|0;c[k>>2]=(c[k>>2]|0)+l;l=h+16|0;c[l>>2]=(c[l>>2]|0)+m;d=d-1|0}i=f;return}function pX(a){a=a|0;var b=0;b=a;c[b>>2]=-1056596264;c[b+4>>2]=914150663;c[b+8>>2]=812702999;c[b+12>>2]=-150054599;c[b+16>>2]=-4191439;c[b+20>>2]=1750603025;c[b+24>>2]=1694076839;c[b+28>>2]=-1090891868;c[b+32>>2]=0;c[b+100>>2]=0;return}function pY(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=e;e=d;d=b;if((c[d+100>>2]|0)==64){p3(d,d+36|0);up(328);c[d+100>>2]=0;b=d+32|0;c[b>>2]=(c[b>>2]|0)+1}if((e|0)==0){return}do{if((c[d+100>>2]|0)!=0){while(1){if((f|0)!=0){g=(c[d+100>>2]|0)<64}else{g=0}if(!g){break}b=e;e=b+1|0;h=a[b]|0;b=d+100|0;i=c[b>>2]|0;c[b>>2]=i+1;a[d+36+i|0]=h;f=f-1|0}pY(d,0,0);if((f|0)!=0){break}return}}while(0);while(1){if(f>>>0<64){break}p3(d,e);c[d+100>>2]=0;g=d+32|0;c[g>>2]=(c[g>>2]|0)+1;f=f-64|0;e=e+64|0}up(328);while(1){if((f|0)!=0){j=(c[d+100>>2]|0)<64}else{j=0}if(!j){break}g=e;e=g+1|0;h=a[g]|0;g=d+100|0;i=c[g>>2]|0;c[g>>2]=i+1;a[d+36+i|0]=h;f=f-1|0}return}function pZ(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;pY(d,0,0);b=c[d+32>>2]|0;e=b<<6;f=b>>>26;b=e;g=e+(c[d+100>>2]|0)|0;e=g;if(g>>>0<b>>>0){f=f+1|0}b=e;e=e<<3;f=f<<3;f=f|b>>>29;if((c[d+100>>2]|0)<56){b=d+100|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+36+g|0]=-128;while(1){if((c[d+100>>2]|0)>=56){break}g=d+100|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+36+b|0]=0}}else{b=d+100|0;g=c[b>>2]|0;c[b>>2]=g+1;a[d+36+g|0]=-128;while(1){if((c[d+100>>2]|0)>=64){break}g=d+100|0;b=c[g>>2]|0;c[g>>2]=b+1;a[d+36+b|0]=0}pY(d,0,0);Ae(d+36|0,0,56)}a[d+92|0]=f>>>24&255;a[d+93|0]=f>>>16&255;a[d+94|0]=f>>>8&255;a[d+95|0]=f&255;a[d+96|0]=e>>>24&255;a[d+97|0]=e>>>16&255;a[d+98|0]=e>>>8&255;a[d+99|0]=e&255;p3(d,d+36|0);up(328);e=d+36|0;f=e;e=f+1|0;a[f]=(c[d>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d>>2]&255;f=e;e=f+1|0;a[f]=(c[d+4>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+4>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+4>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+4>>2]&255;f=e;e=f+1|0;a[f]=(c[d+8>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+8>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+8>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+8>>2]&255;f=e;e=f+1|0;a[f]=(c[d+12>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+12>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+12>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+12>>2]&255;f=e;e=f+1|0;a[f]=(c[d+16>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+16>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+16>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+16>>2]&255;f=e;e=f+1|0;a[f]=(c[d+20>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+20>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+20>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+20>>2]&255;f=e;e=f+1|0;a[f]=(c[d+24>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+24>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+24>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+24>>2]&255;f=e;e=f+1|0;a[f]=(c[d+28>>2]|0)>>>24&255;f=e;e=f+1|0;a[f]=(c[d+28>>2]|0)>>>16&255;f=e;e=f+1|0;a[f]=(c[d+28>>2]|0)>>>8&255;f=e;e=f+1|0;a[f]=c[d+28>>2]&255;return}function p_(a){a=a|0;return a+36|0}function p$(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=b;b=c;c=a;if((c|0)==11){e=p1(d,b)|0}else if((c|0)==8){e=p2(d,b)|0}else{e=5}return e|0}function p0(a){a=a|0;var b=0;b=a;c[b>>2]=1779033703;c[b+4>>2]=-1150833019;c[b+8>>2]=1013904242;c[b+12>>2]=-1521486534;c[b+16>>2]=1359893119;c[b+20>>2]=-1694144372;c[b+24>>2]=528734635;c[b+28>>2]=1541459225;c[b+32>>2]=0;c[b+100>>2]=0;return}function p1(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=b;b=63792;d=xp(11,0,62184,3,79272,28)|0;L357:do{if((d|0)==0){do{if((a|0)!=0){b=59024;d=xp(11,0,56984,56,78344,28)|0;if((d|0)!=0){break L357}b=82792;d=xp(11,1,0,0,77352,28)|0;if((d|0)!=0){break L357}else{break}}}while(0);e=0;f=e;return f|0}}while(0);if((c|0)!=0){cP[c&15](80152,11,b,d)}e=50;f=e;return f|0}function p2(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=b;b=63792;d=xp(8,0,62184,3,60760,32)|0;L376:do{if((d|0)==0){do{if((a|0)!=0){b=59024;d=xp(8,0,56984,56,55560,32)|0;if((d|0)!=0){break L376}b=82792;d=xp(8,1,0,0,81024,32)|0;if((d|0)!=0){break L376}else{break}}}while(0);e=0;f=e;return f|0}}while(0);if((c|0)!=0){cP[c&15](80152,8,b,d)}e=50;f=e;return f|0}function p3(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+320|0;f=e|0;g=e+64|0;h=b;b=d;d=c[h>>2]|0;j=c[h+4>>2]|0;k=c[h+8>>2]|0;l=c[h+12>>2]|0;m=c[h+16>>2]|0;n=c[h+20>>2]|0;o=c[h+24>>2]|0;p=c[h+28>>2]|0;q=0;r=f|0;while(1){if((q|0)>=16){break}s=b;b=s+1|0;a[r+3|0]=a[s]|0;s=b;b=s+1|0;a[r+2|0]=a[s]|0;s=b;b=s+1|0;a[r+1|0]=a[s]|0;s=b;b=s+1|0;a[r|0]=a[s]|0;q=q+1|0;r=r+4|0}q=0;while(1){if((q|0)>=16){break}c[g+(q<<2)>>2]=c[f+(q<<2)>>2];q=q+1|0}while(1){if((q|0)>=64){break}c[g+(q<<2)>>2]=(((c[g+(q-2<<2)>>2]|0)>>>17|c[g+(q-2<<2)>>2]<<15)^((c[g+(q-2<<2)>>2]|0)>>>19|c[g+(q-2<<2)>>2]<<13)^(c[g+(q-2<<2)>>2]|0)>>>10)+(c[g+(q-7<<2)>>2]|0)+(((c[g+(q-15<<2)>>2]|0)>>>7|c[g+(q-15<<2)>>2]<<25)^((c[g+(q-15<<2)>>2]|0)>>>18|c[g+(q-15<<2)>>2]<<14)^(c[g+(q-15<<2)>>2]|0)>>>3)+(c[g+(q-16<<2)>>2]|0);q=q+1|0}q=0;while(1){if((q|0)>=64){break}f=p+(p4(m)|0)|0;r=f+(p5(m,n,o)|0)|0;f=r+(c[1672+(q<<2)>>2]|0)+(c[g+(q<<2)>>2]|0)|0;r=p6(d)|0;b=r+(p7(d,j,k)|0)|0;l=l+f|0;p=f+b|0;r=o+(p4(l)|0)|0;s=r+(p5(l,m,n)|0)|0;f=s+(c[1672+(q+1<<2)>>2]|0)+(c[g+(q+1<<2)>>2]|0)|0;s=p6(p)|0;b=s+(p7(p,d,j)|0)|0;k=k+f|0;o=f+b|0;s=n+(p4(k)|0)|0;r=s+(p5(k,l,m)|0)|0;f=r+(c[1672+(q+2<<2)>>2]|0)+(c[g+(q+2<<2)>>2]|0)|0;r=p6(o)|0;b=r+(p7(o,p,d)|0)|0;j=j+f|0;n=f+b|0;r=m+(p4(j)|0)|0;s=r+(p5(j,k,l)|0)|0;f=s+(c[1672+(q+3<<2)>>2]|0)+(c[g+(q+3<<2)>>2]|0)|0;s=p6(n)|0;b=s+(p7(n,o,p)|0)|0;d=d+f|0;m=f+b|0;s=l+(p4(d)|0)|0;r=s+(p5(d,j,k)|0)|0;f=r+(c[1672+(q+4<<2)>>2]|0)+(c[g+(q+4<<2)>>2]|0)|0;r=p6(m)|0;b=r+(p7(m,n,o)|0)|0;p=p+f|0;l=f+b|0;r=k+(p4(p)|0)|0;s=r+(p5(p,d,j)|0)|0;f=s+(c[1672+(q+5<<2)>>2]|0)+(c[g+(q+5<<2)>>2]|0)|0;s=p6(l)|0;b=s+(p7(l,m,n)|0)|0;o=o+f|0;k=f+b|0;s=j+(p4(o)|0)|0;r=s+(p5(o,p,d)|0)|0;f=r+(c[1672+(q+6<<2)>>2]|0)+(c[g+(q+6<<2)>>2]|0)|0;r=p6(k)|0;b=r+(p7(k,l,m)|0)|0;n=n+f|0;j=f+b|0;r=d+(p4(n)|0)|0;s=r+(p5(n,o,p)|0)|0;f=s+(c[1672+(q+7<<2)>>2]|0)+(c[g+(q+7<<2)>>2]|0)|0;s=p6(j)|0;b=s+(p7(j,k,l)|0)|0;m=m+f|0;d=f+b|0;q=q+8|0}q=h|0;c[q>>2]=(c[q>>2]|0)+d;d=h+4|0;c[d>>2]=(c[d>>2]|0)+j;j=h+8|0;c[j>>2]=(c[j>>2]|0)+k;k=h+12|0;c[k>>2]=(c[k>>2]|0)+l;l=h+16|0;c[l>>2]=(c[l>>2]|0)+m;m=h+20|0;c[m>>2]=(c[m>>2]|0)+n;n=h+24|0;c[n>>2]=(c[n>>2]|0)+o;o=h+28|0;c[o>>2]=(c[o>>2]|0)+p;i=e;return}function p4(a){a=a|0;var b=0;b=a;return(b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7)|0}function p5(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=c;return d^a&(b^d)|0}function p6(a){a=a|0;var b=0;b=a;return(b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10)|0}function p7(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=a;a=b;return d&a|c&(d|a)|0}function p8(a){a=a|0;var b=0;b=a;a=b|0;c[a>>2]=-205731576;c[a+4>>2]=1779033703;a=b+8|0;c[a>>2]=-2067093701;c[a+4>>2]=-1150833019;a=b+16|0;c[a>>2]=-23791573;c[a+4>>2]=1013904242;a=b+24|0;c[a>>2]=1595750129;c[a+4>>2]=-1521486534;a=b+32|0;c[a>>2]=-1377402159;c[a+4>>2]=1359893119;a=b+40|0;c[a>>2]=725511199;c[a+4>>2]=-1694144372;a=b+48|0;c[a>>2]=-79577749;c[a+4>>2]=528734635;a=b+56|0;c[a>>2]=327033209;c[a+4>>2]=1541459225;a=b+64|0;c[a>>2]=0;c[a+4>>2]=0;c[b+200>>2]=0;return}function p9(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;b=e;e=d;d=f;if((c[d+200>>2]|0)==128){qg(d,d+72|0);up(768);c[d+200>>2]=0;g=d+64|0;h=Am(c[g>>2]|0,c[g+4>>2]|0,1,0)|0;c[g>>2]=h;c[g+4>>2]=H}if((e|0)==0){return}do{if((c[d+200>>2]|0)!=0){while(1){if((b|0)!=0){i=(c[d+200>>2]|0)<128}else{i=0}if(!i){break}g=e;e=g+1|0;h=a[g]|0;g=d+200|0;j=c[g>>2]|0;c[g>>2]=j+1;a[d+72+j|0]=h;b=b-1|0}p9(f,0,0);if((b|0)!=0){break}return}}while(0);while(1){if(b>>>0<128){break}qg(d,e);c[d+200>>2]=0;f=d+64|0;i=Am(c[f>>2]|0,c[f+4>>2]|0,1,0)|0;c[f>>2]=i;c[f+4>>2]=H;b=b-128|0;e=e+128|0}up(768);while(1){if((b|0)!=0){k=(c[d+200>>2]|0)<128}else{k=0}if(!k){break}f=e;e=f+1|0;i=a[f]|0;f=d+200|0;h=c[f>>2]|0;c[f>>2]=h+1;a[d+72+h|0]=i;b=b-1|0}return}function qa(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+24|0;e=d|0;f=d+8|0;g=d+16|0;h=b;b=h;p9(h,0,0);j=b+64|0;k=c[j+4>>2]|0;c[e>>2]=c[j>>2];c[e+4>>2]=k;k=c[e>>2]|0;j=c[e+4>>2]<<7|k>>>25;c[g>>2]=k<<7|0>>>25;c[g+4>>2]=j;c[f>>2]=(c[e+4>>2]|0)>>>25|0<<7;c[f+4>>2]=0>>>25|0<<7;j=c[g+4>>2]|0;c[e>>2]=c[g>>2];c[e+4>>2]=j;j=c[b+200>>2]|0;k=Am(c[g>>2]|0,c[g+4>>2]|0,j,(j|0)<0|0?-1:0)|0;j=H;c[g>>2]=k;c[g+4>>2]=j;l=c[e+4>>2]|0;if(j>>>0<l>>>0|j>>>0==l>>>0&k>>>0<(c[e>>2]|0)>>>0){k=Am(c[f>>2]|0,c[f+4>>2]|0,1,0)|0;c[f>>2]=k;c[f+4>>2]=H}k=c[g+4>>2]|0;c[e>>2]=c[g>>2];c[e+4>>2]=k;k=c[g>>2]|0;l=c[g+4>>2]<<3|k>>>29;c[g>>2]=k<<3|0>>>29;c[g+4>>2]=l;l=c[f>>2]|0;k=c[f+4>>2]<<3|l>>>29;c[f>>2]=l<<3|0>>>29;c[f+4>>2]=k;k=c[f+4>>2]|(0>>>29|0<<3);c[f>>2]=c[f>>2]|((c[e+4>>2]|0)>>>29|0<<3);c[f+4>>2]=k;if((c[b+200>>2]|0)<112){k=b+200|0;e=c[k>>2]|0;c[k>>2]=e+1;a[b+72+e|0]=-128;while(1){if((c[b+200>>2]|0)>=112){break}e=b+200|0;k=c[e>>2]|0;c[e>>2]=k+1;a[b+72+k|0]=0}}else{k=b+200|0;e=c[k>>2]|0;c[k>>2]=e+1;a[b+72+e|0]=-128;while(1){if((c[b+200>>2]|0)>=128){break}e=b+200|0;k=c[e>>2]|0;c[e>>2]=k+1;a[b+72+k|0]=0}p9(h,0,0);Ae(b+72|0,0,112)}a[b+184|0]=((c[f+4>>2]|0)>>>24|0<<8)&255;a[b+185|0]=((c[f+4>>2]|0)>>>16|0<<16)&255;a[b+186|0]=((c[f+4>>2]|0)>>>8|0<<24)&255;a[b+187|0]=c[f+4>>2]&255;a[b+188|0]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;a[b+189|0]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;a[b+190|0]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;a[b+191|0]=c[f>>2]&255;a[b+192|0]=((c[g+4>>2]|0)>>>24|0<<8)&255;a[b+193|0]=((c[g+4>>2]|0)>>>16|0<<16)&255;a[b+194|0]=((c[g+4>>2]|0)>>>8|0<<24)&255;a[b+195|0]=c[g+4>>2]&255;a[b+196|0]=((c[g>>2]|0)>>>24|c[g+4>>2]<<8)&255;a[b+197|0]=((c[g>>2]|0)>>>16|c[g+4>>2]<<16)&255;a[b+198|0]=((c[g>>2]|0)>>>8|c[g+4>>2]<<24)&255;a[b+199|0]=c[g>>2]&255;qg(b,b+72|0);up(768);g=b+72|0;f=g;g=f+1|0;a[f]=((c[b+4>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[b+4>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[b+4>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[b+4>>2]&255;f=b|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=b|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=b|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[b>>2]&255;f=g;g=f+1|0;a[f]=((c[b+12>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[b+12>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[b+12>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[b+12>>2]&255;f=b+8|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=b+8|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=b+8|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[b+8>>2]&255;f=g;g=f+1|0;a[f]=((c[b+20>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[b+20>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[b+20>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[b+20>>2]&255;f=b+16|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=b+16|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=b+16|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[b+16>>2]&255;f=g;g=f+1|0;a[f]=((c[b+28>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[b+28>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[b+28>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[b+28>>2]&255;f=b+24|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=b+24|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=b+24|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[b+24>>2]&255;f=g;g=f+1|0;a[f]=((c[b+36>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[b+36>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[b+36>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[b+36>>2]&255;f=b+32|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=b+32|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=b+32|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[b+32>>2]&255;f=g;g=f+1|0;a[f]=((c[b+44>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[b+44>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[b+44>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[b+44>>2]&255;f=b+40|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=b+40|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=b+40|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[b+40>>2]&255;f=g;g=f+1|0;a[f]=((c[b+52>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[b+52>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[b+52>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[b+52>>2]&255;f=b+48|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=b+48|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=b+48|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[b+48>>2]&255;f=g;g=f+1|0;a[f]=((c[b+60>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[b+60>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[b+60>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[b+60>>2]&255;f=b+56|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=b+56|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=b+56|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[b+56>>2]&255;i=d;return}function qb(a){a=a|0;return a+72|0}function qc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=b;b=c;c=a;if((c|0)==10){e=qf(d,b)|0}else if((c|0)==9){e=qe(d,b)|0}else{e=5}return e|0}function qd(a){a=a|0;var b=0;b=a;a=b|0;c[a>>2]=-1056596264;c[a+4>>2]=-876896931;a=b+8|0;c[a>>2]=914150663;c[a+4>>2]=1654270250;a=b+16|0;c[a>>2]=812702999;c[a+4>>2]=-1856437926;a=b+24|0;c[a>>2]=-150054599;c[a+4>>2]=355462360;a=b+32|0;c[a>>2]=-4191439;c[a+4>>2]=1731405415;a=b+40|0;c[a>>2]=1750603025;c[a+4>>2]=-1900787065;a=b+48|0;c[a>>2]=1694076839;c[a+4>>2]=-619958771;a=b+56|0;c[a>>2]=-1090891868;c[a+4>>2]=1203062813;a=b+64|0;c[a>>2]=0;c[a+4>>2]=0;c[b+200>>2]=0;return}function qe(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=b;b=63776;d=xp(9,0,62176,3,79216,48)|0;L495:do{if((d|0)==0){do{if((a|0)!=0){b=59e3;d=xp(9,0,56856,112,78288,48)|0;if((d|0)!=0){break L495}b=82776;d=xp(9,1,0,0,77296,48)|0;if((d|0)!=0){break L495}else{break}}}while(0);e=0;f=e;return f|0}}while(0);if((c|0)!=0){cP[c&15](80144,9,b,d)}e=50;f=e;return f|0}function qf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=b;b=63776;d=xp(10,0,62176,3,60688,64)|0;L514:do{if((d|0)==0){do{if((a|0)!=0){b=59e3;d=xp(10,0,56856,112,55488,64)|0;if((d|0)!=0){break L514}b=82776;d=xp(10,1,0,0,80936,64)|0;if((d|0)!=0){break L514}else{break}}}while(0);e=0;f=e;return f|0}}while(0);if((c|0)!=0){cP[c&15](80144,10,b,d)}e=50;f=e;return f|0}function qg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+720|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=e+48|0;n=e+56|0;o=e+64|0;p=e+704|0;q=e+712|0;r=b;b=d;d=r|0;s=c[d+4>>2]|0;c[f>>2]=c[d>>2];c[f+4>>2]=s;s=r+8|0;d=c[s+4>>2]|0;c[g>>2]=c[s>>2];c[g+4>>2]=d;d=r+16|0;s=c[d+4>>2]|0;c[h>>2]=c[d>>2];c[h+4>>2]=s;s=r+24|0;d=c[s+4>>2]|0;c[j>>2]=c[s>>2];c[j+4>>2]=d;d=r+32|0;s=c[d+4>>2]|0;c[k>>2]=c[d>>2];c[k+4>>2]=s;s=r+40|0;d=c[s+4>>2]|0;c[l>>2]=c[s>>2];c[l+4>>2]=d;d=r+48|0;s=c[d+4>>2]|0;c[m>>2]=c[d>>2];c[m+4>>2]=s;s=r+56|0;d=c[s+4>>2]|0;c[n>>2]=c[s>>2];c[n+4>>2]=d;d=0;s=o|0;while(1){if((d|0)>=16){break}t=b;b=t+1|0;a[s+7|0]=a[t]|0;t=b;b=t+1|0;a[s+6|0]=a[t]|0;t=b;b=t+1|0;a[s+5|0]=a[t]|0;t=b;b=t+1|0;a[s+4|0]=a[t]|0;t=b;b=t+1|0;a[s+3|0]=a[t]|0;t=b;b=t+1|0;a[s+2|0]=a[t]|0;t=b;b=t+1|0;a[s+1|0]=a[t]|0;t=b;b=t+1|0;a[s|0]=a[t]|0;d=d+1|0;s=s+8|0}s=16;while(1){if((s|0)>=80){break}d=o+(s-2<<3)|0;b=qh(c[d>>2]|0,c[d+4>>2]|0,19,0)|0;d=H;t=o+(s-2<<3)|0;u=qh(c[t>>2]|0,c[t+4>>2]|0,61,0)|0;t=o+(s-2<<3)|0;v=c[t+4>>2]|0;w=o+(s-7<<3)|0;x=Am(b^u^((c[t>>2]|0)>>>6|v<<26),d^H^(v>>>6|0<<26),c[w>>2]|0,c[w+4>>2]|0)|0;w=H;v=o+(s-15<<3)|0;d=qh(c[v>>2]|0,c[v+4>>2]|0,1,0)|0;v=H;t=o+(s-15<<3)|0;u=qh(c[t>>2]|0,c[t+4>>2]|0,8,0)|0;t=o+(s-15<<3)|0;b=c[t+4>>2]|0;y=Am(x,w,d^u^((c[t>>2]|0)>>>7|b<<25),v^H^(b>>>7|0<<25))|0;b=o+(s-16<<3)|0;v=Am(y,H,c[b>>2]|0,c[b+4>>2]|0)|0;b=o+(s<<3)|0;c[b>>2]=v;c[b+4>>2]=H;s=s+1|0}s=0;while(1){if((s|0)>=80){break}b=c[n>>2]|0;v=c[n+4>>2]|0;y=qi(c[k>>2]|0,c[k+4>>2]|0)|0;t=Am(b,v,y,H)|0;y=H;v=qj(c[k>>2]|0,c[k+4>>2]|0,c[l>>2]|0,c[l+4>>2]|0,c[m>>2]|0,c[m+4>>2]|0)|0;b=Am(t,y,v,H)|0;v=776+(s<<3)|0;y=Am(b,H,c[v>>2]|0,c[v+4>>2]|0)|0;v=o+(s<<3)|0;b=Am(y,H,c[v>>2]|0,c[v+4>>2]|0)|0;c[p>>2]=b;c[p+4>>2]=H;b=qk(c[f>>2]|0,c[f+4>>2]|0)|0;v=H;y=ql(c[f>>2]|0,c[f+4>>2]|0,c[g>>2]|0,c[g+4>>2]|0,c[h>>2]|0,c[h+4>>2]|0)|0;t=Am(b,v,y,H)|0;c[q>>2]=t;c[q+4>>2]=H;t=Am(c[j>>2]|0,c[j+4>>2]|0,c[p>>2]|0,c[p+4>>2]|0)|0;c[j>>2]=t;c[j+4>>2]=H;t=Am(c[p>>2]|0,c[p+4>>2]|0,c[q>>2]|0,c[q+4>>2]|0)|0;c[n>>2]=t;c[n+4>>2]=H;t=c[m>>2]|0;y=c[m+4>>2]|0;v=qi(c[j>>2]|0,c[j+4>>2]|0)|0;b=Am(t,y,v,H)|0;v=H;y=qj(c[j>>2]|0,c[j+4>>2]|0,c[k>>2]|0,c[k+4>>2]|0,c[l>>2]|0,c[l+4>>2]|0)|0;t=Am(b,v,y,H)|0;y=776+(s+1<<3)|0;v=Am(t,H,c[y>>2]|0,c[y+4>>2]|0)|0;y=o+(s+1<<3)|0;t=Am(v,H,c[y>>2]|0,c[y+4>>2]|0)|0;c[p>>2]=t;c[p+4>>2]=H;t=qk(c[n>>2]|0,c[n+4>>2]|0)|0;y=H;v=ql(c[n>>2]|0,c[n+4>>2]|0,c[f>>2]|0,c[f+4>>2]|0,c[g>>2]|0,c[g+4>>2]|0)|0;b=Am(t,y,v,H)|0;c[q>>2]=b;c[q+4>>2]=H;b=Am(c[h>>2]|0,c[h+4>>2]|0,c[p>>2]|0,c[p+4>>2]|0)|0;c[h>>2]=b;c[h+4>>2]=H;b=Am(c[p>>2]|0,c[p+4>>2]|0,c[q>>2]|0,c[q+4>>2]|0)|0;c[m>>2]=b;c[m+4>>2]=H;b=c[l>>2]|0;v=c[l+4>>2]|0;y=qi(c[h>>2]|0,c[h+4>>2]|0)|0;t=Am(b,v,y,H)|0;y=H;v=qj(c[h>>2]|0,c[h+4>>2]|0,c[j>>2]|0,c[j+4>>2]|0,c[k>>2]|0,c[k+4>>2]|0)|0;b=Am(t,y,v,H)|0;v=776+(s+2<<3)|0;y=Am(b,H,c[v>>2]|0,c[v+4>>2]|0)|0;v=o+(s+2<<3)|0;b=Am(y,H,c[v>>2]|0,c[v+4>>2]|0)|0;c[p>>2]=b;c[p+4>>2]=H;b=qk(c[m>>2]|0,c[m+4>>2]|0)|0;v=H;y=ql(c[m>>2]|0,c[m+4>>2]|0,c[n>>2]|0,c[n+4>>2]|0,c[f>>2]|0,c[f+4>>2]|0)|0;t=Am(b,v,y,H)|0;c[q>>2]=t;c[q+4>>2]=H;t=Am(c[g>>2]|0,c[g+4>>2]|0,c[p>>2]|0,c[p+4>>2]|0)|0;c[g>>2]=t;c[g+4>>2]=H;t=Am(c[p>>2]|0,c[p+4>>2]|0,c[q>>2]|0,c[q+4>>2]|0)|0;c[l>>2]=t;c[l+4>>2]=H;t=c[k>>2]|0;y=c[k+4>>2]|0;v=qi(c[g>>2]|0,c[g+4>>2]|0)|0;b=Am(t,y,v,H)|0;v=H;y=qj(c[g>>2]|0,c[g+4>>2]|0,c[h>>2]|0,c[h+4>>2]|0,c[j>>2]|0,c[j+4>>2]|0)|0;t=Am(b,v,y,H)|0;y=776+(s+3<<3)|0;v=Am(t,H,c[y>>2]|0,c[y+4>>2]|0)|0;y=o+(s+3<<3)|0;t=Am(v,H,c[y>>2]|0,c[y+4>>2]|0)|0;c[p>>2]=t;c[p+4>>2]=H;t=qk(c[l>>2]|0,c[l+4>>2]|0)|0;y=H;v=ql(c[l>>2]|0,c[l+4>>2]|0,c[m>>2]|0,c[m+4>>2]|0,c[n>>2]|0,c[n+4>>2]|0)|0;b=Am(t,y,v,H)|0;c[q>>2]=b;c[q+4>>2]=H;b=Am(c[f>>2]|0,c[f+4>>2]|0,c[p>>2]|0,c[p+4>>2]|0)|0;c[f>>2]=b;c[f+4>>2]=H;b=Am(c[p>>2]|0,c[p+4>>2]|0,c[q>>2]|0,c[q+4>>2]|0)|0;c[k>>2]=b;c[k+4>>2]=H;b=c[j>>2]|0;v=c[j+4>>2]|0;y=qi(c[f>>2]|0,c[f+4>>2]|0)|0;t=Am(b,v,y,H)|0;y=H;v=qj(c[f>>2]|0,c[f+4>>2]|0,c[g>>2]|0,c[g+4>>2]|0,c[h>>2]|0,c[h+4>>2]|0)|0;b=Am(t,y,v,H)|0;v=776+(s+4<<3)|0;y=Am(b,H,c[v>>2]|0,c[v+4>>2]|0)|0;v=o+(s+4<<3)|0;b=Am(y,H,c[v>>2]|0,c[v+4>>2]|0)|0;c[p>>2]=b;c[p+4>>2]=H;b=qk(c[k>>2]|0,c[k+4>>2]|0)|0;v=H;y=ql(c[k>>2]|0,c[k+4>>2]|0,c[l>>2]|0,c[l+4>>2]|0,c[m>>2]|0,c[m+4>>2]|0)|0;t=Am(b,v,y,H)|0;c[q>>2]=t;c[q+4>>2]=H;t=Am(c[n>>2]|0,c[n+4>>2]|0,c[p>>2]|0,c[p+4>>2]|0)|0;c[n>>2]=t;c[n+4>>2]=H;t=Am(c[p>>2]|0,c[p+4>>2]|0,c[q>>2]|0,c[q+4>>2]|0)|0;c[j>>2]=t;c[j+4>>2]=H;t=c[h>>2]|0;y=c[h+4>>2]|0;v=qi(c[n>>2]|0,c[n+4>>2]|0)|0;b=Am(t,y,v,H)|0;v=H;y=qj(c[n>>2]|0,c[n+4>>2]|0,c[f>>2]|0,c[f+4>>2]|0,c[g>>2]|0,c[g+4>>2]|0)|0;t=Am(b,v,y,H)|0;y=776+(s+5<<3)|0;v=Am(t,H,c[y>>2]|0,c[y+4>>2]|0)|0;y=o+(s+5<<3)|0;t=Am(v,H,c[y>>2]|0,c[y+4>>2]|0)|0;c[p>>2]=t;c[p+4>>2]=H;t=qk(c[j>>2]|0,c[j+4>>2]|0)|0;y=H;v=ql(c[j>>2]|0,c[j+4>>2]|0,c[k>>2]|0,c[k+4>>2]|0,c[l>>2]|0,c[l+4>>2]|0)|0;b=Am(t,y,v,H)|0;c[q>>2]=b;c[q+4>>2]=H;b=Am(c[m>>2]|0,c[m+4>>2]|0,c[p>>2]|0,c[p+4>>2]|0)|0;c[m>>2]=b;c[m+4>>2]=H;b=Am(c[p>>2]|0,c[p+4>>2]|0,c[q>>2]|0,c[q+4>>2]|0)|0;c[h>>2]=b;c[h+4>>2]=H;b=c[g>>2]|0;v=c[g+4>>2]|0;y=qi(c[m>>2]|0,c[m+4>>2]|0)|0;t=Am(b,v,y,H)|0;y=H;v=qj(c[m>>2]|0,c[m+4>>2]|0,c[n>>2]|0,c[n+4>>2]|0,c[f>>2]|0,c[f+4>>2]|0)|0;b=Am(t,y,v,H)|0;v=776+(s+6<<3)|0;y=Am(b,H,c[v>>2]|0,c[v+4>>2]|0)|0;v=o+(s+6<<3)|0;b=Am(y,H,c[v>>2]|0,c[v+4>>2]|0)|0;c[p>>2]=b;c[p+4>>2]=H;b=qk(c[h>>2]|0,c[h+4>>2]|0)|0;v=H;y=ql(c[h>>2]|0,c[h+4>>2]|0,c[j>>2]|0,c[j+4>>2]|0,c[k>>2]|0,c[k+4>>2]|0)|0;t=Am(b,v,y,H)|0;c[q>>2]=t;c[q+4>>2]=H;t=Am(c[l>>2]|0,c[l+4>>2]|0,c[p>>2]|0,c[p+4>>2]|0)|0;c[l>>2]=t;c[l+4>>2]=H;t=Am(c[p>>2]|0,c[p+4>>2]|0,c[q>>2]|0,c[q+4>>2]|0)|0;c[g>>2]=t;c[g+4>>2]=H;t=c[f>>2]|0;y=c[f+4>>2]|0;v=qi(c[l>>2]|0,c[l+4>>2]|0)|0;b=Am(t,y,v,H)|0;v=H;y=qj(c[l>>2]|0,c[l+4>>2]|0,c[m>>2]|0,c[m+4>>2]|0,c[n>>2]|0,c[n+4>>2]|0)|0;t=Am(b,v,y,H)|0;y=776+(s+7<<3)|0;v=Am(t,H,c[y>>2]|0,c[y+4>>2]|0)|0;y=o+(s+7<<3)|0;t=Am(v,H,c[y>>2]|0,c[y+4>>2]|0)|0;c[p>>2]=t;c[p+4>>2]=H;t=qk(c[g>>2]|0,c[g+4>>2]|0)|0;y=H;v=ql(c[g>>2]|0,c[g+4>>2]|0,c[h>>2]|0,c[h+4>>2]|0,c[j>>2]|0,c[j+4>>2]|0)|0;b=Am(t,y,v,H)|0;c[q>>2]=b;c[q+4>>2]=H;b=Am(c[k>>2]|0,c[k+4>>2]|0,c[p>>2]|0,c[p+4>>2]|0)|0;c[k>>2]=b;c[k+4>>2]=H;b=Am(c[p>>2]|0,c[p+4>>2]|0,c[q>>2]|0,c[q+4>>2]|0)|0;c[f>>2]=b;c[f+4>>2]=H;s=s+8|0}s=r|0;q=Am(c[s>>2]|0,c[s+4>>2]|0,c[f>>2]|0,c[f+4>>2]|0)|0;c[s>>2]=q;c[s+4>>2]=H;s=r+8|0;q=Am(c[s>>2]|0,c[s+4>>2]|0,c[g>>2]|0,c[g+4>>2]|0)|0;c[s>>2]=q;c[s+4>>2]=H;s=r+16|0;q=Am(c[s>>2]|0,c[s+4>>2]|0,c[h>>2]|0,c[h+4>>2]|0)|0;c[s>>2]=q;c[s+4>>2]=H;s=r+24|0;q=Am(c[s>>2]|0,c[s+4>>2]|0,c[j>>2]|0,c[j+4>>2]|0)|0;c[s>>2]=q;c[s+4>>2]=H;s=r+32|0;q=Am(c[s>>2]|0,c[s+4>>2]|0,c[k>>2]|0,c[k+4>>2]|0)|0;c[s>>2]=q;c[s+4>>2]=H;s=r+40|0;q=Am(c[s>>2]|0,c[s+4>>2]|0,c[l>>2]|0,c[l+4>>2]|0)|0;c[s>>2]=q;c[s+4>>2]=H;s=r+48|0;q=Am(c[s>>2]|0,c[s+4>>2]|0,c[m>>2]|0,c[m+4>>2]|0)|0;c[s>>2]=q;c[s+4>>2]=H;s=r+56|0;r=Am(c[s>>2]|0,c[s+4>>2]|0,c[n>>2]|0,c[n+4>>2]|0)|0;c[s>>2]=r;c[s+4>>2]=H;i=e;return}function qh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=f+8|0;c[g>>2]=a;c[g+4>>2]=b;c[h>>2]=d;c[h+4>>2]=e;e=Ap(c[g>>2]|0,c[g+4>>2]|0,c[h>>2]|0)|0;d=H;b=c[g>>2]|0;a=c[g+4>>2]|0;g=An(64,0,c[h>>2]|0,c[h+4>>2]|0)|0;h=Ao(b|0,a|0,g|0)|0;g=d|H;i=f;return(H=g,e|h)|0}function qi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+8|0;e=d|0;c[e>>2]=a;c[e+4>>2]=b;b=qh(c[e>>2]|0,c[e+4>>2]|0,14,0)|0;a=H;f=qh(c[e>>2]|0,c[e+4>>2]|0,18,0)|0;g=a^H;a=qh(c[e>>2]|0,c[e+4>>2]|0,41,0)|0;e=g^H;i=d;return(H=e,b^f^a)|0}function qj(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+24|0;j=h|0;k=h+8|0;l=h+16|0;c[j>>2]=a;c[j+4>>2]=b;c[k>>2]=d;c[k+4>>2]=e;c[l>>2]=f;c[l+4>>2]=g;i=h;return(H=c[j+4>>2]&c[k+4>>2]^~c[j+4>>2]&c[l+4>>2],c[j>>2]&c[k>>2]^~c[j>>2]&c[l>>2])|0}function qk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+8|0;e=d|0;c[e>>2]=a;c[e+4>>2]=b;b=qh(c[e>>2]|0,c[e+4>>2]|0,28,0)|0;a=H;f=qh(c[e>>2]|0,c[e+4>>2]|0,34,0)|0;g=a^H;a=qh(c[e>>2]|0,c[e+4>>2]|0,39,0)|0;e=g^H;i=d;return(H=e,b^f^a)|0}function ql(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+24|0;j=h|0;k=h+8|0;l=h+16|0;c[j>>2]=a;c[j+4>>2]=b;c[k>>2]=d;c[k+4>>2]=e;c[l>>2]=f;c[l+4>>2]=g;i=h;return(H=c[j+4>>2]&c[k+4>>2]^c[j+4>>2]&c[l+4>>2]^c[k+4>>2]&c[l+4>>2],c[j>>2]&c[k>>2]^c[j>>2]&c[l>>2]^c[k>>2]&c[l>>2])|0}function qm(a){a=a|0;qs(a,0);return}function qn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=e;e=d;d=b;if((c[d+88>>2]|0)==64){qt(d,d+24|0);up(212);c[d+88>>2]=0;b=d+92|0;c[b>>2]=(c[b>>2]|0)+1}if((e|0)==0){return}do{if((c[d+88>>2]|0)!=0){while(1){if((f|0)!=0){g=(c[d+88>>2]|0)<64}else{g=0}if(!g){break}b=e;e=b+1|0;h=a[b]|0;b=d+88|0;i=c[b>>2]|0;c[b>>2]=i+1;a[d+24+i|0]=h;f=f-1|0}qn(d,0,0);if((f|0)!=0){break}return}}while(0);while(1){if(f>>>0<64){break}qt(d,e);c[d+88>>2]=0;g=d+92|0;c[g>>2]=(c[g>>2]|0)+1;f=f-64|0;e=e+64|0}up(212);while(1){if((f|0)!=0){j=(c[d+88>>2]|0)<64}else{j=0}if(!j){break}g=e;e=g+1|0;h=a[g]|0;g=d+88|0;i=c[g>>2]|0;c[g>>2]=i+1;a[d+24+i|0]=h;f=f-1|0}return}function qo(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b;b=((c[d+96>>2]|0)==2?128:1)&255;qn(d,0,0);e=c[d+92>>2]|0;f=e<<6;g=e>>>26;e=f;h=f+(c[d+88>>2]|0)|0;f=h;if(h>>>0<e>>>0){g=g+1|0}e=f;f=f<<3;g=g<<3;g=g|e>>>29;if((c[d+88>>2]|0)<56){e=d+88|0;h=c[e>>2]|0;c[e>>2]=h+1;a[d+24+h|0]=b;while(1){if((c[d+88>>2]|0)>=56){break}h=d+88|0;e=c[h>>2]|0;c[h>>2]=e+1;a[d+24+e|0]=0}}else{e=d+88|0;h=c[e>>2]|0;c[e>>2]=h+1;a[d+24+h|0]=b;while(1){if((c[d+88>>2]|0)>=64){break}b=d+88|0;h=c[b>>2]|0;c[b>>2]=h+1;a[d+24+h|0]=0}qn(d,0,0);Ae(d+24|0,0,56)}a[d+80|0]=f&255;a[d+81|0]=f>>>8&255;a[d+82|0]=f>>>16&255;a[d+83|0]=f>>>24&255;a[d+84|0]=g&255;a[d+85|0]=g>>>8&255;a[d+86|0]=g>>>16&255;a[d+87|0]=g>>>24&255;qt(d,d+24|0);up(212);g=d+24|0;if((c[d+96>>2]|0)==0){f=g;g=f+1|0;a[f]=((c[d+4>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[d+4>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[d+4>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[d+4>>2]&255;f=d|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=d|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=d|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[d>>2]&255;f=g;g=f+1|0;a[f]=((c[d+12>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[d+12>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[d+12>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[d+12>>2]&255;f=d+8|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=d+8|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=d+8|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[d+8>>2]&255;f=g;g=f+1|0;a[f]=((c[d+20>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=((c[d+20>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[d+20>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=c[d+20>>2]&255;f=d+16|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=d+16|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=d+16|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=g;g=f+1|0;a[f]=c[d+16>>2]&255;return}else{f=g;g=f+1|0;a[f]=c[d>>2]&255;f=d|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=d|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=d|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=g;g=f+1|0;a[f]=c[d+4>>2]&255;f=g;g=f+1|0;a[f]=((c[d+4>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=((c[d+4>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[d+4>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=c[d+8>>2]&255;f=d+8|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=d+8|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=d+8|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=g;g=f+1|0;a[f]=c[d+12>>2]&255;f=g;g=f+1|0;a[f]=((c[d+12>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=((c[d+12>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[d+12>>2]|0)>>>24|0<<8)&255;f=g;g=f+1|0;a[f]=c[d+16>>2]&255;f=d+16|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>8|c[f+4>>2]<<24)&255;f=d+16|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>16|c[f+4>>2]<<16)&255;f=d+16|0;h=g;g=h+1|0;a[h]=((c[f>>2]|0)>>>24|c[f+4>>2]<<8)&255;f=g;g=f+1|0;a[f]=c[d+20>>2]&255;f=g;g=f+1|0;a[f]=((c[d+20>>2]|0)>>>8|0<<24)&255;f=g;g=f+1|0;a[f]=((c[d+20>>2]|0)>>>16|0<<16)&255;f=g;g=f+1|0;a[f]=((c[d+20>>2]|0)>>>24|0<<8)&255;return}}function qp(a){a=a|0;return a+24|0}function qq(a){a=a|0;qs(a,1);return}function qr(a){a=a|0;qs(a,2);return}function qs(a,b){a=a|0;b=b|0;var d=0;d=a;a=d|0;c[a>>2]=-1985229329;c[a+4>>2]=19088743;a=d+8|0;c[a>>2]=1985229328;c[a+4>>2]=-19088744;a=d+16|0;c[a>>2]=-1011687033;c[a+4>>2]=-258562636;c[d+92>>2]=0;c[d+88>>2]=0;c[d+96>>2]=b;return}function qt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+112|0;e=d|0;f=d+8|0;g=d+16|0;h=d+24|0;j=d+32|0;k=d+40|0;l=d+48|0;m=a;a=l|0;n=b;Ac(a|0,n|0,64)|0;n=m|0;a=c[n>>2]|0;b=c[n+4>>2]|0;c[h>>2]=a;c[h+4>>2]=b;c[e>>2]=a;c[e+4>>2]=b;b=m+8|0;a=c[b>>2]|0;n=c[b+4>>2]|0;c[j>>2]=a;c[j+4>>2]=n;c[f>>2]=a;c[f+4>>2]=n;n=m+16|0;a=c[n>>2]|0;b=c[n+4>>2]|0;c[k>>2]=a;c[k+4>>2]=b;c[g>>2]=a;c[g+4>>2]=b;qu(e,f,g,l|0,5);qv(l|0);qu(g,e,f,l|0,7);qv(l|0);qu(f,g,e,l|0,9);l=c[e+4>>2]^c[h+4>>2];c[e>>2]=c[e>>2]^c[h>>2];c[e+4>>2]=l;l=An(c[f>>2]|0,c[f+4>>2]|0,c[j>>2]|0,c[j+4>>2]|0)|0;c[f>>2]=l;c[f+4>>2]=H;l=Am(c[g>>2]|0,c[g+4>>2]|0,c[k>>2]|0,c[k+4>>2]|0)|0;c[g>>2]=l;c[g+4>>2]=H;l=c[e+4>>2]|0;k=m|0;c[k>>2]=c[e>>2];c[k+4>>2]=l;l=c[f+4>>2]|0;k=m+8|0;c[k>>2]=c[f>>2];c[k+4>>2]=l;l=c[g+4>>2]|0;k=m+16|0;c[k>>2]=c[g>>2];c[k+4>>2]=l;i=d;return}function qu(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+24|0;h=g|0;j=g+8|0;k=g+16|0;l=a;a=b;b=d;d=e;e=f;f=l;m=c[f+4>>2]|0;c[h>>2]=c[f>>2];c[h+4>>2]=m;m=a;f=c[m+4>>2]|0;c[j>>2]=c[m>>2];c[j+4>>2]=f;f=b;m=c[f+4>>2]|0;c[k>>2]=c[f>>2];c[k+4>>2]=m;m=d|0;qw(h,j,k,c[m>>2]|0,c[m+4>>2]|0,e);m=d+8|0;qw(j,k,h,c[m>>2]|0,c[m+4>>2]|0,e);m=d+16|0;qw(k,h,j,c[m>>2]|0,c[m+4>>2]|0,e);m=d+24|0;qw(h,j,k,c[m>>2]|0,c[m+4>>2]|0,e);m=d+32|0;qw(j,k,h,c[m>>2]|0,c[m+4>>2]|0,e);m=d+40|0;qw(k,h,j,c[m>>2]|0,c[m+4>>2]|0,e);m=d+48|0;qw(h,j,k,c[m>>2]|0,c[m+4>>2]|0,e);m=d+56|0;qw(j,k,h,c[m>>2]|0,c[m+4>>2]|0,e);e=c[h+4>>2]|0;m=l;c[m>>2]=c[h>>2];c[m+4>>2]=e;e=c[j+4>>2]|0;m=a;c[m>>2]=c[j>>2];c[m+4>>2]=e;e=c[k+4>>2]|0;m=b;c[m>>2]=c[k>>2];c[m+4>>2]=e;i=g;return}function qv(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a;a=b+56|0;d=b|0;e=An(c[d>>2]|0,c[d+4>>2]|0,c[a>>2]^-1515870811,c[a+4>>2]^-1515870811)|0;c[d>>2]=e;c[d+4>>2]=H;d=b|0;e=b+8|0;a=c[e+4>>2]^c[d+4>>2];c[e>>2]=c[e>>2]^c[d>>2];c[e+4>>2]=a;a=b+8|0;e=b+16|0;d=Am(c[e>>2]|0,c[e+4>>2]|0,c[a>>2]|0,c[a+4>>2]|0)|0;c[e>>2]=d;c[e+4>>2]=H;e=b+16|0;d=b+8|0;a=~c[d>>2];f=b+24|0;g=An(c[f>>2]|0,c[f+4>>2]|0,c[e>>2]^(a<<19|0>>>13),c[e+4>>2]^(~c[d+4>>2]<<19|a>>>13))|0;c[f>>2]=g;c[f+4>>2]=H;f=b+24|0;g=b+32|0;a=c[g+4>>2]^c[f+4>>2];c[g>>2]=c[g>>2]^c[f>>2];c[g+4>>2]=a;a=b+32|0;g=b+40|0;f=Am(c[g>>2]|0,c[g+4>>2]|0,c[a>>2]|0,c[a+4>>2]|0)|0;c[g>>2]=f;c[g+4>>2]=H;g=b+40|0;f=b+32|0;a=~c[f+4>>2];d=b+48|0;e=An(c[d>>2]|0,c[d+4>>2]|0,c[g>>2]^(~c[f>>2]>>>23|a<<9),c[g+4>>2]^(a>>>23|0<<9))|0;c[d>>2]=e;c[d+4>>2]=H;d=b+48|0;e=b+56|0;a=c[e+4>>2]^c[d+4>>2];c[e>>2]=c[e>>2]^c[d>>2];c[e+4>>2]=a;a=b+56|0;e=b|0;d=Am(c[e>>2]|0,c[e+4>>2]|0,c[a>>2]|0,c[a+4>>2]|0)|0;c[e>>2]=d;c[e+4>>2]=H;e=b|0;d=b+56|0;a=~c[d>>2];g=b+8|0;f=An(c[g>>2]|0,c[g+4>>2]|0,c[e>>2]^(a<<19|0>>>13),c[e+4>>2]^(~c[d+4>>2]<<19|a>>>13))|0;c[g>>2]=f;c[g+4>>2]=H;g=b+8|0;f=b+16|0;a=c[f+4>>2]^c[g+4>>2];c[f>>2]=c[f>>2]^c[g>>2];c[f+4>>2]=a;a=b+16|0;f=b+24|0;g=Am(c[f>>2]|0,c[f+4>>2]|0,c[a>>2]|0,c[a+4>>2]|0)|0;c[f>>2]=g;c[f+4>>2]=H;f=b+24|0;g=b+16|0;a=~c[g+4>>2];d=b+32|0;e=An(c[d>>2]|0,c[d+4>>2]|0,c[f>>2]^(~c[g>>2]>>>23|a<<9),c[f+4>>2]^(a>>>23|0<<9))|0;c[d>>2]=e;c[d+4>>2]=H;d=b+32|0;e=b+40|0;a=c[e+4>>2]^c[d+4>>2];c[e>>2]=c[e>>2]^c[d>>2];c[e+4>>2]=a;a=b+40|0;e=b+48|0;d=Am(c[e>>2]|0,c[e+4>>2]|0,c[a>>2]|0,c[a+4>>2]|0)|0;c[e>>2]=d;c[e+4>>2]=H;e=b+48|0;d=b+56|0;b=An(c[d>>2]|0,c[d+4>>2]|0,c[e>>2]^-1985229329,c[e+4>>2]^19088743)|0;c[d>>2]=b;c[d+4>>2]=H;return}function qw(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+32|0;j=h|0;k=h+8|0;l=h+16|0;m=h+24|0;n=a;a=b;b=d;c[j>>2]=e;c[j+4>>2]=f;f=n;e=c[f+4>>2]|0;c[k>>2]=c[f>>2];c[k+4>>2]=e;e=a;f=c[e+4>>2]|0;c[l>>2]=c[e>>2];c[l+4>>2]=f;f=b;e=c[f+4>>2]|0;c[m>>2]=c[f>>2];c[m+4>>2]=e;e=c[m+4>>2]^c[j+4>>2];c[m>>2]=c[m>>2]^c[j>>2];c[m+4>>2]=e;e=15544+((c[m>>2]&255)<<3)|0;j=13240+((((c[m>>2]|0)>>>16|c[m+4>>2]<<16)&255)<<3)|0;f=10936+((c[m+4>>2]&255)<<3)|0;d=8632+((((c[m+4>>2]|0)>>>16|0<<16)&255)<<3)|0;o=An(c[k>>2]|0,c[k+4>>2]|0,c[e>>2]^c[j>>2]^c[f>>2]^c[d>>2],c[e+4>>2]^c[j+4>>2]^c[f+4>>2]^c[d+4>>2])|0;c[k>>2]=o;c[k+4>>2]=H;o=8632+((((c[m>>2]|0)>>>8|c[m+4>>2]<<24)&255)<<3)|0;d=10936+((((c[m>>2]|0)>>>24|c[m+4>>2]<<8)&255)<<3)|0;f=13240+((((c[m+4>>2]|0)>>>8|0<<24)&255)<<3)|0;j=15544+((((c[m+4>>2]|0)>>>24|0<<8)&255)<<3)|0;e=Am(c[l>>2]|0,c[l+4>>2]|0,c[o>>2]^c[d>>2]^c[f>>2]^c[j>>2],c[o+4>>2]^c[d+4>>2]^c[f+4>>2]^c[j+4>>2])|0;c[l>>2]=e;c[l+4>>2]=H;e=g;g=Aw(c[l>>2]|0,c[l+4>>2]|0,e,(e|0)<0|0?-1:0)|0;c[l>>2]=g;c[l+4>>2]=H;g=c[k+4>>2]|0;e=n;c[e>>2]=c[k>>2];c[e+4>>2]=g;g=c[l+4>>2]|0;e=a;c[e>>2]=c[l>>2];c[e+4>>2]=g;g=c[m+4>>2]|0;e=b;c[e>>2]=c[m>>2];c[e+4>>2]=g;i=h;return}function qx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=qC(a,b,c)|0;up(47);return d|0}function qy(a,b,c){a=a|0;b=b|0;c=c|0;qB(a,b,c);up(36);return}function qz(a,b,c){a=a|0;b=b|0;c=c|0;qA(a,b,c);up(36);return}function qA(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=b;b=e;e=f;f=(d[e|0]|0)^(d[e+1|0]|0)<<8^(d[e+2|0]|0)<<16^(d[e+3|0]|0)<<24^c[g+4112>>2];h=(d[e+4|0]|0)^(d[e+5|0]|0)<<8^(d[e+6|0]|0)<<16^(d[e+7|0]|0)<<24^c[g+4116>>2];i=(d[e+8|0]|0)^(d[e+9|0]|0)<<8^(d[e+10|0]|0)<<16^(d[e+11|0]|0)<<24^c[g+4120>>2];j=(d[e+12|0]|0)^(d[e+13|0]|0)<<8^(d[e+14|0]|0)<<16^(d[e+15|0]|0)<<24^c[g+4124>>2];e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+e|0;j=j^k+(c[g+4252>>2]|0);j=(j>>>1)+(j<<31)|0;i=(i<<1)+(i>>>31)|0;i=i^e+(c[g+4248>>2]|0);e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+e|0;h=h^k+(c[g+4244>>2]|0);h=(h>>>1)+(h<<31)|0;f=(f<<1)+(f>>>31)|0;f=f^e+(c[g+4240>>2]|0);e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+e|0;j=j^k+(c[g+4236>>2]|0);j=(j>>>1)+(j<<31)|0;i=(i<<1)+(i>>>31)|0;i=i^e+(c[g+4232>>2]|0);e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+e|0;h=h^k+(c[g+4228>>2]|0);h=(h>>>1)+(h<<31)|0;f=(f<<1)+(f>>>31)|0;f=f^e+(c[g+4224>>2]|0);e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+e|0;j=j^k+(c[g+4220>>2]|0);j=(j>>>1)+(j<<31)|0;i=(i<<1)+(i>>>31)|0;i=i^e+(c[g+4216>>2]|0);e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+e|0;h=h^k+(c[g+4212>>2]|0);h=(h>>>1)+(h<<31)|0;f=(f<<1)+(f>>>31)|0;f=f^e+(c[g+4208>>2]|0);e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+e|0;j=j^k+(c[g+4204>>2]|0);j=(j>>>1)+(j<<31)|0;i=(i<<1)+(i>>>31)|0;i=i^e+(c[g+4200>>2]|0);e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+e|0;h=h^k+(c[g+4196>>2]|0);h=(h>>>1)+(h<<31)|0;f=(f<<1)+(f>>>31)|0;f=f^e+(c[g+4192>>2]|0);e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+e|0;j=j^k+(c[g+4188>>2]|0);j=(j>>>1)+(j<<31)|0;i=(i<<1)+(i>>>31)|0;i=i^e+(c[g+4184>>2]|0);e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+e|0;h=h^k+(c[g+4180>>2]|0);h=(h>>>1)+(h<<31)|0;f=(f<<1)+(f>>>31)|0;f=f^e+(c[g+4176>>2]|0);e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+e|0;j=j^k+(c[g+4172>>2]|0);j=(j>>>1)+(j<<31)|0;i=(i<<1)+(i>>>31)|0;i=i^e+(c[g+4168>>2]|0);e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+e|0;h=h^k+(c[g+4164>>2]|0);h=(h>>>1)+(h<<31)|0;f=(f<<1)+(f>>>31)|0;f=f^e+(c[g+4160>>2]|0);e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+e|0;j=j^k+(c[g+4156>>2]|0);j=(j>>>1)+(j<<31)|0;i=(i<<1)+(i>>>31)|0;i=i^e+(c[g+4152>>2]|0);e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+e|0;h=h^k+(c[g+4148>>2]|0);h=(h>>>1)+(h<<31)|0;f=(f<<1)+(f>>>31)|0;f=f^e+(c[g+4144>>2]|0);e=c[g+((f&255)<<2)>>2]^c[g+1024+((f>>>8&255)<<2)>>2]^c[g+2048+((f>>>16&255)<<2)>>2]^c[g+3072+(f>>>24<<2)>>2];k=c[g+1024+((h&255)<<2)>>2]^c[g+2048+((h>>>8&255)<<2)>>2]^c[g+3072+((h>>>16&255)<<2)>>2]^c[g+(h>>>24<<2)>>2];e=e+k|0;k=k+e|0;j=j^k+(c[g+4140>>2]|0);j=(j>>>1)+(j<<31)|0;i=(i<<1)+(i>>>31)|0;i=i^e+(c[g+4136>>2]|0);e=c[g+((i&255)<<2)>>2]^c[g+1024+((i>>>8&255)<<2)>>2]^c[g+2048+((i>>>16&255)<<2)>>2]^c[g+3072+(i>>>24<<2)>>2];k=c[g+1024+((j&255)<<2)>>2]^c[g+2048+((j>>>8&255)<<2)>>2]^c[g+3072+((j>>>16&255)<<2)>>2]^c[g+(j>>>24<<2)>>2];e=e+k|0;k=k+e|0;h=h^k+(c[g+4132>>2]|0);h=(h>>>1)+(h<<31)|0;f=(f<<1)+(f>>>31)|0;f=f^e+(c[g+4128>>2]|0);i=i^c[g+4096>>2];a[b|0]=i&255;a[b+1|0]=i>>>8&255;a[b+2|0]=i>>>16&255;a[b+3|0]=i>>>24&255;j=j^c[g+4100>>2];a[b+4|0]=j&255;a[b+5|0]=j>>>8&255;a[b+6|0]=j>>>16&255;a[b+7|0]=j>>>24&255;f=f^c[g+4104>>2];a[b+8|0]=f&255;a[b+9|0]=f>>>8&255;a[b+10|0]=f>>>16&255;a[b+11|0]=f>>>24&255;h=h^c[g+4108>>2];a[b+12|0]=h&255;a[b+13|0]=h>>>8&255;a[b+14|0]=h>>>16&255;a[b+15|0]=h>>>24&255;return}
function ze(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[30834]|0;if(b>>>0<e>>>0){b8()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){b8()}h=f&-8;i=a+(h-8)|0;j=i;L3694:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){b8()}if((n|0)==(c[30835]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[30832]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=123360+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){b8()}if((c[k+12>>2]|0)==(n|0)){break}b8()}}while(0);if((s|0)==(k|0)){c[30830]=c[30830]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){b8()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}b8()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){b8()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){b8()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){b8()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{b8()}}}while(0);if((p|0)==0){q=n;r=o;break}v=a+(l+28)|0;m=123624+(c[v>>2]<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[30831]=c[30831]&~(1<<c[v>>2]);q=n;r=o;break L3694}else{if(p>>>0<(c[30834]|0)>>>0){b8()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break L3694}}}while(0);if(A>>>0<(c[30834]|0)>>>0){b8()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[30834]|0)>>>0){b8()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[30834]|0)>>>0){b8()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(d>>>0>=i>>>0){b8()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){b8()}do{if((e&2|0)==0){if((j|0)==(c[30836]|0)){B=(c[30833]|0)+r|0;c[30833]=B;c[30836]=q;c[q+4>>2]=B|1;if((q|0)!=(c[30835]|0)){return}c[30835]=0;c[30832]=0;return}if((j|0)==(c[30835]|0)){B=(c[30832]|0)+r|0;c[30832]=B;c[30835]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;L3796:do{if(e>>>0<256){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=123360+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[30834]|0)>>>0){b8()}if((c[u+12>>2]|0)==(j|0)){break}b8()}}while(0);if((g|0)==(u|0)){c[30830]=c[30830]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[30834]|0)>>>0){b8()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}b8()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[30834]|0)>>>0){b8()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[30834]|0)>>>0){b8()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){b8()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{b8()}}}while(0);if((f|0)==0){break}t=a+(h+20)|0;u=123624+(c[t>>2]<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[30831]=c[30831]&~(1<<c[t>>2]);break L3796}else{if(f>>>0<(c[30834]|0)>>>0){b8()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break L3796}}}while(0);if(E>>>0<(c[30834]|0)>>>0){b8()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[30834]|0)>>>0){b8()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[30834]|0)>>>0){b8()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[30835]|0)){H=B;break}c[30832]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256){d=r<<1;e=123360+(d<<2)|0;A=c[30830]|0;E=1<<r;do{if((A&E|0)==0){c[30830]=A|E;I=e;J=123360+(d+2<<2)|0}else{r=123360+(d+2<<2)|0;h=c[r>>2]|0;if(h>>>0>=(c[30834]|0)>>>0){I=h;J=r;break}b8()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=123624+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[30831]|0;d=1<<K;do{if((r&d|0)==0){c[30831]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{if((K|0)==31){L=0}else{L=25-(K>>>1)|0}A=H<<L;J=c[I>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(H|0)){break}M=J+16+(A>>>31<<2)|0;E=c[M>>2]|0;if((E|0)==0){N=3112;break}else{A=A<<1;J=E}}if((N|0)==3112){if(M>>>0<(c[30834]|0)>>>0){b8()}else{c[M>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=J+8|0;B=c[A>>2]|0;E=c[30834]|0;if(J>>>0<E>>>0){b8()}if(B>>>0<E>>>0){b8()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=J;c[q+24>>2]=0;break}}}while(0);q=(c[30838]|0)-1|0;c[30838]=q;if((q|0)==0){O=123776}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[30838]=-1;return}function zf(a,b){a=a|0;b=b|0;var d=0,e=0;do{if((a|0)==0){d=0}else{e=ad(b,a)|0;if((b|a)>>>0<=65535){d=e;break}d=((e>>>0)/(a>>>0)|0|0)==(b|0)?e:-1}}while(0);b=zd(d)|0;if((b|0)==0){return b|0}if((c[b-4>>2]&3|0)==0){return b|0}Ae(b|0,0,d|0);return b|0}function zg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=zd(b)|0;return d|0}if(b>>>0>4294967231){c[(bX()|0)>>2]=12;d=0;return d|0}if(b>>>0<11){e=16}else{e=b+11&-8}f=zh(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=zd(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;e=g>>>0<b>>>0?g:b;Ac(f|0,a|0,e)|0;ze(a);d=f;return d|0}function zh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[30834]|0;if(g>>>0<j>>>0){b8();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){b8();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){b8();return 0}if((k|0)==0){if(b>>>0<256){n=0;return n|0}do{if(f>>>0>=(b+4|0)>>>0){if((f-b|0)>>>0>c[30660]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(f>>>0>=b>>>0){k=f-b|0;if(k>>>0<=15){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;zB(g+b|0,k);n=a;return n|0}if((i|0)==(c[30836]|0)){k=(c[30833]|0)+f|0;if(k>>>0<=b>>>0){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[30836]=g+b;c[30833]=l;n=a;return n|0}if((i|0)==(c[30835]|0)){l=(c[30832]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[30832]=q;c[30835]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;L3995:do{if(m>>>0<256){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=123360+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){b8();return 0}if((c[l+12>>2]|0)==(i|0)){break}b8();return 0}}while(0);if((k|0)==(l|0)){c[30830]=c[30830]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){b8();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}b8();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){b8();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){b8();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){b8();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{b8();return 0}}}while(0);if((s|0)==0){break}t=g+(f+28)|0;l=123624+(c[t>>2]<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[30831]=c[30831]&~(1<<c[t>>2]);break L3995}else{if(s>>>0<(c[30834]|0)>>>0){b8();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break L3995}}}while(0);if(y>>>0<(c[30834]|0)>>>0){b8();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[30834]|0)>>>0){b8();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;zB(g+b|0,q);n=a;return n|0}return 0}function zi(a,b){a=a|0;b=b|0;var d=0;if((a|0)==0){return 0}if(b>>>0>4294967231){c[(bX()|0)>>2]=12;return 0}if(b>>>0<11){d=16}else{d=b+11&-8}b=a-8|0;return((zh(b,d)|0)==(b|0)?a:0)|0}function zj(a,b){a=a|0;b=b|0;var c=0;if(a>>>0<9){c=zd(b)|0;return c|0}else{c=zk(a,b)|0;return c|0}return 0}function zk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a>>>0<16?16:a;if((d-1&d|0)==0){e=d}else{a=16;while(1){if(a>>>0<d>>>0){a=a<<1}else{e=a;break}}}if((-64-e|0)>>>0<=b>>>0){c[(bX()|0)>>2]=12;f=0;return f|0}if(b>>>0<11){g=16}else{g=b+11&-8}b=zd(e+12+g|0)|0;if((b|0)==0){f=0;return f|0}a=b-8|0;d=a;h=e-1|0;do{if((b&h|0)==0){i=d}else{j=b+h&-e;k=j-8|0;l=a;if((k-l|0)>>>0>15){m=k}else{m=j+(e-8)|0}j=m;k=m-l|0;l=b-4|0;n=c[l>>2]|0;o=(n&-8)-k|0;if((n&3|0)==0){c[m>>2]=(c[a>>2]|0)+k;c[m+4>>2]=o;i=j;break}else{n=m+4|0;c[n>>2]=o|c[n>>2]&1|2;n=m+(o+4)|0;c[n>>2]=c[n>>2]|1;c[l>>2]=k|c[l>>2]&1|2;l=b+(k-4)|0;c[l>>2]=c[l>>2]|1;zB(d,k);i=j;break}}}while(0);d=i+4|0;b=c[d>>2]|0;do{if((b&3|0)!=0){m=b&-8;if(m>>>0<=(g+16|0)>>>0){break}a=m-g|0;e=i;c[d>>2]=g|b&1|2;c[e+(g|4)>>2]=a|3;h=e+(m|4)|0;c[h>>2]=c[h>>2]|1;zB(e+g|0,a)}}while(0);f=i+8|0;return f|0}function zl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;do{if((b|0)==8){e=zd(d)|0}else{f=b>>>2;if((b&3|0)!=0|(f|0)==0){g=22;return g|0}if((f+1073741823&f|0)!=0){g=22;return g|0}if((-64-b|0)>>>0<d>>>0){g=12;return g|0}else{e=zk(b>>>0<16?16:b,d)|0;break}}}while(0);if((e|0)==0){g=12;return g|0}c[a>>2]=e;g=0;return g|0}function zm(a){a=a|0;var b=0,d=0,e=0;if((c[30658]|0)!=0){b=c[30659]|0;d=zj(b,a)|0;return d|0}e=bN(30)|0;if((e-1&e|0)!=0){b8();return 0}c[30660]=e;c[30659]=e;c[30661]=-1;c[30662]=-1;c[30663]=0;c[30941]=0;c[30658]=(cz(0)|0)&-16^1431655768;b=c[30659]|0;d=zj(b,a)|0;return d|0}function zn(a){a=a|0;var b=0;do{if((c[30658]|0)==0){b=bN(30)|0;if((b-1&b|0)==0){c[30660]=b;c[30659]=b;c[30661]=-1;c[30662]=-1;c[30663]=0;c[30941]=0;c[30658]=(cz(0)|0)&-16^1431655768;break}else{b8();return 0}}}while(0);b=c[30659]|0;return zj(b,a-1+b&-b)|0}function zo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+8|0;f=e|0;c[f>>2]=b;b=zp(a,f,3,d)|0;i=e;return b|0}function zp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;do{if((c[30658]|0)==0){f=bN(30)|0;if((f-1&f|0)==0){c[30660]=f;c[30659]=f;c[30661]=-1;c[30662]=-1;c[30663]=0;c[30941]=0;c[30658]=(cz(0)|0)&-16^1431655768;break}else{b8();return 0}}}while(0);f=(a|0)==0;do{if((e|0)==0){if(f){g=zd(0)|0;return g|0}else{h=a<<2;if(h>>>0<11){i=0;j=16;break}i=0;j=h+11&-8;break}}else{if(f){g=e}else{i=e;j=0;break}return g|0}}while(0);do{if((d&1|0)==0){if(f){k=0;l=0;break}else{m=0;n=0}while(1){e=c[b+(n<<2)>>2]|0;if(e>>>0<11){o=16}else{o=e+11&-8}e=o+m|0;h=n+1|0;if((h|0)==(a|0)){k=0;l=e;break}else{m=e;n=h}}}else{h=c[b>>2]|0;if(h>>>0<11){p=16}else{p=h+11&-8}k=p;l=ad(p,a)|0}}while(0);p=zd(j-4+l|0)|0;if((p|0)==0){g=0;return g|0}n=p-8|0;m=c[p-4>>2]&-8;if((d&2|0)!=0){Ae(p|0,0,-4-j+m|0)}if((i|0)==0){c[p+(l-4)>>2]=m-l|3;q=p+l|0;r=l}else{q=i;r=m}c[q>>2]=p;p=a-1|0;L4188:do{if((p|0)==0){s=n;t=r}else{if((k|0)==0){u=n;v=r;w=0}else{a=n;m=r;i=0;while(1){l=m-k|0;c[a+4>>2]=k|3;j=a+k|0;d=i+1|0;c[q+(d<<2)>>2]=a+(k+8);if((d|0)==(p|0)){s=j;t=l;break L4188}else{a=j;m=l;i=d}}}while(1){i=c[b+(w<<2)>>2]|0;if(i>>>0<11){x=16}else{x=i+11&-8}i=v-x|0;c[u+4>>2]=x|3;m=u+x|0;a=w+1|0;c[q+(a<<2)>>2]=u+(x+8);if((a|0)==(p|0)){s=m;t=i;break}else{u=m;v=i;w=a}}}}while(0);c[s+4>>2]=t|3;g=q;return g|0}function zq(a,b,c){a=a|0;b=b|0;c=c|0;return zp(a,b,0,c)|0}function zr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;d=a+(b<<2)|0;if((b|0)==0){return 0}else{e=a}L4204:while(1){a=c[e>>2]|0;L4206:do{if((a|0)==0){f=e+4|0}else{b=a-8|0;g=b;h=a-4|0;i=c[h>>2]&-8;c[e>>2]=0;if(b>>>0<(c[30834]|0)>>>0){j=3389;break L4204}b=c[h>>2]|0;if((b&3|0)==1){j=3388;break L4204}k=e+4|0;l=b-8&-8;do{if((k|0)!=(d|0)){if((c[k>>2]|0)!=(a+(l+8)|0)){break}m=(c[a+(l|4)>>2]&-8)+i|0;c[h>>2]=b&1|m|2;n=a+(m-4)|0;c[n>>2]=c[n>>2]|1;c[k>>2]=a;f=k;break L4206}}while(0);zB(g,i);f=k}}while(0);if((f|0)==(d|0)){j=3391;break}else{e=f}}if((j|0)==3389){b8();return 0}else if((j|0)==3388){b8();return 0}else if((j|0)==3391){return 0}return 0}function zs(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;do{if((c[30658]|0)==0){b=bN(30)|0;if((b-1&b|0)==0){c[30660]=b;c[30659]=b;c[30661]=-1;c[30662]=-1;c[30663]=0;c[30941]=0;c[30658]=(cz(0)|0)&-16^1431655768;break}else{b8();return 0}}}while(0);if(a>>>0>=4294967232){d=0;return d|0}b=c[30836]|0;if((b|0)==0){d=0;return d|0}e=c[30833]|0;do{if(e>>>0>(a+40|0)>>>0){f=c[30660]|0;g=ad((((-41-a+e+f|0)>>>0)/(f>>>0)|0)-1|0,f)|0;h=b;i=123768;while(1){j=c[i>>2]|0;if(j>>>0<=h>>>0){if((j+(c[i+4>>2]|0)|0)>>>0>h>>>0){k=i;break}}j=c[i+8>>2]|0;if((j|0)==0){k=0;break}else{i=j}}if((c[k+12>>2]&8|0)!=0){break}i=bW(0)|0;h=k+4|0;if((i|0)!=((c[k>>2]|0)+(c[h>>2]|0)|0)){break}j=bW(-(g>>>0>2147483646?-2147483648-f|0:g)|0)|0;l=bW(0)|0;if(!((j|0)!=-1&l>>>0<i>>>0)){break}j=i-l|0;if((i|0)==(l|0)){break}c[h>>2]=(c[h>>2]|0)-j;c[30938]=(c[30938]|0)-j;h=c[30836]|0;l=(c[30833]|0)-j|0;j=h;i=h+8|0;if((i&7|0)==0){m=0}else{m=-i&7}i=l-m|0;c[30836]=j+m;c[30833]=i;c[j+(m+4)>>2]=i|1;c[j+(l+4)>>2]=40;c[30837]=c[30662];d=1;return d|0}}while(0);if((c[30833]|0)>>>0<=(c[30837]|0)>>>0){d=0;return d|0}c[30837]=-1;d=0;return d|0}function zt(){return c[30938]|0}function zu(){return c[30939]|0}function zv(){var a=0;a=c[30940]|0;return((a|0)==0?-1:a)|0}function zw(a){a=a|0;var b=0,d=0;if((a|0)==-1){b=0}else{d=c[30660]|0;b=a-1+d&-d}c[30940]=b;return b|0}function zx(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;do{if((c[30658]|0)==0){b=bN(30)|0;if((b-1&b|0)==0){c[30660]=b;c[30659]=b;c[30661]=-1;c[30662]=-1;c[30663]=0;c[30941]=0;c[30658]=(cz(0)|0)&-16^1431655768;break}else{b8()}}}while(0);b=c[30836]|0;if((b|0)==0){d=0;e=0;f=0;g=0;h=0;i=0;j=0}else{k=c[30833]|0;l=k+40|0;m=1;n=l;o=l;l=123768;while(1){p=c[l>>2]|0;q=p+8|0;if((q&7|0)==0){r=0}else{r=-q&7}q=p+(c[l+4>>2]|0)|0;s=m;t=n;u=o;v=p+r|0;while(1){if(v>>>0>=q>>>0|(v|0)==(b|0)){w=s;x=t;y=u;break}z=c[v+4>>2]|0;if((z|0)==7){w=s;x=t;y=u;break}A=z&-8;B=A+u|0;if((z&3|0)==1){C=A+t|0;D=s+1|0}else{C=t;D=s}z=v+A|0;if(z>>>0<p>>>0){w=D;x=C;y=B;break}else{s=D;t=C;u=B;v=z}}v=c[l+8>>2]|0;if((v|0)==0){break}else{m=w;n=x;o=y;l=v}}l=c[30938]|0;d=k;e=y;f=w;g=l-y|0;h=c[30939]|0;i=l-x|0;j=x}c[a>>2]=e;c[a+4>>2]=f;f=a+8|0;c[f>>2]=0;c[f+4>>2]=0;c[a+16>>2]=g;c[a+20>>2]=h;c[a+24>>2]=0;c[a+28>>2]=i;c[a+32>>2]=j;c[a+36>>2]=d;return}function zy(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,r=0,s=0,t=0,u=0;a=i;do{if((c[30658]|0)==0){b=bN(30)|0;if((b-1&b|0)==0){c[30660]=b;c[30659]=b;c[30661]=-1;c[30662]=-1;c[30663]=0;c[30941]=0;c[30658]=(cz(0)|0)&-16^1431655768;break}else{b8()}}}while(0);b=c[30836]|0;if((b|0)==0){d=0;e=0;f=0}else{g=c[30939]|0;h=c[30938]|0;j=h-40-(c[30833]|0)|0;k=123768;while(1){l=c[k>>2]|0;m=l+8|0;if((m&7|0)==0){n=0}else{n=-m&7}m=l+(c[k+4>>2]|0)|0;o=j;p=l+n|0;while(1){if(p>>>0>=m>>>0|(p|0)==(b|0)){r=o;break}s=c[p+4>>2]|0;if((s|0)==7){r=o;break}t=s&-8;u=o-((s&3|0)==1?t:0)|0;s=p+t|0;if(s>>>0<l>>>0){r=u;break}else{o=u;p=s}}p=c[k+8>>2]|0;if((p|0)==0){d=r;e=h;f=g;break}else{j=r;k=p}}}k=c[q>>2]|0;b9(k|0,76616,(r=i,i=i+8|0,c[r>>2]=f,r)|0)|0;i=r;b9(k|0,81248,(r=i,i=i+8|0,c[r>>2]=e,r)|0)|0;i=r;b9(k|0,72368,(r=i,i=i+8|0,c[r>>2]=d,r)|0)|0;i=r;i=a;return}function zz(a,b){a=a|0;b=b|0;var d=0,e=0;do{if((c[30658]|0)==0){d=bN(30)|0;if((d-1&d|0)==0){c[30660]=d;c[30659]=d;c[30661]=-1;c[30662]=-1;c[30663]=0;c[30941]=0;c[30658]=(cz(0)|0)&-16^1431655768;break}else{b8();return 0}}}while(0);if((a|0)==(-2|0)){if((c[30659]|0)>>>0>b>>>0){e=0;return e|0}if((b-1&b|0)!=0){e=0;return e|0}c[30660]=b;e=1;return e|0}else if((a|0)==(-1|0)){c[30662]=b;e=1;return e|0}else if((a|0)==(-3|0)){c[30661]=b;e=1;return e|0}else{e=0;return e|0}return 0}function zA(a){a=a|0;var b=0,d=0,e=0;do{if((a|0)==0){b=0}else{d=c[a-4>>2]|0;e=d&3;if((e|0)==1){b=0;break}b=(d&-8)-((e|0)==0?8:4)|0}}while(0);return b|0}function zB(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;L4332:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[30834]|0;if(i>>>0<l>>>0){b8()}if((j|0)==(c[30835]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[30832]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=123360+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){b8()}if((c[p+12>>2]|0)==(j|0)){break}b8()}}while(0);if((q|0)==(p|0)){c[30830]=c[30830]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){b8()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}b8()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){b8()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){b8()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){b8()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{b8()}}}while(0);if((m|0)==0){n=j;o=k;break}t=d+(28-h)|0;l=123624+(c[t>>2]<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[30831]=c[30831]&~(1<<c[t>>2]);n=j;o=k;break L4332}else{if(m>>>0<(c[30834]|0)>>>0){b8()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break L4332}}}while(0);if(y>>>0<(c[30834]|0)>>>0){b8()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[30834]|0)>>>0){b8()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[30834]|0)>>>0){b8()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[30834]|0;if(e>>>0<a>>>0){b8()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[30836]|0)){A=(c[30833]|0)+o|0;c[30833]=A;c[30836]=n;c[n+4>>2]=A|1;if((n|0)!=(c[30835]|0)){return}c[30835]=0;c[30832]=0;return}if((f|0)==(c[30835]|0)){A=(c[30832]|0)+o|0;c[30832]=A;c[30835]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;L4431:do{if(z>>>0<256){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=123360+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){b8()}if((c[g+12>>2]|0)==(f|0)){break}b8()}}while(0);if((t|0)==(g|0)){c[30830]=c[30830]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){b8()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}b8()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){b8()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){b8()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){b8()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{b8()}}}while(0);if((m|0)==0){break}l=d+(b+28)|0;g=123624+(c[l>>2]<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[30831]=c[30831]&~(1<<c[l>>2]);break L4431}else{if(m>>>0<(c[30834]|0)>>>0){b8()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break L4431}}}while(0);if(C>>>0<(c[30834]|0)>>>0){b8()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[30834]|0)>>>0){b8()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[30834]|0)>>>0){b8()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[30835]|0)){F=A;break}c[30832]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256){z=o<<1;y=123360+(z<<2)|0;C=c[30830]|0;b=1<<o;do{if((C&b|0)==0){c[30830]=C|b;G=y;H=123360+(z+2<<2)|0}else{o=123360+(z+2<<2)|0;d=c[o>>2]|0;if(d>>>0>=(c[30834]|0)>>>0){G=d;H=o;break}b8()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=123624+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[30831]|0;z=1<<I;if((o&z|0)==0){c[30831]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}if((I|0)==31){J=0}else{J=25-(I>>>1)|0}I=F<<J;J=c[G>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(F|0)){break}K=J+16+(I>>>31<<2)|0;G=c[K>>2]|0;if((G|0)==0){L=3601;break}else{I=I<<1;J=G}}if((L|0)==3601){if(K>>>0<(c[30834]|0)>>>0){b8()}c[K>>2]=y;c[n+24>>2]=J;c[n+12>>2]=n;c[n+8>>2]=n;return}K=J+8|0;L=c[K>>2]|0;I=c[30834]|0;if(J>>>0<I>>>0){b8()}if(L>>>0<I>>>0){b8()}c[L+12>>2]=y;c[K>>2]=y;c[n+8>>2]=L;c[n+12>>2]=J;c[n+24>>2]=0;return}function zC(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){d=zd(b)|0;if((d|0)!=0){e=3645;break}a=(F=c[30966]|0,c[30966]=F+0,F);if((a|0)==0){break}cK[a&1]()}if((e|0)==3645){return d|0}d=cm(4)|0;c[d>>2]=88456;bG(d|0,88584,26);return 0}function zD(){return(F=c[30966]|0,c[30966]=F+0,F)|0}function zE(a,b){a=a|0;b=b|0;return zC(a)|0}function zF(a){a=a|0;return zC(a)|0}function zG(a,b){a=a|0;b=b|0;return zF(a)|0}function zH(a){a=a|0;if((a|0)==0){return}ze(a);return}function zI(a,b){a=a|0;b=b|0;zH(a);return}function zJ(a){a=a|0;zH(a);return}function zK(a,b){a=a|0;b=b|0;zJ(a);return}function zL(a){a=a|0;return(F=c[30966]|0,c[30966]=a,F)|0}function zM(a){a=a|0;c[a>>2]=88456;return}function zN(a){a=a|0;zH(a);return}function zO(a){a=a|0;return}function zP(a){a=a|0;return 68440}function zQ(a){a=a|0;c[a>>2]=88488;return}function zR(a){a=a|0;zH(a);return}function zS(a){a=a|0;return 78824}function zT(){var a=0;a=cm(4)|0;c[a>>2]=88456;bG(a|0,88584,26)}function zU(a,b,c){a=a|0;b=b|0;c=c|0;return zV(a,b,c,0,0,0)|0}function zV(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0;j=i;if((e|0)==0){k=-1;i=j;return k|0}l=c[7802]|0;if((l|0)==0){c[30626]=1;c[7802]=1;m=1;n=1;o=3684}else{p=c[30626]|0;q=c[11578]|0;if((q|0)==-1|(p|0)!=0){m=p;n=l;o=3684}else{r=q;s=p;t=l}}if((o|0)==3684){l=(cr(63416)|0)!=0|0;c[11578]=l;r=l;s=m;t=n}n=a[e]|0;if(n<<24>>24==45){u=h|2;o=3688}else{m=(r|0)!=0|n<<24>>24==43?h&-2:h;if(n<<24>>24==43){u=m;o=3688}else{v=e;w=m}}if((o|0)==3688){v=e+1|0;w=u}c[30628]=0;if((s|0)==0){x=t;o=3692}else{c[7852]=-1;c[7850]=-1;y=t;z=s;o=3691}while(1){if((o|0)==3692){o=0;s=c[7796]|0;if((a[s]|0)==0){A=x}else{B=s;C=x;break}}else if((o|0)==3691){o=0;if((z|0)==0){x=y;o=3692;continue}else{A=y}}c[30626]=0;if((A|0)>=(b|0)){o=3694;break}D=d+(A<<2)|0;E=c[D>>2]|0;c[7796]=E;if((a[E]|0)==45){F=E+1|0;G=a[F]|0;if(G<<24>>24!=0){o=3726;break}if((be(v|0,45)|0)!=0){o=3726;break}}c[7796]=123288;if((w&2|0)!=0){o=3711;break}if((w&1|0)==0){k=-1;o=3797;break}s=c[7850]|0;do{if((s|0)==-1){c[7850]=A;H=A;I=0}else{t=c[7852]|0;if((t|0)==-1){H=A;I=0;break}u=t-s|0;e=A-t|0;m=(u|0)%(e|0)|0;if((m|0)==0){J=e}else{n=e;h=m;while(1){m=(n|0)%(h|0)|0;if((m|0)==0){J=h;break}else{n=h;h=m}}}h=(A-s|0)/(J|0)|0;do{if((J|0)>0){n=-u|0;if((h|0)>0){K=0}else{L=A;M=t;N=s;O=0;break}do{m=K+t|0;r=d+(m<<2)|0;l=0;p=m;m=c[r>>2]|0;while(1){q=((p|0)<(t|0)?e:n)+p|0;P=d+(q<<2)|0;Q=c[P>>2]|0;c[P>>2]=m;c[r>>2]=Q;P=l+1|0;if((P|0)<(h|0)){l=P;p=q;m=Q}else{break}}K=K+1|0;}while((K|0)<(J|0));L=c[7802]|0;M=c[7852]|0;N=c[7850]|0;O=c[30626]|0}else{L=A;M=t;N=s;O=0}}while(0);c[7850]=L-M+N;c[7852]=-1;H=L;I=O}}while(0);s=H+1|0;c[7802]=s;y=s;z=I;o=3691}do{if((o|0)==3711){c[7802]=A+1;c[30628]=c[D>>2];k=1;i=j;return k|0}else if((o|0)==3694){c[7796]=123288;I=c[7852]|0;z=c[7850]|0;do{if((I|0)==-1){if((z|0)==-1){break}c[7802]=z}else{y=I-z|0;H=A-I|0;O=(y|0)%(H|0)|0;if((O|0)==0){R=H}else{L=H;N=O;while(1){O=(L|0)%(N|0)|0;if((O|0)==0){R=N;break}else{L=N;N=O}}}N=(A-z|0)/(R|0)|0;do{if((R|0)>0){L=-y|0;if((N|0)>0){S=0}else{T=I;U=z;V=A;break}do{O=S+I|0;M=d+(O<<2)|0;J=0;K=O;O=c[M>>2]|0;while(1){x=((K|0)<(I|0)?H:L)+K|0;s=d+(x<<2)|0;t=c[s>>2]|0;c[s>>2]=O;c[M>>2]=t;s=J+1|0;if((s|0)<(N|0)){J=s;K=x;O=t}else{break}}S=S+1|0;}while((S|0)<(R|0));T=c[7852]|0;U=c[7850]|0;V=c[7802]|0}else{T=I;U=z;V=A}}while(0);c[7802]=U-T+V}}while(0);c[7852]=-1;c[7850]=-1;k=-1;i=j;return k|0}else if((o|0)==3726){z=c[7850]|0;I=c[7852]|0;if((z|0)!=-1&(I|0)==-1){c[7852]=A;W=a[F]|0;X=A}else{W=G;X=I}if(W<<24>>24==0){B=E;C=A;break}c[7796]=F;if((a[F]|0)!=45){B=F;C=A;break}if((a[E+2|0]|0)!=0){B=F;C=A;break}I=A+1|0;c[7802]=I;c[7796]=123288;if((X|0)!=-1){N=X-z|0;H=I-X|0;y=(N|0)%(H|0)|0;if((y|0)==0){Y=H}else{L=H;O=y;while(1){y=(L|0)%(O|0)|0;if((y|0)==0){Y=O;break}else{L=O;O=y}}}O=(I-z|0)/(Y|0)|0;do{if((Y|0)>0){L=-N|0;if((O|0)>0){Z=0}else{_=X;$=z;aa=I;break}do{y=Z+X|0;K=d+(y<<2)|0;J=0;M=y;y=c[K>>2]|0;while(1){t=((M|0)<(X|0)?H:L)+M|0;x=d+(t<<2)|0;s=c[x>>2]|0;c[x>>2]=y;c[K>>2]=s;x=J+1|0;if((x|0)<(O|0)){J=x;M=t;y=s}else{break}}Z=Z+1|0;}while((Z|0)<(Y|0));_=c[7852]|0;$=c[7850]|0;aa=c[7802]|0}else{_=X;$=z;aa=I}}while(0);c[7802]=$-_+aa}c[7852]=-1;c[7850]=-1;k=-1;i=j;return k|0}else if((o|0)==3797){i=j;return k|0}}while(0);aa=(f|0)!=0;L4673:do{if(aa){if((B|0)==(c[d+(C<<2)>>2]|0)){ab=B;break}_=a[B]|0;do{if(_<<24>>24==45){c[7796]=B+1;ac=0}else{if((w&4|0)==0){ab=B;break L4673}if(_<<24>>24==58){ac=0;break}ac=(be(v|0,_<<24>>24|0)|0)!=0|0}}while(0);_=zY(d,v,f,g,ac)|0;if((_|0)==-1){ab=c[7796]|0;break}c[7796]=123288;k=_;i=j;return k|0}else{ab=B}}while(0);B=ab+1|0;c[7796]=B;ac=a[ab]|0;ab=ac<<24>>24;if((ac<<24>>24|0)==58){o=3757}else if((ac<<24>>24|0)==45){if((a[B]|0)==0){o=3754}}else{o=3754}do{if((o|0)==3754){w=be(v|0,ab|0)|0;if((w|0)==0){if(ac<<24>>24!=45){o=3757;break}if((a[B]|0)==0){k=-1}else{break}i=j;return k|0}C=a[w+1|0]|0;if(aa&ac<<24>>24==87&C<<24>>24==59){do{if((a[B]|0)==0){_=(c[7802]|0)+1|0;c[7802]=_;if((_|0)<(b|0)){c[7796]=c[d+(_<<2)>>2];break}c[7796]=123288;do{if((c[7804]|0)!=0){if((a[v]|0)==58){break}z0(29912,(ad=i,i=i+8|0,c[ad>>2]=ab,ad)|0);i=ad}}while(0);c[7800]=ab;k=(a[v]|0)==58?58:63;i=j;return k|0}}while(0);_=zY(d,v,f,g,0)|0;c[7796]=123288;k=_;i=j;return k|0}if(C<<24>>24!=58){if((a[B]|0)!=0){k=ab;i=j;return k|0}c[7802]=(c[7802]|0)+1;k=ab;i=j;return k|0}c[30628]=0;do{if((a[B]|0)==0){if((a[w+2|0]|0)==58){break}_=(c[7802]|0)+1|0;c[7802]=_;if((_|0)<(b|0)){c[30628]=c[d+(_<<2)>>2];break}c[7796]=123288;do{if((c[7804]|0)!=0){if((a[v]|0)==58){break}z0(29912,(ad=i,i=i+8|0,c[ad>>2]=ab,ad)|0);i=ad}}while(0);c[7800]=ab;k=(a[v]|0)==58?58:63;i=j;return k|0}else{c[30628]=B}}while(0);c[7796]=123288;c[7802]=(c[7802]|0)+1;k=ab;i=j;return k|0}}while(0);do{if((o|0)==3757){if((a[B]|0)!=0){break}c[7802]=(c[7802]|0)+1}}while(0);do{if((c[7804]|0)!=0){if((a[v]|0)==58){break}z0(46240,(ad=i,i=i+8|0,c[ad>>2]=ab,ad)|0);i=ad}}while(0);c[7800]=ab;k=63;i=j;return k|0}function zW(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return zV(a,b,c,d,e,1)|0}function zX(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return zV(a,b,c,d,e,5)|0}function zY(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;j=c[7796]|0;k=c[7802]|0;l=k+1|0;c[7802]=l;m=be(j|0,61)|0;if((m|0)==0){n=Ab(j|0)|0;o=0}else{n=m-j|0;o=m+1|0}m=c[e>>2]|0;L4748:do{if((m|0)!=0){L4750:do{if((g|0)!=0&(n|0)==1){p=0;q=m;while(1){if((a[j]|0)==(a[q]|0)){if((Ab(q|0)|0)==1){r=p;break L4750}}p=p+1|0;q=c[e+(p<<4)>>2]|0;if((q|0)==0){break L4748}}}else{q=0;p=-1;s=m;while(1){if((a3(j|0,s|0,n|0)|0)==0){if((Ab(s|0)|0)==(n|0)){r=q;break L4750}if((p|0)==-1){t=q}else{break}}else{t=p}u=q+1|0;v=c[e+(u<<4)>>2]|0;if((v|0)==0){r=t;break L4750}else{q=u;p=t;s=v}}do{if((c[7804]|0)!=0){if((a[d]|0)==58){break}z0(55360,(w=i,i=i+16|0,c[w>>2]=n,c[w+8>>2]=j,w)|0);i=w}}while(0);c[7800]=0;x=63;i=h;return x|0}}while(0);if((r|0)==-1){break}s=e+(r<<4)+4|0;p=c[s>>2]|0;q=(o|0)==0;if(!((p|0)!=0|q)){do{if((c[7804]|0)!=0){if((a[d]|0)==58){break}z0(31416,(w=i,i=i+16|0,c[w>>2]=n,c[w+8>>2]=j,w)|0);i=w}}while(0);if((c[e+(r<<4)+8>>2]|0)==0){y=c[e+(r<<4)+12>>2]|0}else{y=0}c[7800]=y;x=(a[d]|0)==58?58:63;i=h;return x|0}do{if((p-1|0)>>>0<2){if(!q){c[30628]=o;break}if((p|0)!=1){break}c[7802]=k+2;c[30628]=c[b+(l<<2)>>2]}}while(0);if(!((c[s>>2]|0)==1&(c[30628]|0)==0)){if((f|0)!=0){c[f>>2]=r}p=c[e+(r<<4)+8>>2]|0;q=c[e+(r<<4)+12>>2]|0;if((p|0)==0){x=q;i=h;return x|0}c[p>>2]=q;x=0;i=h;return x|0}do{if((c[7804]|0)!=0){if((a[d]|0)==58){break}z0(29872,(w=i,i=i+8|0,c[w>>2]=j,w)|0);i=w}}while(0);if((c[e+(r<<4)+8>>2]|0)==0){z=c[e+(r<<4)+12>>2]|0}else{z=0}c[7800]=z;c[7802]=(c[7802]|0)-1;x=(a[d]|0)==58?58:63;i=h;return x|0}}while(0);if((g|0)!=0){c[7802]=k;x=-1;i=h;return x|0}do{if((c[7804]|0)!=0){if((a[d]|0)==58){break}z0(46216,(w=i,i=i+8|0,c[w>>2]=j,w)|0);i=w}}while(0);c[7800]=0;x=63;i=h;return x|0}function zZ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e|0;g=f;c[g>>2]=d;c[g+4>>2]=0;z1(a,b,f|0);i=e;return}function z_(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e|0;g=f;c[g>>2]=d;c[g+4>>2]=0;z2(a,b,f|0);i=e;return}function z$(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=e;c[f>>2]=b;c[f+4>>2]=0;z3(a,e|0);i=d;return}function z0(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;f=e;c[f>>2]=b;c[f+4>>2]=0;z4(a,e|0);i=d;return}function z1(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[(bX()|0)>>2]|0;f=c[q>>2]|0;g=c[o>>2]|0;b9(f|0,56312,(h=i,i=i+8|0,c[h>>2]=g,h)|0)|0;i=h;if((b|0)!=0){cA(f|0,b|0,d|0)|0;aJ(82704,2,1,f|0)|0}d=bY(e|0)|0;b9(f|0,73464,(h=i,i=i+8|0,c[h>>2]=d,h)|0)|0;i=h;bj(a|0)}function z2(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[q>>2]|0;f=c[o>>2]|0;b9(e|0,77976,(g=i,i=i+8|0,c[g>>2]=f,g)|0)|0;i=g;if((b|0)==0){h=aI(10,e|0)|0;bj(a|0)}cA(e|0,b|0,d|0)|0;h=aI(10,e|0)|0;bj(a|0)}function z3(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=c[(bX()|0)>>2]|0;f=c[q>>2]|0;g=c[o>>2]|0;b9(f|0,75256,(h=i,i=i+8|0,c[h>>2]=g,h)|0)|0;i=h;if((a|0)!=0){cA(f|0,a|0,b|0)|0;aJ(81064,2,1,f|0)|0}b=bY(e|0)|0;b9(f|0,72240,(h=i,i=i+8|0,c[h>>2]=b,h)|0)|0;i=h;i=d;return}function z4(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=c[q>>2]|0;f=c[o>>2]|0;b9(e|0,71736,(g=i,i=i+8|0,c[g>>2]=f,g)|0)|0;i=g;if((a|0)==0){h=aI(10,e|0)|0;i=d;return}cA(e|0,a|0,b|0)|0;h=aI(10,e|0)|0;i=d;return}function z5(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0,P=0,Q=0.0,R=0.0,S=0.0;e=b;while(1){f=e+1|0;if((b_(a[e]|0)|0)==0){break}else{e=f}}g=a[e]|0;if((g<<24>>24|0)==45){i=f;j=1}else if((g<<24>>24|0)==43){i=f;j=0}else{i=e;j=0}e=-1;f=0;g=i;while(1){k=a[g]|0;if(((k<<24>>24)-48|0)>>>0<10){l=e}else{if(k<<24>>24!=46|(e|0)>-1){break}else{l=f}}e=l;f=f+1|0;g=g+1|0}l=g+(-f|0)|0;i=(e|0)<0;m=((i^1)<<31>>31)+f|0;n=(m|0)>18;o=(n?-18:-m|0)+(i?f:e)|0;e=n?18:m;do{if((e|0)==0){p=b;q=0.0}else{if((e|0)>9){m=l;n=e;f=0;while(1){i=a[m]|0;r=m+1|0;if(i<<24>>24==46){s=a[r]|0;t=m+2|0}else{s=i;t=r}u=(f*10|0)-48+(s<<24>>24)|0;r=n-1|0;if((r|0)>9){m=t;n=r;f=u}else{break}}v=+(u|0)*1.0e9;w=9;x=t;y=3889}else{if((e|0)>0){v=0.0;w=e;x=l;y=3889}else{z=0.0;A=0.0}}if((y|0)==3889){f=x;n=w;m=0;while(1){r=a[f]|0;i=f+1|0;if(r<<24>>24==46){B=a[i]|0;C=f+2|0}else{B=r;C=i}D=(m*10|0)-48+(B<<24>>24)|0;i=n-1|0;if((i|0)>0){f=C;n=i;m=D}else{break}}z=+(D|0);A=v}E=A+z;do{if((k<<24>>24|0)==69|(k<<24>>24|0)==101){m=g+1|0;n=a[m]|0;if((n<<24>>24|0)==45){F=g+2|0;G=1}else if((n<<24>>24|0)==43){F=g+2|0;G=0}else{F=m;G=0}m=a[F]|0;if((m-48|0)>>>0<10){H=F;I=0;J=m}else{K=0;L=F;M=G;break}while(1){m=(I*10|0)-48+J|0;n=H+1|0;f=a[n]|0;if((f-48|0)>>>0<10){H=n;I=m;J=f}else{K=m;L=n;M=G;break}}}else{K=0;L=g;M=0}}while(0);n=o+((M|0)==0?K:-K|0)|0;m=(n|0)<0?-n|0:n;if((m|0)>511){c[(bX()|0)>>2]=34;N=1.0;O=30856;P=511;y=3906}else{if((m|0)==0){Q=1.0}else{N=1.0;O=30856;P=m;y=3906}}if((y|0)==3906){while(1){y=0;if((P&1|0)==0){R=N}else{R=N*+h[O>>3]}m=P>>1;if((m|0)==0){Q=R;break}else{N=R;O=O+8|0;P=m;y=3906}}}if((n|0)>-1){p=L;q=E*Q;break}else{p=L;q=E/Q;break}}}while(0);if((d|0)!=0){c[d>>2]=p}if((j|0)==0){S=q;return+S}S=-0.0-q;return+S}function z6(a,b){a=a|0;b=b|0;return+(+z5(a,b))}function z7(a,b){a=a|0;b=b|0;return+(+z5(a,b))}function z8(a,b,c){a=a|0;b=b|0;c=c|0;return+(+z5(a,b))}function z9(a,b,c){a=a|0;b=b|0;c=c|0;return+(+z5(a,b))}function Aa(a){a=a|0;return+(+z5(a,0))}function Ab(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function Ac(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function Ad(b,c,d){b=b|0;c=c|0;d=d|0;if((c|0)<(b|0)&(b|0)<(c+d|0)){c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}}else{Ac(b,c,d)|0}}function Ae(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+e|0;if((e|0)>=20){d=d&255;e=b&3;g=d|d<<8|d<<16|d<<24;h=f&~3;if(e){e=b+4-e|0;while((b|0)<(e|0)){a[b]=d;b=b+1|0}}while((b|0)<(h|0)){c[b>>2]=g;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}}function Af(a,b,c){a=a|0;b=b|0;c=c|0;var e=0,f=0,g=0;while((e|0)<(c|0)){f=d[a+e|0]|0;g=d[b+e|0]|0;if((f|0)!=(g|0))return((f|0)>(g|0)?1:-1)|0;e=e+1|0}return 0}function Ag(b,c){b=b|0;c=c|0;var d=0;do{a[b+d|0]=a[c+d|0];d=d+1|0}while(a[c+(d-1)|0]|0);return b|0}function Ah(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;while((e|0)<(d|0)){a[b+e|0]=f?0:a[c+e|0]|0;f=f?1:(a[c+e|0]|0)==0;e=e+1|0}return b|0}function Ai(b,c){b=b|0;c=c|0;var d=0,e=0;d=b+(Ab(b)|0)|0;do{a[d+e|0]=a[c+e|0];e=e+1|0}while(a[c+(e-1)|0]|0);return b|0}function Aj(a){a=a|0;if((a|0)<65)return a|0;if((a|0)>90)return a|0;return a-65+97|0}function Ak(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;while(e>>>0<d>>>0){f=Aj(a[b+e|0]|0)|0;g=Aj(a[c+e|0]|0)|0;if((f|0)==(g|0)&(f|0)==0)return 0;if((f|0)==0)return-1;if((g|0)==0)return 1;if((f|0)==(g|0)){e=e+1|0;continue}else{return(f>>>0>g>>>0?1:-1)|0}}return 0}function Al(a,b){a=a|0;b=b|0;return Ak(a,b,-1)|0}function Am(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(H=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function An(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(H=e,a-c>>>0|0)|0}function Ao(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){H=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}H=a<<c-32;return 0}function Ap(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){H=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}H=0;return b>>>c-32|0}function Aq(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){H=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}H=(b|0)<0?-1:0;return b>>c-32|0}function Ar(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function As(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function At(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=ad(d,c)|0;f=a>>>16;a=(e>>>16)+(ad(d,f)|0)|0;d=b>>>16;b=ad(d,c)|0;return(H=(a>>>16)+(ad(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function Au(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=An(e^a,f^b,e,f)|0;b=H;a=g^e;e=h^f;f=An((Az(i,b,An(g^c,h^d,g,h)|0,H,0)|0)^a,H^e,a,e)|0;return(H=H,f)|0}function Av(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=An(h^a,j^b,h,j)|0;b=H;a=An(k^d,l^e,k,l)|0;Az(m,b,a,H,g)|0;a=An(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=H;i=f;return(H=j,a)|0}function Aw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=At(e,a)|0;f=H;return(H=(ad(b,a)|0)+(ad(d,e)|0)+f|f&0,c|0|0)|0}function Ax(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=Az(a,b,c,d,0)|0;return(H=H,e)|0}function Ay(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;Az(a,b,d,e,g)|0;i=f;return(H=c[g+4>>2]|0,c[g>>2]|0)|0}function Az(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0,K=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(H=n,o)|0}else{if(!m){n=0;o=0;return(H=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(H=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(H=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(H=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((As(l|0)|0)>>>0);return(H=n,o)|0}p=(Ar(l|0)|0)-(Ar(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(H=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(H=n,o)|0}else{if(!m){r=(Ar(l|0)|0)-(Ar(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(H=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(H=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(Ar(j|0)|0)+33-(Ar(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(H=n,o)|0}else{p=As(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(H=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=Am(g,d,-1,-1)|0;k=H;i=w;w=v;v=u;u=t;t=s;s=0;while(1){I=w>>>31|i<<1;J=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;An(e,k,j,a)|0;b=H;h=b>>31|((b|0)<0?-1:0)<<1;K=h&1;L=An(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=H;b=t-1|0;if((b|0)==0){break}else{i=I;w=J;v=M;u=L;t=b;s=K}}B=I;C=J;D=M;E=L;F=0;G=K}K=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(K|0)>>>31|(B|C)<<1|(C<<1|K>>>31)&0|F;o=(K<<1|0>>>31)&-2|G;return(H=n,o)|0}function AA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;cg(a|0,b|0,c|0,d|0,e|0)}function AB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;aT(a|0,b|0,c|0,d|0,e|0)}function AC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a7(a|0,b|0,c|0,d|0,e|0)}function AD(a){a=a|0;aS(a|0)}function AE(a){a=a|0;bl(a|0)}function AF(a,b){a=a|0;b=b|0;bs(a|0,b|0)}function AG(a,b){a=a|0;b=b|0;aG(a|0,b|0)}function AH(a,b){a=a|0;b=b|0;a6(a|0,b|0)}function AI(a,b){a=a|0;b=b|0;cq(a|0,b|0)}function AJ(a,b,c){a=a|0;b=b|0;c=c|0;return b9(a|0,b|0,c|0)|0}function AK(a,b,c){a=a|0;b=b|0;c=c|0;return bM(a|0,b|0,c|0)|0}function AL(a,b,c){a=a|0;b=b|0;c=c|0;return bz(a|0,b|0,c|0)|0}function AM(a,b,c){a=a|0;b=b|0;c=c|0;aV(a|0,b|0,c|0)}function AN(a,b,c){a=a|0;b=b|0;c=c|0;bd(a|0,b|0,c|0)}function AO(a,b,c){a=a|0;b=b|0;c=c|0;ch(a|0,b|0,c|0)}function AP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return b$(a|0,b|0,c|0,d|0)|0}function AQ(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;cw(a|0,b|0,c|0,d|0,e|0,f|0)}function AR(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;b2(a|0,b|0,c|0,d|0,e|0,f|0)}function AS(a,b){a=a|0;b=b|0;return ci(a|0,b|0)|0}function AT(a,b){a=a|0;b=b|0;return cs(a|0,b|0)|0}function AU(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return cB[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function AV(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;cC[a&15](b|0,c|0,d|0,e|0,f|0)}function AW(a){a=a|0;return cD[a&1]()|0}function AX(a,b){a=a|0;b=b|0;cE[a&127](b|0)}function AY(a,b,c){a=a|0;b=b|0;c=c|0;cF[a&31](b|0,c|0)}function AZ(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return cG[a&15](b|0,c|0,d|0,e|0,f|0,g|0)|0}function A_(a,b){a=a|0;b=b|0;return cH[a&31](b|0)|0}function A$(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return cI[a&63](b|0,c|0,d|0)|0}function A0(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;cJ[a&127](b|0,c|0,d|0)}function A1(a){a=a|0;cK[a&1]()}function A2(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cL[a&31](b|0,c|0,d|0,e|0)|0}function A3(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;cM[a&7](b|0,c|0,d|0,e|0,f|0,g|0)}function A4(a,b,c){a=a|0;b=b|0;c=c|0;return cN[a&63](b|0,c|0)|0}function A5(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return cO[a&31](b|0,c|0,d|0,e|0,f|0)|0}function A6(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;cP[a&15](b|0,c|0,d|0,e|0)}function A7(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ae(0);return 0}function A8(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ae(1)}function A9(){ae(2);return 0}function Ba(a){a=a|0;ae(3)}function Bb(a,b){a=a|0;b=b|0;ae(4)}function Bc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ae(5);return 0}function Bd(a){a=a|0;ae(6);return 0}function Be(a,b,c){a=a|0;b=b|0;c=c|0;ae(7);return 0}function Bf(a,b,c){a=a|0;b=b|0;c=c|0;ae(8)}function Bg(){ae(9)}function Bh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ae(10);return 0}function Bi(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ae(11)}function Bj(a,b){a=a|0;b=b|0;ae(12);return 0}function Bk(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ae(13);return 0}function Bl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ae(14)}
// EMSCRIPTEN_END_FUNCS
var cB=[A7,A7,xd,A7,wN,A7,pg,A7,wr,A7,A7,A7,A7,A7,A7,A7];var cC=[A8,A8,AA,A8,oK,A8,oM,A8,oL,A8,oG,A8,AB,A8,AC,A8];var cD=[A9,A9];var cE=[Ba,Ba,wi,Ba,zM,Ba,qd,Ba,wc,Ba,m1,Ba,qG,Ba,qr,Ba,m_,Ba,pZ,Ba,AD,Ba,qm,Ba,p0,Ba,zO,Ba,o6,Ba,wg,Ba,zQ,Ba,qo,Ba,m3,Ba,wa,Ba,qa,Ba,e$,Ba,pS,Ba,qq,Ba,pX,Ba,AE,Ba,zR,Ba,pQ,Ba,zN,Ba,we,Ba,wf,Ba,p8,Ba,mY,Ba,o1,Ba,qE,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba,Ba];var cF=[Bb,Bb,z4,Bb,z0,Bb,z$,Bb,AF,Bb,z3,Bb,AG,Bb,AH,Bb,AI,Bb,Bb,Bb,Bb,Bb,Bb,Bb,Bb,Bb,Bb,Bb,Bb,Bb,Bb,Bb];var cG=[Bc,Bc,pd,Bc,wI,Bc,xb,Bc,oz,Bc,wo,Bc,Bc,Bc,Bc,Bc];var cH=[Bd,Bd,pT,Bd,zP,Bd,qH,Bd,qb,Bd,o7,Bd,wR,Bd,eY,Bd,zS,Bd,eZ,Bd,wd,Bd,m4,Bd,qp,Bd,p_,Bd,m$,Bd,Bd,Bd];var cI=[Be,Be,lT,Be,oO,Be,oR,Be,AJ,Be,wq,Be,kC,Be,ly,Be,wQ,Be,pz,Be,lE,Be,ui,Be,AK,Be,wM,Be,p$,Be,oB,Be,AL,Be,qc,Be,vC,Be,vH,Be,lB,Be,qx,Be,lH,Be,pG,Be,pU,Be,pf,Be,vQ,Be,v2,Be,Be,Be,Be,Be,Be,Be,Be,Be];var cJ=[Bf,Bf,pR,Bf,pI,Bf,AM,Bf,mZ,Bf,AN,Bf,m2,Bf,v4,Bf,lU,Bf,pH,Bf,lF,Bf,oD,Bf,yL,Bf,zZ,Bf,pY,Bf,qn,Bf,o5,Bf,qF,Bf,z1,Bf,wh,Bf,lG,Bf,oC,Bf,lV,Bf,x0,Bf,vI,Bf,qy,Bf,vS,Bf,z2,Bf,kS,Bf,wb,Bf,qz,Bf,pA,Bf,p9,Bf,oQ,Bf,vR,Bf,z_,Bf,lD,Bf,pB,Bf,vJ,Bf,v3,Bf,oP,Bf,AO,Bf,lC,Bf,kT,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf,Bf];var cK=[Bg,Bg];var cL=[Bh,Bh,kx,Bh,xa,Bh,ky,Bh,yg,Bh,wn,Bh,AP,Bh,pc,Bh,kz,Bh,kA,Bh,yQ,Bh,wH,Bh,oy,Bh,lI,Bh,kw,Bh,Bh,Bh];var cM=[Bi,Bi,oI,Bi,AQ,Bi,AR,Bi];var cN=[Bj,Bj,wp,Bj,wJ,Bj,lx,Bj,ph,Bj,wP,Bj,mV,Bj,xc,Bj,wG,Bj,ot,Bj,AS,Bj,ov,Bj,lv,Bj,fd,Bj,wm,Bj,o9,Bj,pk,Bj,pe,Bj,wO,Bj,e_,Bj,AT,Bj,oq,Bj,mT,Bj,w7,Bj,oA,Bj,Bj,Bj,Bj,Bj,Bj,Bj,Bj,Bj,Bj,Bj,Bj,Bj,Bj,Bj];var cO=[Bk,Bk,ox,Bk,pa,Bk,wK,Bk,wF,Bk,o8,Bk,pb,Bk,ow,Bk,wL,Bk,ou,Bk,wl,Bk,w8,Bk,w9,Bk,w6,Bk,Bk,Bk,Bk,Bk];var cP=[Bl,Bl,kU,Bl,tq,Bl,vD,Bl,kV,Bl,Bl,Bl,Bl,Bl,Bl,Bl];return{_strlen:Ab,_strcat:Ai,_otrl_privkey_forget_all:dH,_gcry_strerror:gz,__gcry_mpi_scan:rA,_otrl_userstate_create:fq,_strncasecmp:Ak,_otrl_userstate_free:fr,_otrl_privkey_read_fingerprints:dX,_otrl_instag_read:gp,_memcpy:Ac,_jsapi_conncontext_get_their_instance:ds,_jsapi_conncontext_get_msgstate:dm,_jsapi_privkey_get_next:c7,_otrl_message_disconnect:fh,_jsapi_userstate_write_to_file:de,_otrl_message_initiate_smp:e5,_calloc:zf,__gcry_mpi_new:sl,_jsapi_privkey_write_trusted_fingerprints:da,__gcry_mpi_print:rE,_jsapi_conncontext_get_our_instance:dt,_strncpy:Ah,_otrl_message_respond_smp:e8,_realloc:zg,_otrl_privkey_read:dE,_memset:Ae,_otrl_instag_find:go,_strcasecmp:Al,_jsapi_conncontext_get_active_fingerprint:dq,_otrl_privkey_find:dC,_otrl_version:ek,_jsapi_privkey_delete:df,_otrl_privkey_generate:dV,_otrl_message_poll_get_default_interval:fl,_jsapi_conncontext_get_protocol:dj,_otrl_tlv_free:fu,_otrl_privkey_fingerprint:dB,_gpg_err_init:y0,_jsapi_privkey_get_accountname:c8,_jsapi_conncontext_get_master:du,_jsapi_conncontext_get_protocol_version:dn,_jsapi_privkey_get_dsa_token:dg,__gcry_mpi_release:sn,_otrl_instag_write:gw,_jsapi_conncontext_get_username:dk,_jsapi_conncontext_get_trust:dr,_jsapi_userstate_get_privkey_root:c6,_otrl_message_symkey:fk,_jsapi_userstate_import_privkey:di,_jsapi_can_start_smp:dx,_otrl_message_free:e0,__gcry_strerror:tA,_memcmp:Af,_jsapi_conncontext_get_accountname:dl,_otrl_privkey_forget:dJ,_free:ze,_otrl_privkey_hash_to_human:dA,_jsapi_privkey_get_protocol:c9,_otrl_privkey_write_fingerprints:d_,_jsapi_instag_get_tag:dv,_memmove:Ad,_jsapi_messageappops_new:dw,_tolower:Aj,__gcry_mpi_set:se,_jsapi_initialise:c5,_malloc:zd,_jsapi_conncontext_get_smstate:dp,_otrl_message_initiate_smp_q:e7,_otrl_message_receiving:fa,_otrl_message_poll:fm,_otrl_tlv_find:fx,_otrl_message_abort_smp:e9,_otrl_message_sending:e1,_otrl_context_find:d8,_strcpy:Ag,_otrl_instag_generate:gs,runPostSets:c4,stackAlloc:cQ,stackSave:cR,stackRestore:cS,setThrew:cT,setTempRet0:cW,setTempRet1:cX,setTempRet2:cY,setTempRet3:cZ,setTempRet4:c_,setTempRet5:c$,setTempRet6:c0,setTempRet7:c1,setTempRet8:c2,setTempRet9:c3,dynCall_iiiiiiii:AU,dynCall_viiiii:AV,dynCall_i:AW,dynCall_vi:AX,dynCall_vii:AY,dynCall_iiiiiii:AZ,dynCall_ii:A_,dynCall_iiii:A$,dynCall_viii:A0,dynCall_v:A1,dynCall_iiiii:A2,dynCall_viiiiii:A3,dynCall_iii:A4,dynCall_iiiiii:A5,dynCall_viiii:A6}})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_iiii": invoke_iiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_lseek": _lseek, "_rand": _rand, "__scanString": __scanString, "_fclose": _fclose, "_select": _select, "___cxa_end_catch": ___cxa_end_catch, "_strtoul": _strtoul, "_fflush": _fflush, "_msgops_callback_gone_secure": _msgops_callback_gone_secure, "_strtol": _strtol, "_fputc": _fputc, "_fwrite": _fwrite, "_do_smp_request": _do_smp_request, "_umask": _umask, "_send": _send, "_fputs": _fputs, "__inet_pton6_raw": __inet_pton6_raw, "_setgid": _setgid, "_do_smp_aborted": _do_smp_aborted, "_fstat": _fstat, "_msgops_callback_write_fingerprints": _msgops_callback_write_fingerprints, "_msgops_callback_inject_message": _msgops_callback_inject_message, "_read": _read, "_msgops_callback_create_instag": _msgops_callback_create_instag, "__inet_ntop6_raw": __inet_ntop6_raw, "__mpi2bigint": __mpi2bigint, "_fileno": _fileno, "_strstr": _strstr, "_fsync": _fsync, "___gxx_personality_v0": ___gxx_personality_v0, "_do_smp_failed": _do_smp_failed, "_strcmp": _strcmp, "_memchr": _memchr, "_strncmp": _strncmp, "_snprintf": _snprintf, "_fgetc": _fgetc, "_msgops_callback_otr_error_message_free": _msgops_callback_otr_error_message_free, "_msgops_callback_handle_smp_event": _msgops_callback_handle_smp_event, "__getFloat": __getFloat, "_connect": _connect, "___cxa_free_exception": ___cxa_free_exception, "_fgets": _fgets, "_close": _close, "_msgops_callback_still_secure": _msgops_callback_still_secure, "_strchr": _strchr, "_clock": _clock, "___setErrNo": ___setErrNo, "_isxdigit": _isxdigit, "_access": _access, "_exit": _exit, "_sprintf": _sprintf, "_msgops_callback_update_context_list": _msgops_callback_update_context_list, "_munmap": _munmap, "_fcntl": _fcntl, "_ferror": _ferror, "___resumeException": ___resumeException, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "_msgops_callback_gone_insecure": _msgops_callback_gone_insecure, "___cxa_begin_catch": ___cxa_begin_catch, "_recv": _recv, "_i32______gpg_err_init_to_void_____": _i32______gpg_err_init_to_void_____, "_wait": _wait, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___cxa_call_unexpected": ___cxa_call_unexpected, "_msgops_callback_otr_error_message": _msgops_callback_otr_error_message, "_override_gcry_mpi_mulpowm": _override_gcry_mpi_mulpowm, "_mmap": _mmap, "__exit": __exit, "_sendmsg": _sendmsg, "_llvm_va_end": _llvm_va_end, "__inet_pton4_raw": __inet_pton4_raw, "___cxa_throw": ___cxa_throw, "_llvm_eh_exception": _llvm_eh_exception, "_pread": _pread, "_fopen": _fopen, "_open": _open, "_override_gcry_mpi_invm": _override_gcry_mpi_invm, "_msgops_callback_account_name": _msgops_callback_account_name, "_sysconf": _sysconf, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_strdup": _strdup, "_srand": _srand, "_getgid": _getgid, "__formatString": __formatString, "_gettimeofday": _gettimeofday, "_atoi": _atoi, "_do_smp_error": _do_smp_error, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_strerror": _strerror, "_getrusage": _getrusage, "_isspace": _isspace, "_msgops_callback_is_logged_in": _msgops_callback_is_logged_in, "__parseInt": __parseInt, "_ftruncate": _ftruncate, "_msgops_callback_received_symkey": _msgops_callback_received_symkey, "_sscanf": _sscanf, "___assert_fail": ___assert_fail, "__bigint2mpi": __bigint2mpi, "_fread": _fread, "_accept": _accept, "_abort": _abort, "_fprintf": _fprintf, "_stpcpy": _stpcpy, "__read_sockaddr": __read_sockaddr, "_htons": _htons, "__reallyNegative": __reallyNegative, "__write_sockaddr": __write_sockaddr, "___buildEnvironment": ___buildEnvironment, "_msgops_callback_handle_msg_event": _msgops_callback_handle_msg_event, "_msgops_callback_create_privkey": _msgops_callback_create_privkey, "_msgops_callback_policy": _msgops_callback_policy, "_fseek": _fseek, "_write": _write, "_recvmsg": _recvmsg, "___cxa_allocate_exception": ___cxa_allocate_exception, "_do_smp_complete": _do_smp_complete, "_stat": _stat, "_truncate": _truncate, "_msgops_callback_account_name_free": _msgops_callback_account_name_free, "_getenv": _getenv, "_msgops_callback_max_message_size": _msgops_callback_max_message_size, "_override_gcry_mpi_powm": _override_gcry_mpi_powm, "__inet_ntop4_raw": __inet_ntop4_raw, "_pwrite": _pwrite, "_msgops_callback_new_fingerprint": _msgops_callback_new_fingerprint, "_strerror_r": _strerror_r, "_iscntrl": _iscntrl, "_time": _time, "_vfprintf": _vfprintf, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "___progname": ___progname, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "_stderr": _stderr, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var _strcat = Module["_strcat"] = asm["_strcat"];
var _otrl_privkey_forget_all = Module["_otrl_privkey_forget_all"] = asm["_otrl_privkey_forget_all"];
var _gcry_strerror = Module["_gcry_strerror"] = asm["_gcry_strerror"];
var __gcry_mpi_scan = Module["__gcry_mpi_scan"] = asm["__gcry_mpi_scan"];
var _otrl_userstate_create = Module["_otrl_userstate_create"] = asm["_otrl_userstate_create"];
var _strncasecmp = Module["_strncasecmp"] = asm["_strncasecmp"];
var _otrl_userstate_free = Module["_otrl_userstate_free"] = asm["_otrl_userstate_free"];
var _otrl_privkey_read_fingerprints = Module["_otrl_privkey_read_fingerprints"] = asm["_otrl_privkey_read_fingerprints"];
var _otrl_instag_read = Module["_otrl_instag_read"] = asm["_otrl_instag_read"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _jsapi_conncontext_get_their_instance = Module["_jsapi_conncontext_get_their_instance"] = asm["_jsapi_conncontext_get_their_instance"];
var _jsapi_conncontext_get_msgstate = Module["_jsapi_conncontext_get_msgstate"] = asm["_jsapi_conncontext_get_msgstate"];
var _jsapi_privkey_get_next = Module["_jsapi_privkey_get_next"] = asm["_jsapi_privkey_get_next"];
var _otrl_message_disconnect = Module["_otrl_message_disconnect"] = asm["_otrl_message_disconnect"];
var _jsapi_userstate_write_to_file = Module["_jsapi_userstate_write_to_file"] = asm["_jsapi_userstate_write_to_file"];
var _otrl_message_initiate_smp = Module["_otrl_message_initiate_smp"] = asm["_otrl_message_initiate_smp"];
var _calloc = Module["_calloc"] = asm["_calloc"];
var __gcry_mpi_new = Module["__gcry_mpi_new"] = asm["__gcry_mpi_new"];
var _jsapi_privkey_write_trusted_fingerprints = Module["_jsapi_privkey_write_trusted_fingerprints"] = asm["_jsapi_privkey_write_trusted_fingerprints"];
var __gcry_mpi_print = Module["__gcry_mpi_print"] = asm["__gcry_mpi_print"];
var _jsapi_conncontext_get_our_instance = Module["_jsapi_conncontext_get_our_instance"] = asm["_jsapi_conncontext_get_our_instance"];
var _strncpy = Module["_strncpy"] = asm["_strncpy"];
var _otrl_message_respond_smp = Module["_otrl_message_respond_smp"] = asm["_otrl_message_respond_smp"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _otrl_privkey_read = Module["_otrl_privkey_read"] = asm["_otrl_privkey_read"];
var _memset = Module["_memset"] = asm["_memset"];
var _otrl_instag_find = Module["_otrl_instag_find"] = asm["_otrl_instag_find"];
var _strcasecmp = Module["_strcasecmp"] = asm["_strcasecmp"];
var _jsapi_conncontext_get_active_fingerprint = Module["_jsapi_conncontext_get_active_fingerprint"] = asm["_jsapi_conncontext_get_active_fingerprint"];
var _otrl_privkey_find = Module["_otrl_privkey_find"] = asm["_otrl_privkey_find"];
var _otrl_version = Module["_otrl_version"] = asm["_otrl_version"];
var _jsapi_privkey_delete = Module["_jsapi_privkey_delete"] = asm["_jsapi_privkey_delete"];
var _otrl_privkey_generate = Module["_otrl_privkey_generate"] = asm["_otrl_privkey_generate"];
var _otrl_message_poll_get_default_interval = Module["_otrl_message_poll_get_default_interval"] = asm["_otrl_message_poll_get_default_interval"];
var _jsapi_conncontext_get_protocol = Module["_jsapi_conncontext_get_protocol"] = asm["_jsapi_conncontext_get_protocol"];
var _otrl_tlv_free = Module["_otrl_tlv_free"] = asm["_otrl_tlv_free"];
var _otrl_privkey_fingerprint = Module["_otrl_privkey_fingerprint"] = asm["_otrl_privkey_fingerprint"];
var _gpg_err_init = Module["_gpg_err_init"] = asm["_gpg_err_init"];
var _jsapi_privkey_get_accountname = Module["_jsapi_privkey_get_accountname"] = asm["_jsapi_privkey_get_accountname"];
var _jsapi_conncontext_get_master = Module["_jsapi_conncontext_get_master"] = asm["_jsapi_conncontext_get_master"];
var _jsapi_conncontext_get_protocol_version = Module["_jsapi_conncontext_get_protocol_version"] = asm["_jsapi_conncontext_get_protocol_version"];
var _jsapi_privkey_get_dsa_token = Module["_jsapi_privkey_get_dsa_token"] = asm["_jsapi_privkey_get_dsa_token"];
var __gcry_mpi_release = Module["__gcry_mpi_release"] = asm["__gcry_mpi_release"];
var _otrl_instag_write = Module["_otrl_instag_write"] = asm["_otrl_instag_write"];
var _jsapi_conncontext_get_username = Module["_jsapi_conncontext_get_username"] = asm["_jsapi_conncontext_get_username"];
var _jsapi_conncontext_get_trust = Module["_jsapi_conncontext_get_trust"] = asm["_jsapi_conncontext_get_trust"];
var _jsapi_userstate_get_privkey_root = Module["_jsapi_userstate_get_privkey_root"] = asm["_jsapi_userstate_get_privkey_root"];
var _otrl_message_symkey = Module["_otrl_message_symkey"] = asm["_otrl_message_symkey"];
var _jsapi_userstate_import_privkey = Module["_jsapi_userstate_import_privkey"] = asm["_jsapi_userstate_import_privkey"];
var _jsapi_can_start_smp = Module["_jsapi_can_start_smp"] = asm["_jsapi_can_start_smp"];
var _otrl_message_free = Module["_otrl_message_free"] = asm["_otrl_message_free"];
var __gcry_strerror = Module["__gcry_strerror"] = asm["__gcry_strerror"];
var _memcmp = Module["_memcmp"] = asm["_memcmp"];
var _jsapi_conncontext_get_accountname = Module["_jsapi_conncontext_get_accountname"] = asm["_jsapi_conncontext_get_accountname"];
var _otrl_privkey_forget = Module["_otrl_privkey_forget"] = asm["_otrl_privkey_forget"];
var _free = Module["_free"] = asm["_free"];
var _otrl_privkey_hash_to_human = Module["_otrl_privkey_hash_to_human"] = asm["_otrl_privkey_hash_to_human"];
var _jsapi_privkey_get_protocol = Module["_jsapi_privkey_get_protocol"] = asm["_jsapi_privkey_get_protocol"];
var _otrl_privkey_write_fingerprints = Module["_otrl_privkey_write_fingerprints"] = asm["_otrl_privkey_write_fingerprints"];
var _jsapi_instag_get_tag = Module["_jsapi_instag_get_tag"] = asm["_jsapi_instag_get_tag"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _jsapi_messageappops_new = Module["_jsapi_messageappops_new"] = asm["_jsapi_messageappops_new"];
var _tolower = Module["_tolower"] = asm["_tolower"];
var __gcry_mpi_set = Module["__gcry_mpi_set"] = asm["__gcry_mpi_set"];
var _jsapi_initialise = Module["_jsapi_initialise"] = asm["_jsapi_initialise"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _jsapi_conncontext_get_smstate = Module["_jsapi_conncontext_get_smstate"] = asm["_jsapi_conncontext_get_smstate"];
var _otrl_message_initiate_smp_q = Module["_otrl_message_initiate_smp_q"] = asm["_otrl_message_initiate_smp_q"];
var _otrl_message_receiving = Module["_otrl_message_receiving"] = asm["_otrl_message_receiving"];
var _otrl_message_poll = Module["_otrl_message_poll"] = asm["_otrl_message_poll"];
var _otrl_tlv_find = Module["_otrl_tlv_find"] = asm["_otrl_tlv_find"];
var _otrl_message_abort_smp = Module["_otrl_message_abort_smp"] = asm["_otrl_message_abort_smp"];
var _otrl_message_sending = Module["_otrl_message_sending"] = asm["_otrl_message_sending"];
var _otrl_context_find = Module["_otrl_context_find"] = asm["_otrl_context_find"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var _otrl_instag_generate = Module["_otrl_instag_generate"] = asm["_otrl_instag_generate"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  try {
    var ret = Module['_main'](argc, argv, 0);
    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}
function run(args) {
  args = args || Module['arguments'];
  if (preloadStartTime === null) preloadStartTime = Date.now();
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }
  preRun();
  if (runDependencies > 0) {
    // a preRun added a dependency, run will be called later
    return;
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    Module['calledRun'] = true;
    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;
function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  // exit the runtime
  exitRuntime();
  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371
  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;
function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }
  ABORT = true;
  EXITSTATUS = 1;
  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;
// {{PRE_RUN_ADDITIONS}}
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
// {{MODULE_ADDITIONS}}
}).call(moduleScope);

    if (typeof exports !== 'undefined'){
	    module.exports = moduleScope.Module;
    }else{
        root.libotr4Module = moduleScope.Module;
    }

}).call();
